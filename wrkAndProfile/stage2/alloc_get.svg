<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1046" onload="init(evt)" viewBox="0 0 1200 1046" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1029"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1029"> </text>
<g id="frames">
<g>
<title>all (150,988 samples, 100.00%)</title><rect x="10.0" y="995.0" width="1180.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="13.0" y="1006.0">all</text>
</g>
<g>
<title>[JMX server connection timeout 27 tid=65512] (229 samples, 0.15%)</title><rect x="10.0" y="979.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>java/lang/Thread.run (229 samples, 0.15%)</title><rect x="10.0" y="963.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (229 samples, 0.15%)</title><rect x="10.0" y="947.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (229 samples, 0.15%)</title><rect x="10.0" y="931.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1159370151.linkToTargetMethod (229 samples, 0.15%)</title><rect x="10.0" y="915.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1231668594.invoke (229 samples, 0.15%)</title><rect x="10.0" y="899.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (229 samples, 0.15%)</title><rect x="10.0" y="883.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (229 samples, 0.15%)</title><rect x="10.0" y="867.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (229 samples, 0.15%)</title><rect x="10.0" y="851.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>byte[] (229 samples, 0.15%)</title><rect x="10.0" y="835.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=65445] (34,182 samples, 22.64%)</title><rect x="11.8" y="979.0" width="267.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="14.8" y="990.0">[NIO Selector #0 tid=65445]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (34,182 samples, 22.64%)</title><rect x="11.8" y="963.0" width="267.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="14.8" y="974.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (34,182 samples, 22.64%)</title><rect x="11.8" y="947.0" width="267.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.8" y="958.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (34,182 samples, 22.64%)</title><rect x="11.8" y="931.0" width="267.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="14.8" y="942.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (34,182 samples, 22.64%)</title><rect x="11.8" y="915.0" width="267.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.8" y="926.0">one/nio/http/HttpSession.processHttp..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (33,978 samples, 22.50%)</title><rect x="11.8" y="899.0" width="265.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="14.8" y="910.0">one/nio/http/HttpSession.handlePars..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (33,978 samples, 22.50%)</title><rect x="11.8" y="883.0" width="265.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.8" y="894.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (33,955 samples, 22.49%)</title><rect x="11.8" y="867.0" width="265.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="14.8" y="878.0">RequestHandler0_get.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (65 samples, 0.04%)</title><rect x="11.8" y="851.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="14.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (65 samples, 0.04%)</title><rect x="11.8" y="835.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="14.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (43 samples, 0.03%)</title><rect x="11.8" y="819.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="14.8" y="830.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (43 samples, 0.03%)</title><rect x="11.8" y="803.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.8" y="814.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.03%)</title><rect x="11.8" y="787.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="14.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.get (33,863 samples, 22.43%)</title><rect x="12.5" y="851.0" width="264.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.5" y="862.0">ru/mail/polis/service/valaubr/HttpS..</text>
</g>
<g>
<title>one/nio/http/Response.ok (52 samples, 0.03%)</title><rect x="12.8" y="835.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (36 samples, 0.02%)</title><rect x="12.9" y="819.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="15.9" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (33,767 samples, 22.36%)</title><rect x="13.2" y="835.0" width="263.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.2" y="846.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (818 samples, 0.54%)</title><rect x="13.2" y="819.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="16.2" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (818 samples, 0.54%)</title><rect x="13.2" y="803.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.2" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (818 samples, 0.54%)</title><rect x="13.2" y="787.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.2" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (818 samples, 0.54%)</title><rect x="13.2" y="771.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (818 samples, 0.54%)</title><rect x="13.2" y="755.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="16.2" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (760 samples, 0.50%)</title><rect x="13.2" y="739.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="16.2" y="750.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (320 samples, 0.21%)</title><rect x="13.2" y="723.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.2" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (320 samples, 0.21%)</title><rect x="13.2" y="707.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="16.2" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (320 samples, 0.21%)</title><rect x="13.2" y="691.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="16.2" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (320 samples, 0.21%)</title><rect x="13.2" y="675.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.2" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (320 samples, 0.21%)</title><rect x="13.2" y="659.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="16.2" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$112/174994326.compare (320 samples, 0.21%)</title><rect x="13.2" y="643.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="16.2" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (320 samples, 0.21%)</title><rect x="13.2" y="627.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="16.2" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$110/1907690653.compare (320 samples, 0.21%)</title><rect x="13.2" y="611.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="16.2" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (320 samples, 0.21%)</title><rect x="13.2" y="595.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="16.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$109/470151193.apply (320 samples, 0.21%)</title><rect x="13.2" y="579.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="16.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (320 samples, 0.21%)</title><rect x="13.2" y="563.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="16.2" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (320 samples, 0.21%)</title><rect x="13.2" y="547.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="16.2" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (320 samples, 0.21%)</title><rect x="13.2" y="531.0" width="2.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="16.2" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (440 samples, 0.29%)</title><rect x="15.7" y="723.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.7" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (440 samples, 0.29%)</title><rect x="15.7" y="707.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.7" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (440 samples, 0.29%)</title><rect x="15.7" y="691.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.7" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (440 samples, 0.29%)</title><rect x="15.7" y="675.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.7" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (440 samples, 0.29%)</title><rect x="15.7" y="659.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.7" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (440 samples, 0.29%)</title><rect x="15.7" y="643.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.7" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (256 samples, 0.17%)</title><rect x="15.7" y="627.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (256 samples, 0.17%)</title><rect x="15.7" y="611.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (256 samples, 0.17%)</title><rect x="15.7" y="595.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getCell (256 samples, 0.17%)</title><rect x="15.7" y="579.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.7" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (113 samples, 0.07%)</title><rect x="15.7" y="563.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.7" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (80 samples, 0.05%)</title><rect x="15.7" y="547.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="18.7" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (33 samples, 0.02%)</title><rect x="16.3" y="547.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.3" y="558.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.02%)</title><rect x="16.3" y="531.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="19.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (79 samples, 0.05%)</title><rect x="16.8" y="563.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.8" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (66 samples, 0.04%)</title><rect x="16.8" y="547.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.8" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (36 samples, 0.02%)</title><rect x="17.0" y="531.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.0" y="542.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.02%)</title><rect x="17.0" y="515.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="20.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (42 samples, 0.03%)</title><rect x="17.4" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="20.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (42 samples, 0.03%)</title><rect x="17.4" y="547.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.4" y="558.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$112/174994326.compare (184 samples, 0.12%)</title><rect x="17.7" y="627.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.7" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (184 samples, 0.12%)</title><rect x="17.7" y="611.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.7" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$110/1907690653.compare (184 samples, 0.12%)</title><rect x="17.7" y="595.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.7" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (184 samples, 0.12%)</title><rect x="17.7" y="579.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$109/470151193.apply (184 samples, 0.12%)</title><rect x="17.7" y="563.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="20.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (184 samples, 0.12%)</title><rect x="17.7" y="547.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="20.7" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (184 samples, 0.12%)</title><rect x="17.7" y="531.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.7" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (184 samples, 0.12%)</title><rect x="17.7" y="515.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="20.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$123/139855784.apply (58 samples, 0.04%)</title><rect x="19.1" y="739.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (58 samples, 0.04%)</title><rect x="19.1" y="723.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.1" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (58 samples, 0.04%)</title><rect x="19.1" y="707.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.1" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (58 samples, 0.04%)</title><rect x="19.1" y="691.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="22.1" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (61 samples, 0.04%)</title><rect x="19.6" y="819.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.6" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (61 samples, 0.04%)</title><rect x="19.6" y="803.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.6" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$127/1089760466.apply (61 samples, 0.04%)</title><rect x="19.6" y="787.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.lambda$iterator$3 (61 samples, 0.04%)</title><rect x="19.6" y="771.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.iterator (32,866 samples, 21.77%)</title><rect x="20.2" y="819.0" width="256.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.2" y="830.0">ru/mail/polis/dao/valaubr/LsmDAO.i..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.cellIterator (32,823 samples, 21.74%)</title><rect x="20.6" y="803.0" width="256.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="23.6" y="814.0">ru/mail/polis/dao/valaubr/LsmDAO.c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (8,933 samples, 5.92%)</title><rect x="20.6" y="787.0" width="69.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.6" y="798.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8,929 samples, 5.91%)</title><rect x="20.6" y="771.0" width="69.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="23.6" y="782.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (60 samples, 0.04%)</title><rect x="20.7" y="755.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.7" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (60 samples, 0.04%)</title><rect x="20.7" y="739.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="23.7" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (60 samples, 0.04%)</title><rect x="20.7" y="723.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (60 samples, 0.04%)</title><rect x="20.7" y="707.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="23.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool$$Lambda$113/1045887463.apply (48 samples, 0.03%)</title><rect x="20.8" y="691.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="23.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (48 samples, 0.03%)</title><rect x="20.8" y="675.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.8" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (48 samples, 0.03%)</title><rect x="20.8" y="659.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="23.8" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (48 samples, 0.03%)</title><rect x="20.8" y="643.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="23.8" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (279 samples, 0.18%)</title><rect x="21.2" y="755.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.2" y="766.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (279 samples, 0.18%)</title><rect x="21.2" y="739.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="24.2" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8,540 samples, 5.66%)</title><rect x="23.6" y="755.0" width="66.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="26.6" y="766.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8,540 samples, 5.66%)</title><rect x="23.6" y="739.0" width="66.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="26.6" y="750.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (125 samples, 0.08%)</title><rect x="23.6" y="723.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="26.6" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (125 samples, 0.08%)</title><rect x="23.6" y="707.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="26.6" y="718.0"></text>
</g>
<g>
<title>java.lang.Object[] (125 samples, 0.08%)</title><rect x="23.6" y="691.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="26.6" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8,415 samples, 5.57%)</title><rect x="24.6" y="723.0" width="65.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="27.6" y="734.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8,415 samples, 5.57%)</title><rect x="24.6" y="707.0" width="65.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.6" y="718.0">java/ut..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,415 samples, 5.57%)</title><rect x="24.6" y="691.0" width="65.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.6" y="702.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,415 samples, 5.57%)</title><rect x="24.6" y="675.0" width="65.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="27.6" y="686.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5,289 samples, 3.50%)</title><rect x="24.6" y="659.0" width="41.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="27.6" y="670.0">com..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (5,289 samples, 3.50%)</title><rect x="24.6" y="643.0" width="41.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.6" y="654.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (5,289 samples, 3.50%)</title><rect x="24.6" y="627.0" width="41.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.6" y="638.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getCell (5,289 samples, 3.50%)</title><rect x="24.6" y="611.0" width="41.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.6" y="622.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,477 samples, 1.64%)</title><rect x="24.6" y="595.0" width="19.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="27.6" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,683 samples, 1.11%)</title><rect x="24.6" y="579.0" width="13.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="27.6" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (794 samples, 0.53%)</title><rect x="37.8" y="579.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.8" y="590.0"></text>
</g>
<g>
<title>byte[] (794 samples, 0.53%)</title><rect x="37.8" y="563.0" width="6.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="40.8" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.valaubr.Cell (239 samples, 0.16%)</title><rect x="44.0" y="595.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="47.0" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.valaubr.Value (282 samples, 0.19%)</title><rect x="45.8" y="595.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="48.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (1,451 samples, 0.96%)</title><rect x="48.1" y="595.0" width="11.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.1" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,167 samples, 0.77%)</title><rect x="48.1" y="579.0" width="9.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="51.1" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (545 samples, 0.36%)</title><rect x="48.1" y="563.0" width="4.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="51.1" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (622 samples, 0.41%)</title><rect x="52.3" y="563.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.3" y="574.0"></text>
</g>
<g>
<title>byte[] (622 samples, 0.41%)</title><rect x="52.3" y="547.0" width="4.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="55.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (284 samples, 0.19%)</title><rect x="57.2" y="579.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="60.2" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (284 samples, 0.19%)</title><rect x="57.2" y="563.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="60.2" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (284 samples, 0.19%)</title><rect x="57.2" y="547.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="60.2" y="558.0"></text>
</g>
<g>
<title>byte[] (284 samples, 0.19%)</title><rect x="57.2" y="531.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="60.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (840 samples, 0.56%)</title><rect x="59.4" y="595.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="62.4" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (840 samples, 0.56%)</title><rect x="59.4" y="579.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.4" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (569 samples, 0.38%)</title><rect x="59.4" y="563.0" width="4.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="62.4" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (271 samples, 0.18%)</title><rect x="63.8" y="563.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.8" y="574.0"></text>
</g>
<g>
<title>byte[] (271 samples, 0.18%)</title><rect x="63.8" y="547.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="66.8" y="558.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$112/174994326.compare (3,126 samples, 2.07%)</title><rect x="66.0" y="659.0" width="24.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.0" y="670.0">j..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3,126 samples, 2.07%)</title><rect x="66.0" y="643.0" width="24.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.0" y="654.0">j..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$110/1907690653.compare (3,126 samples, 2.07%)</title><rect x="66.0" y="627.0" width="24.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.0" y="638.0">j..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3,126 samples, 2.07%)</title><rect x="66.0" y="611.0" width="24.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="69.0" y="622.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$109/470151193.apply (3,126 samples, 2.07%)</title><rect x="66.0" y="595.0" width="24.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.0" y="606.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (3,126 samples, 2.07%)</title><rect x="66.0" y="579.0" width="24.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.0" y="590.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3,126 samples, 2.07%)</title><rect x="66.0" y="563.0" width="24.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="69.0" y="574.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3,126 samples, 2.07%)</title><rect x="66.0" y="547.0" width="24.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="69.0" y="558.0">j..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (22,673 samples, 15.02%)</title><rect x="90.5" y="787.0" width="177.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="93.5" y="798.0">java/lang/Iterable.forE..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$122/1025867662.accept (22,650 samples, 15.00%)</title><rect x="90.6" y="771.0" width="177.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="93.6" y="782.0">ru/mail/polis/dao/valau..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.lambda$cellIterator$4 (22,650 samples, 15.00%)</title><rect x="90.6" y="755.0" width="177.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.6" y="766.0">ru/mail/polis/dao/valau..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.iterator (22,650 samples, 15.00%)</title><rect x="90.6" y="739.0" width="177.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="93.6" y="750.0">ru/mail/polis/dao/valau..</text>
</g>
<g>
<title>ru.mail.polis.dao.valaubr.SSTable$1 (256 samples, 0.17%)</title><rect x="90.6" y="723.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="93.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.&lt;init&gt; (22,394 samples, 14.83%)</title><rect x="92.6" y="723.0" width="175.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="95.6" y="734.0">ru/mail/polis/dao/valau..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getPosition (22,394 samples, 14.83%)</title><rect x="92.6" y="707.0" width="175.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="95.6" y="718.0">ru/mail/polis/dao/valau..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (22,394 samples, 14.83%)</title><rect x="92.6" y="691.0" width="175.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.6" y="702.0">ru/mail/polis/dao/valau..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (18,142 samples, 12.02%)</title><rect x="92.6" y="675.0" width="141.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.6" y="686.0">java/nio/ByteBuffe..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8,833 samples, 5.85%)</title><rect x="92.6" y="659.0" width="69.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="95.6" y="670.0">java.ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9,309 samples, 6.17%)</title><rect x="161.7" y="659.0" width="72.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.7" y="670.0">java/nio..</text>
</g>
<g>
<title>byte[] (9,309 samples, 6.17%)</title><rect x="161.7" y="643.0" width="72.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="164.7" y="654.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (4,252 samples, 2.82%)</title><rect x="234.4" y="675.0" width="33.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="237.4" y="686.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4,252 samples, 2.82%)</title><rect x="234.4" y="659.0" width="33.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="237.4" y="670.0">ja..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4,252 samples, 2.82%)</title><rect x="234.4" y="643.0" width="33.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="237.4" y="654.0">ja..</text>
</g>
<g>
<title>byte[] (4,252 samples, 2.82%)</title><rect x="234.4" y="627.0" width="33.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="237.4" y="638.0">by..</text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (54 samples, 0.04%)</title><rect x="267.7" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="270.7" y="798.0"></text>
</g>
<g>
<title>java.lang.Object[] (54 samples, 0.04%)</title><rect x="267.7" y="771.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="270.7" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (762 samples, 0.50%)</title><rect x="268.2" y="787.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="271.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (750 samples, 0.50%)</title><rect x="268.3" y="771.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="271.3" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (750 samples, 0.50%)</title><rect x="268.3" y="755.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="271.3" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (315 samples, 0.21%)</title><rect x="268.3" y="739.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="271.3" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (315 samples, 0.21%)</title><rect x="268.3" y="723.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="271.3" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (315 samples, 0.21%)</title><rect x="268.3" y="707.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="271.3" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (315 samples, 0.21%)</title><rect x="268.3" y="691.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="271.3" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (315 samples, 0.21%)</title><rect x="268.3" y="675.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="271.3" y="686.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$112/174994326.compare (315 samples, 0.21%)</title><rect x="268.3" y="659.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.3" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (315 samples, 0.21%)</title><rect x="268.3" y="643.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="271.3" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$110/1907690653.compare (315 samples, 0.21%)</title><rect x="268.3" y="627.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="271.3" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (315 samples, 0.21%)</title><rect x="268.3" y="611.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="271.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$109/470151193.apply (315 samples, 0.21%)</title><rect x="268.3" y="595.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="271.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (315 samples, 0.21%)</title><rect x="268.3" y="579.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="271.3" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (315 samples, 0.21%)</title><rect x="268.3" y="563.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="271.3" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (315 samples, 0.21%)</title><rect x="268.3" y="547.0" width="2.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="271.3" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (435 samples, 0.29%)</title><rect x="270.7" y="739.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="273.7" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (435 samples, 0.29%)</title><rect x="270.7" y="723.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="273.7" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (435 samples, 0.29%)</title><rect x="270.7" y="707.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="273.7" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (435 samples, 0.29%)</title><rect x="270.7" y="691.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="273.7" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (435 samples, 0.29%)</title><rect x="270.7" y="675.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="273.7" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (435 samples, 0.29%)</title><rect x="270.7" y="659.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="273.7" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (241 samples, 0.16%)</title><rect x="270.7" y="643.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="273.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (241 samples, 0.16%)</title><rect x="270.7" y="627.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="273.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (241 samples, 0.16%)</title><rect x="270.7" y="611.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="273.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getCell (241 samples, 0.16%)</title><rect x="270.7" y="595.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="273.7" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (107 samples, 0.07%)</title><rect x="270.7" y="579.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="273.7" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (76 samples, 0.05%)</title><rect x="270.7" y="563.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="273.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (65 samples, 0.04%)</title><rect x="271.8" y="579.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="274.8" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (55 samples, 0.04%)</title><rect x="271.8" y="563.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="274.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (40 samples, 0.03%)</title><rect x="272.3" y="579.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="275.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (40 samples, 0.03%)</title><rect x="272.3" y="563.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="275.3" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$112/174994326.compare (194 samples, 0.13%)</title><rect x="272.6" y="643.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="275.6" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (194 samples, 0.13%)</title><rect x="272.6" y="627.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="275.6" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$110/1907690653.compare (194 samples, 0.13%)</title><rect x="272.6" y="611.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="275.6" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (194 samples, 0.13%)</title><rect x="272.6" y="595.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$109/470151193.apply (194 samples, 0.13%)</title><rect x="272.6" y="579.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="275.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (194 samples, 0.13%)</title><rect x="272.6" y="563.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="275.6" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (194 samples, 0.13%)</title><rect x="272.6" y="547.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="275.6" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (194 samples, 0.13%)</title><rect x="272.6" y="531.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="275.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.iterator (380 samples, 0.25%)</title><rect x="274.1" y="787.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="277.1" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (146 samples, 0.10%)</title><rect x="274.3" y="771.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="277.3" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (144 samples, 0.10%)</title><rect x="274.3" y="755.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="277.3" y="766.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (85 samples, 0.06%)</title><rect x="274.8" y="739.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="277.8" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (85 samples, 0.06%)</title><rect x="274.8" y="723.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="277.8" y="734.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (85 samples, 0.06%)</title><rect x="274.8" y="707.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="277.8" y="718.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (77 samples, 0.05%)</title><rect x="274.8" y="691.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="277.8" y="702.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (32 samples, 0.02%)</title><rect x="275.2" y="675.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="278.2" y="686.0"></text>
</g>
<g>
<title>java.lang.Object[] (32 samples, 0.02%)</title><rect x="275.2" y="659.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="278.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.iterator (154 samples, 0.10%)</title><rect x="275.9" y="771.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="278.9" y="782.0"></text>
</g>
<g>
<title>java/util/Collection.stream (54 samples, 0.04%)</title><rect x="275.9" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="278.9" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (46 samples, 0.03%)</title><rect x="276.5" y="755.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="279.5" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (32 samples, 0.02%)</title><rect x="276.6" y="739.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="279.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (134 samples, 0.09%)</title><rect x="277.3" y="899.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.3" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (33 samples, 0.02%)</title><rect x="277.6" y="883.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="280.6" y="894.0"></text>
</g>
<g>
<title>java.lang.String[] (33 samples, 0.02%)</title><rect x="277.6" y="867.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="280.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (70 samples, 0.05%)</title><rect x="277.8" y="883.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="280.8" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (70 samples, 0.05%)</title><rect x="277.8" y="867.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="280.8" y="878.0"></text>
</g>
<g>
<title>char[] (41 samples, 0.03%)</title><rect x="277.8" y="851.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="280.8" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (70 samples, 0.05%)</title><rect x="278.4" y="899.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="281.4" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (70 samples, 0.05%)</title><rect x="278.4" y="883.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="281.4" y="894.0"></text>
</g>
<g>
<title>char[] (39 samples, 0.03%)</title><rect x="278.4" y="867.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="281.4" y="878.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=65446] (34,140 samples, 22.61%)</title><rect x="278.9" y="979.0" width="266.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="281.9" y="990.0">[NIO Selector #1 tid=65446]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (34,140 samples, 22.61%)</title><rect x="278.9" y="963.0" width="266.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="281.9" y="974.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (34,139 samples, 22.61%)</title><rect x="278.9" y="947.0" width="266.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="281.9" y="958.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (34,139 samples, 22.61%)</title><rect x="278.9" y="931.0" width="266.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="281.9" y="942.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (34,139 samples, 22.61%)</title><rect x="278.9" y="915.0" width="266.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="281.9" y="926.0">one/nio/http/HttpSession.processHttp..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (33,949 samples, 22.48%)</title><rect x="278.9" y="899.0" width="265.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="281.9" y="910.0">one/nio/http/HttpSession.handlePars..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (33,949 samples, 22.48%)</title><rect x="278.9" y="883.0" width="265.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="281.9" y="894.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (33,927 samples, 22.47%)</title><rect x="278.9" y="867.0" width="265.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="281.9" y="878.0">RequestHandler0_get.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (62 samples, 0.04%)</title><rect x="278.9" y="851.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="281.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (62 samples, 0.04%)</title><rect x="278.9" y="835.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="281.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (41 samples, 0.03%)</title><rect x="278.9" y="819.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="281.9" y="830.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (41 samples, 0.03%)</title><rect x="278.9" y="803.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="281.9" y="814.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.03%)</title><rect x="278.9" y="787.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="281.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.get (33,838 samples, 22.41%)</title><rect x="279.6" y="851.0" width="264.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="282.6" y="862.0">ru/mail/polis/service/valaubr/HttpS..</text>
</g>
<g>
<title>one/nio/http/Response.ok (63 samples, 0.04%)</title><rect x="279.9" y="835.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="282.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (53 samples, 0.04%)</title><rect x="280.0" y="819.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="283.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (33,733 samples, 22.34%)</title><rect x="280.4" y="835.0" width="263.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="283.4" y="846.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (812 samples, 0.54%)</title><rect x="280.4" y="819.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="283.4" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (812 samples, 0.54%)</title><rect x="280.4" y="803.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="283.4" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (812 samples, 0.54%)</title><rect x="280.4" y="787.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="283.4" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (812 samples, 0.54%)</title><rect x="280.4" y="771.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="283.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (812 samples, 0.54%)</title><rect x="280.4" y="755.0" width="6.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="283.4" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (759 samples, 0.50%)</title><rect x="280.4" y="739.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="283.4" y="750.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (348 samples, 0.23%)</title><rect x="280.4" y="723.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="283.4" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (348 samples, 0.23%)</title><rect x="280.4" y="707.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.4" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (348 samples, 0.23%)</title><rect x="280.4" y="691.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.4" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (348 samples, 0.23%)</title><rect x="280.4" y="675.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="283.4" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (348 samples, 0.23%)</title><rect x="280.4" y="659.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="283.4" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$112/174994326.compare (348 samples, 0.23%)</title><rect x="280.4" y="643.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="283.4" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (348 samples, 0.23%)</title><rect x="280.4" y="627.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="283.4" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$110/1907690653.compare (348 samples, 0.23%)</title><rect x="280.4" y="611.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="283.4" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (348 samples, 0.23%)</title><rect x="280.4" y="595.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="283.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$109/470151193.apply (348 samples, 0.23%)</title><rect x="280.4" y="579.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="283.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (348 samples, 0.23%)</title><rect x="280.4" y="563.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="283.4" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (348 samples, 0.23%)</title><rect x="280.4" y="547.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="283.4" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (348 samples, 0.23%)</title><rect x="280.4" y="531.0" width="2.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="283.4" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (411 samples, 0.27%)</title><rect x="283.1" y="723.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="286.1" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (411 samples, 0.27%)</title><rect x="283.1" y="707.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="286.1" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (411 samples, 0.27%)</title><rect x="283.1" y="691.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="286.1" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (411 samples, 0.27%)</title><rect x="283.1" y="675.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="286.1" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (411 samples, 0.27%)</title><rect x="283.1" y="659.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="286.1" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (411 samples, 0.27%)</title><rect x="283.1" y="643.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="286.1" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (233 samples, 0.15%)</title><rect x="283.1" y="627.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="286.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (233 samples, 0.15%)</title><rect x="283.1" y="611.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (233 samples, 0.15%)</title><rect x="283.1" y="595.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="286.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getCell (233 samples, 0.15%)</title><rect x="283.1" y="579.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="286.1" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (108 samples, 0.07%)</title><rect x="283.1" y="563.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="286.1" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (76 samples, 0.05%)</title><rect x="283.1" y="547.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="286.1" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (32 samples, 0.02%)</title><rect x="283.7" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="286.7" y="558.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.02%)</title><rect x="283.7" y="531.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="286.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (69 samples, 0.05%)</title><rect x="284.1" y="563.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="287.1" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (53 samples, 0.04%)</title><rect x="284.1" y="547.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="287.1" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (33 samples, 0.02%)</title><rect x="284.3" y="531.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="287.3" y="542.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.02%)</title><rect x="284.3" y="515.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="287.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (39 samples, 0.03%)</title><rect x="284.6" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="287.6" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (39 samples, 0.03%)</title><rect x="284.6" y="547.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="287.6" y="558.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$112/174994326.compare (178 samples, 0.12%)</title><rect x="284.9" y="627.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="287.9" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (178 samples, 0.12%)</title><rect x="284.9" y="611.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="287.9" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$110/1907690653.compare (178 samples, 0.12%)</title><rect x="284.9" y="595.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="287.9" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (178 samples, 0.12%)</title><rect x="284.9" y="579.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="287.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$109/470151193.apply (178 samples, 0.12%)</title><rect x="284.9" y="563.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="287.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (178 samples, 0.12%)</title><rect x="284.9" y="547.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="287.9" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (178 samples, 0.12%)</title><rect x="284.9" y="531.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="287.9" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (178 samples, 0.12%)</title><rect x="284.9" y="515.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="287.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$123/139855784.apply (53 samples, 0.04%)</title><rect x="286.3" y="739.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="289.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (53 samples, 0.04%)</title><rect x="286.3" y="723.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="289.3" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (53 samples, 0.04%)</title><rect x="286.3" y="707.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="289.3" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (53 samples, 0.04%)</title><rect x="286.3" y="691.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="289.3" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (70 samples, 0.05%)</title><rect x="286.7" y="819.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="289.7" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (70 samples, 0.05%)</title><rect x="286.7" y="803.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="289.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$127/1089760466.apply (70 samples, 0.05%)</title><rect x="286.7" y="787.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.lambda$iterator$3 (70 samples, 0.05%)</title><rect x="286.7" y="771.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="289.7" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.iterator (32,822 samples, 21.74%)</title><rect x="287.5" y="819.0" width="256.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="290.5" y="830.0">ru/mail/polis/dao/valaubr/LsmDAO.i..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (36 samples, 0.02%)</title><rect x="287.7" y="803.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="290.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (36 samples, 0.02%)</title><rect x="287.7" y="787.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (36 samples, 0.02%)</title><rect x="287.7" y="771.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="290.7" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (36 samples, 0.02%)</title><rect x="287.7" y="755.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="290.7" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (36 samples, 0.02%)</title><rect x="287.7" y="739.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.cellIterator (32,767 samples, 21.70%)</title><rect x="287.9" y="803.0" width="256.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="290.9" y="814.0">ru/mail/polis/dao/valaubr/LsmDAO.c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (8,875 samples, 5.88%)</title><rect x="287.9" y="787.0" width="69.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.9" y="798.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8,866 samples, 5.87%)</title><rect x="288.0" y="771.0" width="69.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="291.0" y="782.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (83 samples, 0.05%)</title><rect x="288.1" y="755.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="291.1" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (83 samples, 0.05%)</title><rect x="288.1" y="739.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.1" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (83 samples, 0.05%)</title><rect x="288.1" y="723.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="291.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (83 samples, 0.05%)</title><rect x="288.1" y="707.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="291.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool$$Lambda$113/1045887463.apply (65 samples, 0.04%)</title><rect x="288.2" y="691.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (65 samples, 0.04%)</title><rect x="288.2" y="675.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="291.2" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (65 samples, 0.04%)</title><rect x="288.2" y="659.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="291.2" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (65 samples, 0.04%)</title><rect x="288.2" y="643.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="291.2" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (277 samples, 0.18%)</title><rect x="288.8" y="755.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="291.8" y="766.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (277 samples, 0.18%)</title><rect x="288.8" y="739.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="291.8" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8,468 samples, 5.61%)</title><rect x="291.1" y="755.0" width="66.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="294.1" y="766.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8,468 samples, 5.61%)</title><rect x="291.1" y="739.0" width="66.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="294.1" y="750.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (112 samples, 0.07%)</title><rect x="291.1" y="723.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="294.1" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (112 samples, 0.07%)</title><rect x="291.1" y="707.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="294.1" y="718.0"></text>
</g>
<g>
<title>java.lang.Object[] (112 samples, 0.07%)</title><rect x="291.1" y="691.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="294.1" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8,356 samples, 5.53%)</title><rect x="292.0" y="723.0" width="65.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.0" y="734.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8,356 samples, 5.53%)</title><rect x="292.0" y="707.0" width="65.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="295.0" y="718.0">java/ut..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,356 samples, 5.53%)</title><rect x="292.0" y="691.0" width="65.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="295.0" y="702.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,356 samples, 5.53%)</title><rect x="292.0" y="675.0" width="65.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="295.0" y="686.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5,266 samples, 3.49%)</title><rect x="292.0" y="659.0" width="41.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="295.0" y="670.0">com..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (5,266 samples, 3.49%)</title><rect x="292.0" y="643.0" width="41.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="295.0" y="654.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (5,266 samples, 3.49%)</title><rect x="292.0" y="627.0" width="41.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="295.0" y="638.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getCell (5,266 samples, 3.49%)</title><rect x="292.0" y="611.0" width="41.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="295.0" y="622.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,473 samples, 1.64%)</title><rect x="292.0" y="595.0" width="19.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="295.0" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,682 samples, 1.11%)</title><rect x="292.0" y="579.0" width="13.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="295.0" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (791 samples, 0.52%)</title><rect x="305.1" y="579.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.1" y="590.0"></text>
</g>
<g>
<title>byte[] (791 samples, 0.52%)</title><rect x="305.1" y="563.0" width="6.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="308.1" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.valaubr.Cell (269 samples, 0.18%)</title><rect x="311.3" y="595.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="314.3" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.valaubr.Value (287 samples, 0.19%)</title><rect x="313.4" y="595.0" width="2.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="316.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (1,429 samples, 0.95%)</title><rect x="315.7" y="595.0" width="11.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="318.7" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,159 samples, 0.77%)</title><rect x="315.7" y="579.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="318.7" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (552 samples, 0.37%)</title><rect x="315.7" y="563.0" width="4.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="318.7" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (607 samples, 0.40%)</title><rect x="320.0" y="563.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="323.0" y="574.0"></text>
</g>
<g>
<title>byte[] (607 samples, 0.40%)</title><rect x="320.0" y="547.0" width="4.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="323.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (270 samples, 0.18%)</title><rect x="324.7" y="579.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="327.7" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (270 samples, 0.18%)</title><rect x="324.7" y="563.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="327.7" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (270 samples, 0.18%)</title><rect x="324.7" y="547.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="327.7" y="558.0"></text>
</g>
<g>
<title>byte[] (270 samples, 0.18%)</title><rect x="324.7" y="531.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="327.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (808 samples, 0.54%)</title><rect x="326.8" y="595.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="329.8" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (808 samples, 0.54%)</title><rect x="326.8" y="579.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="329.8" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (552 samples, 0.37%)</title><rect x="326.8" y="563.0" width="4.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="329.8" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (256 samples, 0.17%)</title><rect x="331.2" y="563.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="334.2" y="574.0"></text>
</g>
<g>
<title>byte[] (256 samples, 0.17%)</title><rect x="331.2" y="547.0" width="2.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="334.2" y="558.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$112/174994326.compare (3,090 samples, 2.05%)</title><rect x="333.2" y="659.0" width="24.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="336.2" y="670.0">j..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3,090 samples, 2.05%)</title><rect x="333.2" y="643.0" width="24.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="336.2" y="654.0">j..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$110/1907690653.compare (3,090 samples, 2.05%)</title><rect x="333.2" y="627.0" width="24.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="336.2" y="638.0">j..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3,090 samples, 2.05%)</title><rect x="333.2" y="611.0" width="24.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="336.2" y="622.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$109/470151193.apply (3,090 samples, 2.05%)</title><rect x="333.2" y="595.0" width="24.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="336.2" y="606.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (3,090 samples, 2.05%)</title><rect x="333.2" y="579.0" width="24.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="336.2" y="590.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3,090 samples, 2.05%)</title><rect x="333.2" y="563.0" width="24.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="336.2" y="574.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3,090 samples, 2.05%)</title><rect x="333.2" y="547.0" width="24.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="336.2" y="558.0">j..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (22,602 samples, 14.97%)</title><rect x="357.4" y="787.0" width="176.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="360.4" y="798.0">java/lang/Iterable.forE..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$122/1025867662.accept (22,586 samples, 14.96%)</title><rect x="357.5" y="771.0" width="176.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="360.5" y="782.0">ru/mail/polis/dao/valau..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.lambda$cellIterator$4 (22,586 samples, 14.96%)</title><rect x="357.5" y="755.0" width="176.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="360.5" y="766.0">ru/mail/polis/dao/valau..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.iterator (22,586 samples, 14.96%)</title><rect x="357.5" y="739.0" width="176.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="360.5" y="750.0">ru/mail/polis/dao/valau..</text>
</g>
<g>
<title>ru.mail.polis.dao.valaubr.SSTable$1 (257 samples, 0.17%)</title><rect x="357.5" y="723.0" width="2.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="360.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.&lt;init&gt; (22,329 samples, 14.79%)</title><rect x="359.5" y="723.0" width="174.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="362.5" y="734.0">ru/mail/polis/dao/vala..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getPosition (22,329 samples, 14.79%)</title><rect x="359.5" y="707.0" width="174.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="362.5" y="718.0">ru/mail/polis/dao/vala..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (22,329 samples, 14.79%)</title><rect x="359.5" y="691.0" width="174.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="362.5" y="702.0">ru/mail/polis/dao/vala..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (18,099 samples, 11.99%)</title><rect x="359.5" y="675.0" width="141.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="362.5" y="686.0">java/nio/ByteBuffe..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8,847 samples, 5.86%)</title><rect x="359.5" y="659.0" width="69.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="362.5" y="670.0">java.ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9,252 samples, 6.13%)</title><rect x="428.7" y="659.0" width="72.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="431.7" y="670.0">java/nio..</text>
</g>
<g>
<title>byte[] (9,252 samples, 6.13%)</title><rect x="428.7" y="643.0" width="72.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="431.7" y="654.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (4,230 samples, 2.80%)</title><rect x="501.0" y="675.0" width="33.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="504.0" y="686.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4,230 samples, 2.80%)</title><rect x="501.0" y="659.0" width="33.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="504.0" y="670.0">ja..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4,230 samples, 2.80%)</title><rect x="501.0" y="643.0" width="33.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="504.0" y="654.0">ja..</text>
</g>
<g>
<title>byte[] (4,230 samples, 2.80%)</title><rect x="501.0" y="627.0" width="33.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="504.0" y="638.0">by..</text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (62 samples, 0.04%)</title><rect x="534.2" y="787.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="537.2" y="798.0"></text>
</g>
<g>
<title>java.lang.Object[] (62 samples, 0.04%)</title><rect x="534.2" y="771.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="537.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (772 samples, 0.51%)</title><rect x="534.6" y="787.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="537.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (763 samples, 0.51%)</title><rect x="534.7" y="771.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="537.7" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (763 samples, 0.51%)</title><rect x="534.7" y="755.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="537.7" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (335 samples, 0.22%)</title><rect x="534.7" y="739.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="537.7" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (335 samples, 0.22%)</title><rect x="534.7" y="723.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="537.7" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (335 samples, 0.22%)</title><rect x="534.7" y="707.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="537.7" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (335 samples, 0.22%)</title><rect x="534.7" y="691.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="537.7" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (335 samples, 0.22%)</title><rect x="534.7" y="675.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="537.7" y="686.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$112/174994326.compare (335 samples, 0.22%)</title><rect x="534.7" y="659.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="537.7" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (335 samples, 0.22%)</title><rect x="534.7" y="643.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="537.7" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$110/1907690653.compare (335 samples, 0.22%)</title><rect x="534.7" y="627.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="537.7" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (335 samples, 0.22%)</title><rect x="534.7" y="611.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="537.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$109/470151193.apply (335 samples, 0.22%)</title><rect x="534.7" y="595.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="537.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (335 samples, 0.22%)</title><rect x="534.7" y="579.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="537.7" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (335 samples, 0.22%)</title><rect x="534.7" y="563.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="537.7" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (335 samples, 0.22%)</title><rect x="534.7" y="547.0" width="2.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="537.7" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (428 samples, 0.28%)</title><rect x="537.3" y="739.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="540.3" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (428 samples, 0.28%)</title><rect x="537.3" y="723.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="540.3" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (428 samples, 0.28%)</title><rect x="537.3" y="707.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="540.3" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (428 samples, 0.28%)</title><rect x="537.3" y="691.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="540.3" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (428 samples, 0.28%)</title><rect x="537.3" y="675.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="540.3" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (428 samples, 0.28%)</title><rect x="537.3" y="659.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="540.3" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (248 samples, 0.16%)</title><rect x="537.3" y="643.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="540.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (248 samples, 0.16%)</title><rect x="537.3" y="627.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="540.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (248 samples, 0.16%)</title><rect x="537.3" y="611.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="540.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getCell (248 samples, 0.16%)</title><rect x="537.3" y="595.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="540.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (114 samples, 0.08%)</title><rect x="537.3" y="579.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="540.3" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (83 samples, 0.05%)</title><rect x="537.3" y="563.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="540.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (70 samples, 0.05%)</title><rect x="538.4" y="579.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="541.4" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (58 samples, 0.04%)</title><rect x="538.4" y="563.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="541.4" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (36 samples, 0.02%)</title><rect x="538.6" y="547.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="541.6" y="558.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.02%)</title><rect x="538.6" y="531.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="541.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (38 samples, 0.03%)</title><rect x="539.0" y="579.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="542.0" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (38 samples, 0.03%)</title><rect x="539.0" y="563.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="542.0" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$112/174994326.compare (180 samples, 0.12%)</title><rect x="539.3" y="643.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="542.3" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (180 samples, 0.12%)</title><rect x="539.3" y="627.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="542.3" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$110/1907690653.compare (180 samples, 0.12%)</title><rect x="539.3" y="611.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="542.3" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (180 samples, 0.12%)</title><rect x="539.3" y="595.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="542.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$109/470151193.apply (180 samples, 0.12%)</title><rect x="539.3" y="579.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="542.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (180 samples, 0.12%)</title><rect x="539.3" y="563.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="542.3" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (180 samples, 0.12%)</title><rect x="539.3" y="547.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="542.3" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (180 samples, 0.12%)</title><rect x="539.3" y="531.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="542.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.iterator (429 samples, 0.28%)</title><rect x="540.7" y="787.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="543.7" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (161 samples, 0.11%)</title><rect x="540.8" y="771.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="543.8" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (156 samples, 0.10%)</title><rect x="540.9" y="755.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="543.9" y="766.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (99 samples, 0.07%)</title><rect x="541.3" y="739.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="544.3" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (99 samples, 0.07%)</title><rect x="541.3" y="723.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="544.3" y="734.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (99 samples, 0.07%)</title><rect x="541.3" y="707.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="544.3" y="718.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (92 samples, 0.06%)</title><rect x="541.4" y="691.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="544.4" y="702.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (47 samples, 0.03%)</title><rect x="541.7" y="675.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="544.7" y="686.0"></text>
</g>
<g>
<title>java.lang.Object[] (47 samples, 0.03%)</title><rect x="541.7" y="659.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="544.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.iterator (163 samples, 0.11%)</title><rect x="542.8" y="771.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="545.8" y="782.0"></text>
</g>
<g>
<title>java/util/Collection.stream (51 samples, 0.03%)</title><rect x="542.8" y="755.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="545.8" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (51 samples, 0.03%)</title><rect x="543.4" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="546.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (35 samples, 0.02%)</title><rect x="543.5" y="739.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="546.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (136 samples, 0.09%)</title><rect x="544.3" y="899.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="547.3" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (35 samples, 0.02%)</title><rect x="544.4" y="883.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="547.4" y="894.0"></text>
</g>
<g>
<title>java.lang.String[] (35 samples, 0.02%)</title><rect x="544.4" y="867.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="547.4" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (76 samples, 0.05%)</title><rect x="544.7" y="883.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="547.7" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (76 samples, 0.05%)</title><rect x="544.7" y="867.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="547.7" y="878.0"></text>
</g>
<g>
<title>char[] (39 samples, 0.03%)</title><rect x="544.7" y="851.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="547.7" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (54 samples, 0.04%)</title><rect x="545.3" y="899.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="548.3" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (54 samples, 0.04%)</title><rect x="545.3" y="883.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="548.3" y="894.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=65451] (34,302 samples, 22.72%)</title><rect x="545.7" y="979.0" width="268.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="548.7" y="990.0">[NIO Selector #2 tid=65451]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (34,302 samples, 22.72%)</title><rect x="545.7" y="963.0" width="268.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="548.7" y="974.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (34,301 samples, 22.72%)</title><rect x="545.7" y="947.0" width="268.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="548.7" y="958.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (34,301 samples, 22.72%)</title><rect x="545.7" y="931.0" width="268.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="548.7" y="942.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (34,301 samples, 22.72%)</title><rect x="545.7" y="915.0" width="268.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="548.7" y="926.0">one/nio/http/HttpSession.processHttp..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (34,114 samples, 22.59%)</title><rect x="545.7" y="899.0" width="266.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="548.7" y="910.0">one/nio/http/HttpSession.handleParse..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (34,114 samples, 22.59%)</title><rect x="545.7" y="883.0" width="266.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="548.7" y="894.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (34,087 samples, 22.58%)</title><rect x="545.7" y="867.0" width="266.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="548.7" y="878.0">RequestHandler0_get.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (67 samples, 0.04%)</title><rect x="545.7" y="851.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="548.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (67 samples, 0.04%)</title><rect x="545.7" y="835.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="548.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (49 samples, 0.03%)</title><rect x="545.7" y="819.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="548.7" y="830.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (49 samples, 0.03%)</title><rect x="545.7" y="803.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="548.7" y="814.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.03%)</title><rect x="545.7" y="787.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="548.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.get (34,000 samples, 22.52%)</title><rect x="546.4" y="851.0" width="265.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="549.4" y="862.0">ru/mail/polis/service/valaubr/HttpS..</text>
</g>
<g>
<title>one/nio/http/Response.ok (77 samples, 0.05%)</title><rect x="546.8" y="835.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="549.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (63 samples, 0.04%)</title><rect x="546.9" y="819.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="549.9" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (33,864 samples, 22.43%)</title><rect x="547.4" y="835.0" width="264.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="550.4" y="846.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (822 samples, 0.54%)</title><rect x="547.4" y="819.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="550.4" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (822 samples, 0.54%)</title><rect x="547.4" y="803.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="550.4" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (822 samples, 0.54%)</title><rect x="547.4" y="787.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="550.4" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (822 samples, 0.54%)</title><rect x="547.4" y="771.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="550.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (822 samples, 0.54%)</title><rect x="547.4" y="755.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="550.4" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (772 samples, 0.51%)</title><rect x="547.4" y="739.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="550.4" y="750.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (336 samples, 0.22%)</title><rect x="547.4" y="723.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="550.4" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (336 samples, 0.22%)</title><rect x="547.4" y="707.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="550.4" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (336 samples, 0.22%)</title><rect x="547.4" y="691.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="550.4" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (336 samples, 0.22%)</title><rect x="547.4" y="675.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="550.4" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (336 samples, 0.22%)</title><rect x="547.4" y="659.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="550.4" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$112/174994326.compare (336 samples, 0.22%)</title><rect x="547.4" y="643.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="550.4" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (336 samples, 0.22%)</title><rect x="547.4" y="627.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="550.4" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$110/1907690653.compare (336 samples, 0.22%)</title><rect x="547.4" y="611.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="550.4" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (336 samples, 0.22%)</title><rect x="547.4" y="595.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="550.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$109/470151193.apply (336 samples, 0.22%)</title><rect x="547.4" y="579.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="550.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (336 samples, 0.22%)</title><rect x="547.4" y="563.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.4" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (336 samples, 0.22%)</title><rect x="547.4" y="547.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="550.4" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (336 samples, 0.22%)</title><rect x="547.4" y="531.0" width="2.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="550.4" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (436 samples, 0.29%)</title><rect x="550.0" y="723.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="553.0" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (436 samples, 0.29%)</title><rect x="550.0" y="707.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="553.0" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (436 samples, 0.29%)</title><rect x="550.0" y="691.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.0" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (436 samples, 0.29%)</title><rect x="550.0" y="675.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="553.0" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (436 samples, 0.29%)</title><rect x="550.0" y="659.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="553.0" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (436 samples, 0.29%)</title><rect x="550.0" y="643.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="553.0" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (225 samples, 0.15%)</title><rect x="550.0" y="627.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="553.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (225 samples, 0.15%)</title><rect x="550.0" y="611.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (225 samples, 0.15%)</title><rect x="550.0" y="595.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="553.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getCell (225 samples, 0.15%)</title><rect x="550.0" y="579.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="553.0" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (106 samples, 0.07%)</title><rect x="550.0" y="563.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="553.0" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (74 samples, 0.05%)</title><rect x="550.0" y="547.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="553.0" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (32 samples, 0.02%)</title><rect x="550.6" y="547.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="553.6" y="558.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.02%)</title><rect x="550.6" y="531.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="553.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (69 samples, 0.05%)</title><rect x="551.0" y="563.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="554.0" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (55 samples, 0.04%)</title><rect x="551.0" y="547.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="554.0" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (32 samples, 0.02%)</title><rect x="551.2" y="531.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="554.2" y="542.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.02%)</title><rect x="551.2" y="515.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="554.2" y="526.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$112/174994326.compare (211 samples, 0.14%)</title><rect x="551.8" y="627.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="554.8" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (211 samples, 0.14%)</title><rect x="551.8" y="611.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="554.8" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$110/1907690653.compare (211 samples, 0.14%)</title><rect x="551.8" y="595.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="554.8" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (211 samples, 0.14%)</title><rect x="551.8" y="579.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="554.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$109/470151193.apply (211 samples, 0.14%)</title><rect x="551.8" y="563.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="554.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (211 samples, 0.14%)</title><rect x="551.8" y="547.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.8" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (211 samples, 0.14%)</title><rect x="551.8" y="531.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="554.8" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (211 samples, 0.14%)</title><rect x="551.8" y="515.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="554.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$123/139855784.apply (50 samples, 0.03%)</title><rect x="553.4" y="739.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="556.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (50 samples, 0.03%)</title><rect x="553.4" y="723.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="556.4" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (50 samples, 0.03%)</title><rect x="553.4" y="707.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="556.4" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (50 samples, 0.03%)</title><rect x="553.4" y="691.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="556.4" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (67 samples, 0.04%)</title><rect x="553.8" y="819.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.8" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (67 samples, 0.04%)</title><rect x="553.8" y="803.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="556.8" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$127/1089760466.apply (67 samples, 0.04%)</title><rect x="553.8" y="787.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.lambda$iterator$3 (67 samples, 0.04%)</title><rect x="553.8" y="771.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="556.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (34 samples, 0.02%)</title><rect x="553.9" y="755.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.9" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (34 samples, 0.02%)</title><rect x="553.9" y="739.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="556.9" y="750.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (34 samples, 0.02%)</title><rect x="553.9" y="723.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="556.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.iterator (32,954 samples, 21.83%)</title><rect x="554.5" y="819.0" width="257.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="557.5" y="830.0">ru/mail/polis/dao/valaubr/LsmDAO.i..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.cellIterator (32,907 samples, 21.79%)</title><rect x="554.9" y="803.0" width="257.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="557.9" y="814.0">ru/mail/polis/dao/valaubr/LsmDAO.c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (8,961 samples, 5.93%)</title><rect x="554.9" y="787.0" width="70.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="557.9" y="798.0">com/goog..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8,955 samples, 5.93%)</title><rect x="554.9" y="771.0" width="70.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="557.9" y="782.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (65 samples, 0.04%)</title><rect x="555.0" y="755.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="558.0" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (65 samples, 0.04%)</title><rect x="555.0" y="739.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="558.0" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (65 samples, 0.04%)</title><rect x="555.0" y="723.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="558.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (65 samples, 0.04%)</title><rect x="555.0" y="707.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="558.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool$$Lambda$113/1045887463.apply (51 samples, 0.03%)</title><rect x="555.1" y="691.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="558.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (51 samples, 0.03%)</title><rect x="555.1" y="675.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="558.1" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (51 samples, 0.03%)</title><rect x="555.1" y="659.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="558.1" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (51 samples, 0.03%)</title><rect x="555.1" y="643.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="558.1" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (302 samples, 0.20%)</title><rect x="555.5" y="755.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.5" y="766.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (302 samples, 0.20%)</title><rect x="555.5" y="739.0" width="2.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="558.5" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8,548 samples, 5.66%)</title><rect x="558.1" y="755.0" width="66.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="561.1" y="766.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8,548 samples, 5.66%)</title><rect x="558.1" y="739.0" width="66.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="561.1" y="750.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (141 samples, 0.09%)</title><rect x="558.1" y="723.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="561.1" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (141 samples, 0.09%)</title><rect x="558.1" y="707.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="561.1" y="718.0"></text>
</g>
<g>
<title>java.lang.Object[] (141 samples, 0.09%)</title><rect x="558.1" y="691.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="561.1" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8,407 samples, 5.57%)</title><rect x="559.2" y="723.0" width="65.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.2" y="734.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8,407 samples, 5.57%)</title><rect x="559.2" y="707.0" width="65.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="562.2" y="718.0">java/ut..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,407 samples, 5.57%)</title><rect x="559.2" y="691.0" width="65.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="562.2" y="702.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,407 samples, 5.57%)</title><rect x="559.2" y="675.0" width="65.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.2" y="686.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5,323 samples, 3.53%)</title><rect x="559.2" y="659.0" width="41.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="562.2" y="670.0">com..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (5,323 samples, 3.53%)</title><rect x="559.2" y="643.0" width="41.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="562.2" y="654.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (5,323 samples, 3.53%)</title><rect x="559.2" y="627.0" width="41.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="562.2" y="638.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getCell (5,323 samples, 3.53%)</title><rect x="559.2" y="611.0" width="41.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="562.2" y="622.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,476 samples, 1.64%)</title><rect x="559.2" y="595.0" width="19.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="562.2" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,694 samples, 1.12%)</title><rect x="559.2" y="579.0" width="13.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="562.2" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (782 samples, 0.52%)</title><rect x="572.4" y="579.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="575.4" y="590.0"></text>
</g>
<g>
<title>byte[] (782 samples, 0.52%)</title><rect x="572.4" y="563.0" width="6.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="575.4" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.valaubr.Cell (230 samples, 0.15%)</title><rect x="578.5" y="595.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="581.5" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.valaubr.Value (302 samples, 0.20%)</title><rect x="580.3" y="595.0" width="2.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="583.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (1,465 samples, 0.97%)</title><rect x="582.7" y="595.0" width="11.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="585.7" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,196 samples, 0.79%)</title><rect x="582.7" y="579.0" width="9.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="585.7" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (568 samples, 0.38%)</title><rect x="582.7" y="563.0" width="4.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="585.7" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (628 samples, 0.42%)</title><rect x="587.1" y="563.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="590.1" y="574.0"></text>
</g>
<g>
<title>byte[] (628 samples, 0.42%)</title><rect x="587.1" y="547.0" width="5.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="590.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (269 samples, 0.18%)</title><rect x="592.1" y="579.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="595.1" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (269 samples, 0.18%)</title><rect x="592.1" y="563.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.1" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (269 samples, 0.18%)</title><rect x="592.1" y="547.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="595.1" y="558.0"></text>
</g>
<g>
<title>byte[] (269 samples, 0.18%)</title><rect x="592.1" y="531.0" width="2.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="595.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (850 samples, 0.56%)</title><rect x="594.2" y="595.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="597.2" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (850 samples, 0.56%)</title><rect x="594.2" y="579.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="597.2" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (595 samples, 0.39%)</title><rect x="594.2" y="563.0" width="4.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="597.2" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (255 samples, 0.17%)</title><rect x="598.8" y="563.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="601.8" y="574.0"></text>
</g>
<g>
<title>byte[] (255 samples, 0.17%)</title><rect x="598.8" y="547.0" width="2.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="601.8" y="558.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$112/174994326.compare (3,084 samples, 2.04%)</title><rect x="600.8" y="659.0" width="24.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="603.8" y="670.0">j..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3,084 samples, 2.04%)</title><rect x="600.8" y="643.0" width="24.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="603.8" y="654.0">j..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$110/1907690653.compare (3,084 samples, 2.04%)</title><rect x="600.8" y="627.0" width="24.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="603.8" y="638.0">j..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3,084 samples, 2.04%)</title><rect x="600.8" y="611.0" width="24.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="603.8" y="622.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$109/470151193.apply (3,084 samples, 2.04%)</title><rect x="600.8" y="595.0" width="24.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="603.8" y="606.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (3,084 samples, 2.04%)</title><rect x="600.8" y="579.0" width="24.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="603.8" y="590.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3,084 samples, 2.04%)</title><rect x="600.8" y="563.0" width="24.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.8" y="574.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3,084 samples, 2.04%)</title><rect x="600.8" y="547.0" width="24.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="603.8" y="558.0">j..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (22,653 samples, 15.00%)</title><rect x="624.9" y="787.0" width="177.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="627.9" y="798.0">java/lang/Iterable.forE..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$122/1025867662.accept (22,636 samples, 14.99%)</title><rect x="625.1" y="771.0" width="176.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.1" y="782.0">ru/mail/polis/dao/valau..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.lambda$cellIterator$4 (22,636 samples, 14.99%)</title><rect x="625.1" y="755.0" width="176.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="628.1" y="766.0">ru/mail/polis/dao/valau..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.iterator (22,636 samples, 14.99%)</title><rect x="625.1" y="739.0" width="176.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="628.1" y="750.0">ru/mail/polis/dao/valau..</text>
</g>
<g>
<title>ru.mail.polis.dao.valaubr.SSTable$1 (244 samples, 0.16%)</title><rect x="625.1" y="723.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="628.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.&lt;init&gt; (22,392 samples, 14.83%)</title><rect x="627.0" y="723.0" width="175.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="630.0" y="734.0">ru/mail/polis/dao/vala..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getPosition (22,392 samples, 14.83%)</title><rect x="627.0" y="707.0" width="175.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="630.0" y="718.0">ru/mail/polis/dao/vala..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (22,392 samples, 14.83%)</title><rect x="627.0" y="691.0" width="175.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="630.0" y="702.0">ru/mail/polis/dao/vala..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (18,254 samples, 12.09%)</title><rect x="627.0" y="675.0" width="142.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="630.0" y="686.0">java/nio/ByteBuffe..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8,829 samples, 5.85%)</title><rect x="627.0" y="659.0" width="69.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="630.0" y="670.0">java.ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9,425 samples, 6.24%)</title><rect x="696.0" y="659.0" width="73.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="699.0" y="670.0">java/nio..</text>
</g>
<g>
<title>byte[] (9,425 samples, 6.24%)</title><rect x="696.0" y="643.0" width="73.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="699.0" y="654.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (4,138 samples, 2.74%)</title><rect x="769.6" y="675.0" width="32.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="772.6" y="686.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4,138 samples, 2.74%)</title><rect x="769.6" y="659.0" width="32.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="772.6" y="670.0">ja..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4,138 samples, 2.74%)</title><rect x="769.6" y="643.0" width="32.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="772.6" y="654.0">ja..</text>
</g>
<g>
<title>byte[] (4,138 samples, 2.74%)</title><rect x="769.6" y="627.0" width="32.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="772.6" y="638.0">by..</text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (53 samples, 0.04%)</title><rect x="802.1" y="787.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="805.1" y="798.0"></text>
</g>
<g>
<title>java.lang.Object[] (53 samples, 0.04%)</title><rect x="802.1" y="771.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="805.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (788 samples, 0.52%)</title><rect x="802.5" y="787.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="805.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (770 samples, 0.51%)</title><rect x="802.7" y="771.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="805.7" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (770 samples, 0.51%)</title><rect x="802.7" y="755.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="805.7" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (321 samples, 0.21%)</title><rect x="802.7" y="739.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="805.7" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (321 samples, 0.21%)</title><rect x="802.7" y="723.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="805.7" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (321 samples, 0.21%)</title><rect x="802.7" y="707.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="805.7" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (321 samples, 0.21%)</title><rect x="802.7" y="691.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="805.7" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (321 samples, 0.21%)</title><rect x="802.7" y="675.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="805.7" y="686.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$112/174994326.compare (321 samples, 0.21%)</title><rect x="802.7" y="659.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="805.7" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (321 samples, 0.21%)</title><rect x="802.7" y="643.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="805.7" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$110/1907690653.compare (321 samples, 0.21%)</title><rect x="802.7" y="627.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="805.7" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (321 samples, 0.21%)</title><rect x="802.7" y="611.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="805.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$109/470151193.apply (321 samples, 0.21%)</title><rect x="802.7" y="595.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="805.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (321 samples, 0.21%)</title><rect x="802.7" y="579.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="805.7" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (321 samples, 0.21%)</title><rect x="802.7" y="563.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="805.7" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (321 samples, 0.21%)</title><rect x="802.7" y="547.0" width="2.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="805.7" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (449 samples, 0.30%)</title><rect x="805.2" y="739.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="808.2" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (449 samples, 0.30%)</title><rect x="805.2" y="723.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="808.2" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (449 samples, 0.30%)</title><rect x="805.2" y="707.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="808.2" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (449 samples, 0.30%)</title><rect x="805.2" y="691.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="808.2" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (449 samples, 0.30%)</title><rect x="805.2" y="675.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.2" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (449 samples, 0.30%)</title><rect x="805.2" y="659.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="808.2" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (242 samples, 0.16%)</title><rect x="805.2" y="643.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (242 samples, 0.16%)</title><rect x="805.2" y="627.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="808.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (242 samples, 0.16%)</title><rect x="805.2" y="611.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getCell (242 samples, 0.16%)</title><rect x="805.2" y="595.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="808.2" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (122 samples, 0.08%)</title><rect x="805.2" y="579.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.2" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (88 samples, 0.06%)</title><rect x="805.2" y="563.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="808.2" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (34 samples, 0.02%)</title><rect x="805.9" y="563.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="808.9" y="574.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.02%)</title><rect x="805.9" y="547.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="808.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (53 samples, 0.04%)</title><rect x="806.3" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="809.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (48 samples, 0.03%)</title><rect x="806.3" y="563.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="809.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (42 samples, 0.03%)</title><rect x="806.7" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="809.7" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (42 samples, 0.03%)</title><rect x="806.7" y="563.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="809.7" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$112/174994326.compare (207 samples, 0.14%)</title><rect x="807.1" y="643.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="810.1" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (207 samples, 0.14%)</title><rect x="807.1" y="627.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="810.1" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$110/1907690653.compare (207 samples, 0.14%)</title><rect x="807.1" y="611.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="810.1" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (207 samples, 0.14%)</title><rect x="807.1" y="595.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="810.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$109/470151193.apply (207 samples, 0.14%)</title><rect x="807.1" y="579.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="810.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (207 samples, 0.14%)</title><rect x="807.1" y="563.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="810.1" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (207 samples, 0.14%)</title><rect x="807.1" y="547.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="810.1" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (207 samples, 0.14%)</title><rect x="807.1" y="531.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="810.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.iterator (431 samples, 0.29%)</title><rect x="808.7" y="787.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="811.7" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (196 samples, 0.13%)</title><rect x="808.8" y="771.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="811.8" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (189 samples, 0.13%)</title><rect x="808.8" y="755.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="811.8" y="766.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (131 samples, 0.09%)</title><rect x="809.3" y="739.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="812.3" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (131 samples, 0.09%)</title><rect x="809.3" y="723.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="812.3" y="734.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (131 samples, 0.09%)</title><rect x="809.3" y="707.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="812.3" y="718.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (120 samples, 0.08%)</title><rect x="809.4" y="691.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="812.4" y="702.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (58 samples, 0.04%)</title><rect x="809.9" y="675.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="812.9" y="686.0"></text>
</g>
<g>
<title>java.lang.Object[] (58 samples, 0.04%)</title><rect x="809.9" y="659.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="812.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.iterator (162 samples, 0.11%)</title><rect x="810.8" y="771.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="813.8" y="782.0"></text>
</g>
<g>
<title>java/util/Collection.stream (56 samples, 0.04%)</title><rect x="810.8" y="755.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="813.8" y="766.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (32 samples, 0.02%)</title><rect x="811.0" y="739.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="814.0" y="750.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (32 samples, 0.02%)</title><rect x="811.0" y="723.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="814.0" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (52 samples, 0.03%)</title><rect x="811.4" y="755.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="814.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.spliterator (32 samples, 0.02%)</title><rect x="811.6" y="739.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="814.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (127 samples, 0.08%)</title><rect x="812.4" y="899.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="815.4" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (37 samples, 0.02%)</title><rect x="812.5" y="883.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="815.5" y="894.0"></text>
</g>
<g>
<title>java.lang.String[] (37 samples, 0.02%)</title><rect x="812.5" y="867.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="815.5" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (69 samples, 0.05%)</title><rect x="812.8" y="883.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="815.8" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (69 samples, 0.05%)</title><rect x="812.8" y="867.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="815.8" y="878.0"></text>
</g>
<g>
<title>char[] (39 samples, 0.03%)</title><rect x="812.8" y="851.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="815.8" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (60 samples, 0.04%)</title><rect x="813.3" y="899.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="816.3" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (60 samples, 0.04%)</title><rect x="813.3" y="883.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="816.3" y="894.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=65452] (34,284 samples, 22.71%)</title><rect x="813.8" y="979.0" width="268.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="816.8" y="990.0">[NIO Selector #3 tid=65452]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (34,284 samples, 22.71%)</title><rect x="813.8" y="963.0" width="268.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="816.8" y="974.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (34,284 samples, 22.71%)</title><rect x="813.8" y="947.0" width="268.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="816.8" y="958.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (34,284 samples, 22.71%)</title><rect x="813.8" y="931.0" width="268.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="816.8" y="942.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (34,284 samples, 22.71%)</title><rect x="813.8" y="915.0" width="268.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="816.8" y="926.0">one/nio/http/HttpSession.processHttp..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (34,081 samples, 22.57%)</title><rect x="813.8" y="899.0" width="266.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="816.8" y="910.0">one/nio/http/HttpSession.handleParse..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (34,081 samples, 22.57%)</title><rect x="813.8" y="883.0" width="266.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="816.8" y="894.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (34,055 samples, 22.55%)</title><rect x="813.8" y="867.0" width="266.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="816.8" y="878.0">RequestHandler0_get.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (79 samples, 0.05%)</title><rect x="813.8" y="851.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="816.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (79 samples, 0.05%)</title><rect x="813.8" y="835.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="816.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (53 samples, 0.04%)</title><rect x="813.8" y="819.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="816.8" y="830.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (53 samples, 0.04%)</title><rect x="813.8" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="816.8" y="814.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.04%)</title><rect x="813.8" y="787.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="816.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.get (33,946 samples, 22.48%)</title><rect x="814.7" y="851.0" width="265.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="817.7" y="862.0">ru/mail/polis/service/valaubr/HttpS..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (43 samples, 0.03%)</title><rect x="814.8" y="835.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="817.8" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (43 samples, 0.03%)</title><rect x="814.8" y="819.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="817.8" y="830.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (43 samples, 0.03%)</title><rect x="814.8" y="803.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="817.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (65 samples, 0.04%)</title><rect x="815.1" y="835.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="818.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (50 samples, 0.03%)</title><rect x="815.2" y="819.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="818.2" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (33,814 samples, 22.40%)</title><rect x="815.6" y="835.0" width="264.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="818.6" y="846.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (786 samples, 0.52%)</title><rect x="815.6" y="819.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="818.6" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (786 samples, 0.52%)</title><rect x="815.6" y="803.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="818.6" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (786 samples, 0.52%)</title><rect x="815.6" y="787.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="818.6" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (786 samples, 0.52%)</title><rect x="815.6" y="771.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="818.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (786 samples, 0.52%)</title><rect x="815.6" y="755.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="818.6" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (723 samples, 0.48%)</title><rect x="815.6" y="739.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="818.6" y="750.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (315 samples, 0.21%)</title><rect x="815.6" y="723.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="818.6" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (315 samples, 0.21%)</title><rect x="815.6" y="707.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="818.6" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (315 samples, 0.21%)</title><rect x="815.6" y="691.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="818.6" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (315 samples, 0.21%)</title><rect x="815.6" y="675.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="818.6" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (315 samples, 0.21%)</title><rect x="815.6" y="659.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="818.6" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$112/174994326.compare (315 samples, 0.21%)</title><rect x="815.6" y="643.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="818.6" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (315 samples, 0.21%)</title><rect x="815.6" y="627.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="818.6" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$110/1907690653.compare (315 samples, 0.21%)</title><rect x="815.6" y="611.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="818.6" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (315 samples, 0.21%)</title><rect x="815.6" y="595.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="818.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$109/470151193.apply (315 samples, 0.21%)</title><rect x="815.6" y="579.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="818.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (315 samples, 0.21%)</title><rect x="815.6" y="563.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="818.6" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (315 samples, 0.21%)</title><rect x="815.6" y="547.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="818.6" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (315 samples, 0.21%)</title><rect x="815.6" y="531.0" width="2.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="818.6" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (408 samples, 0.27%)</title><rect x="818.1" y="723.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="821.1" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (408 samples, 0.27%)</title><rect x="818.1" y="707.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="821.1" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (408 samples, 0.27%)</title><rect x="818.1" y="691.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="821.1" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (408 samples, 0.27%)</title><rect x="818.1" y="675.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="821.1" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (408 samples, 0.27%)</title><rect x="818.1" y="659.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="821.1" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (408 samples, 0.27%)</title><rect x="818.1" y="643.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="821.1" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (228 samples, 0.15%)</title><rect x="818.1" y="627.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="821.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (228 samples, 0.15%)</title><rect x="818.1" y="611.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="821.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (228 samples, 0.15%)</title><rect x="818.1" y="595.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="821.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getCell (228 samples, 0.15%)</title><rect x="818.1" y="579.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="821.1" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (102 samples, 0.07%)</title><rect x="818.1" y="563.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="821.1" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (65 samples, 0.04%)</title><rect x="818.1" y="547.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="821.1" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (37 samples, 0.02%)</title><rect x="818.6" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="821.6" y="558.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.02%)</title><rect x="818.6" y="531.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="821.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (68 samples, 0.05%)</title><rect x="819.1" y="563.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.1" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (56 samples, 0.04%)</title><rect x="819.1" y="547.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="822.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (35 samples, 0.02%)</title><rect x="819.6" y="563.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="822.6" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (35 samples, 0.02%)</title><rect x="819.6" y="547.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="822.6" y="558.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$112/174994326.compare (180 samples, 0.12%)</title><rect x="819.9" y="627.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.9" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (180 samples, 0.12%)</title><rect x="819.9" y="611.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="822.9" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$110/1907690653.compare (180 samples, 0.12%)</title><rect x="819.9" y="595.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="822.9" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (180 samples, 0.12%)</title><rect x="819.9" y="579.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="822.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$109/470151193.apply (180 samples, 0.12%)</title><rect x="819.9" y="563.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="822.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (180 samples, 0.12%)</title><rect x="819.9" y="547.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="822.9" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (180 samples, 0.12%)</title><rect x="819.9" y="531.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="822.9" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (180 samples, 0.12%)</title><rect x="819.9" y="515.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="822.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$123/139855784.apply (63 samples, 0.04%)</title><rect x="821.3" y="739.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="824.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (63 samples, 0.04%)</title><rect x="821.3" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="824.3" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (63 samples, 0.04%)</title><rect x="821.3" y="707.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="824.3" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (63 samples, 0.04%)</title><rect x="821.3" y="691.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="824.3" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (55 samples, 0.04%)</title><rect x="821.8" y="819.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="824.8" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (55 samples, 0.04%)</title><rect x="821.8" y="803.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="824.8" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$127/1089760466.apply (55 samples, 0.04%)</title><rect x="821.8" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="824.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.lambda$iterator$3 (55 samples, 0.04%)</title><rect x="821.8" y="771.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.iterator (32,944 samples, 21.82%)</title><rect x="822.4" y="819.0" width="257.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="825.4" y="830.0">ru/mail/polis/dao/valaubr/LsmDAO.i..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.cellIterator (32,906 samples, 21.79%)</title><rect x="822.7" y="803.0" width="257.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="825.7" y="814.0">ru/mail/polis/dao/valaubr/LsmDAO.c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (8,957 samples, 5.93%)</title><rect x="822.7" y="787.0" width="70.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="825.7" y="798.0">com/goog..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8,944 samples, 5.92%)</title><rect x="822.8" y="771.0" width="69.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="825.8" y="782.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (71 samples, 0.05%)</title><rect x="823.0" y="755.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="826.0" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (71 samples, 0.05%)</title><rect x="823.0" y="739.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="826.0" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (71 samples, 0.05%)</title><rect x="823.0" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="826.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (71 samples, 0.05%)</title><rect x="823.0" y="707.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="826.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool$$Lambda$113/1045887463.apply (58 samples, 0.04%)</title><rect x="823.1" y="691.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (58 samples, 0.04%)</title><rect x="823.1" y="675.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="826.1" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (58 samples, 0.04%)</title><rect x="823.1" y="659.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="826.1" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (58 samples, 0.04%)</title><rect x="823.1" y="643.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="826.1" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (270 samples, 0.18%)</title><rect x="823.5" y="755.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="826.5" y="766.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (270 samples, 0.18%)</title><rect x="823.5" y="739.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="826.5" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8,555 samples, 5.67%)</title><rect x="825.9" y="755.0" width="66.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="828.9" y="766.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8,555 samples, 5.67%)</title><rect x="825.9" y="739.0" width="66.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="828.9" y="750.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (122 samples, 0.08%)</title><rect x="825.9" y="723.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.9" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (122 samples, 0.08%)</title><rect x="825.9" y="707.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="828.9" y="718.0"></text>
</g>
<g>
<title>java.lang.Object[] (122 samples, 0.08%)</title><rect x="825.9" y="691.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="828.9" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8,433 samples, 5.59%)</title><rect x="826.8" y="723.0" width="65.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="829.8" y="734.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8,433 samples, 5.59%)</title><rect x="826.8" y="707.0" width="65.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="829.8" y="718.0">java/ut..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,433 samples, 5.59%)</title><rect x="826.8" y="691.0" width="65.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="829.8" y="702.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,433 samples, 5.59%)</title><rect x="826.8" y="675.0" width="65.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="829.8" y="686.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5,324 samples, 3.53%)</title><rect x="826.8" y="659.0" width="41.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="829.8" y="670.0">com..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (5,324 samples, 3.53%)</title><rect x="826.8" y="643.0" width="41.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="829.8" y="654.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (5,324 samples, 3.53%)</title><rect x="826.8" y="627.0" width="41.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="829.8" y="638.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getCell (5,324 samples, 3.53%)</title><rect x="826.8" y="611.0" width="41.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="829.8" y="622.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,426 samples, 1.61%)</title><rect x="826.8" y="595.0" width="19.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="829.8" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,643 samples, 1.09%)</title><rect x="826.8" y="579.0" width="12.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="829.8" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (783 samples, 0.52%)</title><rect x="839.7" y="579.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="842.7" y="590.0"></text>
</g>
<g>
<title>byte[] (783 samples, 0.52%)</title><rect x="839.7" y="563.0" width="6.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="842.7" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.valaubr.Cell (292 samples, 0.19%)</title><rect x="845.8" y="595.0" width="2.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="848.8" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.valaubr.Value (318 samples, 0.21%)</title><rect x="848.1" y="595.0" width="2.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="851.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (1,464 samples, 0.97%)</title><rect x="850.5" y="595.0" width="11.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="853.5" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,205 samples, 0.80%)</title><rect x="850.5" y="579.0" width="9.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="853.5" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (576 samples, 0.38%)</title><rect x="850.5" y="563.0" width="4.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="853.5" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (629 samples, 0.42%)</title><rect x="855.0" y="563.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="858.0" y="574.0"></text>
</g>
<g>
<title>byte[] (629 samples, 0.42%)</title><rect x="855.0" y="547.0" width="5.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="858.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (259 samples, 0.17%)</title><rect x="860.0" y="579.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="863.0" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (259 samples, 0.17%)</title><rect x="860.0" y="563.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="863.0" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (259 samples, 0.17%)</title><rect x="860.0" y="547.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="863.0" y="558.0"></text>
</g>
<g>
<title>byte[] (259 samples, 0.17%)</title><rect x="860.0" y="531.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="863.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (824 samples, 0.55%)</title><rect x="862.0" y="595.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="865.0" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (824 samples, 0.55%)</title><rect x="862.0" y="579.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="865.0" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (567 samples, 0.38%)</title><rect x="862.0" y="563.0" width="4.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="865.0" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (257 samples, 0.17%)</title><rect x="866.4" y="563.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="869.4" y="574.0"></text>
</g>
<g>
<title>byte[] (257 samples, 0.17%)</title><rect x="866.4" y="547.0" width="2.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="869.4" y="558.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$112/174994326.compare (3,109 samples, 2.06%)</title><rect x="868.4" y="659.0" width="24.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="871.4" y="670.0">j..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3,109 samples, 2.06%)</title><rect x="868.4" y="643.0" width="24.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="871.4" y="654.0">j..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$110/1907690653.compare (3,109 samples, 2.06%)</title><rect x="868.4" y="627.0" width="24.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="871.4" y="638.0">j..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3,109 samples, 2.06%)</title><rect x="868.4" y="611.0" width="24.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="871.4" y="622.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$109/470151193.apply (3,109 samples, 2.06%)</title><rect x="868.4" y="595.0" width="24.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="871.4" y="606.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (3,109 samples, 2.06%)</title><rect x="868.4" y="579.0" width="24.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="871.4" y="590.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3,109 samples, 2.06%)</title><rect x="868.4" y="563.0" width="24.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="871.4" y="574.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3,109 samples, 2.06%)</title><rect x="868.4" y="547.0" width="24.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="871.4" y="558.0">j..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (22,658 samples, 15.01%)</title><rect x="892.8" y="787.0" width="177.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="895.8" y="798.0">java/lang/Iterable.forE..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$122/1025867662.accept (22,648 samples, 15.00%)</title><rect x="892.9" y="771.0" width="177.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="895.9" y="782.0">ru/mail/polis/dao/valau..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.lambda$cellIterator$4 (22,648 samples, 15.00%)</title><rect x="892.9" y="755.0" width="177.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="895.9" y="766.0">ru/mail/polis/dao/valau..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.iterator (22,648 samples, 15.00%)</title><rect x="892.9" y="739.0" width="177.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="895.9" y="750.0">ru/mail/polis/dao/valau..</text>
</g>
<g>
<title>ru.mail.polis.dao.valaubr.SSTable$1 (262 samples, 0.17%)</title><rect x="892.9" y="723.0" width="2.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="895.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.&lt;init&gt; (22,386 samples, 14.83%)</title><rect x="894.9" y="723.0" width="175.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="897.9" y="734.0">ru/mail/polis/dao/vala..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getPosition (22,386 samples, 14.83%)</title><rect x="894.9" y="707.0" width="175.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="897.9" y="718.0">ru/mail/polis/dao/vala..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (22,386 samples, 14.83%)</title><rect x="894.9" y="691.0" width="175.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="897.9" y="702.0">ru/mail/polis/dao/vala..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (18,163 samples, 12.03%)</title><rect x="894.9" y="675.0" width="142.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="897.9" y="686.0">java/nio/ByteBuffe..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8,900 samples, 5.89%)</title><rect x="894.9" y="659.0" width="69.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="897.9" y="670.0">java.ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9,263 samples, 6.13%)</title><rect x="964.5" y="659.0" width="72.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="967.5" y="670.0">java/nio..</text>
</g>
<g>
<title>byte[] (9,263 samples, 6.13%)</title><rect x="964.5" y="643.0" width="72.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="967.5" y="654.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (4,223 samples, 2.80%)</title><rect x="1036.9" y="675.0" width="33.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1039.9" y="686.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4,223 samples, 2.80%)</title><rect x="1036.9" y="659.0" width="33.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1039.9" y="670.0">ja..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4,223 samples, 2.80%)</title><rect x="1036.9" y="643.0" width="33.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1039.9" y="654.0">ja..</text>
</g>
<g>
<title>byte[] (4,223 samples, 2.80%)</title><rect x="1036.9" y="627.0" width="33.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1039.9" y="638.0">by..</text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (56 samples, 0.04%)</title><rect x="1070.0" y="787.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1073.0" y="798.0"></text>
</g>
<g>
<title>java.lang.Object[] (56 samples, 0.04%)</title><rect x="1070.0" y="771.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1073.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (784 samples, 0.52%)</title><rect x="1070.4" y="787.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1073.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (777 samples, 0.51%)</title><rect x="1070.5" y="771.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1073.5" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (777 samples, 0.51%)</title><rect x="1070.5" y="755.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1073.5" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (338 samples, 0.22%)</title><rect x="1070.5" y="739.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1073.5" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (338 samples, 0.22%)</title><rect x="1070.5" y="723.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1073.5" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (338 samples, 0.22%)</title><rect x="1070.5" y="707.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1073.5" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (338 samples, 0.22%)</title><rect x="1070.5" y="691.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1073.5" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (338 samples, 0.22%)</title><rect x="1070.5" y="675.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1073.5" y="686.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$112/174994326.compare (338 samples, 0.22%)</title><rect x="1070.5" y="659.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1073.5" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (338 samples, 0.22%)</title><rect x="1070.5" y="643.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1073.5" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$110/1907690653.compare (338 samples, 0.22%)</title><rect x="1070.5" y="627.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1073.5" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (338 samples, 0.22%)</title><rect x="1070.5" y="611.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1073.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$109/470151193.apply (338 samples, 0.22%)</title><rect x="1070.5" y="595.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1073.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (338 samples, 0.22%)</title><rect x="1070.5" y="579.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1073.5" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (338 samples, 0.22%)</title><rect x="1070.5" y="563.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1073.5" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (338 samples, 0.22%)</title><rect x="1070.5" y="547.0" width="2.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1073.5" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (439 samples, 0.29%)</title><rect x="1073.1" y="739.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1076.1" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (439 samples, 0.29%)</title><rect x="1073.1" y="723.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1076.1" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (439 samples, 0.29%)</title><rect x="1073.1" y="707.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1076.1" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (439 samples, 0.29%)</title><rect x="1073.1" y="691.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1076.1" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (439 samples, 0.29%)</title><rect x="1073.1" y="675.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1076.1" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (439 samples, 0.29%)</title><rect x="1073.1" y="659.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1076.1" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (250 samples, 0.17%)</title><rect x="1073.1" y="643.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1076.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (250 samples, 0.17%)</title><rect x="1073.1" y="627.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1076.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (250 samples, 0.17%)</title><rect x="1073.1" y="611.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1076.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getCell (250 samples, 0.17%)</title><rect x="1073.1" y="595.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1076.1" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (124 samples, 0.08%)</title><rect x="1073.1" y="579.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1076.1" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (81 samples, 0.05%)</title><rect x="1073.1" y="563.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1076.1" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (43 samples, 0.03%)</title><rect x="1073.8" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1076.8" y="574.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.03%)</title><rect x="1073.8" y="547.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1076.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (65 samples, 0.04%)</title><rect x="1074.3" y="579.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1077.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (53 samples, 0.04%)</title><rect x="1074.3" y="563.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1077.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (39 samples, 0.03%)</title><rect x="1074.8" y="579.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1077.8" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (39 samples, 0.03%)</title><rect x="1074.8" y="563.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1077.8" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$112/174994326.compare (189 samples, 0.13%)</title><rect x="1075.1" y="643.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1078.1" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (189 samples, 0.13%)</title><rect x="1075.1" y="627.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1078.1" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$110/1907690653.compare (189 samples, 0.13%)</title><rect x="1075.1" y="611.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1078.1" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (189 samples, 0.13%)</title><rect x="1075.1" y="595.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1078.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$109/470151193.apply (189 samples, 0.13%)</title><rect x="1075.1" y="579.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1078.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (189 samples, 0.13%)</title><rect x="1075.1" y="563.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1078.1" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (189 samples, 0.13%)</title><rect x="1075.1" y="547.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1078.1" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (189 samples, 0.13%)</title><rect x="1075.1" y="531.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1078.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.iterator (426 samples, 0.28%)</title><rect x="1076.6" y="787.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1079.6" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (177 samples, 0.12%)</title><rect x="1076.8" y="771.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1079.8" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (170 samples, 0.11%)</title><rect x="1076.8" y="755.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1079.8" y="766.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (112 samples, 0.07%)</title><rect x="1077.3" y="739.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1080.3" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (112 samples, 0.07%)</title><rect x="1077.3" y="723.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1080.3" y="734.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (112 samples, 0.07%)</title><rect x="1077.3" y="707.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1080.3" y="718.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (102 samples, 0.07%)</title><rect x="1077.4" y="691.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1080.4" y="702.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (53 samples, 0.04%)</title><rect x="1077.7" y="675.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1080.7" y="686.0"></text>
</g>
<g>
<title>java.lang.Object[] (53 samples, 0.04%)</title><rect x="1077.7" y="659.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1080.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.iterator (157 samples, 0.10%)</title><rect x="1078.7" y="771.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1081.7" y="782.0"></text>
</g>
<g>
<title>java/util/Collection.stream (51 samples, 0.03%)</title><rect x="1078.7" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1081.7" y="766.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (35 samples, 0.02%)</title><rect x="1078.8" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1081.8" y="750.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (35 samples, 0.02%)</title><rect x="1078.8" y="723.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1081.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (33 samples, 0.02%)</title><rect x="1079.1" y="755.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1082.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (33 samples, 0.02%)</title><rect x="1079.1" y="739.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1082.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (33 samples, 0.02%)</title><rect x="1079.1" y="723.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1082.1" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (33 samples, 0.02%)</title><rect x="1079.1" y="707.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1082.1" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.iterator (36 samples, 0.02%)</title><rect x="1079.4" y="755.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1082.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (152 samples, 0.10%)</title><rect x="1080.2" y="899.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1083.2" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (44 samples, 0.03%)</title><rect x="1080.3" y="883.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1083.3" y="894.0"></text>
</g>
<g>
<title>java.lang.String[] (44 samples, 0.03%)</title><rect x="1080.3" y="867.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1083.3" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (88 samples, 0.06%)</title><rect x="1080.7" y="883.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1083.7" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (88 samples, 0.06%)</title><rect x="1080.7" y="867.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1083.7" y="878.0"></text>
</g>
<g>
<title>char[] (52 samples, 0.03%)</title><rect x="1080.7" y="851.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1083.7" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (51 samples, 0.03%)</title><rect x="1081.4" y="899.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1084.4" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (51 samples, 0.03%)</title><rect x="1081.4" y="883.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1084.4" y="894.0"></text>
</g>
<g>
<title>[RMI TCP Connection(5)-127.0.0.1 tid=66004] (13,850 samples, 9.17%)</title><rect x="1081.8" y="979.0" width="108.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1084.8" y="990.0">[RMI TCP Conn..</text>
</g>
<g>
<title>java/lang/Thread.run (13,850 samples, 9.17%)</title><rect x="1081.8" y="963.0" width="108.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1084.8" y="974.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (13,850 samples, 9.17%)</title><rect x="1081.8" y="947.0" width="108.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1084.8" y="958.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (13,850 samples, 9.17%)</title><rect x="1081.8" y="931.0" width="108.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1084.8" y="942.0">java/util/con..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (13,850 samples, 9.17%)</title><rect x="1081.8" y="915.0" width="108.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1084.8" y="926.0">sun/rmi/trans..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (13,850 samples, 9.17%)</title><rect x="1081.8" y="899.0" width="108.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1084.8" y="910.0">java/security..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$92/1211696232.run (13,850 samples, 9.17%)</title><rect x="1081.8" y="883.0" width="108.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1084.8" y="894.0">sun/rmi/trans..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (13,850 samples, 9.17%)</title><rect x="1081.8" y="867.0" width="108.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1084.8" y="878.0">sun/rmi/trans..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (13,850 samples, 9.17%)</title><rect x="1081.8" y="851.0" width="108.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1084.8" y="862.0">sun/rmi/trans..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (13,850 samples, 9.17%)</title><rect x="1081.8" y="835.0" width="108.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1084.8" y="846.0">sun/rmi/trans..</text>
</g>
<g>
<title>java.io.DataOutputStream (227 samples, 0.15%)</title><rect x="1081.8" y="819.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1084.8" y="830.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (13,623 samples, 9.02%)</title><rect x="1083.5" y="819.0" width="106.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1086.5" y="830.0">sun/rmi/trans..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (11,356 samples, 7.52%)</title><rect x="1083.5" y="803.0" width="88.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1086.5" y="814.0">java/secur..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (11,356 samples, 7.52%)</title><rect x="1083.5" y="787.0" width="88.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1086.5" y="798.0">sun/rmi/tr..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (11,356 samples, 7.52%)</title><rect x="1083.5" y="771.0" width="88.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1086.5" y="782.0">sun/rmi/tr..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (11,356 samples, 7.52%)</title><rect x="1083.5" y="755.0" width="88.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1086.5" y="766.0">sun/rmi/se..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5,456 samples, 3.61%)</title><rect x="1083.5" y="739.0" width="42.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1086.5" y="750.0">java..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5,456 samples, 3.61%)</title><rect x="1083.5" y="723.0" width="42.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1086.5" y="734.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (5,452 samples, 3.61%)</title><rect x="1083.5" y="707.0" width="42.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1086.5" y="718.0">jdk/..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (5,452 samples, 3.61%)</title><rect x="1083.5" y="691.0" width="42.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1086.5" y="702.0">java..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (4,170 samples, 2.76%)</title><rect x="1083.5" y="675.0" width="32.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1086.5" y="686.0">ja..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (4,166 samples, 2.76%)</title><rect x="1083.6" y="659.0" width="32.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1086.6" y="670.0">ja..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (4,166 samples, 2.76%)</title><rect x="1083.6" y="643.0" width="32.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1086.6" y="654.0">ja..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (4,166 samples, 2.76%)</title><rect x="1083.6" y="627.0" width="32.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1086.6" y="638.0">co..</text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (4,166 samples, 2.76%)</title><rect x="1083.6" y="611.0" width="32.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1086.6" y="622.0">co..</text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (4,155 samples, 2.75%)</title><rect x="1083.7" y="595.0" width="32.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1086.7" y="606.0">ja..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (4,155 samples, 2.75%)</title><rect x="1083.7" y="579.0" width="32.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1086.7" y="590.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (4,155 samples, 2.75%)</title><rect x="1083.7" y="563.0" width="32.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1086.7" y="574.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (4,155 samples, 2.75%)</title><rect x="1083.7" y="547.0" width="32.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1086.7" y="558.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (4,155 samples, 2.75%)</title><rect x="1083.7" y="531.0" width="32.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1086.7" y="542.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (4,155 samples, 2.75%)</title><rect x="1083.7" y="515.0" width="32.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1086.7" y="526.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (4,155 samples, 2.75%)</title><rect x="1083.7" y="499.0" width="32.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1086.7" y="510.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (4,155 samples, 2.75%)</title><rect x="1083.7" y="483.0" width="32.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1086.7" y="494.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (3,785 samples, 2.51%)</title><rect x="1083.7" y="467.0" width="29.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1086.7" y="478.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (3,785 samples, 2.51%)</title><rect x="1083.7" y="451.0" width="29.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1086.7" y="462.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (3,785 samples, 2.51%)</title><rect x="1083.7" y="435.0" width="29.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1086.7" y="446.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (3,785 samples, 2.51%)</title><rect x="1083.7" y="419.0" width="29.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1086.7" y="430.0">co..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1,539 samples, 1.02%)</title><rect x="1083.7" y="403.0" width="12.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1086.7" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (1,045 samples, 0.69%)</title><rect x="1083.7" y="387.0" width="8.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1086.7" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1,041 samples, 0.69%)</title><rect x="1083.7" y="371.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1086.7" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (1,041 samples, 0.69%)</title><rect x="1083.7" y="355.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1086.7" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (252 samples, 0.17%)</title><rect x="1083.7" y="339.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1086.7" y="350.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (380 samples, 0.25%)</title><rect x="1085.6" y="339.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1088.6" y="350.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (373 samples, 0.25%)</title><rect x="1085.7" y="323.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1088.7" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (47 samples, 0.03%)</title><rect x="1085.7" y="307.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1088.7" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (326 samples, 0.22%)</title><rect x="1086.1" y="307.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1089.1" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (326 samples, 0.22%)</title><rect x="1086.1" y="291.0" width="2.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1089.1" y="302.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (407 samples, 0.27%)</title><rect x="1088.6" y="339.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1091.6" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (407 samples, 0.27%)</title><rect x="1088.6" y="323.0" width="3.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1091.6" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (494 samples, 0.33%)</title><rect x="1091.8" y="387.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1094.8" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (122 samples, 0.08%)</title><rect x="1091.8" y="371.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1094.8" y="382.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (225 samples, 0.15%)</title><rect x="1092.8" y="371.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1095.8" y="382.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (210 samples, 0.14%)</title><rect x="1092.8" y="355.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1095.8" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (76 samples, 0.05%)</title><rect x="1092.8" y="339.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1095.8" y="350.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (76 samples, 0.05%)</title><rect x="1092.8" y="323.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1095.8" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (76 samples, 0.05%)</title><rect x="1092.8" y="307.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1095.8" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (76 samples, 0.05%)</title><rect x="1092.8" y="291.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1095.8" y="302.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (76 samples, 0.05%)</title><rect x="1092.8" y="275.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1095.8" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySet (134 samples, 0.09%)</title><rect x="1093.4" y="339.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1096.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (134 samples, 0.09%)</title><rect x="1093.4" y="323.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1096.4" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (134 samples, 0.09%)</title><rect x="1093.4" y="307.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1096.4" y="318.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (139 samples, 0.09%)</title><rect x="1094.6" y="371.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1097.6" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (139 samples, 0.09%)</title><rect x="1094.6" y="355.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1097.6" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (81 samples, 0.05%)</title><rect x="1095.7" y="403.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1098.7" y="414.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (127 samples, 0.08%)</title><rect x="1096.4" y="403.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1099.4" y="414.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1,131 samples, 0.75%)</title><rect x="1097.3" y="403.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1100.3" y="414.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (1,121 samples, 0.74%)</title><rect x="1097.4" y="387.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1100.4" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,110 samples, 0.74%)</title><rect x="1097.5" y="371.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1100.5" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,110 samples, 0.74%)</title><rect x="1097.5" y="355.0" width="8.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1100.5" y="366.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (902 samples, 0.60%)</title><rect x="1106.2" y="403.0" width="7.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1109.2" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (858 samples, 0.57%)</title><rect x="1106.2" y="387.0" width="6.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1109.2" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (44 samples, 0.03%)</title><rect x="1112.9" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1115.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (44 samples, 0.03%)</title><rect x="1112.9" y="371.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1115.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (44 samples, 0.03%)</title><rect x="1112.9" y="355.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1115.9" y="366.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (44 samples, 0.03%)</title><rect x="1112.9" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1115.9" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (44 samples, 0.03%)</title><rect x="1112.9" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1115.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (44 samples, 0.03%)</title><rect x="1112.9" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1115.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor15.invoke (32 samples, 0.02%)</title><rect x="1112.9" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1115.9" y="302.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getStackTrace (32 samples, 0.02%)</title><rect x="1112.9" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1115.9" y="286.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement[] (32 samples, 0.02%)</title><rect x="1112.9" y="259.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1115.9" y="270.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (370 samples, 0.25%)</title><rect x="1113.2" y="467.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1116.2" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (370 samples, 0.25%)</title><rect x="1113.2" y="451.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1116.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (370 samples, 0.25%)</title><rect x="1113.2" y="435.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1116.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (370 samples, 0.25%)</title><rect x="1113.2" y="419.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1116.2" y="430.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (370 samples, 0.25%)</title><rect x="1113.2" y="403.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1116.2" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (370 samples, 0.25%)</title><rect x="1113.2" y="387.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1116.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (370 samples, 0.25%)</title><rect x="1113.2" y="371.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1116.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (370 samples, 0.25%)</title><rect x="1113.2" y="355.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1116.2" y="366.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (370 samples, 0.25%)</title><rect x="1113.2" y="339.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1116.2" y="350.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (370 samples, 0.25%)</title><rect x="1113.2" y="323.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1116.2" y="334.0"></text>
</g>
<g>
<title>java.lang.management.ThreadInfo (173 samples, 0.11%)</title><rect x="1113.2" y="307.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1116.2" y="318.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.&lt;init&gt; (187 samples, 0.12%)</title><rect x="1114.7" y="307.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1117.7" y="318.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.initialize (187 samples, 0.12%)</title><rect x="1114.7" y="291.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1117.7" y="302.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (138 samples, 0.09%)</title><rect x="1114.7" y="275.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1117.7" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (138 samples, 0.09%)</title><rect x="1114.7" y="259.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1117.7" y="270.0"></text>
</g>
<g>
<title>byte[] (138 samples, 0.09%)</title><rect x="1114.7" y="243.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1117.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.03%)</title><rect x="1115.7" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1118.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (49 samples, 0.03%)</title><rect x="1115.7" y="259.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1118.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1010931249.invoke (49 samples, 0.03%)</title><rect x="1115.7" y="243.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1118.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.03%)</title><rect x="1115.7" y="227.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1118.7" y="238.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (43 samples, 0.03%)</title><rect x="1115.7" y="211.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1118.7" y="222.0"></text>
</g>
<g>
<title>java.lang.String (43 samples, 0.03%)</title><rect x="1115.7" y="195.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1118.7" y="206.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getClassLoaderFor (80 samples, 0.05%)</title><rect x="1116.1" y="675.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1119.1" y="686.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.withPermissions (80 samples, 0.05%)</title><rect x="1116.1" y="659.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1119.1" y="670.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain (38 samples, 0.03%)</title><rect x="1116.1" y="643.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1119.1" y="654.0"></text>
</g>
<g>
<title>java/security/Permissions.add (38 samples, 0.03%)</title><rect x="1116.4" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1119.4" y="654.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (1,202 samples, 0.80%)</title><rect x="1116.7" y="675.0" width="9.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1119.7" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (443 samples, 0.29%)</title><rect x="1116.7" y="659.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1119.7" y="670.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (443 samples, 0.29%)</title><rect x="1116.7" y="643.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1119.7" y="654.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (443 samples, 0.29%)</title><rect x="1116.7" y="627.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1119.7" y="638.0"></text>
</g>
<g>
<title>com.sun.jmx.remote.util.OrderClassLoaders (93 samples, 0.06%)</title><rect x="1116.8" y="611.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1119.8" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/util/OrderClassLoaders.&lt;init&gt; (134 samples, 0.09%)</title><rect x="1117.5" y="611.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1120.5" y="622.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (134 samples, 0.09%)</title><rect x="1117.5" y="595.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1120.5" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (134 samples, 0.09%)</title><rect x="1117.5" y="579.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1120.5" y="590.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (93 samples, 0.06%)</title><rect x="1117.8" y="563.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1120.8" y="574.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (93 samples, 0.06%)</title><rect x="1117.8" y="547.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1120.8" y="558.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (93 samples, 0.06%)</title><rect x="1117.8" y="531.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1120.8" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (93 samples, 0.06%)</title><rect x="1117.8" y="515.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1120.8" y="526.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader.&lt;init&gt; (212 samples, 0.14%)</title><rect x="1118.6" y="611.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1121.6" y="622.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (90 samples, 0.06%)</title><rect x="1118.6" y="595.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1121.6" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (90 samples, 0.06%)</title><rect x="1118.6" y="579.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1121.6" y="590.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (84 samples, 0.06%)</title><rect x="1118.6" y="563.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1121.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (42 samples, 0.03%)</title><rect x="1118.6" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1121.6" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (42 samples, 0.03%)</title><rect x="1118.6" y="531.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1121.6" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (42 samples, 0.03%)</title><rect x="1118.6" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1121.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (42 samples, 0.03%)</title><rect x="1118.6" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1121.6" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (42 samples, 0.03%)</title><rect x="1118.9" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1121.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (42 samples, 0.03%)</title><rect x="1118.9" y="531.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1121.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (42 samples, 0.03%)</title><rect x="1118.9" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1121.9" y="526.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.03%)</title><rect x="1118.9" y="499.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1121.9" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader$ClassLoaderWrapper.&lt;init&gt; (118 samples, 0.08%)</title><rect x="1119.3" y="595.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1122.3" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (118 samples, 0.08%)</title><rect x="1119.3" y="579.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1122.3" y="590.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (118 samples, 0.08%)</title><rect x="1119.3" y="563.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1122.3" y="574.0"></text>
</g>
<g>
<title>java.util.Hashtable (92 samples, 0.06%)</title><rect x="1119.3" y="547.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1122.3" y="558.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (759 samples, 0.50%)</title><rect x="1120.2" y="659.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1123.2" y="670.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (759 samples, 0.50%)</title><rect x="1120.2" y="643.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1123.2" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (336 samples, 0.22%)</title><rect x="1120.2" y="627.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1123.2" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (336 samples, 0.22%)</title><rect x="1120.2" y="611.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1123.2" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (336 samples, 0.22%)</title><rect x="1120.2" y="595.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1123.2" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (336 samples, 0.22%)</title><rect x="1120.2" y="579.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1123.2" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (336 samples, 0.22%)</title><rect x="1120.2" y="563.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1123.2" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (336 samples, 0.22%)</title><rect x="1120.2" y="547.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1123.2" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (336 samples, 0.22%)</title><rect x="1120.2" y="531.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1123.2" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (336 samples, 0.22%)</title><rect x="1120.2" y="515.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1123.2" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (336 samples, 0.22%)</title><rect x="1120.2" y="499.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1123.2" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (336 samples, 0.22%)</title><rect x="1120.2" y="483.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1123.2" y="494.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (115 samples, 0.08%)</title><rect x="1120.2" y="467.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1123.2" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (221 samples, 0.15%)</title><rect x="1121.1" y="467.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1124.1" y="478.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (135 samples, 0.09%)</title><rect x="1121.1" y="451.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1124.1" y="462.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (41 samples, 0.03%)</title><rect x="1122.2" y="451.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1125.2" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (45 samples, 0.03%)</title><rect x="1122.5" y="451.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1125.5" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (45 samples, 0.03%)</title><rect x="1122.5" y="435.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1125.5" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (45 samples, 0.03%)</title><rect x="1122.5" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1125.5" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (45 samples, 0.03%)</title><rect x="1122.5" y="403.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1125.5" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (41 samples, 0.03%)</title><rect x="1122.5" y="387.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1125.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (41 samples, 0.03%)</title><rect x="1122.5" y="371.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1125.5" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (41 samples, 0.03%)</title><rect x="1122.5" y="355.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1125.5" y="366.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.03%)</title><rect x="1122.5" y="339.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1125.5" y="350.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject$MarshalledObjectInputStream.&lt;init&gt; (423 samples, 0.28%)</title><rect x="1122.8" y="627.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1125.8" y="638.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (423 samples, 0.28%)</title><rect x="1122.8" y="611.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1125.8" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (423 samples, 0.28%)</title><rect x="1122.8" y="595.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1125.8" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (358 samples, 0.24%)</title><rect x="1123.0" y="579.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1126.0" y="590.0"></text>
</g>
<g>
<title>byte[] (67 samples, 0.04%)</title><rect x="1123.0" y="563.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1126.0" y="574.0"></text>
</g>
<g>
<title>char[] (116 samples, 0.08%)</title><rect x="1123.5" y="563.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1126.5" y="574.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (175 samples, 0.12%)</title><rect x="1124.4" y="563.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1127.4" y="574.0"></text>
</g>
<g>
<title>char[] (111 samples, 0.07%)</title><rect x="1124.6" y="547.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1127.6" y="558.0"></text>
</g>
<g>
<title>char[] (41 samples, 0.03%)</title><rect x="1125.5" y="547.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1128.5" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (45 samples, 0.03%)</title><rect x="1125.8" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1128.8" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (41 samples, 0.03%)</title><rect x="1125.8" y="563.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1128.8" y="574.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (2,322 samples, 1.54%)</title><rect x="1126.2" y="739.0" width="18.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1129.2" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2,322 samples, 1.54%)</title><rect x="1126.2" y="723.0" width="18.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1129.2" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2,322 samples, 1.54%)</title><rect x="1126.2" y="707.0" width="18.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1129.2" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (2,322 samples, 1.54%)</title><rect x="1126.2" y="691.0" width="18.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1129.2" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2,322 samples, 1.54%)</title><rect x="1126.2" y="675.0" width="18.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1129.2" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2,281 samples, 1.51%)</title><rect x="1126.2" y="659.0" width="17.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1129.2" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2,268 samples, 1.50%)</title><rect x="1126.3" y="643.0" width="17.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1129.3" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2,268 samples, 1.50%)</title><rect x="1126.3" y="627.0" width="17.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1129.3" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (55 samples, 0.04%)</title><rect x="1126.3" y="611.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1129.3" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2,213 samples, 1.47%)</title><rect x="1126.7" y="611.0" width="17.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1129.7" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2,180 samples, 1.44%)</title><rect x="1126.7" y="595.0" width="17.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1129.7" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2,158 samples, 1.43%)</title><rect x="1126.9" y="579.0" width="16.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1129.9" y="590.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (47 samples, 0.03%)</title><rect x="1126.9" y="563.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1129.9" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (399 samples, 0.26%)</title><rect x="1127.2" y="563.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1130.2" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (399 samples, 0.26%)</title><rect x="1127.2" y="547.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1130.2" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (399 samples, 0.26%)</title><rect x="1127.2" y="531.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1130.2" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (399 samples, 0.26%)</title><rect x="1127.2" y="515.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1130.2" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (393 samples, 0.26%)</title><rect x="1127.3" y="499.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1130.3" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (393 samples, 0.26%)</title><rect x="1127.3" y="483.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1130.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (393 samples, 0.26%)</title><rect x="1127.3" y="467.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1130.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (393 samples, 0.26%)</title><rect x="1127.3" y="451.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1130.3" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (393 samples, 0.26%)</title><rect x="1127.3" y="435.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1130.3" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (392 samples, 0.26%)</title><rect x="1127.3" y="419.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1130.3" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (392 samples, 0.26%)</title><rect x="1127.3" y="403.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1130.3" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (254 samples, 0.17%)</title><rect x="1127.3" y="387.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1130.3" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (254 samples, 0.17%)</title><rect x="1127.3" y="371.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1130.3" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (254 samples, 0.17%)</title><rect x="1127.3" y="355.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1130.3" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (246 samples, 0.16%)</title><rect x="1127.4" y="339.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1130.4" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (212 samples, 0.14%)</title><rect x="1127.4" y="323.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1130.4" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (212 samples, 0.14%)</title><rect x="1127.4" y="307.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1130.4" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (206 samples, 0.14%)</title><rect x="1127.4" y="291.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1130.4" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (206 samples, 0.14%)</title><rect x="1127.4" y="275.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1130.4" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (203 samples, 0.13%)</title><rect x="1127.4" y="259.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1130.4" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (40 samples, 0.03%)</title><rect x="1127.4" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1130.4" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (40 samples, 0.03%)</title><rect x="1127.4" y="227.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1130.4" y="238.0"></text>
</g>
<g>
<title>int[] (33 samples, 0.02%)</title><rect x="1127.4" y="211.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1130.4" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (163 samples, 0.11%)</title><rect x="1127.7" y="243.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1130.7" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (156 samples, 0.10%)</title><rect x="1127.7" y="227.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1130.7" y="238.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (152 samples, 0.10%)</title><rect x="1127.8" y="211.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1130.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (152 samples, 0.10%)</title><rect x="1127.8" y="195.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1130.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (152 samples, 0.10%)</title><rect x="1127.8" y="179.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1130.8" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (152 samples, 0.10%)</title><rect x="1127.8" y="163.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1130.8" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (152 samples, 0.10%)</title><rect x="1127.8" y="147.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1130.8" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (152 samples, 0.10%)</title><rect x="1127.8" y="131.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1130.8" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (33 samples, 0.02%)</title><rect x="1127.8" y="115.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1130.8" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (33 samples, 0.02%)</title><rect x="1127.8" y="99.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1130.8" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (33 samples, 0.02%)</title><rect x="1127.8" y="83.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1130.8" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (33 samples, 0.02%)</title><rect x="1127.8" y="67.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1130.8" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (33 samples, 0.02%)</title><rect x="1127.8" y="51.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1130.8" y="62.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (33 samples, 0.02%)</title><rect x="1127.8" y="35.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1130.8" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (119 samples, 0.08%)</title><rect x="1128.0" y="115.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1131.0" y="126.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (119 samples, 0.08%)</title><rect x="1128.0" y="99.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1131.0" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (34 samples, 0.02%)</title><rect x="1129.0" y="323.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1132.0" y="334.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (34 samples, 0.02%)</title><rect x="1129.0" y="307.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1132.0" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (128 samples, 0.08%)</title><rect x="1129.4" y="387.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1132.4" y="398.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (128 samples, 0.08%)</title><rect x="1129.4" y="371.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1132.4" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1,712 samples, 1.13%)</title><rect x="1130.4" y="563.0" width="13.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1133.4" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1,690 samples, 1.12%)</title><rect x="1130.5" y="547.0" width="13.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1133.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1,690 samples, 1.12%)</title><rect x="1130.5" y="531.0" width="13.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1133.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (1,690 samples, 1.12%)</title><rect x="1130.5" y="515.0" width="13.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1133.5" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1,690 samples, 1.12%)</title><rect x="1130.5" y="499.0" width="13.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1133.5" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (53 samples, 0.04%)</title><rect x="1130.5" y="483.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1133.5" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (53 samples, 0.04%)</title><rect x="1130.5" y="467.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1133.5" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (53 samples, 0.04%)</title><rect x="1130.5" y="451.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1133.5" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1,601 samples, 1.06%)</title><rect x="1130.9" y="483.0" width="12.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1133.9" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1,601 samples, 1.06%)</title><rect x="1130.9" y="467.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1133.9" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (431 samples, 0.29%)</title><rect x="1130.9" y="451.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1133.9" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (37 samples, 0.02%)</title><rect x="1130.9" y="435.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1133.9" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (37 samples, 0.02%)</title><rect x="1130.9" y="419.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1133.9" y="430.0"></text>
</g>
<g>
<title>int[] (32 samples, 0.02%)</title><rect x="1131.0" y="403.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1134.0" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (394 samples, 0.26%)</title><rect x="1131.2" y="435.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1134.2" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (367 samples, 0.24%)</title><rect x="1131.2" y="419.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1134.2" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (353 samples, 0.23%)</title><rect x="1131.3" y="403.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1134.3" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (353 samples, 0.23%)</title><rect x="1131.3" y="387.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1134.3" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (334 samples, 0.22%)</title><rect x="1131.5" y="371.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1134.5" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (284 samples, 0.19%)</title><rect x="1131.5" y="355.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1134.5" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (279 samples, 0.18%)</title><rect x="1131.5" y="339.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1134.5" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (264 samples, 0.17%)</title><rect x="1131.7" y="323.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1134.7" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (37 samples, 0.02%)</title><rect x="1131.7" y="307.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1134.7" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (227 samples, 0.15%)</title><rect x="1131.9" y="307.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1134.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (227 samples, 0.15%)</title><rect x="1131.9" y="291.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1134.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (227 samples, 0.15%)</title><rect x="1131.9" y="275.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1134.9" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (227 samples, 0.15%)</title><rect x="1131.9" y="259.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1134.9" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (188 samples, 0.12%)</title><rect x="1132.1" y="243.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1135.1" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (188 samples, 0.12%)</title><rect x="1132.1" y="227.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1135.1" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (188 samples, 0.12%)</title><rect x="1132.1" y="211.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1135.1" y="222.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (188 samples, 0.12%)</title><rect x="1132.1" y="195.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1135.1" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (50 samples, 0.03%)</title><rect x="1133.7" y="355.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1136.7" y="366.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (50 samples, 0.03%)</title><rect x="1133.7" y="339.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1136.7" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (636 samples, 0.42%)</title><rect x="1134.3" y="451.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1137.3" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (311 samples, 0.21%)</title><rect x="1134.3" y="435.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1137.3" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (309 samples, 0.20%)</title><rect x="1134.3" y="419.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1137.3" y="430.0"></text>
</g>
<g>
<title>int[] (135 samples, 0.09%)</title><rect x="1134.3" y="403.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1137.3" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (171 samples, 0.11%)</title><rect x="1135.4" y="403.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1138.4" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (325 samples, 0.22%)</title><rect x="1136.7" y="435.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1139.7" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (325 samples, 0.22%)</title><rect x="1136.7" y="419.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1139.7" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (35 samples, 0.02%)</title><rect x="1136.7" y="403.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1139.7" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (290 samples, 0.19%)</title><rect x="1137.0" y="403.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1140.0" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (263 samples, 0.17%)</title><rect x="1137.0" y="387.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1140.0" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (263 samples, 0.17%)</title><rect x="1137.0" y="371.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1140.0" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (262 samples, 0.17%)</title><rect x="1137.0" y="355.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1140.0" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (257 samples, 0.17%)</title><rect x="1137.1" y="339.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1140.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (257 samples, 0.17%)</title><rect x="1137.1" y="323.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1140.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (257 samples, 0.17%)</title><rect x="1137.1" y="307.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1140.1" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (257 samples, 0.17%)</title><rect x="1137.1" y="291.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1140.1" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (243 samples, 0.16%)</title><rect x="1137.1" y="275.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1140.1" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (243 samples, 0.16%)</title><rect x="1137.1" y="259.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1140.1" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (223 samples, 0.15%)</title><rect x="1137.1" y="243.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1140.1" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (223 samples, 0.15%)</title><rect x="1137.1" y="227.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1140.1" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (221 samples, 0.15%)</title><rect x="1137.1" y="211.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1140.1" y="222.0"></text>
</g>
<g>
<title>int[] (81 samples, 0.05%)</title><rect x="1137.2" y="195.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1140.2" y="206.0"></text>
</g>
<g>
<title>java.lang.Object[] (133 samples, 0.09%)</title><rect x="1137.8" y="195.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1140.8" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (81 samples, 0.05%)</title><rect x="1139.3" y="451.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1142.3" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (81 samples, 0.05%)</title><rect x="1139.3" y="435.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1142.3" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (63 samples, 0.04%)</title><rect x="1139.3" y="419.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1142.3" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (36 samples, 0.02%)</title><rect x="1139.5" y="403.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1142.5" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (453 samples, 0.30%)</title><rect x="1139.9" y="451.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1142.9" y="462.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (453 samples, 0.30%)</title><rect x="1139.9" y="435.0" width="3.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1142.9" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (36 samples, 0.02%)</title><rect x="1143.5" y="483.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1146.5" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (36 samples, 0.02%)</title><rect x="1143.5" y="467.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1146.5" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (33 samples, 0.02%)</title><rect x="1143.7" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1146.7" y="606.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (33 samples, 0.02%)</title><rect x="1143.7" y="579.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1146.7" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (41 samples, 0.03%)</title><rect x="1144.0" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1147.0" y="670.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (41 samples, 0.03%)</title><rect x="1144.0" y="643.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1147.0" y="654.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (1,285 samples, 0.85%)</title><rect x="1144.3" y="739.0" width="10.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1147.3" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$$Lambda$97/2105482944.readString (98 samples, 0.06%)</title><rect x="1144.3" y="723.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1147.3" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (98 samples, 0.06%)</title><rect x="1144.3" y="707.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1147.3" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (98 samples, 0.06%)</title><rect x="1144.3" y="691.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1147.3" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (98 samples, 0.06%)</title><rect x="1144.3" y="675.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1147.3" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (98 samples, 0.06%)</title><rect x="1144.3" y="659.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1147.3" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (98 samples, 0.06%)</title><rect x="1144.3" y="643.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1147.3" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (98 samples, 0.06%)</title><rect x="1144.3" y="627.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1147.3" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (89 samples, 0.06%)</title><rect x="1144.4" y="611.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1147.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (89 samples, 0.06%)</title><rect x="1144.4" y="595.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1147.4" y="606.0"></text>
</g>
<g>
<title>java.lang.String (88 samples, 0.06%)</title><rect x="1144.4" y="579.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1147.4" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1,187 samples, 0.79%)</title><rect x="1145.1" y="723.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1148.1" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1,187 samples, 0.79%)</title><rect x="1145.1" y="707.0" width="9.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1148.1" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1,187 samples, 0.79%)</title><rect x="1145.1" y="691.0" width="9.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1148.1" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (161 samples, 0.11%)</title><rect x="1145.1" y="675.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1148.1" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (160 samples, 0.11%)</title><rect x="1145.1" y="659.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1148.1" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (160 samples, 0.11%)</title><rect x="1145.1" y="643.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1148.1" y="654.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (36 samples, 0.02%)</title><rect x="1145.1" y="627.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1148.1" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (113 samples, 0.07%)</title><rect x="1145.4" y="627.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1148.4" y="638.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (49 samples, 0.03%)</title><rect x="1145.4" y="611.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1148.4" y="622.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (32 samples, 0.02%)</title><rect x="1145.8" y="611.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1148.8" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (32 samples, 0.02%)</title><rect x="1146.0" y="611.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1149.0" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (32 samples, 0.02%)</title><rect x="1146.0" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1149.0" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (32 samples, 0.02%)</title><rect x="1146.0" y="579.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1149.0" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (32 samples, 0.02%)</title><rect x="1146.0" y="563.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1149.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (32 samples, 0.02%)</title><rect x="1146.0" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1149.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.02%)</title><rect x="1146.0" y="531.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1149.0" y="542.0"></text>
</g>
<g>
<title>java.lang.String (32 samples, 0.02%)</title><rect x="1146.0" y="515.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1149.0" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (1,026 samples, 0.68%)</title><rect x="1146.3" y="675.0" width="8.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1149.3" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (998 samples, 0.66%)</title><rect x="1146.6" y="659.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1149.6" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (994 samples, 0.66%)</title><rect x="1146.6" y="643.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1149.6" y="654.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (994 samples, 0.66%)</title><rect x="1146.6" y="627.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1149.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (994 samples, 0.66%)</title><rect x="1146.6" y="611.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1149.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor2.invoke (800 samples, 0.53%)</title><rect x="1146.6" y="595.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1149.6" y="606.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (800 samples, 0.53%)</title><rect x="1146.6" y="579.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1149.6" y="590.0"></text>
</g>
<g>
<title>javax/management/ObjectName.construct (799 samples, 0.53%)</title><rect x="1146.6" y="563.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1149.6" y="574.0"></text>
</g>
<g>
<title>char[] (42 samples, 0.03%)</title><rect x="1146.6" y="547.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1149.6" y="558.0"></text>
</g>
<g>
<title>java.lang.String[] (63 samples, 0.04%)</title><rect x="1146.9" y="547.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1149.9" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (77 samples, 0.05%)</title><rect x="1147.5" y="547.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1150.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (77 samples, 0.05%)</title><rect x="1147.5" y="531.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1150.5" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (49 samples, 0.03%)</title><rect x="1147.7" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1150.7" y="526.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.03%)</title><rect x="1147.7" y="499.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1150.7" y="510.0"></text>
</g>
<g>
<title>javax.management.ObjectName$Property[] (83 samples, 0.05%)</title><rect x="1148.1" y="547.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1151.1" y="558.0"></text>
</g>
<g>
<title>javax.management.ObjectName$Property (34 samples, 0.02%)</title><rect x="1148.8" y="547.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1151.8" y="558.0"></text>
</g>
<g>
<title>javax/management/ObjectName.addProperty (249 samples, 0.16%)</title><rect x="1149.0" y="547.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1152.0" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.put (249 samples, 0.16%)</title><rect x="1149.0" y="531.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1152.0" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (249 samples, 0.16%)</title><rect x="1149.0" y="515.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1152.0" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (217 samples, 0.14%)</title><rect x="1149.0" y="499.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1152.0" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (217 samples, 0.14%)</title><rect x="1149.0" y="483.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1152.0" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (32 samples, 0.02%)</title><rect x="1150.7" y="499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1153.7" y="510.0"></text>
</g>
<g>
<title>javax/management/ObjectName.setCanonicalName (239 samples, 0.16%)</title><rect x="1151.0" y="547.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1154.0" y="558.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.02%)</title><rect x="1151.0" y="531.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1154.0" y="542.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (153 samples, 0.10%)</title><rect x="1151.3" y="531.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1154.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (153 samples, 0.10%)</title><rect x="1151.3" y="515.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1154.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (153 samples, 0.10%)</title><rect x="1151.3" y="499.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1154.3" y="510.0"></text>
</g>
<g>
<title>byte[] (153 samples, 0.10%)</title><rect x="1151.3" y="483.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1154.3" y="494.0"></text>
</g>
<g>
<title>javax.management.ObjectName$Property[] (50 samples, 0.03%)</title><rect x="1152.5" y="531.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1155.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor36.invoke (194 samples, 0.13%)</title><rect x="1152.8" y="595.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1155.8" y="606.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.readObject (194 samples, 0.13%)</title><rect x="1152.8" y="579.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1155.8" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadObject (194 samples, 0.13%)</title><rect x="1152.8" y="563.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1155.8" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadFields (194 samples, 0.13%)</title><rect x="1152.8" y="547.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1155.8" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (190 samples, 0.13%)</title><rect x="1152.9" y="531.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1155.9" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (190 samples, 0.13%)</title><rect x="1152.9" y="515.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1155.9" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (76 samples, 0.05%)</title><rect x="1152.9" y="499.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1155.9" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (76 samples, 0.05%)</title><rect x="1152.9" y="483.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1155.9" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (114 samples, 0.08%)</title><rect x="1153.5" y="499.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1156.5" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (83 samples, 0.05%)</title><rect x="1153.7" y="483.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1156.7" y="494.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.05%)</title><rect x="1153.7" y="467.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1156.7" y="478.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (2,288 samples, 1.52%)</title><rect x="1154.4" y="739.0" width="17.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1157.4" y="750.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (2,285 samples, 1.51%)</title><rect x="1154.4" y="723.0" width="17.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1157.4" y="734.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (2,283 samples, 1.51%)</title><rect x="1154.4" y="707.0" width="17.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1157.4" y="718.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (2,283 samples, 1.51%)</title><rect x="1154.4" y="691.0" width="17.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1157.4" y="702.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (2,283 samples, 1.51%)</title><rect x="1154.4" y="675.0" width="17.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1157.4" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (2,283 samples, 1.51%)</title><rect x="1154.4" y="659.0" width="17.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1157.4" y="670.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$BlockDataOutputStream (78 samples, 0.05%)</title><rect x="1154.4" y="643.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1157.4" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (1,101 samples, 0.73%)</title><rect x="1155.3" y="643.0" width="8.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1158.3" y="654.0"></text>
</g>
<g>
<title>byte[] (189 samples, 0.13%)</title><rect x="1155.3" y="627.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1158.3" y="638.0"></text>
</g>
<g>
<title>char[] (38 samples, 0.03%)</title><rect x="1156.7" y="627.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1159.7" y="638.0"></text>
</g>
<g>
<title>char[] (837 samples, 0.55%)</title><rect x="1157.0" y="627.0" width="6.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1160.0" y="638.0"></text>
</g>
<g>
<title>java/io/DataOutputStream.&lt;init&gt; (33 samples, 0.02%)</title><rect x="1163.6" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1166.6" y="638.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.&lt;init&gt; (32 samples, 0.02%)</title><rect x="1163.6" y="611.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1166.6" y="622.0"></text>
</g>
<g>
<title>java.lang.Object (32 samples, 0.02%)</title><rect x="1163.6" y="595.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1166.6" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (475 samples, 0.31%)</title><rect x="1163.9" y="643.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1166.9" y="654.0"></text>
</g>
<g>
<title>int[] (206 samples, 0.14%)</title><rect x="1163.9" y="627.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1166.9" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (267 samples, 0.18%)</title><rect x="1165.5" y="627.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1168.5" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$ReplaceTable.&lt;init&gt; (601 samples, 0.40%)</title><rect x="1167.6" y="643.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1170.6" y="654.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$HandleTable (43 samples, 0.03%)</title><rect x="1167.6" y="627.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1170.6" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (558 samples, 0.37%)</title><rect x="1167.9" y="627.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1170.9" y="638.0"></text>
</g>
<g>
<title>int[] (301 samples, 0.20%)</title><rect x="1167.9" y="611.0" width="2.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1170.9" y="622.0"></text>
</g>
<g>
<title>int[] (76 samples, 0.05%)</title><rect x="1170.3" y="611.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1173.3" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (181 samples, 0.12%)</title><rect x="1170.9" y="611.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1173.9" y="622.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (2,266 samples, 1.50%)</title><rect x="1172.3" y="803.0" width="17.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1175.3" y="814.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (2,266 samples, 1.50%)</title><rect x="1172.3" y="787.0" width="17.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1175.3" y="798.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (2,266 samples, 1.50%)</title><rect x="1172.3" y="771.0" width="17.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1175.3" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (2,266 samples, 1.50%)</title><rect x="1172.3" y="755.0" width="17.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1175.3" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (1,531 samples, 1.01%)</title><rect x="1172.4" y="739.0" width="12.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1175.4" y="750.0"></text>
</g>
<g>
<title>byte[] (167 samples, 0.11%)</title><rect x="1172.4" y="723.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1175.4" y="734.0"></text>
</g>
<g>
<title>char[] (47 samples, 0.03%)</title><rect x="1173.7" y="723.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1176.7" y="734.0"></text>
</g>
<g>
<title>char[] (564 samples, 0.37%)</title><rect x="1174.1" y="723.0" width="4.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1177.1" y="734.0"></text>
</g>
<g>
<title>java.io.DataInputStream (114 samples, 0.08%)</title><rect x="1178.5" y="723.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1181.5" y="734.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (622 samples, 0.41%)</title><rect x="1179.5" y="723.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1182.5" y="734.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.05%)</title><rect x="1179.5" y="707.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1182.5" y="718.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.03%)</title><rect x="1180.1" y="707.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1183.1" y="718.0"></text>
</g>
<g>
<title>char[] (116 samples, 0.08%)</title><rect x="1180.5" y="707.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1183.5" y="718.0"></text>
</g>
<g>
<title>char[] (384 samples, 0.25%)</title><rect x="1181.4" y="707.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1184.4" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (716 samples, 0.47%)</title><rect x="1184.4" y="739.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1187.4" y="750.0"></text>
</g>
<g>
<title>byte[] (208 samples, 0.14%)</title><rect x="1184.4" y="723.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1187.4" y="734.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable$HandleList[] (340 samples, 0.23%)</title><rect x="1186.0" y="723.0" width="2.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1189.0" y="734.0"></text>
</g>
<g>
<title>java.lang.Object[] (168 samples, 0.11%)</title><rect x="1188.7" y="723.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1191.7" y="734.0"></text>
</g>
</g>
</svg>
