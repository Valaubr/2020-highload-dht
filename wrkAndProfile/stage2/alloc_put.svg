<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="997"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="997"> </text>
<g id="frames">
<g>
<title>all (8,684 samples, 100.00%)</title><rect x="10.0" y="963.0" width="1180.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="974.0">all</text>
</g>
<g>
<title>[C1 CompilerThre tid=65434] (3 samples, 0.03%)</title><rect x="10.0" y="947.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>[no_Java_frame] (3 samples, 0.03%)</title><rect x="10.0" y="931.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.03%)</title><rect x="10.0" y="915.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>[JMX server connection timeout 27 tid=65512] (71 samples, 0.82%)</title><rect x="10.5" y="947.0" width="9.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="13.5" y="958.0"></text>
</g>
<g>
<title>java/lang/Thread.run (71 samples, 0.82%)</title><rect x="10.5" y="931.0" width="9.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.5" y="942.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (71 samples, 0.82%)</title><rect x="10.5" y="915.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.5" y="926.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (71 samples, 0.82%)</title><rect x="10.5" y="899.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.5" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1159370151.linkToTargetMethod (71 samples, 0.82%)</title><rect x="10.5" y="883.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.5" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1231668594.invoke (71 samples, 0.82%)</title><rect x="10.5" y="867.0" width="9.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.5" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (71 samples, 0.82%)</title><rect x="10.5" y="851.0" width="9.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.5" y="862.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (23 samples, 0.26%)</title><rect x="10.5" y="835.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.5" y="846.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.26%)</title><rect x="10.5" y="819.0" width="3.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="13.5" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (48 samples, 0.55%)</title><rect x="13.7" y="835.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (48 samples, 0.55%)</title><rect x="13.7" y="819.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.7" y="830.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.51%)</title><rect x="13.7" y="803.0" width="5.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="16.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray0 (4 samples, 0.05%)</title><rect x="19.6" y="803.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.6" y="814.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="19.6" y="787.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="22.6" y="798.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=65445] (1,635 samples, 18.83%)</title><rect x="20.2" y="947.0" width="222.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="23.2" y="958.0">[NIO Selector #0 tid=65445]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,635 samples, 18.83%)</title><rect x="20.2" y="931.0" width="222.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.2" y="942.0">one/nio/server/SelectorThread..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,635 samples, 18.83%)</title><rect x="20.2" y="915.0" width="222.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="23.2" y="926.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,635 samples, 18.83%)</title><rect x="20.2" y="899.0" width="222.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="23.2" y="910.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,635 samples, 18.83%)</title><rect x="20.2" y="883.0" width="222.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.2" y="894.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (779 samples, 8.97%)</title><rect x="20.2" y="867.0" width="105.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.2" y="878.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (779 samples, 8.97%)</title><rect x="20.2" y="851.0" width="105.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.2" y="862.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (697 samples, 8.03%)</title><rect x="20.2" y="835.0" width="94.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.2" y="846.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (196 samples, 2.26%)</title><rect x="20.2" y="819.0" width="26.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.2" y="830.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (196 samples, 2.26%)</title><rect x="20.2" y="803.0" width="26.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.2" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (138 samples, 1.59%)</title><rect x="20.2" y="787.0" width="18.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="23.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (138 samples, 1.59%)</title><rect x="20.2" y="771.0" width="18.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="23.2" y="782.0"></text>
</g>
<g>
<title>byte[] (138 samples, 1.59%)</title><rect x="20.2" y="755.0" width="18.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="23.2" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (58 samples, 0.67%)</title><rect x="38.9" y="787.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.9" y="798.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (58 samples, 0.67%)</title><rect x="38.9" y="771.0" width="7.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="41.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (76 samples, 0.88%)</title><rect x="46.8" y="819.0" width="10.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (76 samples, 0.88%)</title><rect x="46.8" y="803.0" width="10.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (76 samples, 0.88%)</title><rect x="46.8" y="787.0" width="10.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (76 samples, 0.88%)</title><rect x="46.8" y="771.0" width="10.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.8" y="782.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.33%)</title><rect x="46.8" y="755.0" width="4.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="49.8" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (47 samples, 0.54%)</title><rect x="50.8" y="755.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.8" y="766.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.54%)</title><rect x="50.8" y="739.0" width="6.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="53.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.put (425 samples, 4.89%)</title><rect x="57.2" y="819.0" width="57.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="60.2" y="830.0">ru/mai..</text>
</g>
<g>
<title>java/lang/String.getBytes (38 samples, 0.44%)</title><rect x="57.2" y="803.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="60.2" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (38 samples, 0.44%)</title><rect x="57.2" y="787.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="60.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (38 samples, 0.44%)</title><rect x="57.2" y="771.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="60.2" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (38 samples, 0.44%)</title><rect x="57.2" y="755.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="60.2" y="766.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.44%)</title><rect x="57.2" y="739.0" width="5.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="60.2" y="750.0"></text>
</g>
<g>
<title>one.nio.http.Response (41 samples, 0.47%)</title><rect x="62.3" y="803.0" width="5.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="65.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (156 samples, 1.80%)</title><rect x="67.9" y="803.0" width="21.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="70.9" y="814.0">o..</text>
</g>
<g>
<title>byte[] (75 samples, 0.86%)</title><rect x="67.9" y="787.0" width="10.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="70.9" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (51 samples, 0.59%)</title><rect x="78.1" y="787.0" width="6.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="81.1" y="798.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.35%)</title><rect x="85.0" y="787.0" width="4.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="88.0" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.upsert (190 samples, 2.19%)</title><rect x="89.1" y="803.0" width="25.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="92.1" y="814.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.upsert (190 samples, 2.19%)</title><rect x="89.1" y="787.0" width="25.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="92.1" y="798.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (78 samples, 0.90%)</title><rect x="89.1" y="771.0" width="10.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="92.1" y="782.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (78 samples, 0.90%)</title><rect x="89.1" y="755.0" width="10.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="92.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.02%)</title><rect x="99.7" y="771.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.02%)</title><rect x="99.7" y="755.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="102.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.02%)</title><rect x="99.7" y="739.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.upsert (109 samples, 1.26%)</title><rect x="100.0" y="771.0" width="14.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.0" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (62 samples, 0.71%)</title><rect x="100.0" y="755.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="103.0" y="766.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (62 samples, 0.71%)</title><rect x="100.0" y="739.0" width="8.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="103.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (8 samples, 0.09%)</title><rect x="108.4" y="755.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="111.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (8 samples, 0.09%)</title><rect x="108.4" y="739.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="111.4" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (4 samples, 0.05%)</title><rect x="108.4" y="723.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="111.4" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (4 samples, 0.05%)</title><rect x="108.9" y="723.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="111.9" y="734.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.valaubr.Value (39 samples, 0.45%)</title><rect x="109.5" y="755.0" width="5.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="112.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (82 samples, 0.94%)</title><rect x="114.9" y="835.0" width="11.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="117.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (82 samples, 0.94%)</title><rect x="114.9" y="819.0" width="11.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="117.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (82 samples, 0.94%)</title><rect x="114.9" y="803.0" width="11.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="117.9" y="814.0"></text>
</g>
<g>
<title>java.lang.String (49 samples, 0.56%)</title><rect x="114.9" y="787.0" width="6.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="117.9" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (33 samples, 0.38%)</title><rect x="121.6" y="787.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="124.6" y="798.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.38%)</title><rect x="121.6" y="771.0" width="4.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="124.6" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (382 samples, 4.40%)</title><rect x="126.0" y="867.0" width="52.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.0" y="878.0">one/n..</text>
</g>
<g>
<title>one.nio.http.Request (51 samples, 0.59%)</title><rect x="126.0" y="851.0" width="7.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="129.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (111 samples, 1.28%)</title><rect x="133.0" y="851.0" width="15.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="136.0" y="862.0"></text>
</g>
<g>
<title>java.lang.String[] (111 samples, 1.28%)</title><rect x="133.0" y="835.0" width="15.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="136.0" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (220 samples, 2.53%)</title><rect x="148.1" y="851.0" width="29.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.1" y="862.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (220 samples, 2.53%)</title><rect x="148.1" y="835.0" width="29.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="151.1" y="846.0">on..</text>
</g>
<g>
<title>char[] (127 samples, 1.46%)</title><rect x="148.1" y="819.0" width="17.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="151.1" y="830.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.39%)</title><rect x="165.3" y="819.0" width="4.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="168.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (59 samples, 0.68%)</title><rect x="169.9" y="819.0" width="8.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="172.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (59 samples, 0.68%)</title><rect x="169.9" y="803.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="172.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (59 samples, 0.68%)</title><rect x="169.9" y="787.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="172.9" y="798.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.68%)</title><rect x="169.9" y="771.0" width="8.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="172.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (45 samples, 0.52%)</title><rect x="178.0" y="867.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="181.0" y="878.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.52%)</title><rect x="178.0" y="851.0" width="6.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="181.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (73 samples, 0.84%)</title><rect x="184.1" y="867.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="187.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.substring (73 samples, 0.84%)</title><rect x="184.1" y="851.0" width="9.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="187.1" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (73 samples, 0.84%)</title><rect x="184.1" y="835.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="187.1" y="846.0"></text>
</g>
<g>
<title>java.lang.String (45 samples, 0.52%)</title><rect x="184.1" y="819.0" width="6.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="187.1" y="830.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.32%)</title><rect x="190.2" y="819.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="193.2" y="830.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.32%)</title><rect x="190.2" y="803.0" width="3.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="193.2" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (356 samples, 4.10%)</title><rect x="194.0" y="867.0" width="48.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="197.0" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (356 samples, 4.10%)</title><rect x="194.0" y="851.0" width="48.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="197.0" y="862.0">one/..</text>
</g>
<g>
<title>char[] (187 samples, 2.15%)</title><rect x="194.0" y="835.0" width="25.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="197.0" y="846.0">c..</text>
</g>
<g>
<title>java.lang.String (70 samples, 0.81%)</title><rect x="219.4" y="835.0" width="9.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="222.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (99 samples, 1.14%)</title><rect x="228.9" y="835.0" width="13.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="231.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (99 samples, 1.14%)</title><rect x="228.9" y="819.0" width="13.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="231.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (99 samples, 1.14%)</title><rect x="228.9" y="803.0" width="13.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="231.9" y="814.0"></text>
</g>
<g>
<title>byte[] (99 samples, 1.14%)</title><rect x="228.9" y="787.0" width="13.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="231.9" y="798.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=65446] (1,628 samples, 18.75%)</title><rect x="242.4" y="947.0" width="221.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="245.4" y="958.0">[NIO Selector #1 tid=65446]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,628 samples, 18.75%)</title><rect x="242.4" y="931.0" width="221.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="245.4" y="942.0">one/nio/server/SelectorThread..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (65 samples, 0.75%)</title><rect x="242.4" y="915.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="245.4" y="926.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (65 samples, 0.75%)</title><rect x="242.4" y="899.0" width="8.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="245.4" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,563 samples, 18.00%)</title><rect x="251.2" y="915.0" width="212.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="254.2" y="926.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,563 samples, 18.00%)</title><rect x="251.2" y="899.0" width="212.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="254.2" y="910.0">one/nio/http/HttpSession.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,563 samples, 18.00%)</title><rect x="251.2" y="883.0" width="212.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="254.2" y="894.0">one/nio/http/HttpSession.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (756 samples, 8.71%)</title><rect x="251.2" y="867.0" width="102.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="254.2" y="878.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (756 samples, 8.71%)</title><rect x="251.2" y="851.0" width="102.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="254.2" y="862.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (684 samples, 7.88%)</title><rect x="251.2" y="835.0" width="92.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="254.2" y="846.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (193 samples, 2.22%)</title><rect x="251.2" y="819.0" width="26.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="254.2" y="830.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (193 samples, 2.22%)</title><rect x="251.2" y="803.0" width="26.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="254.2" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (132 samples, 1.52%)</title><rect x="251.2" y="787.0" width="17.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="254.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (132 samples, 1.52%)</title><rect x="251.2" y="771.0" width="17.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="254.2" y="782.0"></text>
</g>
<g>
<title>byte[] (132 samples, 1.52%)</title><rect x="251.2" y="755.0" width="17.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="254.2" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (61 samples, 0.70%)</title><rect x="269.1" y="787.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="272.1" y="798.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (61 samples, 0.70%)</title><rect x="269.1" y="771.0" width="8.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="272.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (88 samples, 1.01%)</title><rect x="277.4" y="819.0" width="12.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="280.4" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (88 samples, 1.01%)</title><rect x="277.4" y="803.0" width="12.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="280.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (88 samples, 1.01%)</title><rect x="277.4" y="787.0" width="12.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="280.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (88 samples, 1.01%)</title><rect x="277.4" y="771.0" width="12.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.4" y="782.0"></text>
</g>
<g>
<title>java.lang.String (42 samples, 0.48%)</title><rect x="277.4" y="755.0" width="5.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="280.4" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (46 samples, 0.53%)</title><rect x="283.1" y="755.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="286.1" y="766.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.53%)</title><rect x="283.1" y="739.0" width="6.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="286.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.put (403 samples, 4.64%)</title><rect x="289.4" y="819.0" width="54.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="292.4" y="830.0">ru/ma..</text>
</g>
<g>
<title>java/lang/String.getBytes (50 samples, 0.58%)</title><rect x="289.4" y="803.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="292.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (50 samples, 0.58%)</title><rect x="289.4" y="787.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="292.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (50 samples, 0.58%)</title><rect x="289.4" y="771.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="292.4" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (50 samples, 0.58%)</title><rect x="289.4" y="755.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="292.4" y="766.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.58%)</title><rect x="289.4" y="739.0" width="6.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="292.4" y="750.0"></text>
</g>
<g>
<title>one.nio.http.Response (32 samples, 0.37%)</title><rect x="296.2" y="803.0" width="4.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="299.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (139 samples, 1.60%)</title><rect x="300.5" y="803.0" width="18.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="303.5" y="814.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.62%)</title><rect x="300.5" y="787.0" width="7.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="303.5" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (49 samples, 0.56%)</title><rect x="307.9" y="787.0" width="6.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="310.9" y="798.0"></text>
</g>
<g>
<title>java.lang.String (36 samples, 0.41%)</title><rect x="314.5" y="787.0" width="4.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="317.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.upsert (182 samples, 2.10%)</title><rect x="319.4" y="803.0" width="24.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="322.4" y="814.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.upsert (182 samples, 2.10%)</title><rect x="319.4" y="787.0" width="24.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="322.4" y="798.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (67 samples, 0.77%)</title><rect x="319.4" y="771.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="322.4" y="782.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (67 samples, 0.77%)</title><rect x="319.4" y="755.0" width="9.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="322.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.03%)</title><rect x="328.5" y="771.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="331.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.03%)</title><rect x="328.5" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="331.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.03%)</title><rect x="328.5" y="739.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="331.5" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.03%)</title><rect x="328.5" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="331.5" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.03%)</title><rect x="328.5" y="707.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="331.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (2 samples, 0.02%)</title><rect x="328.6" y="691.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="331.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (2 samples, 0.02%)</title><rect x="328.6" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="331.6" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (2 samples, 0.02%)</title><rect x="328.6" y="659.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="331.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.upsert (111 samples, 1.28%)</title><rect x="328.9" y="771.0" width="15.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="331.9" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (68 samples, 0.78%)</title><rect x="328.9" y="755.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="331.9" y="766.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (68 samples, 0.78%)</title><rect x="328.9" y="739.0" width="9.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="331.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (8 samples, 0.09%)</title><rect x="338.2" y="755.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="341.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (8 samples, 0.09%)</title><rect x="338.2" y="739.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="341.2" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (3 samples, 0.03%)</title><rect x="338.2" y="723.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="341.2" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (5 samples, 0.06%)</title><rect x="338.6" y="723.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="341.6" y="734.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.valaubr.Value (35 samples, 0.40%)</title><rect x="339.2" y="755.0" width="4.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="342.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (72 samples, 0.83%)</title><rect x="344.1" y="835.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="347.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (72 samples, 0.83%)</title><rect x="344.1" y="819.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="347.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (72 samples, 0.83%)</title><rect x="344.1" y="803.0" width="9.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="347.1" y="814.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.33%)</title><rect x="344.1" y="787.0" width="4.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="347.1" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (43 samples, 0.50%)</title><rect x="348.1" y="787.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="351.1" y="798.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.50%)</title><rect x="348.1" y="771.0" width="5.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="351.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (362 samples, 4.17%)</title><rect x="353.9" y="867.0" width="49.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="356.9" y="878.0">one/n..</text>
</g>
<g>
<title>one.nio.http.Request (54 samples, 0.62%)</title><rect x="353.9" y="851.0" width="7.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="356.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (118 samples, 1.36%)</title><rect x="361.3" y="851.0" width="16.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="364.3" y="862.0"></text>
</g>
<g>
<title>java.lang.String[] (118 samples, 1.36%)</title><rect x="361.3" y="835.0" width="16.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="364.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (190 samples, 2.19%)</title><rect x="377.3" y="851.0" width="25.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="380.3" y="862.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (190 samples, 2.19%)</title><rect x="377.3" y="835.0" width="25.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="380.3" y="846.0">o..</text>
</g>
<g>
<title>char[] (90 samples, 1.04%)</title><rect x="377.3" y="819.0" width="12.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="380.3" y="830.0"></text>
</g>
<g>
<title>java.lang.String (43 samples, 0.50%)</title><rect x="389.5" y="819.0" width="5.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="392.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (57 samples, 0.66%)</title><rect x="395.4" y="819.0" width="7.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="398.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (57 samples, 0.66%)</title><rect x="395.4" y="803.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="398.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (57 samples, 0.66%)</title><rect x="395.4" y="787.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="398.4" y="798.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.66%)</title><rect x="395.4" y="771.0" width="7.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="398.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (31 samples, 0.36%)</title><rect x="403.1" y="867.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.1" y="878.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.36%)</title><rect x="403.1" y="851.0" width="4.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="406.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (86 samples, 0.99%)</title><rect x="407.3" y="867.0" width="11.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="410.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.substring (86 samples, 0.99%)</title><rect x="407.3" y="851.0" width="11.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="410.3" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (86 samples, 0.99%)</title><rect x="407.3" y="835.0" width="11.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="410.3" y="846.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.38%)</title><rect x="407.3" y="819.0" width="4.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="410.3" y="830.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (53 samples, 0.61%)</title><rect x="411.8" y="819.0" width="7.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="414.8" y="830.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.61%)</title><rect x="411.8" y="803.0" width="7.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="414.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (328 samples, 3.78%)</title><rect x="419.0" y="867.0" width="44.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.0" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (328 samples, 3.78%)</title><rect x="419.0" y="851.0" width="44.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="422.0" y="862.0">one/..</text>
</g>
<g>
<title>char[] (131 samples, 1.51%)</title><rect x="419.0" y="835.0" width="17.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="422.0" y="846.0"></text>
</g>
<g>
<title>java.lang.String (81 samples, 0.93%)</title><rect x="436.8" y="835.0" width="11.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="439.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (116 samples, 1.34%)</title><rect x="447.8" y="835.0" width="15.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="450.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (116 samples, 1.34%)</title><rect x="447.8" y="819.0" width="15.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="450.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (116 samples, 1.34%)</title><rect x="447.8" y="803.0" width="15.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="450.8" y="814.0"></text>
</g>
<g>
<title>byte[] (116 samples, 1.34%)</title><rect x="447.8" y="787.0" width="15.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="450.8" y="798.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=65451] (1,594 samples, 18.36%)</title><rect x="463.6" y="947.0" width="216.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="466.6" y="958.0">[NIO Selector #2 tid=65451]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,594 samples, 18.36%)</title><rect x="463.6" y="931.0" width="216.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.6" y="942.0">one/nio/server/SelectorThrea..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,594 samples, 18.36%)</title><rect x="463.6" y="915.0" width="216.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.6" y="926.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,594 samples, 18.36%)</title><rect x="463.6" y="899.0" width="216.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.6" y="910.0">one/nio/http/HttpSession.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,594 samples, 18.36%)</title><rect x="463.6" y="883.0" width="216.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="466.6" y="894.0">one/nio/http/HttpSession.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (747 samples, 8.60%)</title><rect x="463.6" y="867.0" width="101.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="466.6" y="878.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (747 samples, 8.60%)</title><rect x="463.6" y="851.0" width="101.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.6" y="862.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (654 samples, 7.53%)</title><rect x="463.6" y="835.0" width="88.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="466.6" y="846.0">RequestHan..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (173 samples, 1.99%)</title><rect x="463.6" y="819.0" width="23.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.6" y="830.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (173 samples, 1.99%)</title><rect x="463.6" y="803.0" width="23.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.6" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (126 samples, 1.45%)</title><rect x="463.6" y="787.0" width="17.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (126 samples, 1.45%)</title><rect x="463.6" y="771.0" width="17.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.6" y="782.0"></text>
</g>
<g>
<title>byte[] (126 samples, 1.45%)</title><rect x="463.6" y="755.0" width="17.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="466.6" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (47 samples, 0.54%)</title><rect x="480.7" y="787.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="483.7" y="798.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (47 samples, 0.54%)</title><rect x="480.7" y="771.0" width="6.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="483.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (81 samples, 0.93%)</title><rect x="487.1" y="819.0" width="11.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="490.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (81 samples, 0.93%)</title><rect x="487.1" y="803.0" width="11.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (81 samples, 0.93%)</title><rect x="487.1" y="787.0" width="11.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (81 samples, 0.93%)</title><rect x="487.1" y="771.0" width="11.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.1" y="782.0"></text>
</g>
<g>
<title>java.lang.String (32 samples, 0.37%)</title><rect x="487.1" y="755.0" width="4.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="490.1" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (49 samples, 0.56%)</title><rect x="491.4" y="755.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="494.4" y="766.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.56%)</title><rect x="491.4" y="739.0" width="6.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="494.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.put (400 samples, 4.61%)</title><rect x="498.1" y="819.0" width="54.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="501.1" y="830.0">ru/ma..</text>
</g>
<g>
<title>java/lang/String.getBytes (44 samples, 0.51%)</title><rect x="498.1" y="803.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (44 samples, 0.51%)</title><rect x="498.1" y="787.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="501.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (44 samples, 0.51%)</title><rect x="498.1" y="771.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="501.1" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (44 samples, 0.51%)</title><rect x="498.1" y="755.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="501.1" y="766.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.51%)</title><rect x="498.1" y="739.0" width="6.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="501.1" y="750.0"></text>
</g>
<g>
<title>one.nio.http.Response (43 samples, 0.50%)</title><rect x="504.1" y="803.0" width="5.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="507.1" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (122 samples, 1.40%)</title><rect x="509.9" y="803.0" width="16.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="512.9" y="814.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.59%)</title><rect x="509.9" y="787.0" width="6.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="512.9" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (44 samples, 0.51%)</title><rect x="516.8" y="787.0" width="6.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="519.8" y="798.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.31%)</title><rect x="522.8" y="787.0" width="3.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="525.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.upsert (191 samples, 2.20%)</title><rect x="526.5" y="803.0" width="25.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="529.5" y="814.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.upsert (191 samples, 2.20%)</title><rect x="526.5" y="787.0" width="25.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="529.5" y="798.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (76 samples, 0.88%)</title><rect x="526.5" y="771.0" width="10.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="529.5" y="782.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (76 samples, 0.88%)</title><rect x="526.5" y="755.0" width="10.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="529.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.upsert (114 samples, 1.31%)</title><rect x="537.0" y="771.0" width="15.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="540.0" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (60 samples, 0.69%)</title><rect x="537.0" y="755.0" width="8.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="540.0" y="766.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (60 samples, 0.69%)</title><rect x="537.0" y="739.0" width="8.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="540.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (12 samples, 0.14%)</title><rect x="545.1" y="755.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="548.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (12 samples, 0.14%)</title><rect x="545.1" y="739.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="548.1" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (4 samples, 0.05%)</title><rect x="545.1" y="723.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="548.1" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (8 samples, 0.09%)</title><rect x="545.6" y="723.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="548.6" y="734.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.valaubr.Value (42 samples, 0.48%)</title><rect x="546.7" y="755.0" width="5.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="549.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (93 samples, 1.07%)</title><rect x="552.4" y="835.0" width="12.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="555.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (93 samples, 1.07%)</title><rect x="552.4" y="819.0" width="12.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="555.4" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (93 samples, 1.07%)</title><rect x="552.4" y="803.0" width="12.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="555.4" y="814.0"></text>
</g>
<g>
<title>java.lang.String (57 samples, 0.66%)</title><rect x="552.4" y="787.0" width="7.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="555.4" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (36 samples, 0.41%)</title><rect x="560.2" y="787.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="563.2" y="798.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.41%)</title><rect x="560.2" y="771.0" width="4.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="563.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (369 samples, 4.25%)</title><rect x="565.1" y="867.0" width="50.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="568.1" y="878.0">one/n..</text>
</g>
<g>
<title>one.nio.http.Request (43 samples, 0.50%)</title><rect x="565.1" y="851.0" width="5.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="568.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (129 samples, 1.49%)</title><rect x="570.9" y="851.0" width="17.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.9" y="862.0"></text>
</g>
<g>
<title>java.lang.String[] (129 samples, 1.49%)</title><rect x="570.9" y="835.0" width="17.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="573.9" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (197 samples, 2.27%)</title><rect x="588.5" y="851.0" width="26.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="591.5" y="862.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (197 samples, 2.27%)</title><rect x="588.5" y="835.0" width="26.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="591.5" y="846.0">o..</text>
</g>
<g>
<title>char[] (110 samples, 1.27%)</title><rect x="588.5" y="819.0" width="14.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="591.5" y="830.0"></text>
</g>
<g>
<title>java.lang.String (37 samples, 0.43%)</title><rect x="603.4" y="819.0" width="5.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="606.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (50 samples, 0.58%)</title><rect x="608.4" y="819.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="611.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (50 samples, 0.58%)</title><rect x="608.4" y="803.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="611.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (50 samples, 0.58%)</title><rect x="608.4" y="787.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="611.4" y="798.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.58%)</title><rect x="608.4" y="771.0" width="6.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="611.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (40 samples, 0.46%)</title><rect x="615.2" y="867.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="618.2" y="878.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.46%)</title><rect x="615.2" y="851.0" width="5.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="618.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (74 samples, 0.85%)</title><rect x="620.7" y="867.0" width="10.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="623.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.substring (74 samples, 0.85%)</title><rect x="620.7" y="851.0" width="10.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="623.7" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (74 samples, 0.85%)</title><rect x="620.7" y="835.0" width="10.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="623.7" y="846.0"></text>
</g>
<g>
<title>java.lang.String (38 samples, 0.44%)</title><rect x="620.7" y="819.0" width="5.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="623.7" y="830.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (36 samples, 0.41%)</title><rect x="625.8" y="819.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="628.8" y="830.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.41%)</title><rect x="625.8" y="803.0" width="4.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="628.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (364 samples, 4.19%)</title><rect x="630.7" y="867.0" width="49.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="633.7" y="878.0">one/n..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (364 samples, 4.19%)</title><rect x="630.7" y="851.0" width="49.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="633.7" y="862.0">one/n..</text>
</g>
<g>
<title>char[] (181 samples, 2.08%)</title><rect x="630.7" y="835.0" width="24.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="633.7" y="846.0">c..</text>
</g>
<g>
<title>java.lang.String (75 samples, 0.86%)</title><rect x="655.3" y="835.0" width="10.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="658.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (108 samples, 1.24%)</title><rect x="665.5" y="835.0" width="14.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="668.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (108 samples, 1.24%)</title><rect x="665.5" y="819.0" width="14.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.5" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (108 samples, 1.24%)</title><rect x="665.5" y="803.0" width="14.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="668.5" y="814.0"></text>
</g>
<g>
<title>byte[] (108 samples, 1.24%)</title><rect x="665.5" y="787.0" width="14.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="668.5" y="798.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=65452] (1,559 samples, 17.95%)</title><rect x="680.2" y="947.0" width="211.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="683.2" y="958.0">[NIO Selector #3 tid=65452]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,559 samples, 17.95%)</title><rect x="680.2" y="931.0" width="211.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.2" y="942.0">one/nio/server/SelectorThrea..</text>
</g>
<g>
<title>one/nio/net/Session.process (1,559 samples, 17.95%)</title><rect x="680.2" y="915.0" width="211.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="683.2" y="926.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,559 samples, 17.95%)</title><rect x="680.2" y="899.0" width="211.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="683.2" y="910.0">one/nio/http/HttpSession.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,559 samples, 17.95%)</title><rect x="680.2" y="883.0" width="211.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="683.2" y="894.0">one/nio/http/HttpSession.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (732 samples, 8.43%)</title><rect x="680.2" y="867.0" width="99.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="683.2" y="878.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (732 samples, 8.43%)</title><rect x="680.2" y="851.0" width="99.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="683.2" y="862.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (659 samples, 7.59%)</title><rect x="680.2" y="835.0" width="89.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="683.2" y="846.0">RequestHan..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (178 samples, 2.05%)</title><rect x="680.2" y="819.0" width="24.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="683.2" y="830.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (178 samples, 2.05%)</title><rect x="680.2" y="803.0" width="24.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="683.2" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (129 samples, 1.49%)</title><rect x="680.2" y="787.0" width="17.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="683.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (129 samples, 1.49%)</title><rect x="680.2" y="771.0" width="17.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="683.2" y="782.0"></text>
</g>
<g>
<title>byte[] (129 samples, 1.49%)</title><rect x="680.2" y="755.0" width="17.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="683.2" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (49 samples, 0.56%)</title><rect x="697.7" y="787.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="700.7" y="798.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (49 samples, 0.56%)</title><rect x="697.7" y="771.0" width="6.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="700.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (73 samples, 0.84%)</title><rect x="704.4" y="819.0" width="9.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="707.4" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (73 samples, 0.84%)</title><rect x="704.4" y="803.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="707.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (73 samples, 0.84%)</title><rect x="704.4" y="787.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="707.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (73 samples, 0.84%)</title><rect x="704.4" y="771.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="707.4" y="782.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.35%)</title><rect x="704.4" y="755.0" width="4.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="707.4" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (43 samples, 0.50%)</title><rect x="708.4" y="755.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="711.4" y="766.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.50%)</title><rect x="708.4" y="739.0" width="5.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="711.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.put (408 samples, 4.70%)</title><rect x="714.3" y="819.0" width="55.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="717.3" y="830.0">ru/ma..</text>
</g>
<g>
<title>java/lang/String.getBytes (38 samples, 0.44%)</title><rect x="714.3" y="803.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="717.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (38 samples, 0.44%)</title><rect x="714.3" y="787.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="717.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (38 samples, 0.44%)</title><rect x="714.3" y="771.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="717.3" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (38 samples, 0.44%)</title><rect x="714.3" y="755.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="717.3" y="766.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.44%)</title><rect x="714.3" y="739.0" width="5.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="717.3" y="750.0"></text>
</g>
<g>
<title>one.nio.http.Response (29 samples, 0.33%)</title><rect x="719.4" y="803.0" width="4.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="722.4" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (147 samples, 1.69%)</title><rect x="723.4" y="803.0" width="20.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="726.4" y="814.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.74%)</title><rect x="723.4" y="787.0" width="8.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="726.4" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (52 samples, 0.60%)</title><rect x="732.1" y="787.0" width="7.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="735.1" y="798.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.36%)</title><rect x="739.1" y="787.0" width="4.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="742.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.upsert (194 samples, 2.23%)</title><rect x="743.4" y="803.0" width="26.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="746.4" y="814.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.upsert (194 samples, 2.23%)</title><rect x="743.4" y="787.0" width="26.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="746.4" y="798.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (71 samples, 0.82%)</title><rect x="743.4" y="771.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="746.4" y="782.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (71 samples, 0.82%)</title><rect x="743.4" y="755.0" width="9.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="746.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.02%)</title><rect x="753.0" y="771.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="756.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.02%)</title><rect x="753.0" y="755.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.02%)</title><rect x="753.0" y="739.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="756.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.upsert (120 samples, 1.38%)</title><rect x="753.3" y="771.0" width="16.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="756.3" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (71 samples, 0.82%)</title><rect x="753.3" y="755.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="756.3" y="766.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (71 samples, 0.82%)</title><rect x="753.3" y="739.0" width="9.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="756.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (18 samples, 0.21%)</title><rect x="762.9" y="755.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="765.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (18 samples, 0.21%)</title><rect x="762.9" y="739.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="765.9" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (4 samples, 0.05%)</title><rect x="762.9" y="723.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="765.9" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (14 samples, 0.16%)</title><rect x="763.5" y="723.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="766.5" y="734.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.valaubr.Value (31 samples, 0.36%)</title><rect x="765.4" y="755.0" width="4.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="768.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (73 samples, 0.84%)</title><rect x="769.7" y="835.0" width="9.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="772.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (73 samples, 0.84%)</title><rect x="769.7" y="819.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="772.7" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (73 samples, 0.84%)</title><rect x="769.7" y="803.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="772.7" y="814.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.38%)</title><rect x="769.7" y="787.0" width="4.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="772.7" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (40 samples, 0.46%)</title><rect x="774.2" y="787.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="777.2" y="798.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.46%)</title><rect x="774.2" y="771.0" width="5.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="777.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (397 samples, 4.57%)</title><rect x="779.6" y="867.0" width="54.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="782.6" y="878.0">one/n..</text>
</g>
<g>
<title>one.nio.http.Request (60 samples, 0.69%)</title><rect x="779.6" y="851.0" width="8.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="782.6" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (118 samples, 1.36%)</title><rect x="787.8" y="851.0" width="16.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="790.8" y="862.0"></text>
</g>
<g>
<title>java.lang.String[] (118 samples, 1.36%)</title><rect x="787.8" y="835.0" width="16.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="790.8" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (219 samples, 2.52%)</title><rect x="803.8" y="851.0" width="29.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="806.8" y="862.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (219 samples, 2.52%)</title><rect x="803.8" y="835.0" width="29.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="806.8" y="846.0">on..</text>
</g>
<g>
<title>char[] (114 samples, 1.31%)</title><rect x="803.8" y="819.0" width="15.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="806.8" y="830.0"></text>
</g>
<g>
<title>java.lang.String (41 samples, 0.47%)</title><rect x="819.3" y="819.0" width="5.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="822.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (64 samples, 0.74%)</title><rect x="824.9" y="819.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="827.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (64 samples, 0.74%)</title><rect x="824.9" y="803.0" width="8.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="827.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (64 samples, 0.74%)</title><rect x="824.9" y="787.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.9" y="798.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.74%)</title><rect x="824.9" y="771.0" width="8.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="827.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (30 samples, 0.35%)</title><rect x="833.6" y="867.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="836.6" y="878.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.35%)</title><rect x="833.6" y="851.0" width="4.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="836.6" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (79 samples, 0.91%)</title><rect x="837.7" y="867.0" width="10.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="840.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.substring (79 samples, 0.91%)</title><rect x="837.7" y="851.0" width="10.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="840.7" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (79 samples, 0.91%)</title><rect x="837.7" y="835.0" width="10.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="840.7" y="846.0"></text>
</g>
<g>
<title>java.lang.String (38 samples, 0.44%)</title><rect x="837.7" y="819.0" width="5.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="840.7" y="830.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (41 samples, 0.47%)</title><rect x="842.8" y="819.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="845.8" y="830.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.47%)</title><rect x="842.8" y="803.0" width="5.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="845.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (321 samples, 3.70%)</title><rect x="848.4" y="867.0" width="43.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="851.4" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (321 samples, 3.70%)</title><rect x="848.4" y="851.0" width="43.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="851.4" y="862.0">one/..</text>
</g>
<g>
<title>char[] (177 samples, 2.04%)</title><rect x="848.4" y="835.0" width="24.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="851.4" y="846.0">c..</text>
</g>
<g>
<title>java.lang.String (50 samples, 0.58%)</title><rect x="872.4" y="835.0" width="6.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="875.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (94 samples, 1.08%)</title><rect x="879.2" y="835.0" width="12.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="882.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (94 samples, 1.08%)</title><rect x="879.2" y="819.0" width="12.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="882.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (94 samples, 1.08%)</title><rect x="879.2" y="803.0" width="12.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="882.2" y="814.0"></text>
</g>
<g>
<title>byte[] (94 samples, 1.08%)</title><rect x="879.2" y="787.0" width="12.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="882.2" y="798.0"></text>
</g>
<g>
<title>[RMI TCP Connection(4)-127.0.0.1 tid=65510] (1,463 samples, 16.85%)</title><rect x="892.1" y="947.0" width="198.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="895.1" y="958.0">[RMI TCP Connection(4)-127..</text>
</g>
<g>
<title>java/lang/Thread.run (1,463 samples, 16.85%)</title><rect x="892.1" y="931.0" width="198.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="895.1" y="942.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,463 samples, 16.85%)</title><rect x="892.1" y="915.0" width="198.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="895.1" y="926.0">java/util/concurrent/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,463 samples, 16.85%)</title><rect x="892.1" y="899.0" width="198.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="895.1" y="910.0">java/util/concurrent/Threa..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (1,463 samples, 16.85%)</title><rect x="892.1" y="883.0" width="198.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="895.1" y="894.0">sun/rmi/transport/tcp/TCPT..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,463 samples, 16.85%)</title><rect x="892.1" y="867.0" width="198.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="895.1" y="878.0">java/security/AccessContro..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$92/1211696232.run (1,463 samples, 16.85%)</title><rect x="892.1" y="851.0" width="198.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="895.1" y="862.0">sun/rmi/transport/tcp/TCPT..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (1,463 samples, 16.85%)</title><rect x="892.1" y="835.0" width="198.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="895.1" y="846.0">sun/rmi/transport/tcp/TCPT..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (1,463 samples, 16.85%)</title><rect x="892.1" y="819.0" width="198.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="895.1" y="830.0">sun/rmi/transport/tcp/TCPT..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (1,463 samples, 16.85%)</title><rect x="892.1" y="803.0" width="198.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="895.1" y="814.0">sun/rmi/transport/tcp/TCPT..</text>
</g>
<g>
<title>java.io.DataOutputStream (21 samples, 0.24%)</title><rect x="892.1" y="787.0" width="2.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="895.1" y="798.0"></text>
</g>
<g>
<title>sun.rmi.transport.StreamRemoteCall (2 samples, 0.02%)</title><rect x="895.0" y="787.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="898.0" y="798.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (1,440 samples, 16.58%)</title><rect x="895.3" y="787.0" width="195.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="898.3" y="798.0">sun/rmi/transport/Transpo..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,203 samples, 13.85%)</title><rect x="895.4" y="771.0" width="163.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="898.4" y="782.0">java/security/AccessC..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (1,203 samples, 13.85%)</title><rect x="895.4" y="755.0" width="163.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="898.4" y="766.0">sun/rmi/transport/Tra..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (1,203 samples, 13.85%)</title><rect x="895.4" y="739.0" width="163.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="898.4" y="750.0">sun/rmi/transport/Tra..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (1,203 samples, 13.85%)</title><rect x="895.4" y="723.0" width="163.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="898.4" y="734.0">sun/rmi/server/Unicas..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (580 samples, 6.68%)</title><rect x="895.7" y="707.0" width="78.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="898.7" y="718.0">java/lang..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (580 samples, 6.68%)</title><rect x="895.7" y="691.0" width="78.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="898.7" y="702.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (12 samples, 0.14%)</title><rect x="895.7" y="675.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="898.7" y="686.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttribute (12 samples, 0.14%)</title><rect x="895.7" y="659.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="898.7" y="670.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (11 samples, 0.13%)</title><rect x="895.8" y="643.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="898.8" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.rspOutgoing (2 samples, 0.02%)</title><rect x="895.8" y="627.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="898.8" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (2 samples, 0.02%)</title><rect x="895.8" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="898.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1159370151.linkToTargetMethod (2 samples, 0.02%)</title><rect x="895.8" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="898.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1231668594.invoke (2 samples, 0.02%)</title><rect x="895.8" y="579.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="898.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="895.8" y="563.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="898.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.02%)</title><rect x="895.8" y="547.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="898.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.02%)</title><rect x="895.8" y="531.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="898.8" y="542.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.02%)</title><rect x="895.8" y="515.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="898.8" y="526.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (9 samples, 0.10%)</title><rect x="896.1" y="627.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="899.1" y="638.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (9 samples, 0.10%)</title><rect x="896.1" y="611.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="899.1" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttribute (9 samples, 0.10%)</title><rect x="896.1" y="595.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="899.1" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttribute (9 samples, 0.10%)</title><rect x="896.1" y="579.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="899.1" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getMBean (7 samples, 0.08%)</title><rect x="896.1" y="563.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="899.1" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieve (7 samples, 0.08%)</title><rect x="896.1" y="547.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="899.1" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieveNamedObject (7 samples, 0.08%)</title><rect x="896.1" y="531.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="899.1" y="542.0"></text>
</g>
<g>
<title>javax/management/ObjectName.getCanonicalKeyPropertyListString (4 samples, 0.05%)</title><rect x="896.1" y="515.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="899.1" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.05%)</title><rect x="896.1" y="499.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="899.1" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="896.1" y="483.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="899.1" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.03%)</title><rect x="896.2" y="467.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="899.2" y="478.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="896.2" y="451.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="899.2" y="462.0"></text>
</g>
<g>
<title>javax/management/ObjectName.getDomain (3 samples, 0.03%)</title><rect x="896.6" y="515.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="899.6" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.03%)</title><rect x="896.6" y="499.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="899.6" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.03%)</title><rect x="896.6" y="483.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="899.6" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.02%)</title><rect x="896.8" y="467.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="899.8" y="478.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.02%)</title><rect x="896.8" y="451.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="899.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (555 samples, 6.39%)</title><rect x="897.3" y="675.0" width="75.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="900.3" y="686.0">jdk/inte..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (555 samples, 6.39%)</title><rect x="897.3" y="659.0" width="75.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="900.3" y="670.0">javax/ma..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (435 samples, 5.01%)</title><rect x="897.4" y="643.0" width="59.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="900.4" y="654.0">javax/..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (435 samples, 5.01%)</title><rect x="897.4" y="627.0" width="59.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="900.4" y="638.0">javax/..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (435 samples, 5.01%)</title><rect x="897.4" y="611.0" width="59.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="900.4" y="622.0">javax/..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (435 samples, 5.01%)</title><rect x="897.4" y="595.0" width="59.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="900.4" y="606.0">com/su..</text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (435 samples, 5.01%)</title><rect x="897.4" y="579.0" width="59.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="900.4" y="590.0">com/su..</text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.nonDefaultDomain (3 samples, 0.03%)</title><rect x="897.4" y="563.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="900.4" y="574.0"></text>
</g>
<g>
<title>javax/management/ObjectName.getDomain (3 samples, 0.03%)</title><rect x="897.4" y="547.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="900.4" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.03%)</title><rect x="897.4" y="531.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.4" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.03%)</title><rect x="897.4" y="515.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="900.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.02%)</title><rect x="897.6" y="499.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="900.6" y="510.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.02%)</title><rect x="897.6" y="483.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="900.6" y="494.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (432 samples, 4.97%)</title><rect x="897.9" y="563.0" width="58.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="900.9" y="574.0">javax/..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (432 samples, 4.97%)</title><rect x="897.9" y="547.0" width="58.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.9" y="558.0">com/su..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (432 samples, 4.97%)</title><rect x="897.9" y="531.0" width="58.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="900.9" y="542.0">com/su..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (432 samples, 4.97%)</title><rect x="897.9" y="515.0" width="58.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="900.9" y="526.0">com/su..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (432 samples, 4.97%)</title><rect x="897.9" y="499.0" width="58.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="900.9" y="510.0">com/su..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (432 samples, 4.97%)</title><rect x="897.9" y="483.0" width="58.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="900.9" y="494.0">com/su..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (432 samples, 4.97%)</title><rect x="897.9" y="467.0" width="58.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="900.9" y="478.0">com/su..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (432 samples, 4.97%)</title><rect x="897.9" y="451.0" width="58.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="900.9" y="462.0">com/su..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (392 samples, 4.51%)</title><rect x="897.9" y="435.0" width="53.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="900.9" y="446.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (392 samples, 4.51%)</title><rect x="897.9" y="419.0" width="53.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="900.9" y="430.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (392 samples, 4.51%)</title><rect x="897.9" y="403.0" width="53.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="900.9" y="414.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (392 samples, 4.51%)</title><rect x="897.9" y="387.0" width="53.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.9" y="398.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (137 samples, 1.58%)</title><rect x="897.9" y="371.0" width="18.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="900.9" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (104 samples, 1.20%)</title><rect x="897.9" y="355.0" width="14.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.9" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (97 samples, 1.12%)</title><rect x="897.9" y="339.0" width="13.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="900.9" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (97 samples, 1.12%)</title><rect x="897.9" y="323.0" width="13.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="900.9" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.02%)</title><rect x="897.9" y="307.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="900.9" y="318.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (54 samples, 0.62%)</title><rect x="898.3" y="307.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="901.3" y="318.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (6 samples, 0.07%)</title><rect x="898.3" y="291.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="901.3" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (3 samples, 0.03%)</title><rect x="898.3" y="275.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="901.3" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (3 samples, 0.03%)</title><rect x="898.3" y="259.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="901.3" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (3 samples, 0.03%)</title><rect x="898.3" y="243.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="901.3" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (3 samples, 0.03%)</title><rect x="898.3" y="227.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="901.3" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (3 samples, 0.03%)</title><rect x="898.3" y="211.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="901.3" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySet (3 samples, 0.03%)</title><rect x="898.7" y="275.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="901.7" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (3 samples, 0.03%)</title><rect x="898.7" y="259.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="901.7" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (3 samples, 0.03%)</title><rect x="898.7" y="243.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="901.7" y="254.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (48 samples, 0.55%)</title><rect x="899.1" y="291.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="902.1" y="302.0"></text>
</g>
<g>
<title>java.util.TreeMap (6 samples, 0.07%)</title><rect x="899.1" y="275.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="902.1" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (42 samples, 0.48%)</title><rect x="899.9" y="275.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="902.9" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (42 samples, 0.48%)</title><rect x="899.9" y="259.0" width="5.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="902.9" y="270.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (40 samples, 0.46%)</title><rect x="905.6" y="307.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="908.6" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (40 samples, 0.46%)</title><rect x="905.6" y="291.0" width="5.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="908.6" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (7 samples, 0.08%)</title><rect x="911.0" y="339.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="914.0" y="350.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeData[] (7 samples, 0.08%)</title><rect x="911.0" y="323.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="914.0" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (33 samples, 0.38%)</title><rect x="912.0" y="355.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="915.0" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="912.0" y="339.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="915.0" y="350.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (5 samples, 0.06%)</title><rect x="912.4" y="339.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="915.4" y="350.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (16 samples, 0.18%)</title><rect x="913.1" y="339.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="916.1" y="350.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (3 samples, 0.03%)</title><rect x="913.1" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="916.1" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySet (2 samples, 0.02%)</title><rect x="913.2" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="916.2" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (2 samples, 0.02%)</title><rect x="913.2" y="291.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="916.2" y="302.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (2 samples, 0.02%)</title><rect x="913.2" y="275.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="916.2" y="286.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (13 samples, 0.15%)</title><rect x="913.5" y="323.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="916.5" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.05%)</title><rect x="913.5" y="307.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="916.5" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (9 samples, 0.10%)</title><rect x="914.0" y="307.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="917.0" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (9 samples, 0.10%)</title><rect x="914.0" y="291.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="917.0" y="302.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (9 samples, 0.10%)</title><rect x="915.2" y="339.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="918.2" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.09%)</title><rect x="915.2" y="323.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="918.2" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.18%)</title><rect x="916.5" y="371.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="919.5" y="382.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (5 samples, 0.06%)</title><rect x="918.6" y="371.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="921.6" y="382.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (127 samples, 1.46%)</title><rect x="919.3" y="371.0" width="17.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="922.3" y="382.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (8 samples, 0.09%)</title><rect x="919.3" y="355.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="922.3" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (6 samples, 0.07%)</title><rect x="919.3" y="339.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="922.3" y="350.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (6 samples, 0.07%)</title><rect x="919.3" y="323.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="922.3" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (6 samples, 0.07%)</title><rect x="919.3" y="307.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="922.3" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (6 samples, 0.07%)</title><rect x="919.3" y="291.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="922.3" y="302.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (6 samples, 0.07%)</title><rect x="919.3" y="275.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="922.3" y="286.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeType.isValue (2 samples, 0.02%)</title><rect x="920.1" y="339.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="923.1" y="350.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeType.isAssignableFrom (2 samples, 0.02%)</title><rect x="920.1" y="323.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="923.1" y="334.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (2 samples, 0.02%)</title><rect x="920.1" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="923.1" y="318.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (119 samples, 1.37%)</title><rect x="920.4" y="355.0" width="16.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="923.4" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap (5 samples, 0.06%)</title><rect x="920.4" y="339.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="923.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (114 samples, 1.31%)</title><rect x="921.1" y="339.0" width="15.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="924.1" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (114 samples, 1.31%)</title><rect x="921.1" y="323.0" width="15.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="924.1" y="334.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (107 samples, 1.23%)</title><rect x="936.6" y="371.0" width="14.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="939.6" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (100 samples, 1.15%)</title><rect x="936.6" y="355.0" width="13.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="939.6" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.08%)</title><rect x="950.2" y="355.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="953.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.08%)</title><rect x="950.2" y="339.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="953.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (7 samples, 0.08%)</title><rect x="950.2" y="323.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="953.2" y="334.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (7 samples, 0.08%)</title><rect x="950.2" y="307.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="953.2" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.08%)</title><rect x="950.2" y="291.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="953.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.08%)</title><rect x="950.2" y="275.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="953.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor12.invoke (2 samples, 0.02%)</title><rect x="950.2" y="259.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="953.2" y="270.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getLockedMonitors (2 samples, 0.02%)</title><rect x="950.2" y="243.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="953.2" y="254.0"></text>
</g>
<g>
<title>java/lang/Object.clone (2 samples, 0.02%)</title><rect x="950.2" y="227.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="953.2" y="238.0"></text>
</g>
<g>
<title>java.lang.management.MonitorInfo[] (2 samples, 0.02%)</title><rect x="950.2" y="211.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="953.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor13.invoke (2 samples, 0.02%)</title><rect x="950.4" y="259.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="953.4" y="270.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getLockedSynchronizers (2 samples, 0.02%)</title><rect x="950.4" y="243.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="953.4" y="254.0"></text>
</g>
<g>
<title>java/lang/Object.clone (2 samples, 0.02%)</title><rect x="950.4" y="227.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="953.4" y="238.0"></text>
</g>
<g>
<title>java.lang.management.LockInfo[] (2 samples, 0.02%)</title><rect x="950.4" y="211.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="953.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor15.invoke (3 samples, 0.03%)</title><rect x="950.7" y="259.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="953.7" y="270.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getStackTrace (3 samples, 0.03%)</title><rect x="950.7" y="243.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="953.7" y="254.0"></text>
</g>
<g>
<title>java/lang/Object.clone (3 samples, 0.03%)</title><rect x="950.7" y="227.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="953.7" y="238.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement[] (3 samples, 0.03%)</title><rect x="950.7" y="211.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="953.7" y="222.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (40 samples, 0.46%)</title><rect x="951.1" y="435.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="954.1" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (40 samples, 0.46%)</title><rect x="951.1" y="419.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="954.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (40 samples, 0.46%)</title><rect x="951.1" y="403.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="954.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (40 samples, 0.46%)</title><rect x="951.1" y="387.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="954.1" y="398.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (40 samples, 0.46%)</title><rect x="951.1" y="371.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="954.1" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (40 samples, 0.46%)</title><rect x="951.1" y="355.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="954.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (40 samples, 0.46%)</title><rect x="951.1" y="339.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="954.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (40 samples, 0.46%)</title><rect x="951.1" y="323.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="954.1" y="334.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (40 samples, 0.46%)</title><rect x="951.1" y="307.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="954.1" y="318.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (40 samples, 0.46%)</title><rect x="951.1" y="291.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="954.1" y="302.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement[] (8 samples, 0.09%)</title><rect x="951.1" y="275.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="954.1" y="286.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement (3 samples, 0.03%)</title><rect x="952.2" y="275.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="955.2" y="286.0"></text>
</g>
<g>
<title>java.lang.management.ThreadInfo (18 samples, 0.21%)</title><rect x="952.6" y="275.0" width="2.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="955.6" y="286.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.&lt;init&gt; (11 samples, 0.13%)</title><rect x="955.1" y="275.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="958.1" y="286.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.initialize (11 samples, 0.13%)</title><rect x="955.1" y="259.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="958.1" y="270.0"></text>
</g>
<g>
<title>java.lang.management.LockInfo (3 samples, 0.03%)</title><rect x="955.1" y="243.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="958.1" y="254.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (2 samples, 0.02%)</title><rect x="955.5" y="243.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="958.5" y="254.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (2 samples, 0.02%)</title><rect x="955.5" y="227.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="958.5" y="238.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.02%)</title><rect x="955.5" y="211.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="958.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.07%)</title><rect x="955.7" y="243.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="958.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (6 samples, 0.07%)</title><rect x="955.7" y="227.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="958.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1010931249.invoke (6 samples, 0.07%)</title><rect x="955.7" y="211.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="958.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.07%)</title><rect x="955.7" y="195.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="958.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (5 samples, 0.06%)</title><rect x="955.9" y="179.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="958.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (5 samples, 0.06%)</title><rect x="955.9" y="163.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="958.9" y="174.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.06%)</title><rect x="955.9" y="147.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="958.9" y="158.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getClassLoaderFor (11 samples, 0.13%)</title><rect x="956.6" y="643.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="959.6" y="654.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.withPermissions (10 samples, 0.12%)</title><rect x="956.7" y="627.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="959.7" y="638.0"></text>
</g>
<g>
<title>java/security/Permissions.&lt;init&gt; (2 samples, 0.02%)</title><rect x="957.0" y="611.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="960.0" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentHashMap (2 samples, 0.02%)</title><rect x="957.0" y="595.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="960.0" y="606.0"></text>
</g>
<g>
<title>java/security/Permissions.add (5 samples, 0.06%)</title><rect x="957.2" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="960.2" y="622.0"></text>
</g>
<g>
<title>java/security/Permissions.getPermissionCollection (3 samples, 0.03%)</title><rect x="957.2" y="595.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="960.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (3 samples, 0.03%)</title><rect x="957.2" y="579.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="960.2" y="590.0"></text>
</g>
<g>
<title>java/security/PermissionsHash.add (2 samples, 0.02%)</title><rect x="957.6" y="595.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="960.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.put (2 samples, 0.02%)</title><rect x="957.6" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="960.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (2 samples, 0.02%)</title><rect x="957.6" y="563.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="960.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.initTable (2 samples, 0.02%)</title><rect x="957.6" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="960.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentHashMap$Node[] (2 samples, 0.02%)</title><rect x="957.6" y="531.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="960.6" y="542.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (108 samples, 1.24%)</title><rect x="958.0" y="643.0" width="14.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="961.0" y="654.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (39 samples, 0.45%)</title><rect x="958.0" y="627.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="961.0" y="638.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (39 samples, 0.45%)</title><rect x="958.0" y="611.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="961.0" y="622.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (39 samples, 0.45%)</title><rect x="958.0" y="595.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="961.0" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/util/OrderClassLoaders.&lt;init&gt; (11 samples, 0.13%)</title><rect x="958.0" y="579.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="961.0" y="590.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (11 samples, 0.13%)</title><rect x="958.0" y="563.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="961.0" y="574.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (11 samples, 0.13%)</title><rect x="958.0" y="547.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="961.0" y="558.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (7 samples, 0.08%)</title><rect x="958.5" y="531.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="961.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.03%)</title><rect x="959.0" y="515.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="962.0" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.03%)</title><rect x="959.0" y="499.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="962.0" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.03%)</title><rect x="959.0" y="483.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="962.0" y="494.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="959.0" y="467.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="962.0" y="478.0"></text>
</g>
<g>
<title>javax.management.remote.rmi.RMIConnectionImpl$CombinedClassLoader (2 samples, 0.02%)</title><rect x="959.5" y="579.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="962.5" y="590.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader.&lt;init&gt; (26 samples, 0.30%)</title><rect x="959.8" y="579.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="962.8" y="590.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (12 samples, 0.14%)</title><rect x="959.8" y="563.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="962.8" y="574.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (12 samples, 0.14%)</title><rect x="959.8" y="547.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="962.8" y="558.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (8 samples, 0.09%)</title><rect x="959.8" y="531.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="962.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.02%)</title><rect x="960.0" y="515.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="963.0" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.02%)</title><rect x="960.0" y="499.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="963.0" y="510.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.02%)</title><rect x="960.0" y="483.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="963.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.06%)</title><rect x="960.2" y="515.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="963.2" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.06%)</title><rect x="960.2" y="499.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="963.2" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.06%)</title><rect x="960.2" y="483.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="963.2" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.06%)</title><rect x="960.2" y="467.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="963.2" y="478.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="960.2" y="451.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="963.2" y="462.0"></text>
</g>
<g>
<title>java/security/ProtectionDomain.&lt;init&gt; (2 samples, 0.02%)</title><rect x="960.9" y="531.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="963.9" y="542.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain$Key (2 samples, 0.02%)</title><rect x="960.9" y="515.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="963.9" y="526.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (2 samples, 0.02%)</title><rect x="961.2" y="531.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="964.2" y="542.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (2 samples, 0.02%)</title><rect x="961.2" y="515.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="964.2" y="526.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (2 samples, 0.02%)</title><rect x="961.2" y="499.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="964.2" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.02%)</title><rect x="961.2" y="483.0" width="0.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="964.2" y="494.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader$ClassLoaderWrapper.&lt;init&gt; (13 samples, 0.15%)</title><rect x="961.6" y="563.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="964.6" y="574.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (13 samples, 0.15%)</title><rect x="961.6" y="547.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="964.6" y="558.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (13 samples, 0.15%)</title><rect x="961.6" y="531.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="964.6" y="542.0"></text>
</g>
<g>
<title>java.util.Hashtable (2 samples, 0.02%)</title><rect x="961.7" y="515.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="964.7" y="526.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (7 samples, 0.08%)</title><rect x="962.0" y="515.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="965.0" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.06%)</title><rect x="962.1" y="499.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="965.1" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.06%)</title><rect x="962.1" y="483.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="965.1" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.06%)</title><rect x="962.1" y="467.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="965.1" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.06%)</title><rect x="962.1" y="451.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="965.1" y="462.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.06%)</title><rect x="962.1" y="435.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="965.1" y="446.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (69 samples, 0.79%)</title><rect x="963.3" y="627.0" width="9.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="966.3" y="638.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (68 samples, 0.78%)</title><rect x="963.3" y="611.0" width="9.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="966.3" y="622.0"></text>
</g>
<g>
<title>java.rmi.MarshalledObject$MarshalledObjectInputStream (4 samples, 0.05%)</title><rect x="963.3" y="595.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="966.3" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (25 samples, 0.29%)</title><rect x="963.9" y="595.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="966.9" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (25 samples, 0.29%)</title><rect x="963.9" y="579.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="966.9" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (25 samples, 0.29%)</title><rect x="963.9" y="563.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="966.9" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (25 samples, 0.29%)</title><rect x="963.9" y="547.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="966.9" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (25 samples, 0.29%)</title><rect x="963.9" y="531.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="966.9" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (5 samples, 0.06%)</title><rect x="963.9" y="515.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="966.9" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (5 samples, 0.06%)</title><rect x="963.9" y="499.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="966.9" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (5 samples, 0.06%)</title><rect x="963.9" y="483.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="966.9" y="494.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (2 samples, 0.02%)</title><rect x="963.9" y="467.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="966.9" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (2 samples, 0.02%)</title><rect x="964.2" y="467.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="967.2" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (20 samples, 0.23%)</title><rect x="964.6" y="515.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="967.6" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (16 samples, 0.18%)</title><rect x="964.6" y="499.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="967.6" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (16 samples, 0.18%)</title><rect x="964.6" y="483.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="967.6" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (7 samples, 0.08%)</title><rect x="964.7" y="467.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="967.7" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (7 samples, 0.08%)</title><rect x="964.7" y="451.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="967.7" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (4 samples, 0.05%)</title><rect x="964.8" y="435.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.8" y="446.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (2 samples, 0.02%)</title><rect x="964.8" y="419.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="967.8" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (2 samples, 0.02%)</title><rect x="965.1" y="419.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="968.1" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (2 samples, 0.02%)</title><rect x="965.1" y="403.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="968.1" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (2 samples, 0.02%)</title><rect x="965.1" y="387.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="968.1" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (2 samples, 0.02%)</title><rect x="965.1" y="371.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="968.1" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (2 samples, 0.02%)</title><rect x="965.4" y="435.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="968.4" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (7 samples, 0.08%)</title><rect x="965.7" y="467.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="968.7" y="478.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (3 samples, 0.03%)</title><rect x="965.7" y="451.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="968.7" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (4 samples, 0.05%)</title><rect x="966.1" y="451.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="969.1" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (4 samples, 0.05%)</title><rect x="966.7" y="499.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="969.7" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (3 samples, 0.03%)</title><rect x="966.9" y="483.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="969.9" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (3 samples, 0.03%)</title><rect x="966.9" y="467.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="969.9" y="478.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject$MarshalledObjectInputStream.&lt;init&gt; (39 samples, 0.45%)</title><rect x="967.3" y="595.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="970.3" y="606.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (39 samples, 0.45%)</title><rect x="967.3" y="579.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="970.3" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (39 samples, 0.45%)</title><rect x="967.3" y="563.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="970.3" y="574.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable (3 samples, 0.03%)</title><rect x="967.4" y="547.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="970.4" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (31 samples, 0.36%)</title><rect x="967.8" y="547.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="970.8" y="558.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="967.8" y="531.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="970.8" y="542.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.14%)</title><rect x="968.4" y="531.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="971.4" y="542.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.03%)</title><rect x="970.0" y="531.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="973.0" y="542.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.02%)</title><rect x="970.4" y="531.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="973.4" y="542.0"></text>
</g>
<g>
<title>java.io.DataInputStream (2 samples, 0.02%)</title><rect x="970.7" y="531.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="973.7" y="542.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (7 samples, 0.08%)</title><rect x="971.1" y="531.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="974.1" y="542.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="971.1" y="515.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="974.1" y="526.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.03%)</title><rect x="971.6" y="515.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="974.6" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (4 samples, 0.05%)</title><rect x="972.0" y="547.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="975.0" y="558.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.02%)</title><rect x="972.0" y="531.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="975.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor38.invoke (9 samples, 0.10%)</title><rect x="972.7" y="675.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="975.7" y="686.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttributes (9 samples, 0.10%)</title><rect x="972.7" y="659.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="975.7" y="670.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (9 samples, 0.10%)</title><rect x="972.7" y="643.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="975.7" y="654.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (7 samples, 0.08%)</title><rect x="973.0" y="627.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="976.0" y="638.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (7 samples, 0.08%)</title><rect x="973.0" y="611.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="976.0" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttributes (7 samples, 0.08%)</title><rect x="973.0" y="595.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="976.0" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttributes (7 samples, 0.08%)</title><rect x="973.0" y="579.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="976.0" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getMBean (3 samples, 0.03%)</title><rect x="973.0" y="563.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="976.0" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieve (3 samples, 0.03%)</title><rect x="973.0" y="547.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="976.0" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieveNamedObject (3 samples, 0.03%)</title><rect x="973.0" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="976.0" y="542.0"></text>
</g>
<g>
<title>javax/management/ObjectName.getDomain (3 samples, 0.03%)</title><rect x="973.0" y="515.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="976.0" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.03%)</title><rect x="973.0" y="499.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="976.0" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.03%)</title><rect x="973.0" y="483.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="976.0" y="494.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.03%)</title><rect x="973.0" y="467.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="976.0" y="478.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.getAttributes (3 samples, 0.03%)</title><rect x="973.5" y="563.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="976.5" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttributes (3 samples, 0.03%)</title><rect x="973.5" y="547.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="976.5" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttribute (2 samples, 0.02%)</title><rect x="973.5" y="531.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="976.5" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.getAttribute (2 samples, 0.02%)</title><rect x="973.5" y="515.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="976.5" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (2 samples, 0.02%)</title><rect x="973.5" y="499.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="976.5" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (2 samples, 0.02%)</title><rect x="973.5" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="976.5" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (2 samples, 0.02%)</title><rect x="973.5" y="467.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="976.5" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (2 samples, 0.02%)</title><rect x="973.5" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="976.5" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (2 samples, 0.02%)</title><rect x="973.5" y="435.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="976.5" y="446.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.02%)</title><rect x="973.5" y="419.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="976.5" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.02%)</title><rect x="973.5" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="976.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.02%)</title><rect x="973.5" y="387.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="976.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (2 samples, 0.02%)</title><rect x="973.5" y="371.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="976.5" y="382.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (2 samples, 0.02%)</title><rect x="973.5" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="976.5" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.02%)</title><rect x="973.5" y="339.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="976.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.02%)</title><rect x="973.5" y="323.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="976.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor44.invoke (2 samples, 0.02%)</title><rect x="973.5" y="307.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="976.5" y="318.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getAllThreadIds (2 samples, 0.02%)</title><rect x="973.5" y="291.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="976.5" y="302.0"></text>
</g>
<g>
<title>long[] (2 samples, 0.02%)</title><rect x="973.5" y="275.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="976.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor43.invoke (4 samples, 0.05%)</title><rect x="973.9" y="675.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="976.9" y="686.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getDefaultDomain (4 samples, 0.05%)</title><rect x="973.9" y="659.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="976.9" y="670.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (4 samples, 0.05%)</title><rect x="973.9" y="643.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="976.9" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.rspOutgoing (4 samples, 0.05%)</title><rect x="973.9" y="627.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="976.9" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (4 samples, 0.05%)</title><rect x="973.9" y="611.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="976.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1159370151.linkToTargetMethod (4 samples, 0.05%)</title><rect x="973.9" y="595.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="976.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1231668594.invoke (4 samples, 0.05%)</title><rect x="973.9" y="579.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="976.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="973.9" y="563.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="976.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.03%)</title><rect x="974.1" y="547.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="977.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.03%)</title><rect x="974.1" y="531.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="977.1" y="542.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="974.1" y="515.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="977.1" y="526.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (251 samples, 2.89%)</title><rect x="974.5" y="707.0" width="34.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="977.5" y="718.0">su..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (251 samples, 2.89%)</title><rect x="974.5" y="691.0" width="34.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="977.5" y="702.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (251 samples, 2.89%)</title><rect x="974.5" y="675.0" width="34.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="977.5" y="686.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (243 samples, 2.80%)</title><rect x="974.5" y="659.0" width="33.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="977.5" y="670.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (243 samples, 2.80%)</title><rect x="974.5" y="643.0" width="33.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="977.5" y="654.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (240 samples, 2.76%)</title><rect x="974.5" y="627.0" width="32.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="977.5" y="638.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (3 samples, 0.03%)</title><rect x="974.5" y="611.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="977.5" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (3 samples, 0.03%)</title><rect x="974.5" y="595.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="977.5" y="606.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.02%)</title><rect x="974.5" y="579.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="977.5" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (237 samples, 2.73%)</title><rect x="974.9" y="611.0" width="32.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="977.9" y="622.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (237 samples, 2.73%)</title><rect x="974.9" y="595.0" width="32.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="977.9" y="606.0">ja..</text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.09%)</title><rect x="974.9" y="579.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="977.9" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (229 samples, 2.64%)</title><rect x="976.0" y="579.0" width="31.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="979.0" y="590.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (222 samples, 2.56%)</title><rect x="976.0" y="563.0" width="30.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="979.0" y="574.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (11 samples, 0.13%)</title><rect x="976.0" y="547.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="979.0" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (10 samples, 0.12%)</title><rect x="976.1" y="531.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="979.1" y="542.0"></text>
</g>
<g>
<title>int[] (8 samples, 0.09%)</title><rect x="976.1" y="515.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="979.1" y="526.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.02%)</title><rect x="977.2" y="515.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="980.2" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (211 samples, 2.43%)</title><rect x="977.5" y="547.0" width="28.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="980.5" y="558.0">ja..</text>
</g>
<g>
<title>java.io.SerialCallbackContext (6 samples, 0.07%)</title><rect x="977.5" y="531.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="980.5" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (33 samples, 0.38%)</title><rect x="978.3" y="531.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="981.3" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (33 samples, 0.38%)</title><rect x="978.3" y="515.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="981.3" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (33 samples, 0.38%)</title><rect x="978.3" y="499.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="981.3" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (33 samples, 0.38%)</title><rect x="978.3" y="483.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="981.3" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (33 samples, 0.38%)</title><rect x="978.3" y="467.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="981.3" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (33 samples, 0.38%)</title><rect x="978.3" y="451.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="981.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (33 samples, 0.38%)</title><rect x="978.3" y="435.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="981.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (33 samples, 0.38%)</title><rect x="978.3" y="419.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="981.3" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (33 samples, 0.38%)</title><rect x="978.3" y="403.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="981.3" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (32 samples, 0.37%)</title><rect x="978.4" y="387.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="981.4" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (32 samples, 0.37%)</title><rect x="978.4" y="371.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="981.4" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (15 samples, 0.17%)</title><rect x="978.4" y="355.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="981.4" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (15 samples, 0.17%)</title><rect x="978.4" y="339.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="981.4" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (15 samples, 0.17%)</title><rect x="978.4" y="323.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="981.4" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (14 samples, 0.16%)</title><rect x="978.6" y="307.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="981.6" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (11 samples, 0.13%)</title><rect x="978.6" y="291.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="981.6" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (11 samples, 0.13%)</title><rect x="978.6" y="275.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="981.6" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (5 samples, 0.06%)</title><rect x="978.6" y="259.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="981.6" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (5 samples, 0.06%)</title><rect x="978.6" y="243.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="981.6" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (5 samples, 0.06%)</title><rect x="978.6" y="227.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="981.6" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (2 samples, 0.02%)</title><rect x="978.6" y="211.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="981.6" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (2 samples, 0.02%)</title><rect x="978.6" y="195.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="981.6" y="206.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.02%)</title><rect x="978.6" y="179.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="981.6" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.03%)</title><rect x="978.8" y="211.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="981.8" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (3 samples, 0.03%)</title><rect x="978.8" y="195.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="981.8" y="206.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.03%)</title><rect x="978.8" y="179.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="981.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.03%)</title><rect x="978.8" y="163.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="981.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (3 samples, 0.03%)</title><rect x="978.8" y="147.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="981.8" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (3 samples, 0.03%)</title><rect x="978.8" y="131.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="981.8" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (3 samples, 0.03%)</title><rect x="978.8" y="115.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="981.8" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.03%)</title><rect x="978.8" y="99.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="981.8" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.02%)</title><rect x="978.8" y="83.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="981.8" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.02%)</title><rect x="978.8" y="67.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="981.8" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.02%)</title><rect x="978.8" y="51.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="981.8" y="62.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.02%)</title><rect x="978.8" y="35.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="981.8" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (6 samples, 0.07%)</title><rect x="979.2" y="259.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="982.2" y="270.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.07%)</title><rect x="979.2" y="243.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="982.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.07%)</title><rect x="979.2" y="227.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="982.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (6 samples, 0.07%)</title><rect x="979.2" y="211.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="982.2" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (6 samples, 0.07%)</title><rect x="979.2" y="195.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="982.2" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (5 samples, 0.06%)</title><rect x="979.4" y="179.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="982.4" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (5 samples, 0.06%)</title><rect x="979.4" y="163.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="982.4" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (4 samples, 0.05%)</title><rect x="979.4" y="147.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="982.4" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (4 samples, 0.05%)</title><rect x="979.4" y="131.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="982.4" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (4 samples, 0.05%)</title><rect x="979.4" y="115.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="982.4" y="126.0"></text>
</g>
<g>
<title>int[] (3 samples, 0.03%)</title><rect x="979.4" y="99.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="982.4" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (3 samples, 0.03%)</title><rect x="980.1" y="291.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="983.1" y="302.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (3 samples, 0.03%)</title><rect x="980.1" y="275.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="983.1" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (8 samples, 0.09%)</title><rect x="980.5" y="355.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="983.5" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (8 samples, 0.09%)</title><rect x="980.5" y="339.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="983.5" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (5 samples, 0.06%)</title><rect x="980.5" y="323.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="983.5" y="334.0"></text>
</g>
<g>
<title>int[] (3 samples, 0.03%)</title><rect x="980.5" y="307.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="983.5" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.02%)</title><rect x="980.9" y="307.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="983.9" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (3 samples, 0.03%)</title><rect x="981.1" y="323.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="984.1" y="334.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.02%)</title><rect x="981.1" y="307.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="984.1" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (9 samples, 0.10%)</title><rect x="981.6" y="355.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="984.6" y="366.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (9 samples, 0.10%)</title><rect x="981.6" y="339.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="984.6" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (172 samples, 1.98%)</title><rect x="982.8" y="531.0" width="23.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="985.8" y="542.0">j..</text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="982.8" y="515.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="985.8" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (169 samples, 1.95%)</title><rect x="983.2" y="515.0" width="23.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="986.2" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (169 samples, 1.95%)</title><rect x="983.2" y="499.0" width="23.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="986.2" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (169 samples, 1.95%)</title><rect x="983.2" y="483.0" width="23.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="986.2" y="494.0">j..</text>
</g>
<g>
<title>java/util/TreeMap.writeObject (169 samples, 1.95%)</title><rect x="983.2" y="467.0" width="23.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="986.2" y="478.0">j..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (5 samples, 0.06%)</title><rect x="983.2" y="451.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="986.2" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (5 samples, 0.06%)</title><rect x="983.2" y="435.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="986.2" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.06%)</title><rect x="983.2" y="419.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="986.2" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (162 samples, 1.87%)</title><rect x="983.9" y="451.0" width="22.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="986.9" y="462.0">j..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (162 samples, 1.87%)</title><rect x="983.9" y="435.0" width="22.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="986.9" y="446.0">j..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (43 samples, 0.50%)</title><rect x="983.9" y="419.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="986.9" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (6 samples, 0.07%)</title><rect x="983.9" y="403.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="986.9" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (5 samples, 0.06%)</title><rect x="983.9" y="387.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="986.9" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="984.1" y="371.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="987.1" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (37 samples, 0.43%)</title><rect x="984.7" y="403.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="987.7" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (33 samples, 0.38%)</title><rect x="984.7" y="387.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="987.7" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (33 samples, 0.38%)</title><rect x="984.7" y="371.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="987.7" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (33 samples, 0.38%)</title><rect x="984.7" y="355.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="987.7" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.02%)</title><rect x="984.7" y="339.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="987.7" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (31 samples, 0.36%)</title><rect x="985.0" y="339.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="988.0" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (23 samples, 0.26%)</title><rect x="985.0" y="323.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="988.0" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (23 samples, 0.26%)</title><rect x="985.0" y="307.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="988.0" y="318.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (4 samples, 0.05%)</title><rect x="985.0" y="291.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="988.0" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (19 samples, 0.22%)</title><rect x="985.5" y="291.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="988.5" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (18 samples, 0.21%)</title><rect x="985.6" y="275.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="988.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (18 samples, 0.21%)</title><rect x="985.6" y="259.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="988.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (18 samples, 0.21%)</title><rect x="985.6" y="243.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="988.6" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (18 samples, 0.21%)</title><rect x="985.6" y="227.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="988.6" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (2 samples, 0.02%)</title><rect x="985.6" y="211.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="988.6" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.02%)</title><rect x="985.6" y="195.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="988.6" y="206.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.02%)</title><rect x="985.6" y="179.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="988.6" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (14 samples, 0.16%)</title><rect x="985.9" y="211.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="988.9" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (14 samples, 0.16%)</title><rect x="985.9" y="195.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="988.9" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (14 samples, 0.16%)</title><rect x="985.9" y="179.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="988.9" y="190.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (14 samples, 0.16%)</title><rect x="985.9" y="163.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="988.9" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (2 samples, 0.02%)</title><rect x="987.8" y="211.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="990.8" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (2 samples, 0.02%)</title><rect x="987.8" y="195.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="990.8" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (8 samples, 0.09%)</title><rect x="988.1" y="323.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="991.1" y="334.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (8 samples, 0.09%)</title><rect x="988.1" y="307.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="991.1" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (4 samples, 0.05%)</title><rect x="989.2" y="387.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="992.2" y="398.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (4 samples, 0.05%)</title><rect x="989.2" y="371.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="992.2" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (46 samples, 0.53%)</title><rect x="989.7" y="419.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="992.7" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (29 samples, 0.33%)</title><rect x="989.7" y="403.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="992.7" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (29 samples, 0.33%)</title><rect x="989.7" y="387.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="992.7" y="398.0"></text>
</g>
<g>
<title>int[] (3 samples, 0.03%)</title><rect x="989.7" y="371.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="992.7" y="382.0"></text>
</g>
<g>
<title>int[] (7 samples, 0.08%)</title><rect x="990.1" y="371.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="993.1" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.07%)</title><rect x="991.1" y="371.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="994.1" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.15%)</title><rect x="991.9" y="371.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="994.9" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (17 samples, 0.20%)</title><rect x="993.7" y="403.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="996.7" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (17 samples, 0.20%)</title><rect x="993.7" y="387.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="996.7" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.02%)</title><rect x="993.8" y="371.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="996.8" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (14 samples, 0.16%)</title><rect x="994.1" y="371.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="997.1" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (13 samples, 0.15%)</title><rect x="994.1" y="355.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="997.1" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (13 samples, 0.15%)</title><rect x="994.1" y="339.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="997.1" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (13 samples, 0.15%)</title><rect x="994.1" y="323.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="997.1" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.02%)</title><rect x="994.1" y="307.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="997.1" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (11 samples, 0.13%)</title><rect x="994.3" y="307.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="997.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (11 samples, 0.13%)</title><rect x="994.3" y="291.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="997.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (11 samples, 0.13%)</title><rect x="994.3" y="275.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="997.3" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (11 samples, 0.13%)</title><rect x="994.3" y="259.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="997.3" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (11 samples, 0.13%)</title><rect x="994.3" y="243.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="997.3" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (11 samples, 0.13%)</title><rect x="994.3" y="227.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="997.3" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (8 samples, 0.09%)</title><rect x="994.3" y="211.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="997.3" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (8 samples, 0.09%)</title><rect x="994.3" y="195.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="997.3" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (8 samples, 0.09%)</title><rect x="994.3" y="179.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="997.3" y="190.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.02%)</title><rect x="994.3" y="163.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="997.3" y="174.0"></text>
</g>
<g>
<title>int[] (3 samples, 0.03%)</title><rect x="994.6" y="163.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="997.6" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="995.0" y="163.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="998.0" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (3 samples, 0.03%)</title><rect x="995.4" y="211.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="998.4" y="222.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (3 samples, 0.03%)</title><rect x="995.4" y="195.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="998.4" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (17 samples, 0.20%)</title><rect x="996.0" y="419.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="999.0" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (17 samples, 0.20%)</title><rect x="996.0" y="403.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="999.0" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (15 samples, 0.17%)</title><rect x="996.0" y="387.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="999.0" y="398.0"></text>
</g>
<g>
<title>int[] (4 samples, 0.05%)</title><rect x="996.1" y="371.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="999.1" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.10%)</title><rect x="996.8" y="371.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="999.8" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (2 samples, 0.02%)</title><rect x="998.0" y="387.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1001.0" y="398.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.02%)</title><rect x="998.0" y="371.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1001.0" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (56 samples, 0.64%)</title><rect x="998.3" y="419.0" width="7.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1001.3" y="430.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (56 samples, 0.64%)</title><rect x="998.3" y="403.0" width="7.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1001.3" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (2 samples, 0.02%)</title><rect x="1005.9" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1008.9" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (2 samples, 0.02%)</title><rect x="1005.9" y="435.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1008.9" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (7 samples, 0.08%)</title><rect x="1006.2" y="563.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1009.2" y="574.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (7 samples, 0.08%)</title><rect x="1006.2" y="547.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1009.2" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (3 samples, 0.03%)</title><rect x="1007.1" y="627.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1010.1" y="638.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (3 samples, 0.03%)</title><rect x="1007.1" y="611.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1010.1" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (8 samples, 0.09%)</title><rect x="1007.5" y="659.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1010.5" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (8 samples, 0.09%)</title><rect x="1007.5" y="643.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1010.5" y="654.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (2 samples, 0.02%)</title><rect x="1007.5" y="627.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1010.5" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (6 samples, 0.07%)</title><rect x="1007.8" y="627.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1010.8" y="638.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.07%)</title><rect x="1007.8" y="611.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1010.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.07%)</title><rect x="1007.8" y="595.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1010.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor40.invoke (6 samples, 0.07%)</title><rect x="1007.8" y="579.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1010.8" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.writeObject (6 samples, 0.07%)</title><rect x="1007.8" y="563.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1010.8" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (6 samples, 0.07%)</title><rect x="1007.8" y="547.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1010.8" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (6 samples, 0.07%)</title><rect x="1007.8" y="531.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1010.8" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (6 samples, 0.07%)</title><rect x="1007.8" y="515.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1010.8" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (5 samples, 0.06%)</title><rect x="1007.8" y="499.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1010.8" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (5 samples, 0.06%)</title><rect x="1007.8" y="483.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1010.8" y="494.0"></text>
</g>
<g>
<title>int[] (4 samples, 0.05%)</title><rect x="1007.8" y="467.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1010.8" y="478.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (152 samples, 1.75%)</title><rect x="1008.6" y="707.0" width="20.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1011.6" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$$Lambda$97/2105482944.readString (3 samples, 0.03%)</title><rect x="1008.6" y="691.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1011.6" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (3 samples, 0.03%)</title><rect x="1008.6" y="675.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1011.6" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 0.03%)</title><rect x="1008.6" y="659.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1011.6" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (3 samples, 0.03%)</title><rect x="1008.6" y="643.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1011.6" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (3 samples, 0.03%)</title><rect x="1008.6" y="627.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1011.6" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (3 samples, 0.03%)</title><rect x="1008.6" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1011.6" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (3 samples, 0.03%)</title><rect x="1008.6" y="595.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1011.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.02%)</title><rect x="1008.7" y="579.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1011.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="1008.7" y="563.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1011.7" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (149 samples, 1.72%)</title><rect x="1009.0" y="691.0" width="20.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1012.0" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (149 samples, 1.72%)</title><rect x="1009.0" y="675.0" width="20.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1012.0" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (149 samples, 1.72%)</title><rect x="1009.0" y="659.0" width="20.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1012.0" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (22 samples, 0.25%)</title><rect x="1009.0" y="643.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1012.0" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (14 samples, 0.16%)</title><rect x="1009.0" y="627.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1012.0" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (14 samples, 0.16%)</title><rect x="1009.0" y="611.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1012.0" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (8 samples, 0.09%)</title><rect x="1009.0" y="595.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1012.0" y="606.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (3 samples, 0.03%)</title><rect x="1009.0" y="579.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1012.0" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (5 samples, 0.06%)</title><rect x="1009.4" y="579.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1012.4" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (5 samples, 0.06%)</title><rect x="1009.4" y="563.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1012.4" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (5 samples, 0.06%)</title><rect x="1009.4" y="547.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1012.4" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (5 samples, 0.06%)</title><rect x="1009.4" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1012.4" y="542.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.02%)</title><rect x="1009.4" y="515.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1012.4" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.02%)</title><rect x="1009.8" y="515.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1012.8" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="1009.8" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1012.8" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.02%)</title><rect x="1009.8" y="483.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1012.8" y="494.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.02%)</title><rect x="1009.8" y="467.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1012.8" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (6 samples, 0.07%)</title><rect x="1010.1" y="595.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1013.1" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (2 samples, 0.02%)</title><rect x="1010.2" y="579.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1013.2" y="590.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (2 samples, 0.02%)</title><rect x="1010.2" y="563.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1013.2" y="574.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (3 samples, 0.03%)</title><rect x="1010.5" y="579.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1013.5" y="590.0"></text>
</g>
<g>
<title>java.lang.Long (3 samples, 0.03%)</title><rect x="1010.5" y="563.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1013.5" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (8 samples, 0.09%)</title><rect x="1010.9" y="627.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1013.9" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (8 samples, 0.09%)</title><rect x="1010.9" y="611.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1013.9" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (8 samples, 0.09%)</title><rect x="1010.9" y="595.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1013.9" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (8 samples, 0.09%)</title><rect x="1010.9" y="579.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1013.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (6 samples, 0.07%)</title><rect x="1010.9" y="563.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1013.9" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (6 samples, 0.07%)</title><rect x="1010.9" y="547.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1013.9" y="558.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.07%)</title><rect x="1010.9" y="531.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1013.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.02%)</title><rect x="1011.7" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1014.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="1011.7" y="547.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1014.7" y="558.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.02%)</title><rect x="1011.7" y="531.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1014.7" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (127 samples, 1.46%)</title><rect x="1012.0" y="643.0" width="17.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1015.0" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (37 samples, 0.43%)</title><rect x="1012.0" y="627.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1015.0" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (37 samples, 0.43%)</title><rect x="1012.0" y="611.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1015.0" y="622.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (7 samples, 0.08%)</title><rect x="1012.0" y="595.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1015.0" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (20 samples, 0.23%)</title><rect x="1012.9" y="595.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1015.9" y="606.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (2 samples, 0.02%)</title><rect x="1012.9" y="579.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1015.9" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (18 samples, 0.21%)</title><rect x="1013.2" y="579.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1016.2" y="590.0"></text>
</g>
<g>
<title>java.io.ObjectStreamField (2 samples, 0.02%)</title><rect x="1013.2" y="563.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1016.2" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readTypeString (3 samples, 0.03%)</title><rect x="1013.5" y="563.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1016.5" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (3 samples, 0.03%)</title><rect x="1013.5" y="547.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1016.5" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (3 samples, 0.03%)</title><rect x="1013.5" y="531.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1016.5" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (3 samples, 0.03%)</title><rect x="1013.5" y="515.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1016.5" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (13 samples, 0.15%)</title><rect x="1013.9" y="563.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1016.9" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (13 samples, 0.15%)</title><rect x="1013.9" y="547.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1016.9" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (13 samples, 0.15%)</title><rect x="1013.9" y="531.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1016.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (5 samples, 0.06%)</title><rect x="1014.0" y="515.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1017.0" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (5 samples, 0.06%)</title><rect x="1014.0" y="499.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1017.0" y="510.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.06%)</title><rect x="1014.0" y="483.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1017.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (7 samples, 0.08%)</title><rect x="1014.7" y="515.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1017.7" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.08%)</title><rect x="1014.7" y="499.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1017.7" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.08%)</title><rect x="1014.7" y="483.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1017.7" y="494.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.08%)</title><rect x="1014.7" y="467.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1017.7" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (10 samples, 0.12%)</title><rect x="1015.7" y="595.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1018.7" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getReflector (5 samples, 0.06%)</title><rect x="1015.7" y="579.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1018.7" y="590.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$FieldReflectorKey (2 samples, 0.02%)</title><rect x="1015.7" y="563.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1018.7" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass$FieldReflectorKey.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1015.9" y="563.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1018.9" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.03%)</title><rect x="1015.9" y="547.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1018.9" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (3 samples, 0.03%)</title><rect x="1016.3" y="579.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1019.3" y="590.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (3 samples, 0.03%)</title><rect x="1016.3" y="563.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1019.3" y="574.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.02%)</title><rect x="1016.8" y="579.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1019.8" y="590.0"></text>
</g>
<g>
<title>java.lang.Long (2 samples, 0.02%)</title><rect x="1016.8" y="563.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1019.8" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (88 samples, 1.01%)</title><rect x="1017.0" y="627.0" width="12.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1020.0" y="638.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (2 samples, 0.02%)</title><rect x="1017.2" y="611.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1020.2" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (18 samples, 0.21%)</title><rect x="1017.4" y="611.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1020.4" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (18 samples, 0.21%)</title><rect x="1017.4" y="595.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1020.4" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.03%)</title><rect x="1017.4" y="579.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1020.4" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.08%)</title><rect x="1017.8" y="579.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1020.8" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.08%)</title><rect x="1017.8" y="563.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1020.8" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.08%)</title><rect x="1017.8" y="547.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1020.8" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.08%)</title><rect x="1017.8" y="531.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1020.8" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.08%)</title><rect x="1017.8" y="515.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1020.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.08%)</title><rect x="1017.8" y="499.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1020.8" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.08%)</title><rect x="1017.8" y="483.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1020.8" y="494.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1018.8" y="579.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1021.8" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap (3 samples, 0.03%)</title><rect x="1018.8" y="563.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1021.8" y="574.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 0.06%)</title><rect x="1019.2" y="579.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1022.2" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.06%)</title><rect x="1019.2" y="563.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1022.2" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.06%)</title><rect x="1019.2" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1022.2" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 0.03%)</title><rect x="1019.2" y="531.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1022.2" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (3 samples, 0.03%)</title><rect x="1019.2" y="515.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1022.2" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.02%)</title><rect x="1019.6" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1022.6" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2 samples, 0.02%)</title><rect x="1019.6" y="515.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1022.6" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (67 samples, 0.77%)</title><rect x="1019.9" y="611.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1022.9" y="622.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (66 samples, 0.76%)</title><rect x="1020.0" y="595.0" width="9.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1023.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (66 samples, 0.76%)</title><rect x="1020.0" y="579.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1023.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor2.invoke (55 samples, 0.63%)</title><rect x="1020.0" y="563.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1023.0" y="574.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (55 samples, 0.63%)</title><rect x="1020.0" y="547.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1023.0" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (12 samples, 0.14%)</title><rect x="1020.1" y="531.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1023.1" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (12 samples, 0.14%)</title><rect x="1020.1" y="515.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1023.1" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (12 samples, 0.14%)</title><rect x="1020.1" y="499.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1023.1" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (12 samples, 0.14%)</title><rect x="1020.1" y="483.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1023.1" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (12 samples, 0.14%)</title><rect x="1020.1" y="467.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1023.1" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (12 samples, 0.14%)</title><rect x="1020.1" y="451.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1023.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1020.3" y="435.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1023.3" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1020.3" y="419.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1023.3" y="430.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="1020.3" y="403.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1023.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (7 samples, 0.08%)</title><rect x="1020.8" y="435.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1023.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.08%)</title><rect x="1020.8" y="419.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1023.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.02%)</title><rect x="1020.8" y="403.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1023.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.06%)</title><rect x="1021.1" y="403.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1024.1" y="414.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.06%)</title><rect x="1021.1" y="387.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1024.1" y="398.0"></text>
</g>
<g>
<title>javax/management/ObjectName.construct (42 samples, 0.48%)</title><rect x="1021.8" y="531.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1024.8" y="542.0"></text>
</g>
<g>
<title>char[] (4 samples, 0.05%)</title><rect x="1021.8" y="515.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1024.8" y="526.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.08%)</title><rect x="1022.5" y="515.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1025.5" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.05%)</title><rect x="1023.4" y="515.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1026.4" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="1023.4" y="499.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1026.4" y="510.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.03%)</title><rect x="1023.4" y="483.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1026.4" y="494.0"></text>
</g>
<g>
<title>java/lang/String.toCharArray (8 samples, 0.09%)</title><rect x="1024.0" y="515.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1027.0" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toChars (8 samples, 0.09%)</title><rect x="1024.0" y="499.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1027.0" y="510.0"></text>
</g>
<g>
<title>char[] (7 samples, 0.08%)</title><rect x="1024.0" y="483.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1027.0" y="494.0"></text>
</g>
<g>
<title>javax/management/ObjectName.addProperty (9 samples, 0.10%)</title><rect x="1025.3" y="515.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1028.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.put (9 samples, 0.10%)</title><rect x="1025.3" y="499.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1028.3" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (9 samples, 0.10%)</title><rect x="1025.3" y="483.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1028.3" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (4 samples, 0.05%)</title><rect x="1025.3" y="467.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1028.3" y="478.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (4 samples, 0.05%)</title><rect x="1025.3" y="451.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1028.3" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (5 samples, 0.06%)</title><rect x="1025.9" y="467.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1028.9" y="478.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (4 samples, 0.05%)</title><rect x="1025.9" y="451.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1028.9" y="462.0"></text>
</g>
<g>
<title>javax/management/ObjectName.setCanonicalName (7 samples, 0.08%)</title><rect x="1026.5" y="515.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1029.5" y="526.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1026.7" y="499.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1029.7" y="510.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1026.7" y="483.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1029.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.05%)</title><rect x="1026.7" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1029.7" y="478.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="1026.7" y="451.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1029.7" y="462.0"></text>
</g>
<g>
<title>javax.management.ObjectName$Property[] (2 samples, 0.02%)</title><rect x="1027.2" y="499.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1030.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor36.invoke (11 samples, 0.13%)</title><rect x="1027.5" y="563.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1030.5" y="574.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.readObject (11 samples, 0.13%)</title><rect x="1027.5" y="547.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1030.5" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadObject (11 samples, 0.13%)</title><rect x="1027.5" y="531.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1030.5" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadFields (11 samples, 0.13%)</title><rect x="1027.5" y="515.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1030.5" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (11 samples, 0.13%)</title><rect x="1027.5" y="499.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1030.5" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (11 samples, 0.13%)</title><rect x="1027.5" y="483.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1030.5" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (5 samples, 0.06%)</title><rect x="1027.5" y="467.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1030.5" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (5 samples, 0.06%)</title><rect x="1027.5" y="451.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1030.5" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (4 samples, 0.05%)</title><rect x="1027.6" y="435.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1030.6" y="446.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (2 samples, 0.02%)</title><rect x="1027.6" y="419.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1030.6" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (2 samples, 0.02%)</title><rect x="1027.9" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1030.9" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (6 samples, 0.07%)</title><rect x="1028.2" y="467.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1031.2" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (6 samples, 0.07%)</title><rect x="1028.2" y="451.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1031.2" y="462.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.06%)</title><rect x="1028.2" y="435.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1031.2" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.newInstance (2 samples, 0.02%)</title><rect x="1029.0" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1032.0" y="638.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.02%)</title><rect x="1029.0" y="611.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1032.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedSerializationConstructorAccessor10.newInstance (2 samples, 0.02%)</title><rect x="1029.0" y="595.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1032.0" y="606.0"></text>
</g>
<g>
<title>javax.management.ObjectName (2 samples, 0.02%)</title><rect x="1029.0" y="579.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1032.0" y="590.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.oldDispatch (4 samples, 0.05%)</title><rect x="1029.3" y="707.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1032.3" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/DGCImpl_Skel.dispatch (4 samples, 0.05%)</title><rect x="1029.3" y="691.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1032.3" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 0.03%)</title><rect x="1029.3" y="675.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1032.3" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 0.03%)</title><rect x="1029.3" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1032.3" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (3 samples, 0.03%)</title><rect x="1029.3" y="643.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1032.3" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (3 samples, 0.03%)</title><rect x="1029.3" y="627.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1032.3" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (2 samples, 0.02%)</title><rect x="1029.4" y="611.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1032.4" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadFields (2 samples, 0.02%)</title><rect x="1029.4" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1032.4" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.02%)</title><rect x="1029.4" y="579.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1032.4" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (2 samples, 0.02%)</title><rect x="1029.4" y="563.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1032.4" y="574.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (210 samples, 2.42%)</title><rect x="1029.8" y="707.0" width="28.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1032.8" y="718.0">su..</text>
</g>
<g>
<title>java/io/DataOutputStream.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1029.8" y="691.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1032.8" y="702.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (208 samples, 2.40%)</title><rect x="1030.1" y="691.0" width="28.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1033.1" y="702.0">su..</text>
</g>
<g>
<title>sun.rmi.transport.ConnectionOutputStream (7 samples, 0.08%)</title><rect x="1030.1" y="675.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1033.1" y="686.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (201 samples, 2.31%)</title><rect x="1031.0" y="675.0" width="27.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1034.0" y="686.0">s..</text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (200 samples, 2.30%)</title><rect x="1031.2" y="659.0" width="27.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1034.2" y="670.0">s..</text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (200 samples, 2.30%)</title><rect x="1031.2" y="643.0" width="27.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1034.2" y="654.0">s..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (200 samples, 2.30%)</title><rect x="1031.2" y="627.0" width="27.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1034.2" y="638.0">j..</text>
</g>
<g>
<title>java.io.ObjectOutputStream$BlockDataOutputStream (6 samples, 0.07%)</title><rect x="1031.2" y="611.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1034.2" y="622.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$HandleTable (3 samples, 0.03%)</title><rect x="1032.0" y="611.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1035.0" y="622.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$ReplaceTable (2 samples, 0.02%)</title><rect x="1032.4" y="611.0" width="0.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1035.4" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (123 samples, 1.42%)</title><rect x="1032.6" y="611.0" width="16.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1035.6" y="622.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.29%)</title><rect x="1032.6" y="595.0" width="3.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1035.6" y="606.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.45%)</title><rect x="1036.0" y="595.0" width="5.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1039.0" y="606.0"></text>
</g>
<g>
<title>char[] (23 samples, 0.26%)</title><rect x="1041.3" y="595.0" width="3.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1044.3" y="606.0"></text>
</g>
<g>
<title>char[] (30 samples, 0.35%)</title><rect x="1044.5" y="595.0" width="4.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1047.5" y="606.0"></text>
</g>
<g>
<title>java/io/DataOutputStream.&lt;init&gt; (6 samples, 0.07%)</title><rect x="1048.5" y="595.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1051.5" y="606.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="1048.5" y="579.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1051.5" y="590.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1049.0" y="579.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1052.0" y="590.0"></text>
</g>
<g>
<title>java.lang.Object (3 samples, 0.03%)</title><rect x="1049.0" y="563.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1052.0" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (19 samples, 0.22%)</title><rect x="1049.4" y="611.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1052.4" y="622.0"></text>
</g>
<g>
<title>int[] (11 samples, 0.13%)</title><rect x="1049.4" y="595.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1052.4" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.09%)</title><rect x="1050.9" y="595.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1053.9" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$ReplaceTable.&lt;init&gt; (47 samples, 0.54%)</title><rect x="1051.9" y="611.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1054.9" y="622.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$HandleTable (5 samples, 0.06%)</title><rect x="1051.9" y="595.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1054.9" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (42 samples, 0.48%)</title><rect x="1052.6" y="595.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1055.6" y="606.0"></text>
</g>
<g>
<title>int[] (28 samples, 0.32%)</title><rect x="1052.6" y="579.0" width="3.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1055.6" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.16%)</title><rect x="1056.4" y="579.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1059.4" y="590.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.releaseInputStream (4 samples, 0.05%)</title><rect x="1058.3" y="707.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1061.3" y="718.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.done (4 samples, 0.05%)</title><rect x="1058.3" y="691.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1061.3" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$Values.iterator (4 samples, 0.05%)</title><rect x="1058.3" y="675.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1061.3" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$ValueIterator (4 samples, 0.05%)</title><rect x="1058.3" y="659.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1061.3" y="670.0"></text>
</g>
<g>
<title>sun.rmi.transport.ObjectEndpoint (2 samples, 0.02%)</title><rect x="1058.9" y="771.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1061.9" y="782.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (232 samples, 2.67%)</title><rect x="1059.1" y="771.0" width="31.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1062.1" y="782.0">su..</text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (232 samples, 2.67%)</title><rect x="1059.1" y="755.0" width="31.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1062.1" y="766.0">su..</text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (231 samples, 2.66%)</title><rect x="1059.3" y="739.0" width="31.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1062.3" y="750.0">su..</text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (230 samples, 2.65%)</title><rect x="1059.4" y="723.0" width="31.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1062.4" y="734.0">ja..</text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable (7 samples, 0.08%)</title><rect x="1059.6" y="707.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1062.6" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (189 samples, 2.18%)</title><rect x="1060.5" y="707.0" width="25.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1063.5" y="718.0">j..</text>
</g>
<g>
<title>byte[] (32 samples, 0.37%)</title><rect x="1060.5" y="691.0" width="4.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1063.5" y="702.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.62%)</title><rect x="1064.9" y="691.0" width="7.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1067.9" y="702.0"></text>
</g>
<g>
<title>char[] (33 samples, 0.38%)</title><rect x="1072.2" y="691.0" width="4.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1075.2" y="702.0"></text>
</g>
<g>
<title>char[] (18 samples, 0.21%)</title><rect x="1076.7" y="691.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1079.7" y="702.0"></text>
</g>
<g>
<title>java.io.DataInputStream (5 samples, 0.06%)</title><rect x="1079.1" y="691.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1082.1" y="702.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$PeekInputStream (2 samples, 0.02%)</title><rect x="1079.8" y="691.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1082.8" y="702.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (45 samples, 0.52%)</title><rect x="1080.1" y="691.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1083.1" y="702.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.21%)</title><rect x="1080.1" y="675.0" width="2.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1083.1" y="686.0"></text>
</g>
<g>
<title>char[] (24 samples, 0.28%)</title><rect x="1082.5" y="675.0" width="3.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1085.5" y="686.0"></text>
</g>
<g>
<title>char[] (3 samples, 0.03%)</title><rect x="1085.8" y="675.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1088.8" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (33 samples, 0.38%)</title><rect x="1086.2" y="707.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1089.2" y="718.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.20%)</title><rect x="1086.2" y="691.0" width="2.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1089.2" y="702.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$HandleTable$HandleList[] (5 samples, 0.06%)</title><rect x="1088.5" y="691.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1091.5" y="702.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.13%)</title><rect x="1089.2" y="691.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1092.2" y="702.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.setContextClassLoader (2 samples, 0.02%)</title><rect x="1090.7" y="771.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1093.7" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="1090.7" y="755.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1093.7" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="1090.7" y="739.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1093.7" y="750.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$$Lambda$99/1757191199.get$Lambda (2 samples, 0.02%)</title><rect x="1090.7" y="723.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1093.7" y="734.0"></text>
</g>
<g>
<title>sun.rmi.transport.Transport$$Lambda$99 (2 samples, 0.02%)</title><rect x="1090.7" y="707.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1093.7" y="718.0"></text>
</g>
<g>
<title>[pool-1-thread-1 tid=65439] (729 samples, 8.39%)</title><rect x="1090.9" y="947.0" width="99.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1093.9" y="958.0">[pool-1-thre..</text>
</g>
<g>
<title>java/lang/Thread.run (729 samples, 8.39%)</title><rect x="1090.9" y="931.0" width="99.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1093.9" y="942.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (729 samples, 8.39%)</title><rect x="1090.9" y="915.0" width="99.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1093.9" y="926.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (729 samples, 8.39%)</title><rect x="1090.9" y="899.0" width="99.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1093.9" y="910.0">java/util/co..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$13/863125040.run (729 samples, 8.39%)</title><rect x="1090.9" y="883.0" width="99.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1093.9" y="894.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.flushingHelper (729 samples, 8.39%)</title><rect x="1090.9" y="867.0" width="99.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1093.9" y="878.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.flush (729 samples, 8.39%)</title><rect x="1090.9" y="851.0" width="99.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1093.9" y="862.0">ru/mail/poli..</text>
</g>
<g>
<title>java.io.File (7 samples, 0.08%)</title><rect x="1090.9" y="835.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1093.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.serialize (722 samples, 8.31%)</title><rect x="1091.9" y="835.0" width="98.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1094.9" y="846.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/Integer.valueOf (12 samples, 0.14%)</title><rect x="1091.9" y="819.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1094.9" y="830.0"></text>
</g>
<g>
<title>java.lang.Integer (12 samples, 0.14%)</title><rect x="1091.9" y="803.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1094.9" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (485 samples, 5.58%)</title><rect x="1093.5" y="819.0" width="65.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1096.5" y="830.0">java/ni..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (316 samples, 3.64%)</title><rect x="1093.5" y="803.0" width="43.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1096.5" y="814.0">java..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (169 samples, 1.95%)</title><rect x="1136.5" y="803.0" width="22.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1139.5" y="814.0">j..</text>
</g>
<g>
<title>byte[] (169 samples, 1.95%)</title><rect x="1136.5" y="787.0" width="22.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1139.5" y="798.0">b..</text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.20%)</title><rect x="1159.6" y="819.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1162.6" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.20%)</title><rect x="1159.6" y="803.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1162.6" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (17 samples, 0.20%)</title><rect x="1159.6" y="787.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1162.6" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (17 samples, 0.20%)</title><rect x="1159.6" y="771.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1162.6" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.20%)</title><rect x="1159.6" y="755.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1162.6" y="766.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.18%)</title><rect x="1159.7" y="739.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1162.7" y="750.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (40 samples, 0.46%)</title><rect x="1161.9" y="819.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1164.9" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (40 samples, 0.46%)</title><rect x="1161.9" y="803.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1164.9" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (40 samples, 0.46%)</title><rect x="1161.9" y="787.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1164.9" y="798.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (40 samples, 0.46%)</title><rect x="1161.9" y="771.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1164.9" y="782.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$108/403875893.getAsBoolean (40 samples, 0.46%)</title><rect x="1161.9" y="755.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1164.9" y="766.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (40 samples, 0.46%)</title><rect x="1161.9" y="739.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1164.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (40 samples, 0.46%)</title><rect x="1161.9" y="723.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1164.9" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (40 samples, 0.46%)</title><rect x="1161.9" y="707.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1164.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable$$Lambda$105/18579780.apply (40 samples, 0.46%)</title><rect x="1161.9" y="691.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1164.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.lambda$iterator$0 (40 samples, 0.46%)</title><rect x="1161.9" y="675.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1164.9" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.valaubr.Cell (40 samples, 0.46%)</title><rect x="1161.9" y="659.0" width="5.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1164.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (87 samples, 1.00%)</title><rect x="1167.3" y="819.0" width="11.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1170.3" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (87 samples, 1.00%)</title><rect x="1167.3" y="803.0" width="11.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1170.3" y="814.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (87 samples, 1.00%)</title><rect x="1167.3" y="787.0" width="11.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1170.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Value.getData (80 samples, 0.92%)</title><rect x="1179.1" y="819.0" width="10.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1182.1" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (80 samples, 0.92%)</title><rect x="1179.1" y="803.0" width="10.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1182.1" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (80 samples, 0.92%)</title><rect x="1179.1" y="787.0" width="10.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1182.1" y="798.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (80 samples, 0.92%)</title><rect x="1179.1" y="771.0" width="10.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1182.1" y="782.0"></text>
</g>
</g>
</svg>
