<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1046" onload="init(evt)" viewBox="0 0 1200 1046" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1029"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1029"> </text>
<g id="frames">
<g>
<title>all (2,784 samples, 100.00%)</title><rect x="10.0" y="995.0" width="1180.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="1006.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (696 samples, 25.00%)</title><rect x="10.0" y="979.0" width="295.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="990.0">java/lang/Thread.run</text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (31 samples, 1.11%)</title><rect x="10.0" y="963.0" width="13.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (31 samples, 1.11%)</title><rect x="10.0" y="947.0" width="13.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1771798697.linkToTargetMethod (31 samples, 1.11%)</title><rect x="10.0" y="931.0" width="13.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1660465852.invoke (31 samples, 1.11%)</title><rect x="10.0" y="915.0" width="13.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 1.11%)</title><rect x="10.0" y="899.0" width="13.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (31 samples, 1.11%)</title><rect x="10.0" y="883.0" width="13.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (31 samples, 1.11%)</title><rect x="10.0" y="867.0" width="13.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>byte[] (31 samples, 1.11%)</title><rect x="10.0" y="851.0" width="13.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (665 samples, 23.89%)</title><rect x="23.1" y="963.0" width="281.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="26.1" y="974.0">java/util/concurrent/ThreadPoolExecuto..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (665 samples, 23.89%)</title><rect x="23.1" y="947.0" width="281.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.1" y="958.0">java/util/concurrent/ThreadPoolExecuto..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$13/863125040.run (207 samples, 7.44%)</title><rect x="23.1" y="931.0" width="87.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="26.1" y="942.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.flushingHelper (207 samples, 7.44%)</title><rect x="23.1" y="915.0" width="87.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="26.1" y="926.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.flush (207 samples, 7.44%)</title><rect x="23.1" y="899.0" width="87.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="26.1" y="910.0">ru/mail/po..</text>
</g>
<g>
<title>java.io.File (3 samples, 0.11%)</title><rect x="23.1" y="883.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="26.1" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.serialize (204 samples, 7.33%)</title><rect x="24.4" y="883.0" width="86.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.4" y="894.0">ru/mail/po..</text>
</g>
<g>
<title>java/lang/Integer.valueOf (6 samples, 0.22%)</title><rect x="24.4" y="867.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="27.4" y="878.0"></text>
</g>
<g>
<title>java.lang.Integer (6 samples, 0.22%)</title><rect x="24.4" y="851.0" width="2.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="27.4" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (137 samples, 4.92%)</title><rect x="27.0" y="867.0" width="58.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.0" y="878.0">java/n..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (84 samples, 3.02%)</title><rect x="27.0" y="851.0" width="35.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="30.0" y="862.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (53 samples, 1.90%)</title><rect x="62.6" y="851.0" width="22.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.6" y="862.0">j..</text>
</g>
<g>
<title>byte[] (53 samples, 1.90%)</title><rect x="62.6" y="835.0" width="22.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="65.6" y="846.0">b..</text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (1 samples, 0.04%)</title><rect x="85.0" y="867.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.0" y="878.0"></text>
</g>
<g>
<title>java/nio/channels/FileChannel.open (1 samples, 0.04%)</title><rect x="85.0" y="851.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="88.0" y="862.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.newFileChannel (1 samples, 0.04%)</title><rect x="85.0" y="835.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="88.0" y="846.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (1 samples, 0.04%)</title><rect x="85.0" y="819.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="88.0" y="830.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory.newFileChannel (1 samples, 0.04%)</title><rect x="85.0" y="803.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="88.0" y="814.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixChannelFactory$Flags.toFlags (1 samples, 0.04%)</title><rect x="85.0" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="88.0" y="798.0"></text>
</g>
<g>
<title>sun.nio.fs.UnixChannelFactory$Flags (1 samples, 0.04%)</title><rect x="85.0" y="771.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="88.0" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.22%)</title><rect x="85.4" y="867.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="88.4" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.22%)</title><rect x="85.4" y="851.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.4" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.22%)</title><rect x="85.4" y="835.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="88.4" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.22%)</title><rect x="85.4" y="819.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="88.4" y="830.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.22%)</title><rect x="85.4" y="803.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="88.4" y="814.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.22%)</title><rect x="85.4" y="787.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="88.4" y="798.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (8 samples, 0.29%)</title><rect x="88.0" y="867.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="91.0" y="878.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (8 samples, 0.29%)</title><rect x="88.0" y="851.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.0" y="862.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (8 samples, 0.29%)</title><rect x="88.0" y="835.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.0" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (8 samples, 0.29%)</title><rect x="88.0" y="819.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="91.0" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$108/1312109180.getAsBoolean (8 samples, 0.29%)</title><rect x="88.0" y="803.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="91.0" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (8 samples, 0.29%)</title><rect x="88.0" y="787.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="91.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (8 samples, 0.29%)</title><rect x="88.0" y="771.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="91.0" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (8 samples, 0.29%)</title><rect x="88.0" y="755.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable$$Lambda$105/2117681235.apply (8 samples, 0.29%)</title><rect x="88.0" y="739.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.lambda$iterator$0 (8 samples, 0.29%)</title><rect x="88.0" y="723.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="91.0" y="734.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.valaubr.Cell (8 samples, 0.29%)</title><rect x="88.0" y="707.0" width="3.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="91.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (24 samples, 0.86%)</title><rect x="91.4" y="867.0" width="10.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.4" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (24 samples, 0.86%)</title><rect x="91.4" y="851.0" width="10.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="94.4" y="862.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (24 samples, 0.86%)</title><rect x="91.4" y="835.0" width="10.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="94.4" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Value.getData (22 samples, 0.79%)</title><rect x="101.6" y="867.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="104.6" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (22 samples, 0.79%)</title><rect x="101.6" y="851.0" width="9.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.6" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (22 samples, 0.79%)</title><rect x="101.6" y="835.0" width="9.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="104.6" y="846.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (22 samples, 0.79%)</title><rect x="101.6" y="819.0" width="9.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="104.6" y="830.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (458 samples, 16.45%)</title><rect x="110.9" y="931.0" width="194.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="113.9" y="942.0">sun/rmi/transport/tcp/TCP..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (458 samples, 16.45%)</title><rect x="110.9" y="915.0" width="194.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="113.9" y="926.0">java/security/AccessContr..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$92/689455389.run (458 samples, 16.45%)</title><rect x="110.9" y="899.0" width="194.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="113.9" y="910.0">sun/rmi/transport/tcp/TCP..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (458 samples, 16.45%)</title><rect x="110.9" y="883.0" width="194.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="113.9" y="894.0">sun/rmi/transport/tcp/TCP..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (458 samples, 16.45%)</title><rect x="110.9" y="867.0" width="194.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.9" y="878.0">sun/rmi/transport/tcp/TCP..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (458 samples, 16.45%)</title><rect x="110.9" y="851.0" width="194.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="113.9" y="862.0">sun/rmi/transport/tcp/TCP..</text>
</g>
<g>
<title>java.io.DataOutputStream (4 samples, 0.14%)</title><rect x="110.9" y="835.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="113.9" y="846.0"></text>
</g>
<g>
<title>java/io/DataOutputStream.&lt;init&gt; (1 samples, 0.04%)</title><rect x="112.6" y="835.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="115.6" y="846.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="112.6" y="819.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="115.6" y="830.0"></text>
</g>
<g>
<title>sun.rmi.transport.StreamRemoteCall (1 samples, 0.04%)</title><rect x="113.0" y="835.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="116.0" y="846.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (452 samples, 16.24%)</title><rect x="113.4" y="835.0" width="191.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="116.4" y="846.0">sun/rmi/transport/Transpo..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (407 samples, 14.62%)</title><rect x="113.4" y="819.0" width="172.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="116.4" y="830.0">java/security/AccessCo..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (407 samples, 14.62%)</title><rect x="113.4" y="803.0" width="172.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="116.4" y="814.0">sun/rmi/transport/Tran..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (407 samples, 14.62%)</title><rect x="113.4" y="787.0" width="172.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="116.4" y="798.0">sun/rmi/transport/Tran..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (407 samples, 14.62%)</title><rect x="113.4" y="771.0" width="172.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="116.4" y="782.0">sun/rmi/server/Unicast..</text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.07%)</title><rect x="113.4" y="755.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="116.4" y="766.0"></text>
</g>
<g>
<title>java.lang.Long (2 samples, 0.07%)</title><rect x="113.4" y="739.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="116.4" y="750.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getParameterTypes (1 samples, 0.04%)</title><rect x="114.3" y="755.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="117.3" y="766.0"></text>
</g>
<g>
<title>java.lang.Class[] (1 samples, 0.04%)</title><rect x="114.3" y="739.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="117.3" y="750.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (212 samples, 7.61%)</title><rect x="114.7" y="755.0" width="89.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="117.7" y="766.0">java/lang/..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (212 samples, 7.61%)</title><rect x="114.7" y="739.0" width="89.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="117.7" y="750.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (3 samples, 0.11%)</title><rect x="114.7" y="723.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="117.7" y="734.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttribute (3 samples, 0.11%)</title><rect x="114.7" y="707.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.7" y="718.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="114.7" y="691.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="117.7" y="702.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (2 samples, 0.07%)</title><rect x="115.1" y="691.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="118.1" y="702.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (2 samples, 0.07%)</title><rect x="115.1" y="675.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="118.1" y="686.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (2 samples, 0.07%)</title><rect x="115.1" y="659.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="118.1" y="670.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttribute (2 samples, 0.07%)</title><rect x="115.1" y="643.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="118.1" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttribute (2 samples, 0.07%)</title><rect x="115.1" y="627.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.1" y="638.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.getAttribute (2 samples, 0.07%)</title><rect x="115.1" y="611.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="118.1" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttribute (2 samples, 0.07%)</title><rect x="115.1" y="595.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="118.1" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.getAttribute (2 samples, 0.07%)</title><rect x="115.1" y="579.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="118.1" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (2 samples, 0.07%)</title><rect x="115.1" y="563.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.1" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (2 samples, 0.07%)</title><rect x="115.1" y="547.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.1" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (2 samples, 0.07%)</title><rect x="115.1" y="531.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.1" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (2 samples, 0.07%)</title><rect x="115.1" y="515.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.1" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (2 samples, 0.07%)</title><rect x="115.1" y="499.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="118.1" y="510.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.07%)</title><rect x="115.1" y="483.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.1" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="115.1" y="467.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="118.1" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.04%)</title><rect x="115.5" y="467.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="118.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.04%)</title><rect x="115.5" y="451.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="118.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (1 samples, 0.04%)</title><rect x="115.5" y="435.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="118.5" y="446.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (1 samples, 0.04%)</title><rect x="115.5" y="419.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="118.5" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.04%)</title><rect x="115.5" y="403.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="118.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.04%)</title><rect x="115.5" y="387.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor35.invoke (1 samples, 0.04%)</title><rect x="115.5" y="371.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="118.5" y="382.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.04%)</title><rect x="115.5" y="355.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="118.5" y="366.0"></text>
</g>
<g>
<title>java.lang.Long (1 samples, 0.04%)</title><rect x="115.5" y="339.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="118.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (5 samples, 0.18%)</title><rect x="116.0" y="723.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="119.0" y="734.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttributes (5 samples, 0.18%)</title><rect x="116.0" y="707.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="119.0" y="718.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (5 samples, 0.18%)</title><rect x="116.0" y="691.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="119.0" y="702.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.rspOutgoing (1 samples, 0.04%)</title><rect x="116.0" y="675.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="119.0" y="686.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (1 samples, 0.04%)</title><rect x="116.0" y="659.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="119.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1771798697.linkToTargetMethod (1 samples, 0.04%)</title><rect x="116.0" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="119.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1660465852.invoke (1 samples, 0.04%)</title><rect x="116.0" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="119.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="116.0" y="611.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="119.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.04%)</title><rect x="116.0" y="595.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="119.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.04%)</title><rect x="116.0" y="579.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="119.0" y="590.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="116.0" y="563.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="119.0" y="574.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (4 samples, 0.14%)</title><rect x="116.4" y="675.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="119.4" y="686.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (4 samples, 0.14%)</title><rect x="116.4" y="659.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="119.4" y="670.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttributes (4 samples, 0.14%)</title><rect x="116.4" y="643.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="119.4" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttributes (4 samples, 0.14%)</title><rect x="116.4" y="627.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="119.4" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.nonDefaultDomain (2 samples, 0.07%)</title><rect x="116.4" y="611.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="119.4" y="622.0"></text>
</g>
<g>
<title>javax/management/ObjectName.getDomain (2 samples, 0.07%)</title><rect x="116.4" y="595.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="119.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.07%)</title><rect x="116.4" y="579.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="119.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.07%)</title><rect x="116.4" y="563.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="119.4" y="574.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.07%)</title><rect x="116.4" y="547.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="119.4" y="558.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.getAttributes (2 samples, 0.07%)</title><rect x="117.2" y="611.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.2" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttributes (2 samples, 0.07%)</title><rect x="117.2" y="595.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="120.2" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttribute (1 samples, 0.04%)</title><rect x="117.2" y="579.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="120.2" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.getAttribute (1 samples, 0.04%)</title><rect x="117.2" y="563.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="120.2" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (1 samples, 0.04%)</title><rect x="117.2" y="547.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="120.2" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.04%)</title><rect x="117.2" y="531.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="120.2" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.04%)</title><rect x="117.2" y="515.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="120.2" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.04%)</title><rect x="117.2" y="499.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="120.2" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.04%)</title><rect x="117.2" y="483.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="120.2" y="494.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (1 samples, 0.04%)</title><rect x="117.2" y="467.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="120.2" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="117.2" y="451.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="120.2" y="462.0"></text>
</g>
<g>
<title>javax/management/AttributeList.&lt;init&gt; (1 samples, 0.04%)</title><rect x="117.7" y="579.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="120.7" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.04%)</title><rect x="117.7" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="120.7" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="117.7" y="547.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="120.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor40.invoke (204 samples, 7.33%)</title><rect x="118.1" y="723.0" width="86.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="121.1" y="734.0">jdk/intern..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (204 samples, 7.33%)</title><rect x="118.1" y="707.0" width="86.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="121.1" y="718.0">javax/mana..</text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="118.1" y="691.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="121.1" y="702.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (174 samples, 6.25%)</title><rect x="118.5" y="691.0" width="73.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.5" y="702.0">javax/ma..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (174 samples, 6.25%)</title><rect x="118.5" y="675.0" width="73.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="121.5" y="686.0">javax/ma..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (174 samples, 6.25%)</title><rect x="118.5" y="659.0" width="73.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="121.5" y="670.0">javax/ma..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (174 samples, 6.25%)</title><rect x="118.5" y="643.0" width="73.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="121.5" y="654.0">com/sun/..</text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (174 samples, 6.25%)</title><rect x="118.5" y="627.0" width="73.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.5" y="638.0">com/sun/..</text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (174 samples, 6.25%)</title><rect x="118.5" y="611.0" width="73.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="121.5" y="622.0">javax/ma..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (174 samples, 6.25%)</title><rect x="118.5" y="595.0" width="73.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.5" y="606.0">com/sun/..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (174 samples, 6.25%)</title><rect x="118.5" y="579.0" width="73.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.5" y="590.0">com/sun/..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (174 samples, 6.25%)</title><rect x="118.5" y="563.0" width="73.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="121.5" y="574.0">com/sun/..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (174 samples, 6.25%)</title><rect x="118.5" y="547.0" width="73.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.5" y="558.0">com/sun/..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (174 samples, 6.25%)</title><rect x="118.5" y="531.0" width="73.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="121.5" y="542.0">com/sun/..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (174 samples, 6.25%)</title><rect x="118.5" y="515.0" width="73.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="121.5" y="526.0">com/sun/..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (174 samples, 6.25%)</title><rect x="118.5" y="499.0" width="73.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="121.5" y="510.0">com/sun/..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (153 samples, 5.50%)</title><rect x="118.5" y="483.0" width="64.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.5" y="494.0">com/sun..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (153 samples, 5.50%)</title><rect x="118.5" y="467.0" width="64.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="121.5" y="478.0">com/sun..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (152 samples, 5.46%)</title><rect x="118.5" y="451.0" width="64.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.5" y="462.0">com/sun..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (152 samples, 5.46%)</title><rect x="118.5" y="435.0" width="64.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.5" y="446.0">com/sun..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (53 samples, 1.90%)</title><rect x="118.5" y="419.0" width="22.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.5" y="430.0">c..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (42 samples, 1.51%)</title><rect x="118.5" y="403.0" width="17.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="121.5" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (38 samples, 1.36%)</title><rect x="118.5" y="387.0" width="16.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="121.5" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (38 samples, 1.36%)</title><rect x="118.5" y="371.0" width="16.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.5" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.07%)</title><rect x="118.5" y="355.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="121.5" y="366.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (5 samples, 0.18%)</title><rect x="119.4" y="355.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="122.4" y="366.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (17 samples, 0.61%)</title><rect x="121.5" y="355.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="124.5" y="366.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (4 samples, 0.14%)</title><rect x="121.5" y="339.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="124.5" y="350.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (2 samples, 0.07%)</title><rect x="121.5" y="323.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="124.5" y="334.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (2 samples, 0.07%)</title><rect x="121.5" y="307.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="124.5" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (2 samples, 0.07%)</title><rect x="121.5" y="291.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.5" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (2 samples, 0.07%)</title><rect x="121.5" y="275.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="124.5" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (2 samples, 0.07%)</title><rect x="121.5" y="259.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="124.5" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.equals (2 samples, 0.07%)</title><rect x="122.3" y="323.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="125.3" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractSet.equals (2 samples, 0.07%)</title><rect x="122.3" y="307.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="125.3" y="318.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.containsAll (2 samples, 0.07%)</title><rect x="122.3" y="291.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="125.3" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (2 samples, 0.07%)</title><rect x="122.3" y="275.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="125.3" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (2 samples, 0.07%)</title><rect x="122.3" y="259.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.3" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (2 samples, 0.07%)</title><rect x="122.3" y="243.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="125.3" y="254.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (13 samples, 0.47%)</title><rect x="123.2" y="339.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="126.2" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.07%)</title><rect x="123.2" y="323.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="126.2" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (11 samples, 0.40%)</title><rect x="124.0" y="323.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="127.0" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (11 samples, 0.40%)</title><rect x="124.0" y="307.0" width="4.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="127.0" y="318.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (14 samples, 0.50%)</title><rect x="128.7" y="355.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="131.7" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.50%)</title><rect x="128.7" y="339.0" width="5.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="131.7" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (4 samples, 0.14%)</title><rect x="134.6" y="387.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="137.6" y="398.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeData[] (4 samples, 0.14%)</title><rect x="134.6" y="371.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="137.6" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (11 samples, 0.40%)</title><rect x="136.3" y="403.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="139.3" y="414.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (8 samples, 0.29%)</title><rect x="136.3" y="387.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="139.3" y="398.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (5 samples, 0.18%)</title><rect x="136.3" y="371.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="139.3" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (3 samples, 0.11%)</title><rect x="136.3" y="355.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="139.3" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (3 samples, 0.11%)</title><rect x="136.3" y="339.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="139.3" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (3 samples, 0.11%)</title><rect x="136.3" y="323.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="139.3" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (3 samples, 0.11%)</title><rect x="136.3" y="307.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="139.3" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (3 samples, 0.11%)</title><rect x="136.3" y="291.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="139.3" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySet (2 samples, 0.07%)</title><rect x="137.6" y="355.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="140.6" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (2 samples, 0.07%)</title><rect x="137.6" y="339.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="140.6" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (2 samples, 0.07%)</title><rect x="137.6" y="323.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="140.6" y="334.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (3 samples, 0.11%)</title><rect x="138.4" y="371.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="141.4" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.11%)</title><rect x="138.4" y="355.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="141.4" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.11%)</title><rect x="138.4" y="339.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="141.4" y="350.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (3 samples, 0.11%)</title><rect x="139.7" y="387.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="142.7" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.11%)</title><rect x="139.7" y="371.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="142.7" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.14%)</title><rect x="141.0" y="419.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="144.0" y="430.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (4 samples, 0.14%)</title><rect x="142.7" y="419.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="145.7" y="430.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (50 samples, 1.80%)</title><rect x="144.4" y="419.0" width="21.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="147.4" y="430.0">j..</text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (5 samples, 0.18%)</title><rect x="144.4" y="403.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.4" y="414.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (3 samples, 0.11%)</title><rect x="144.4" y="387.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="147.4" y="398.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (3 samples, 0.11%)</title><rect x="144.4" y="371.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="147.4" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (3 samples, 0.11%)</title><rect x="144.4" y="355.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="147.4" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (3 samples, 0.11%)</title><rect x="144.4" y="339.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.4" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (3 samples, 0.11%)</title><rect x="144.4" y="323.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="147.4" y="334.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.equals (2 samples, 0.07%)</title><rect x="145.6" y="387.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="148.6" y="398.0"></text>
</g>
<g>
<title>java/util/AbstractSet.equals (2 samples, 0.07%)</title><rect x="145.6" y="371.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="148.6" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.containsAll (2 samples, 0.07%)</title><rect x="145.6" y="355.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="148.6" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (2 samples, 0.07%)</title><rect x="145.6" y="339.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.6" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (2 samples, 0.07%)</title><rect x="145.6" y="323.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.6" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (2 samples, 0.07%)</title><rect x="145.6" y="307.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="148.6" y="318.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (45 samples, 1.62%)</title><rect x="146.5" y="403.0" width="19.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="149.5" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.14%)</title><rect x="146.5" y="387.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="149.5" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (41 samples, 1.47%)</title><rect x="148.2" y="387.0" width="17.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.2" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (41 samples, 1.47%)</title><rect x="148.2" y="371.0" width="17.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="151.2" y="382.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (41 samples, 1.47%)</title><rect x="165.6" y="419.0" width="17.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.6" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (39 samples, 1.40%)</title><rect x="165.6" y="403.0" width="16.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="168.6" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.07%)</title><rect x="182.1" y="403.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="185.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.07%)</title><rect x="182.1" y="387.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="185.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (2 samples, 0.07%)</title><rect x="182.1" y="371.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="185.1" y="382.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (2 samples, 0.07%)</title><rect x="182.1" y="355.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="185.1" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.07%)</title><rect x="182.1" y="339.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="185.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.07%)</title><rect x="182.1" y="323.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="185.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor13.invoke (2 samples, 0.07%)</title><rect x="182.1" y="307.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="185.1" y="318.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getLockedSynchronizers (2 samples, 0.07%)</title><rect x="182.1" y="291.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="185.1" y="302.0"></text>
</g>
<g>
<title>java.lang.management.LockInfo[] (2 samples, 0.07%)</title><rect x="182.1" y="275.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="185.1" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1 samples, 0.04%)</title><rect x="182.9" y="451.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="185.9" y="462.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeData[] (1 samples, 0.04%)</title><rect x="182.9" y="435.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="185.9" y="446.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (21 samples, 0.75%)</title><rect x="183.4" y="483.0" width="8.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="186.4" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (21 samples, 0.75%)</title><rect x="183.4" y="467.0" width="8.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="186.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (21 samples, 0.75%)</title><rect x="183.4" y="451.0" width="8.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (21 samples, 0.75%)</title><rect x="183.4" y="435.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="186.4" y="446.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (21 samples, 0.75%)</title><rect x="183.4" y="419.0" width="8.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="186.4" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (21 samples, 0.75%)</title><rect x="183.4" y="403.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="186.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (21 samples, 0.75%)</title><rect x="183.4" y="387.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="186.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (21 samples, 0.75%)</title><rect x="183.4" y="371.0" width="8.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="186.4" y="382.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (21 samples, 0.75%)</title><rect x="183.4" y="355.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="186.4" y="366.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (21 samples, 0.75%)</title><rect x="183.4" y="339.0" width="8.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="186.4" y="350.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement[] (1 samples, 0.04%)</title><rect x="183.4" y="323.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="186.4" y="334.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement (2 samples, 0.07%)</title><rect x="183.8" y="323.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="186.8" y="334.0"></text>
</g>
<g>
<title>java.lang.management.ThreadInfo (10 samples, 0.36%)</title><rect x="184.6" y="323.0" width="4.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="187.6" y="334.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.&lt;init&gt; (8 samples, 0.29%)</title><rect x="188.9" y="323.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="191.9" y="334.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.initialize (8 samples, 0.29%)</title><rect x="188.9" y="307.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.9" y="318.0"></text>
</g>
<g>
<title>java.lang.management.LockInfo (1 samples, 0.04%)</title><rect x="188.9" y="291.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="191.9" y="302.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (1 samples, 0.04%)</title><rect x="189.3" y="291.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.3" y="302.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (1 samples, 0.04%)</title><rect x="189.3" y="275.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="192.3" y="286.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="189.3" y="259.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="192.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.22%)</title><rect x="189.7" y="291.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="192.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (6 samples, 0.22%)</title><rect x="189.7" y="275.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="192.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1010931249.invoke (6 samples, 0.22%)</title><rect x="189.7" y="259.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="192.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.22%)</title><rect x="189.7" y="243.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.7" y="254.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.04%)</title><rect x="189.7" y="227.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="192.7" y="238.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.04%)</title><rect x="189.7" y="211.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="192.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (5 samples, 0.18%)</title><rect x="190.1" y="227.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (5 samples, 0.18%)</title><rect x="190.1" y="211.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="193.1" y="222.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.18%)</title><rect x="190.1" y="195.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="193.1" y="206.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getClassLoaderFor (4 samples, 0.14%)</title><rect x="192.3" y="691.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.3" y="702.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.withPermissions (4 samples, 0.14%)</title><rect x="192.3" y="675.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="195.3" y="686.0"></text>
</g>
<g>
<title>java.security.AccessControlContext (1 samples, 0.04%)</title><rect x="192.3" y="659.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="195.3" y="670.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain (1 samples, 0.04%)</title><rect x="192.7" y="659.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="195.7" y="670.0"></text>
</g>
<g>
<title>java/security/Permissions.&lt;init&gt; (1 samples, 0.04%)</title><rect x="193.1" y="659.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="196.1" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentHashMap (1 samples, 0.04%)</title><rect x="193.1" y="643.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="196.1" y="654.0"></text>
</g>
<g>
<title>java/security/Permissions.add (1 samples, 0.04%)</title><rect x="193.5" y="659.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="196.5" y="670.0"></text>
</g>
<g>
<title>java/security/Permissions.getPermissionCollection (1 samples, 0.04%)</title><rect x="193.5" y="643.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="196.5" y="654.0"></text>
</g>
<g>
<title>java.security.Permissions$1 (1 samples, 0.04%)</title><rect x="193.5" y="627.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="196.5" y="638.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (25 samples, 0.90%)</title><rect x="194.0" y="691.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="197.0" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (8 samples, 0.29%)</title><rect x="194.0" y="675.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="197.0" y="686.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (8 samples, 0.29%)</title><rect x="194.0" y="659.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="197.0" y="670.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (8 samples, 0.29%)</title><rect x="194.0" y="643.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="197.0" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/util/OrderClassLoaders.&lt;init&gt; (1 samples, 0.04%)</title><rect x="194.0" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="197.0" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (1 samples, 0.04%)</title><rect x="194.0" y="611.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="197.0" y="622.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (1 samples, 0.04%)</title><rect x="194.0" y="595.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="197.0" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (1 samples, 0.04%)</title><rect x="194.0" y="579.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="197.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.04%)</title><rect x="194.0" y="563.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="197.0" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.04%)</title><rect x="194.0" y="547.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="197.0" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.04%)</title><rect x="194.0" y="531.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="197.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="194.0" y="515.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="197.0" y="526.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="194.0" y="499.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="197.0" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader.&lt;init&gt; (7 samples, 0.25%)</title><rect x="194.4" y="627.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="197.4" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (2 samples, 0.07%)</title><rect x="194.4" y="611.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="197.4" y="622.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (2 samples, 0.07%)</title><rect x="194.4" y="595.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="197.4" y="606.0"></text>
</g>
<g>
<title>java.lang.Module (1 samples, 0.04%)</title><rect x="194.4" y="579.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="197.4" y="590.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain (1 samples, 0.04%)</title><rect x="194.8" y="579.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="197.8" y="590.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader$ClassLoaderWrapper.&lt;init&gt; (5 samples, 0.18%)</title><rect x="195.2" y="611.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="198.2" y="622.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (5 samples, 0.18%)</title><rect x="195.2" y="595.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.2" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (5 samples, 0.18%)</title><rect x="195.2" y="579.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="198.2" y="590.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (4 samples, 0.14%)</title><rect x="195.2" y="563.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="198.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.14%)</title><rect x="195.2" y="547.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="198.2" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.14%)</title><rect x="195.2" y="531.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="198.2" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.14%)</title><rect x="195.2" y="515.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="198.2" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.14%)</title><rect x="195.2" y="499.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="198.2" y="510.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.14%)</title><rect x="195.2" y="483.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="198.2" y="494.0"></text>
</g>
<g>
<title>java/util/Hashtable.&lt;init&gt; (1 samples, 0.04%)</title><rect x="196.9" y="563.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="199.9" y="574.0"></text>
</g>
<g>
<title>java/util/Hashtable.&lt;init&gt; (1 samples, 0.04%)</title><rect x="196.9" y="547.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="199.9" y="558.0"></text>
</g>
<g>
<title>java.util.Hashtable$Entry[] (1 samples, 0.04%)</title><rect x="196.9" y="531.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="199.9" y="542.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (17 samples, 0.61%)</title><rect x="197.3" y="675.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="200.3" y="686.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (16 samples, 0.57%)</title><rect x="197.3" y="659.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="200.3" y="670.0"></text>
</g>
<g>
<title>java.io.ByteArrayInputStream (1 samples, 0.04%)</title><rect x="197.3" y="643.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="200.3" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (7 samples, 0.25%)</title><rect x="197.8" y="643.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="200.8" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (7 samples, 0.25%)</title><rect x="197.8" y="627.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="200.8" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (7 samples, 0.25%)</title><rect x="197.8" y="611.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="200.8" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (7 samples, 0.25%)</title><rect x="197.8" y="595.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="200.8" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (3 samples, 0.11%)</title><rect x="197.8" y="579.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="200.8" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (3 samples, 0.11%)</title><rect x="197.8" y="563.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="200.8" y="574.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (2 samples, 0.07%)</title><rect x="197.8" y="547.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="200.8" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (1 samples, 0.04%)</title><rect x="198.6" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="201.6" y="558.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (1 samples, 0.04%)</title><rect x="198.6" y="531.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="201.6" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (4 samples, 0.14%)</title><rect x="199.0" y="579.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="202.0" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (1 samples, 0.04%)</title><rect x="199.0" y="563.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.0" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.04%)</title><rect x="199.0" y="547.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="202.0" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.04%)</title><rect x="199.0" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="202.0" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (1 samples, 0.04%)</title><rect x="199.0" y="515.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.0" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.04%)</title><rect x="199.0" y="499.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="202.0" y="510.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.04%)</title><rect x="199.0" y="483.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="202.0" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (3 samples, 0.11%)</title><rect x="199.5" y="563.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.5" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (2 samples, 0.07%)</title><rect x="199.5" y="547.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="202.5" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (2 samples, 0.07%)</title><rect x="199.5" y="531.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="202.5" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.04%)</title><rect x="199.5" y="515.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="202.5" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.04%)</title><rect x="199.5" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="202.5" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (1 samples, 0.04%)</title><rect x="199.5" y="483.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="202.5" y="494.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.04%)</title><rect x="199.5" y="467.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="202.5" y="478.0"></text>
</g>
<g>
<title>java.lang.Long (1 samples, 0.04%)</title><rect x="199.5" y="451.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="202.5" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (1 samples, 0.04%)</title><rect x="199.9" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="202.9" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getReflector (1 samples, 0.04%)</title><rect x="199.9" y="499.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="202.9" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass$FieldReflectorKey.&lt;init&gt; (1 samples, 0.04%)</title><rect x="199.9" y="483.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="202.9" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.04%)</title><rect x="199.9" y="467.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="202.9" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (1 samples, 0.04%)</title><rect x="200.3" y="547.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="203.3" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (1 samples, 0.04%)</title><rect x="200.3" y="531.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="203.3" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (1 samples, 0.04%)</title><rect x="200.3" y="515.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="203.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.04%)</title><rect x="200.3" y="499.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="203.3" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.04%)</title><rect x="200.3" y="483.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="203.3" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.04%)</title><rect x="200.3" y="467.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="203.3" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.04%)</title><rect x="200.3" y="451.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="203.3" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1 samples, 0.04%)</title><rect x="200.3" y="435.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="203.3" y="446.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject$MarshalledObjectInputStream.&lt;init&gt; (6 samples, 0.22%)</title><rect x="200.7" y="643.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="203.7" y="654.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (6 samples, 0.22%)</title><rect x="200.7" y="627.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="203.7" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (6 samples, 0.22%)</title><rect x="200.7" y="611.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="203.7" y="622.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$BlockDataInputStream (1 samples, 0.04%)</title><rect x="200.7" y="595.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="203.7" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (4 samples, 0.14%)</title><rect x="201.2" y="595.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="204.2" y="606.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="201.2" y="579.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="204.2" y="590.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.07%)</title><rect x="201.6" y="579.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="204.6" y="590.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (1 samples, 0.04%)</title><rect x="202.4" y="579.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="205.4" y="590.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="202.4" y="563.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="205.4" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (1 samples, 0.04%)</title><rect x="202.9" y="595.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="205.9" y="606.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="202.9" y="579.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="205.9" y="590.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.close (2 samples, 0.07%)</title><rect x="203.3" y="643.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="206.3" y="654.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.done (2 samples, 0.07%)</title><rect x="203.3" y="627.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="206.3" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$Values.iterator (2 samples, 0.07%)</title><rect x="203.3" y="611.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.3" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$ValueIterator (2 samples, 0.07%)</title><rect x="203.3" y="595.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="206.3" y="606.0"></text>
</g>
<g>
<title>javax.management.remote.rmi.RMIConnectionImpl$SetCcl (1 samples, 0.04%)</title><rect x="204.1" y="659.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="207.1" y="670.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (74 samples, 2.66%)</title><rect x="204.5" y="755.0" width="31.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="207.5" y="766.0">su..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (74 samples, 2.66%)</title><rect x="204.5" y="739.0" width="31.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="207.5" y="750.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (74 samples, 2.66%)</title><rect x="204.5" y="723.0" width="31.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="207.5" y="734.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (72 samples, 2.59%)</title><rect x="204.5" y="707.0" width="30.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="207.5" y="718.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (72 samples, 2.59%)</title><rect x="204.5" y="691.0" width="30.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="207.5" y="702.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (71 samples, 2.55%)</title><rect x="204.5" y="675.0" width="30.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="207.5" y="686.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.04%)</title><rect x="204.5" y="659.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="207.5" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (1 samples, 0.04%)</title><rect x="204.5" y="643.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="207.5" y="654.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.04%)</title><rect x="204.5" y="627.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="207.5" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (70 samples, 2.51%)</title><rect x="205.0" y="659.0" width="29.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="208.0" y="670.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (70 samples, 2.51%)</title><rect x="205.0" y="643.0" width="29.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="208.0" y="654.0">ja..</text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.07%)</title><rect x="205.0" y="627.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="208.0" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (68 samples, 2.44%)</title><rect x="205.8" y="627.0" width="28.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="208.8" y="638.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (67 samples, 2.41%)</title><rect x="205.8" y="611.0" width="28.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="208.8" y="622.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.04%)</title><rect x="205.8" y="595.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="208.8" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (1 samples, 0.04%)</title><rect x="205.8" y="579.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="208.8" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="205.8" y="563.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="208.8" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (66 samples, 2.37%)</title><rect x="206.2" y="595.0" width="28.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="209.2" y="606.0">j..</text>
</g>
<g>
<title>java.io.SerialCallbackContext (3 samples, 0.11%)</title><rect x="206.2" y="579.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="209.2" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (16 samples, 0.57%)</title><rect x="207.5" y="579.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.5" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (16 samples, 0.57%)</title><rect x="207.5" y="563.0" width="6.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="210.5" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (16 samples, 0.57%)</title><rect x="207.5" y="547.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="210.5" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (16 samples, 0.57%)</title><rect x="207.5" y="531.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.5" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (16 samples, 0.57%)</title><rect x="207.5" y="515.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="210.5" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="207.5" y="499.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="210.5" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (15 samples, 0.54%)</title><rect x="207.9" y="499.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (15 samples, 0.54%)</title><rect x="207.9" y="483.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (15 samples, 0.54%)</title><rect x="207.9" y="467.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="210.9" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (15 samples, 0.54%)</title><rect x="207.9" y="451.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="210.9" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (15 samples, 0.54%)</title><rect x="207.9" y="435.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="210.9" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (15 samples, 0.54%)</title><rect x="207.9" y="419.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="210.9" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (9 samples, 0.32%)</title><rect x="207.9" y="403.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="210.9" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (9 samples, 0.32%)</title><rect x="207.9" y="387.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="210.9" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (9 samples, 0.32%)</title><rect x="207.9" y="371.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="210.9" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (9 samples, 0.32%)</title><rect x="207.9" y="355.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="210.9" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (9 samples, 0.32%)</title><rect x="207.9" y="339.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="210.9" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (9 samples, 0.32%)</title><rect x="207.9" y="323.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="210.9" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (4 samples, 0.14%)</title><rect x="207.9" y="307.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="210.9" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.14%)</title><rect x="207.9" y="291.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="210.9" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (4 samples, 0.14%)</title><rect x="207.9" y="275.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.9" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.04%)</title><rect x="207.9" y="259.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.9" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (1 samples, 0.04%)</title><rect x="207.9" y="243.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.9" y="254.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.04%)</title><rect x="207.9" y="227.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="210.9" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.11%)</title><rect x="208.4" y="259.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="211.4" y="270.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (1 samples, 0.04%)</title><rect x="208.4" y="243.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="211.4" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (2 samples, 0.07%)</title><rect x="208.8" y="243.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="211.8" y="254.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.07%)</title><rect x="208.8" y="227.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="211.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.07%)</title><rect x="208.8" y="211.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="211.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (2 samples, 0.07%)</title><rect x="208.8" y="195.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="211.8" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (2 samples, 0.07%)</title><rect x="208.8" y="179.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="211.8" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2 samples, 0.07%)</title><rect x="208.8" y="163.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="211.8" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.07%)</title><rect x="208.8" y="147.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.8" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.04%)</title><rect x="208.8" y="131.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="211.8" y="142.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.04%)</title><rect x="208.8" y="115.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="211.8" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.04%)</title><rect x="208.8" y="99.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="211.8" y="110.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.04%)</title><rect x="208.8" y="83.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="211.8" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.04%)</title><rect x="208.8" y="67.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="211.8" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.04%)</title><rect x="208.8" y="51.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="211.8" y="62.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (1 samples, 0.04%)</title><rect x="208.8" y="35.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="211.8" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.04%)</title><rect x="209.2" y="131.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="212.2" y="142.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.04%)</title><rect x="209.2" y="115.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="212.2" y="126.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (5 samples, 0.18%)</title><rect x="209.6" y="307.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="212.6" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="209.6" y="291.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="212.6" y="302.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (4 samples, 0.14%)</title><rect x="210.1" y="291.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="213.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (4 samples, 0.14%)</title><rect x="210.1" y="275.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="213.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (4 samples, 0.14%)</title><rect x="210.1" y="259.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="213.1" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (4 samples, 0.14%)</title><rect x="210.1" y="243.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="213.1" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (4 samples, 0.14%)</title><rect x="210.1" y="227.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="213.1" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.14%)</title><rect x="210.1" y="211.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="213.1" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.04%)</title><rect x="210.1" y="195.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="213.1" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.04%)</title><rect x="210.1" y="179.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="213.1" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.04%)</title><rect x="210.1" y="163.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="213.1" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="210.1" y="147.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="213.1" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (3 samples, 0.11%)</title><rect x="210.5" y="195.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="213.5" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (3 samples, 0.11%)</title><rect x="210.5" y="179.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="213.5" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (3 samples, 0.11%)</title><rect x="210.5" y="163.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="213.5" y="174.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.07%)</title><rect x="210.5" y="147.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="213.5" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="211.3" y="147.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="214.3" y="158.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (3 samples, 0.11%)</title><rect x="211.8" y="403.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="214.8" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (3 samples, 0.11%)</title><rect x="211.8" y="387.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="214.8" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (2 samples, 0.07%)</title><rect x="211.8" y="371.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="214.8" y="382.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.07%)</title><rect x="211.8" y="355.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="214.8" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (1 samples, 0.04%)</title><rect x="212.6" y="371.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="215.6" y="382.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.04%)</title><rect x="212.6" y="355.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="215.6" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (3 samples, 0.11%)</title><rect x="213.0" y="403.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="216.0" y="414.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (3 samples, 0.11%)</title><rect x="213.0" y="387.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="216.0" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (47 samples, 1.69%)</title><rect x="214.3" y="579.0" width="19.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="217.3" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (47 samples, 1.69%)</title><rect x="214.3" y="563.0" width="19.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="217.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (47 samples, 1.69%)</title><rect x="214.3" y="547.0" width="19.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="217.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (47 samples, 1.69%)</title><rect x="214.3" y="531.0" width="19.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="217.3" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (47 samples, 1.69%)</title><rect x="214.3" y="515.0" width="19.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="217.3" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (46 samples, 1.65%)</title><rect x="214.3" y="499.0" width="19.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="217.3" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (46 samples, 1.65%)</title><rect x="214.3" y="483.0" width="19.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="217.3" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (14 samples, 0.50%)</title><rect x="214.3" y="467.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="217.3" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.04%)</title><rect x="214.3" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="217.3" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (1 samples, 0.04%)</title><rect x="214.3" y="435.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="217.3" y="446.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.04%)</title><rect x="214.3" y="419.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="217.3" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (13 samples, 0.47%)</title><rect x="214.7" y="451.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="217.7" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (11 samples, 0.40%)</title><rect x="214.7" y="435.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="217.7" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (11 samples, 0.40%)</title><rect x="214.7" y="419.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="217.7" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (11 samples, 0.40%)</title><rect x="214.7" y="403.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="217.7" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="214.7" y="387.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="217.7" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (10 samples, 0.36%)</title><rect x="215.1" y="387.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="218.1" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (10 samples, 0.36%)</title><rect x="215.1" y="371.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="218.1" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (10 samples, 0.36%)</title><rect x="215.1" y="355.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="218.1" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (10 samples, 0.36%)</title><rect x="215.1" y="339.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="218.1" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.07%)</title><rect x="215.1" y="323.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="218.1" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (8 samples, 0.29%)</title><rect x="216.0" y="323.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (8 samples, 0.29%)</title><rect x="216.0" y="307.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="219.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (8 samples, 0.29%)</title><rect x="216.0" y="291.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="219.0" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (8 samples, 0.29%)</title><rect x="216.0" y="275.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="219.0" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (1 samples, 0.04%)</title><rect x="216.0" y="259.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="219.0" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.04%)</title><rect x="216.0" y="243.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="219.0" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="216.0" y="227.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="219.0" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (5 samples, 0.18%)</title><rect x="216.4" y="259.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="219.4" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (5 samples, 0.18%)</title><rect x="216.4" y="243.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="219.4" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (5 samples, 0.18%)</title><rect x="216.4" y="227.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.4" y="238.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (5 samples, 0.18%)</title><rect x="216.4" y="211.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="219.4" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (2 samples, 0.07%)</title><rect x="218.5" y="259.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="221.5" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (2 samples, 0.07%)</title><rect x="218.5" y="243.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="221.5" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (2 samples, 0.07%)</title><rect x="219.4" y="435.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.4" y="446.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (2 samples, 0.07%)</title><rect x="219.4" y="419.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="222.4" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (23 samples, 0.83%)</title><rect x="220.2" y="467.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="223.2" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (5 samples, 0.18%)</title><rect x="220.2" y="451.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="223.2" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (5 samples, 0.18%)</title><rect x="220.2" y="435.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="223.2" y="446.0"></text>
</g>
<g>
<title>int[] (4 samples, 0.14%)</title><rect x="220.2" y="419.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="223.2" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="221.9" y="419.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="224.9" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (18 samples, 0.65%)</title><rect x="222.3" y="451.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="225.3" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (18 samples, 0.65%)</title><rect x="222.3" y="435.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="225.3" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (18 samples, 0.65%)</title><rect x="222.3" y="419.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="225.3" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (17 samples, 0.61%)</title><rect x="222.3" y="403.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="225.3" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (17 samples, 0.61%)</title><rect x="222.3" y="387.0" width="7.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="225.3" y="398.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (2 samples, 0.07%)</title><rect x="222.3" y="371.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="225.3" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (15 samples, 0.54%)</title><rect x="223.2" y="371.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="226.2" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (15 samples, 0.54%)</title><rect x="223.2" y="355.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="226.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (15 samples, 0.54%)</title><rect x="223.2" y="339.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="226.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (15 samples, 0.54%)</title><rect x="223.2" y="323.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="226.2" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (15 samples, 0.54%)</title><rect x="223.2" y="307.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="226.2" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (1 samples, 0.04%)</title><rect x="223.2" y="291.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="226.2" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.04%)</title><rect x="223.2" y="275.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="226.2" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="223.2" y="259.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="226.2" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (14 samples, 0.50%)</title><rect x="223.6" y="291.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="226.6" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (14 samples, 0.50%)</title><rect x="223.6" y="275.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="226.6" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (13 samples, 0.47%)</title><rect x="223.6" y="259.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="226.6" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (13 samples, 0.47%)</title><rect x="223.6" y="243.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="226.6" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (13 samples, 0.47%)</title><rect x="223.6" y="227.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="226.6" y="238.0"></text>
</g>
<g>
<title>int[] (4 samples, 0.14%)</title><rect x="223.6" y="211.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="226.6" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.18%)</title><rect x="225.3" y="211.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="228.3" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.14%)</title><rect x="227.4" y="211.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="230.4" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.04%)</title><rect x="229.1" y="259.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="232.1" y="270.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.04%)</title><rect x="229.1" y="243.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="232.1" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.04%)</title><rect x="229.6" y="403.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="232.6" y="414.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.04%)</title><rect x="229.6" y="387.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="232.6" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (1 samples, 0.04%)</title><rect x="230.0" y="467.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="233.0" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.04%)</title><rect x="230.0" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="233.0" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (1 samples, 0.04%)</title><rect x="230.0" y="435.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="233.0" y="446.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.04%)</title><rect x="230.0" y="419.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="233.0" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (8 samples, 0.29%)</title><rect x="230.4" y="467.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="233.4" y="478.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (8 samples, 0.29%)</title><rect x="230.4" y="451.0" width="3.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="233.4" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (1 samples, 0.04%)</title><rect x="233.8" y="499.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="236.8" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (1 samples, 0.04%)</title><rect x="233.8" y="483.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="236.8" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.04%)</title><rect x="234.2" y="611.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.2" y="622.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.04%)</title><rect x="234.2" y="595.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="237.2" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.04%)</title><rect x="234.6" y="675.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="237.6" y="686.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.04%)</title><rect x="234.6" y="659.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="237.6" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.04%)</title><rect x="235.1" y="707.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="238.1" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.04%)</title><rect x="235.1" y="691.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="238.1" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.04%)</title><rect x="235.1" y="675.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="238.1" y="686.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.04%)</title><rect x="235.1" y="659.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="238.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.04%)</title><rect x="235.1" y="643.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="238.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor39.invoke (1 samples, 0.04%)</title><rect x="235.1" y="627.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="238.1" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.writeObject (1 samples, 0.04%)</title><rect x="235.1" y="611.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="238.1" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.04%)</title><rect x="235.1" y="595.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="238.1" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.04%)</title><rect x="235.1" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.1" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.04%)</title><rect x="235.1" y="563.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.1" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.04%)</title><rect x="235.1" y="547.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="238.1" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (1 samples, 0.04%)</title><rect x="235.1" y="531.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.1" y="542.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.04%)</title><rect x="235.1" y="515.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="238.1" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.04%)</title><rect x="235.5" y="707.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="238.5" y="718.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.04%)</title><rect x="235.5" y="691.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="238.5" y="702.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (47 samples, 1.69%)</title><rect x="235.9" y="755.0" width="19.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="238.9" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$$Lambda$97/1717255043.readString (2 samples, 0.07%)</title><rect x="235.9" y="739.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="238.9" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (2 samples, 0.07%)</title><rect x="235.9" y="723.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="238.9" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.07%)</title><rect x="235.9" y="707.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="238.9" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.07%)</title><rect x="235.9" y="691.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="238.9" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (2 samples, 0.07%)</title><rect x="235.9" y="675.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.9" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (2 samples, 0.07%)</title><rect x="235.9" y="659.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="238.9" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (2 samples, 0.07%)</title><rect x="235.9" y="643.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="238.9" y="654.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.04%)</title><rect x="235.9" y="627.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="238.9" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.04%)</title><rect x="236.3" y="627.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="239.3" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="236.3" y="611.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="239.3" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.04%)</title><rect x="236.3" y="595.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="239.3" y="606.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="236.3" y="579.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="239.3" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (45 samples, 1.62%)</title><rect x="236.8" y="739.0" width="19.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="239.8" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (45 samples, 1.62%)</title><rect x="236.8" y="723.0" width="19.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="239.8" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (45 samples, 1.62%)</title><rect x="236.8" y="707.0" width="19.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="239.8" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (2 samples, 0.07%)</title><rect x="236.8" y="691.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="239.8" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.04%)</title><rect x="236.8" y="675.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="239.8" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.04%)</title><rect x="236.8" y="659.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="239.8" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (1 samples, 0.04%)</title><rect x="236.8" y="643.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="239.8" y="654.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.04%)</title><rect x="236.8" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="239.8" y="638.0"></text>
</g>
<g>
<title>java.lang.Long (1 samples, 0.04%)</title><rect x="236.8" y="611.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="239.8" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.04%)</title><rect x="237.2" y="675.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="240.2" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (1 samples, 0.04%)</title><rect x="237.2" y="659.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="240.2" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (1 samples, 0.04%)</title><rect x="237.2" y="643.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="240.2" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (1 samples, 0.04%)</title><rect x="237.2" y="627.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="240.2" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.04%)</title><rect x="237.2" y="611.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="240.2" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.04%)</title><rect x="237.2" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="240.2" y="606.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="237.2" y="579.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="240.2" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (43 samples, 1.54%)</title><rect x="237.6" y="691.0" width="18.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="240.6" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (18 samples, 0.65%)</title><rect x="237.6" y="675.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="240.6" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (18 samples, 0.65%)</title><rect x="237.6" y="659.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="240.6" y="670.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (4 samples, 0.14%)</title><rect x="237.6" y="643.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="240.6" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (11 samples, 0.40%)</title><rect x="239.3" y="643.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="242.3" y="654.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (4 samples, 0.14%)</title><rect x="239.3" y="627.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="242.3" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (7 samples, 0.25%)</title><rect x="241.0" y="627.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="244.0" y="638.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.04%)</title><rect x="241.0" y="611.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="244.0" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (4 samples, 0.14%)</title><rect x="241.4" y="611.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="244.4" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (4 samples, 0.14%)</title><rect x="241.4" y="595.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="244.4" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (4 samples, 0.14%)</title><rect x="241.4" y="579.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="244.4" y="590.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.04%)</title><rect x="241.4" y="563.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="244.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.04%)</title><rect x="241.8" y="563.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="244.8" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.04%)</title><rect x="241.8" y="547.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="244.8" y="558.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="241.8" y="531.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="244.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.07%)</title><rect x="242.3" y="563.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="245.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.07%)</title><rect x="242.3" y="547.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="245.3" y="558.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.04%)</title><rect x="242.3" y="531.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="245.3" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.04%)</title><rect x="242.7" y="531.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="245.7" y="542.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="242.7" y="515.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="245.7" y="526.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.04%)</title><rect x="243.1" y="611.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="246.1" y="622.0"></text>
</g>
<g>
<title>java.lang.Long (1 samples, 0.04%)</title><rect x="243.1" y="595.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="246.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="243.5" y="611.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="246.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="243.5" y="595.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="246.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.04%)</title><rect x="243.5" y="579.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="246.5" y="590.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="243.5" y="563.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="246.5" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (3 samples, 0.11%)</title><rect x="244.0" y="643.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.0" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getReflector (3 samples, 0.11%)</title><rect x="244.0" y="627.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="247.0" y="638.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$FieldReflectorKey (1 samples, 0.04%)</title><rect x="244.0" y="611.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="247.0" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass$FieldReflectorKey.&lt;init&gt; (2 samples, 0.07%)</title><rect x="244.4" y="611.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="247.4" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.07%)</title><rect x="244.4" y="595.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="247.4" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (24 samples, 0.86%)</title><rect x="245.2" y="675.0" width="10.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="248.2" y="686.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$FieldValues[] (2 samples, 0.07%)</title><rect x="245.2" y="659.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="248.2" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (2 samples, 0.07%)</title><rect x="246.1" y="659.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="249.1" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (2 samples, 0.07%)</title><rect x="246.1" y="643.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="249.1" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.04%)</title><rect x="246.1" y="627.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="249.1" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap (1 samples, 0.04%)</title><rect x="246.1" y="611.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="249.1" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.04%)</title><rect x="246.5" y="627.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="249.5" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.04%)</title><rect x="246.5" y="611.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="249.5" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.04%)</title><rect x="246.5" y="595.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="249.5" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.04%)</title><rect x="246.5" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="249.5" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1 samples, 0.04%)</title><rect x="246.5" y="563.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="249.5" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (20 samples, 0.72%)</title><rect x="246.9" y="659.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.9" y="670.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (20 samples, 0.72%)</title><rect x="246.9" y="643.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="249.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (20 samples, 0.72%)</title><rect x="246.9" y="627.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="249.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor2.invoke (19 samples, 0.68%)</title><rect x="246.9" y="611.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="249.9" y="622.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (19 samples, 0.68%)</title><rect x="246.9" y="595.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="249.9" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 0.11%)</title><rect x="246.9" y="579.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="249.9" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 0.11%)</title><rect x="246.9" y="563.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="249.9" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (3 samples, 0.11%)</title><rect x="246.9" y="547.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="249.9" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (3 samples, 0.11%)</title><rect x="246.9" y="531.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="249.9" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (3 samples, 0.11%)</title><rect x="246.9" y="515.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="249.9" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (3 samples, 0.11%)</title><rect x="246.9" y="499.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="249.9" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3 samples, 0.11%)</title><rect x="246.9" y="483.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="249.9" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3 samples, 0.11%)</title><rect x="246.9" y="467.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="249.9" y="478.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.11%)</title><rect x="246.9" y="451.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="249.9" y="462.0"></text>
</g>
<g>
<title>javax/management/ObjectName.construct (16 samples, 0.57%)</title><rect x="248.2" y="579.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.2" y="590.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.04%)</title><rect x="248.2" y="563.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="251.2" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.11%)</title><rect x="248.6" y="563.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="251.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="249.9" y="563.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="252.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="249.9" y="547.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="252.9" y="558.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.04%)</title><rect x="249.9" y="531.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="252.9" y="542.0"></text>
</g>
<g>
<title>java/lang/String.toCharArray (1 samples, 0.04%)</title><rect x="250.3" y="563.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="253.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toChars (1 samples, 0.04%)</title><rect x="250.3" y="547.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="253.3" y="558.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.04%)</title><rect x="250.3" y="531.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="253.3" y="542.0"></text>
</g>
<g>
<title>javax.management.ObjectName$Property[] (2 samples, 0.07%)</title><rect x="250.7" y="563.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="253.7" y="574.0"></text>
</g>
<g>
<title>javax/management/ObjectName.addProperty (3 samples, 0.11%)</title><rect x="251.6" y="563.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="254.6" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.11%)</title><rect x="251.6" y="547.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="254.6" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.11%)</title><rect x="251.6" y="531.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="254.6" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.04%)</title><rect x="251.6" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="254.6" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1 samples, 0.04%)</title><rect x="251.6" y="499.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="254.6" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.07%)</title><rect x="252.0" y="515.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="255.0" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2 samples, 0.07%)</title><rect x="252.0" y="499.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="255.0" y="510.0"></text>
</g>
<g>
<title>javax/management/ObjectName.setCanonicalName (5 samples, 0.18%)</title><rect x="252.9" y="563.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.9" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.04%)</title><rect x="252.9" y="547.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="255.9" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.14%)</title><rect x="253.3" y="547.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="256.3" y="558.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.14%)</title><rect x="253.3" y="531.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="256.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 0.14%)</title><rect x="253.3" y="515.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="256.3" y="526.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.14%)</title><rect x="253.3" y="499.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="256.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor36.invoke (1 samples, 0.04%)</title><rect x="255.0" y="611.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="258.0" y="622.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.readObject (1 samples, 0.04%)</title><rect x="255.0" y="595.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="258.0" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadObject (1 samples, 0.04%)</title><rect x="255.0" y="579.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="258.0" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadFields (1 samples, 0.04%)</title><rect x="255.0" y="563.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.0" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.04%)</title><rect x="255.0" y="547.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="258.0" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (1 samples, 0.04%)</title><rect x="255.0" y="531.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="258.0" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.04%)</title><rect x="255.0" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="258.0" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.04%)</title><rect x="255.0" y="499.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="258.0" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (1 samples, 0.04%)</title><rect x="255.0" y="483.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="258.0" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getReflector (1 samples, 0.04%)</title><rect x="255.0" y="467.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="258.0" y="478.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$FieldReflectorKey (1 samples, 0.04%)</title><rect x="255.0" y="451.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="258.0" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.newInstance (1 samples, 0.04%)</title><rect x="255.4" y="675.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="258.4" y="686.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.04%)</title><rect x="255.4" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="258.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedSerializationConstructorAccessor10.newInstance (1 samples, 0.04%)</title><rect x="255.4" y="643.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="258.4" y="654.0"></text>
</g>
<g>
<title>javax.management.ObjectName (1 samples, 0.04%)</title><rect x="255.4" y="627.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="258.4" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (70 samples, 2.51%)</title><rect x="255.8" y="755.0" width="29.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="258.8" y="766.0">su..</text>
</g>
<g>
<title>java/io/DataOutputStream.&lt;init&gt; (2 samples, 0.07%)</title><rect x="255.8" y="739.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="258.8" y="750.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.&lt;init&gt; (2 samples, 0.07%)</title><rect x="255.8" y="723.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="258.8" y="734.0"></text>
</g>
<g>
<title>java.lang.Object (2 samples, 0.07%)</title><rect x="255.8" y="707.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="258.8" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (68 samples, 2.44%)</title><rect x="256.7" y="739.0" width="28.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="259.7" y="750.0">su..</text>
</g>
<g>
<title>sun.rmi.transport.ConnectionOutputStream (2 samples, 0.07%)</title><rect x="256.7" y="723.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="259.7" y="734.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (66 samples, 2.37%)</title><rect x="257.5" y="723.0" width="28.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="260.5" y="734.0">s..</text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (66 samples, 2.37%)</title><rect x="257.5" y="707.0" width="28.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="260.5" y="718.0">s..</text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (66 samples, 2.37%)</title><rect x="257.5" y="691.0" width="28.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.5" y="702.0">s..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (66 samples, 2.37%)</title><rect x="257.5" y="675.0" width="28.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="260.5" y="686.0">j..</text>
</g>
<g>
<title>java.io.ObjectOutputStream$BlockDataOutputStream (1 samples, 0.04%)</title><rect x="257.5" y="659.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="260.5" y="670.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$HandleTable (5 samples, 0.18%)</title><rect x="258.0" y="659.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="261.0" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (44 samples, 1.58%)</title><rect x="260.1" y="659.0" width="18.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="263.1" y="670.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.65%)</title><rect x="260.1" y="643.0" width="7.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="263.1" y="654.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.36%)</title><rect x="267.7" y="643.0" width="4.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="270.7" y="654.0"></text>
</g>
<g>
<title>char[] (16 samples, 0.57%)</title><rect x="271.9" y="643.0" width="6.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="274.9" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (5 samples, 0.18%)</title><rect x="278.7" y="659.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="281.7" y="670.0"></text>
</g>
<g>
<title>int[] (4 samples, 0.14%)</title><rect x="278.7" y="643.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="281.7" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="280.4" y="643.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="283.4" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$ReplaceTable.&lt;init&gt; (11 samples, 0.40%)</title><rect x="280.8" y="659.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.8" y="670.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$HandleTable (1 samples, 0.04%)</title><rect x="280.8" y="643.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="283.8" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.07%)</title><rect x="281.3" y="643.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="284.3" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (8 samples, 0.29%)</title><rect x="282.1" y="643.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="285.1" y="654.0"></text>
</g>
<g>
<title>int[] (6 samples, 0.22%)</title><rect x="282.1" y="627.0" width="2.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="285.1" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.07%)</title><rect x="284.7" y="627.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="287.7" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.releaseInputStream (1 samples, 0.04%)</title><rect x="285.5" y="755.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="288.5" y="766.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.done (1 samples, 0.04%)</title><rect x="285.5" y="739.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="288.5" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.values (1 samples, 0.04%)</title><rect x="285.5" y="723.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.5" y="734.0"></text>
</g>
<g>
<title>java.util.HashMap$Values (1 samples, 0.04%)</title><rect x="285.5" y="707.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="288.5" y="718.0"></text>
</g>
<g>
<title>sun.rmi.transport.Transport$1 (2 samples, 0.07%)</title><rect x="285.9" y="819.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="288.9" y="830.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (42 samples, 1.51%)</title><rect x="286.8" y="819.0" width="17.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.8" y="830.0"></text>
</g>
<g>
<title>sun.rmi.transport.ConnectionInputStream (1 samples, 0.04%)</title><rect x="286.8" y="803.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="289.8" y="814.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (41 samples, 1.47%)</title><rect x="287.2" y="803.0" width="17.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="290.2" y="814.0"></text>
</g>
<g>
<title>java.util.HashMap (1 samples, 0.04%)</title><rect x="287.2" y="787.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="290.2" y="798.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (40 samples, 1.44%)</title><rect x="287.6" y="787.0" width="17.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="290.6" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (40 samples, 1.44%)</title><rect x="287.6" y="771.0" width="17.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="290.6" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (38 samples, 1.36%)</title><rect x="287.6" y="755.0" width="16.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="290.6" y="766.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.47%)</title><rect x="287.6" y="739.0" width="5.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="290.6" y="750.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.18%)</title><rect x="293.1" y="739.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="296.1" y="750.0"></text>
</g>
<g>
<title>char[] (8 samples, 0.29%)</title><rect x="295.3" y="739.0" width="3.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="298.3" y="750.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$PeekInputStream (1 samples, 0.04%)</title><rect x="298.6" y="739.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="301.6" y="750.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (11 samples, 0.40%)</title><rect x="299.1" y="739.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="302.1" y="750.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.07%)</title><rect x="299.1" y="723.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="302.1" y="734.0"></text>
</g>
<g>
<title>char[] (9 samples, 0.32%)</title><rect x="299.9" y="723.0" width="3.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="302.9" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (2 samples, 0.07%)</title><rect x="303.7" y="755.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="306.7" y="766.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="303.7" y="739.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="306.7" y="750.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="304.2" y="739.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="307.2" y="750.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.setContextClassLoader (1 samples, 0.04%)</title><rect x="304.6" y="819.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="307.6" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="304.6" y="803.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="307.6" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="304.6" y="787.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="307.6" y="798.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$$Lambda$99/1410712992.get$Lambda (1 samples, 0.04%)</title><rect x="304.6" y="771.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="307.6" y="782.0"></text>
</g>
<g>
<title>sun.rmi.transport.Transport$$Lambda$99 (1 samples, 0.04%)</title><rect x="304.6" y="755.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="307.6" y="766.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,088 samples, 75.00%)</title><rect x="305.0" y="979.0" width="885.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="308.0" y="990.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (79 samples, 2.84%)</title><rect x="305.0" y="963.0" width="33.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="308.0" y="974.0">on..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (79 samples, 2.84%)</title><rect x="305.0" y="947.0" width="33.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="308.0" y="958.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (2,009 samples, 72.16%)</title><rect x="338.5" y="963.0" width="851.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="341.5" y="974.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,009 samples, 72.16%)</title><rect x="338.5" y="947.0" width="851.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="341.5" y="958.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,009 samples, 72.16%)</title><rect x="338.5" y="931.0" width="851.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="341.5" y="942.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (913 samples, 32.79%)</title><rect x="338.5" y="915.0" width="387.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="341.5" y="926.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (913 samples, 32.79%)</title><rect x="338.5" y="899.0" width="387.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="341.5" y="910.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (812 samples, 29.17%)</title><rect x="338.5" y="883.0" width="344.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="341.5" y="894.0">RequestHandler1_put.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (222 samples, 7.97%)</title><rect x="338.5" y="867.0" width="94.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="341.5" y="878.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (222 samples, 7.97%)</title><rect x="338.5" y="851.0" width="94.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="341.5" y="862.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (159 samples, 5.71%)</title><rect x="338.5" y="835.0" width="67.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="341.5" y="846.0">one/nio..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (159 samples, 5.71%)</title><rect x="338.5" y="819.0" width="67.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.5" y="830.0">one/nio..</text>
</g>
<g>
<title>byte[] (159 samples, 5.71%)</title><rect x="338.5" y="803.0" width="67.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="341.5" y="814.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (63 samples, 2.26%)</title><rect x="405.9" y="835.0" width="26.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="408.9" y="846.0">o..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (63 samples, 2.26%)</title><rect x="405.9" y="819.0" width="26.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="408.9" y="830.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (109 samples, 3.92%)</title><rect x="432.6" y="867.0" width="46.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="435.6" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (109 samples, 3.92%)</title><rect x="432.6" y="851.0" width="46.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="435.6" y="862.0">one/..</text>
</g>
<g>
<title>java/lang/String.substring (109 samples, 3.92%)</title><rect x="432.6" y="835.0" width="46.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="435.6" y="846.0">java..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (109 samples, 3.92%)</title><rect x="432.6" y="819.0" width="46.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="435.6" y="830.0">java..</text>
</g>
<g>
<title>java.lang.String (66 samples, 2.37%)</title><rect x="432.6" y="803.0" width="28.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="435.6" y="814.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (43 samples, 1.54%)</title><rect x="460.6" y="803.0" width="18.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="463.6" y="814.0"></text>
</g>
<g>
<title>byte[] (43 samples, 1.54%)</title><rect x="460.6" y="787.0" width="18.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="463.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.put (481 samples, 17.28%)</title><rect x="478.8" y="867.0" width="203.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="481.8" y="878.0">ru/mail/polis/service/valau..</text>
</g>
<g>
<title>java/lang/String.getBytes (52 samples, 1.87%)</title><rect x="478.8" y="851.0" width="22.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="481.8" y="862.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (52 samples, 1.87%)</title><rect x="478.8" y="835.0" width="22.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="481.8" y="846.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (52 samples, 1.87%)</title><rect x="478.8" y="819.0" width="22.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="481.8" y="830.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (52 samples, 1.87%)</title><rect x="478.8" y="803.0" width="22.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.8" y="814.0">j..</text>
</g>
<g>
<title>byte[] (52 samples, 1.87%)</title><rect x="478.8" y="787.0" width="22.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="481.8" y="798.0">b..</text>
</g>
<g>
<title>one.nio.http.Response (39 samples, 1.40%)</title><rect x="500.8" y="851.0" width="16.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="503.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (166 samples, 5.96%)</title><rect x="517.3" y="851.0" width="70.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="520.3" y="862.0">one/nio/..</text>
</g>
<g>
<title>byte[] (74 samples, 2.66%)</title><rect x="517.3" y="835.0" width="31.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="520.3" y="846.0">by..</text>
</g>
<g>
<title>java.lang.String[] (47 samples, 1.69%)</title><rect x="548.7" y="835.0" width="19.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="551.7" y="846.0"></text>
</g>
<g>
<title>java.lang.String (45 samples, 1.62%)</title><rect x="568.6" y="835.0" width="19.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="571.6" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.upsert (224 samples, 8.05%)</title><rect x="587.7" y="851.0" width="95.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="590.7" y="862.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.upsert (224 samples, 8.05%)</title><rect x="587.7" y="835.0" width="95.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="590.7" y="846.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (73 samples, 2.62%)</title><rect x="587.7" y="819.0" width="30.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="590.7" y="830.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (73 samples, 2.62%)</title><rect x="587.7" y="803.0" width="30.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="590.7" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.04%)</title><rect x="618.6" y="819.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="621.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.04%)</title><rect x="618.6" y="803.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="621.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.04%)</title><rect x="618.6" y="787.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="621.6" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.04%)</title><rect x="618.6" y="771.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="621.6" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.04%)</title><rect x="618.6" y="755.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="621.6" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.04%)</title><rect x="618.6" y="739.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="621.6" y="750.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (1 samples, 0.04%)</title><rect x="618.6" y="723.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="621.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.upsert (150 samples, 5.39%)</title><rect x="619.1" y="819.0" width="63.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="622.1" y="830.0">ru/mail..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (88 samples, 3.16%)</title><rect x="619.1" y="803.0" width="37.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="622.1" y="814.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (88 samples, 3.16%)</title><rect x="619.1" y="787.0" width="37.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="622.1" y="798.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (8 samples, 0.29%)</title><rect x="656.4" y="803.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (8 samples, 0.29%)</title><rect x="656.4" y="787.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="659.4" y="798.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (1 samples, 0.04%)</title><rect x="656.4" y="771.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="659.4" y="782.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (7 samples, 0.25%)</title><rect x="656.8" y="771.0" width="3.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="659.8" y="782.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.valaubr.Value (54 samples, 1.94%)</title><rect x="659.8" y="803.0" width="22.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="662.8" y="814.0">r..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (101 samples, 3.63%)</title><rect x="682.7" y="883.0" width="42.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="685.7" y="894.0">one/..</text>
</g>
<g>
<title>java/lang/String.substring (101 samples, 3.63%)</title><rect x="682.7" y="867.0" width="42.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="685.7" y="878.0">java..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (101 samples, 3.63%)</title><rect x="682.7" y="851.0" width="42.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.7" y="862.0">java..</text>
</g>
<g>
<title>java.lang.String (45 samples, 1.62%)</title><rect x="682.7" y="835.0" width="19.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="685.7" y="846.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (56 samples, 2.01%)</title><rect x="701.7" y="835.0" width="23.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="704.7" y="846.0">j..</text>
</g>
<g>
<title>byte[] (56 samples, 2.01%)</title><rect x="701.7" y="819.0" width="23.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="704.7" y="830.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (488 samples, 17.53%)</title><rect x="725.5" y="915.0" width="206.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="728.5" y="926.0">one/nio/http/HttpSession.pa..</text>
</g>
<g>
<title>one.nio.http.Request (77 samples, 2.77%)</title><rect x="725.5" y="899.0" width="32.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="728.5" y="910.0">on..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (146 samples, 5.24%)</title><rect x="758.1" y="899.0" width="61.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="761.1" y="910.0">one/ni..</text>
</g>
<g>
<title>java.lang.String[] (146 samples, 5.24%)</title><rect x="758.1" y="883.0" width="61.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="761.1" y="894.0">java.l..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (265 samples, 9.52%)</title><rect x="820.0" y="899.0" width="112.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="823.0" y="910.0">one/nio/util/U..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (265 samples, 9.52%)</title><rect x="820.0" y="883.0" width="112.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="823.0" y="894.0">one/nio/util/U..</text>
</g>
<g>
<title>char[] (128 samples, 4.60%)</title><rect x="820.0" y="867.0" width="54.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="823.0" y="878.0">char[]</text>
</g>
<g>
<title>java.lang.String (40 samples, 1.44%)</title><rect x="874.2" y="867.0" width="17.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="877.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (97 samples, 3.48%)</title><rect x="891.2" y="867.0" width="41.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="894.2" y="878.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (97 samples, 3.48%)</title><rect x="891.2" y="851.0" width="41.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="894.2" y="862.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (97 samples, 3.48%)</title><rect x="891.2" y="835.0" width="41.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="894.2" y="846.0">jav..</text>
</g>
<g>
<title>byte[] (97 samples, 3.48%)</title><rect x="891.2" y="819.0" width="41.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="894.2" y="830.0">byt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (71 samples, 2.55%)</title><rect x="932.3" y="915.0" width="30.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="935.3" y="926.0">on..</text>
</g>
<g>
<title>byte[] (71 samples, 2.55%)</title><rect x="932.3" y="899.0" width="30.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="935.3" y="910.0">by..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (79 samples, 2.84%)</title><rect x="962.4" y="915.0" width="33.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="965.4" y="926.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (79 samples, 2.84%)</title><rect x="962.4" y="899.0" width="33.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="965.4" y="910.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (79 samples, 2.84%)</title><rect x="962.4" y="883.0" width="33.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="965.4" y="894.0">ja..</text>
</g>
<g>
<title>java.lang.String (44 samples, 1.58%)</title><rect x="962.4" y="867.0" width="18.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="965.4" y="878.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (35 samples, 1.26%)</title><rect x="981.0" y="867.0" width="14.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="984.0" y="878.0"></text>
</g>
<g>
<title>byte[] (35 samples, 1.26%)</title><rect x="981.0" y="851.0" width="14.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="984.0" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (458 samples, 16.45%)</title><rect x="995.9" y="915.0" width="194.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="998.9" y="926.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (458 samples, 16.45%)</title><rect x="995.9" y="899.0" width="194.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="998.9" y="910.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (216 samples, 7.76%)</title><rect x="995.9" y="883.0" width="91.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="998.9" y="894.0">char[]</text>
</g>
<g>
<title>java.lang.String (81 samples, 2.91%)</title><rect x="1087.4" y="883.0" width="34.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1090.4" y="894.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (161 samples, 5.78%)</title><rect x="1121.8" y="883.0" width="68.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1124.8" y="894.0">java/la..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (161 samples, 5.78%)</title><rect x="1121.8" y="867.0" width="68.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1124.8" y="878.0">java/la..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (161 samples, 5.78%)</title><rect x="1121.8" y="851.0" width="68.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1124.8" y="862.0">java/la..</text>
</g>
<g>
<title>byte[] (161 samples, 5.78%)</title><rect x="1121.8" y="835.0" width="68.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1124.8" y="846.0">byte[]</text>
</g>
</g>
</svg>
