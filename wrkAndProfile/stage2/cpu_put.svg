<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1094" onload="init(evt)" viewBox="0 0 1200 1094" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1077"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1077"> </text>
<g id="frames">
<g>
<title>all (7,206 samples, 100.00%)</title><rect x="10.0" y="1043.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1054.0">all</text>
</g>
<g>
<title>[Attach Listener tid=65491] (6 samples, 0.08%)</title><rect x="10.0" y="1027.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/agent/Agent.startLocalManagementAgent (4 samples, 0.06%)</title><rect x="10.2" y="1011.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.2" y="1022.0"></text>
</g>
<g>
<title>sun/management/jmxremote/ConnectorBootstrap.startLocalConnectorServer (4 samples, 0.06%)</title><rect x="10.2" y="995.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.2" y="1006.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectorServer.start (4 samples, 0.06%)</title><rect x="10.2" y="979.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.2" y="990.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIJRMPServerImpl.export (3 samples, 0.04%)</title><rect x="10.3" y="963.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.3" y="974.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIJRMPServerImpl.export (3 samples, 0.04%)</title><rect x="10.3" y="947.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.3" y="958.0"></text>
</g>
<g>
<title>sun/management/jmxremote/ConnectorBootstrap$PermanentExporter.exportObject (3 samples, 0.04%)</title><rect x="10.3" y="931.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.3" y="942.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.exportObject (2 samples, 0.03%)</title><rect x="10.5" y="915.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.5" y="926.0"></text>
</g>
<g>
<title>[C1 CompilerThre tid=65434] (69 samples, 0.96%)</title><rect x="11.0" y="1027.0" width="11.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="14.0" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="11.1" y="1011.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="14.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.06%)</title><rect x="11.5" y="1011.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="14.5" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (2 samples, 0.03%)</title><rect x="11.5" y="995.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="14.5" y="1006.0"></text>
</g>
<g>
<title>start_thread (60 samples, 0.83%)</title><rect x="12.5" y="1011.0" width="9.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="15.5" y="1022.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (60 samples, 0.83%)</title><rect x="12.5" y="995.0" width="9.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="15.5" y="1006.0"></text>
</g>
<g>
<title>Thread::call_run() (60 samples, 0.83%)</title><rect x="12.5" y="979.0" width="9.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.5" y="990.0"></text>
</g>
<g>
<title>JavaThread::run() (60 samples, 0.83%)</title><rect x="12.5" y="963.0" width="9.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="15.5" y="974.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (59 samples, 0.82%)</title><rect x="12.5" y="947.0" width="9.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="15.5" y="958.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (57 samples, 0.79%)</title><rect x="12.5" y="931.0" width="9.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.5" y="942.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (54 samples, 0.75%)</title><rect x="12.8" y="915.0" width="8.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.8" y="926.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (53 samples, 0.74%)</title><rect x="12.9" y="899.0" width="8.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="15.9" y="910.0"></text>
</g>
<g>
<title>Compilation::compile_method() (53 samples, 0.74%)</title><rect x="12.9" y="883.0" width="8.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="15.9" y="894.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (51 samples, 0.71%)</title><rect x="12.9" y="867.0" width="8.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.9" y="878.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (20 samples, 0.28%)</title><rect x="12.9" y="851.0" width="3.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="15.9" y="862.0"></text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (6 samples, 0.08%)</title><rect x="12.9" y="835.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.9" y="846.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (4 samples, 0.06%)</title><rect x="13.1" y="819.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="16.1" y="830.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (3 samples, 0.04%)</title><rect x="13.1" y="803.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="16.1" y="814.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (2 samples, 0.03%)</title><rect x="13.3" y="787.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="16.3" y="798.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (11 samples, 0.15%)</title><rect x="13.9" y="835.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="16.9" y="846.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (11 samples, 0.15%)</title><rect x="13.9" y="819.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="16.9" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (11 samples, 0.15%)</title><rect x="13.9" y="803.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.9" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (11 samples, 0.15%)</title><rect x="13.9" y="787.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="16.9" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (11 samples, 0.15%)</title><rect x="13.9" y="771.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="16.9" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (9 samples, 0.12%)</title><rect x="14.1" y="755.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="17.1" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (8 samples, 0.11%)</title><rect x="14.1" y="739.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="17.1" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (8 samples, 0.11%)</title><rect x="14.1" y="723.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="17.1" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (5 samples, 0.07%)</title><rect x="14.3" y="707.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="17.3" y="718.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (5 samples, 0.07%)</title><rect x="14.3" y="691.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="17.3" y="702.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (3 samples, 0.04%)</title><rect x="14.4" y="675.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="17.4" y="686.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.04%)</title><rect x="14.4" y="659.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="17.4" y="670.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.04%)</title><rect x="14.4" y="643.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="17.4" y="654.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.03%)</title><rect x="14.4" y="627.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="17.4" y="638.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.03%)</title><rect x="14.4" y="611.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="17.4" y="622.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (9 samples, 0.12%)</title><rect x="16.2" y="851.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="19.2" y="862.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (8 samples, 0.11%)</title><rect x="16.2" y="835.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="19.2" y="846.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_call(LIR_OpJavaCall*) (3 samples, 0.04%)</title><rect x="16.2" y="819.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="19.2" y="830.0"></text>
</g>
<g>
<title>LIR_Assembler::call(LIR_OpJavaCall*, relocInfo::relocType) (3 samples, 0.04%)</title><rect x="16.2" y="803.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="19.2" y="814.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (2 samples, 0.03%)</title><rect x="16.2" y="787.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="19.2" y="798.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (2 samples, 0.03%)</title><rect x="16.2" y="771.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="19.2" y="782.0"></text>
</g>
<g>
<title>LIR_Assembler::process_debug_info(LIR_Op*) (2 samples, 0.03%)</title><rect x="17.0" y="819.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="20.0" y="830.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (21 samples, 0.29%)</title><rect x="17.7" y="851.0" width="3.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="20.7" y="862.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (4 samples, 0.06%)</title><rect x="17.7" y="835.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="20.7" y="846.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (4 samples, 0.06%)</title><rect x="17.7" y="819.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="20.7" y="830.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (2 samples, 0.03%)</title><rect x="17.7" y="803.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="20.7" y="814.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (16 samples, 0.22%)</title><rect x="18.5" y="835.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="21.5" y="846.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (2 samples, 0.03%)</title><rect x="18.5" y="819.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="21.5" y="830.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (2 samples, 0.03%)</title><rect x="18.5" y="803.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="21.5" y="814.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (2 samples, 0.03%)</title><rect x="18.5" y="787.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="21.5" y="798.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (2 samples, 0.03%)</title><rect x="18.8" y="819.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="21.8" y="830.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (2 samples, 0.03%)</title><rect x="18.8" y="803.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="21.8" y="814.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (6 samples, 0.08%)</title><rect x="19.2" y="819.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="22.2" y="830.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (5 samples, 0.07%)</title><rect x="20.3" y="819.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="23.3" y="830.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (3 samples, 0.04%)</title><rect x="20.6" y="803.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="23.6" y="814.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (2 samples, 0.03%)</title><rect x="21.3" y="867.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="24.3" y="878.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (2 samples, 0.03%)</title><rect x="21.3" y="851.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="24.3" y="862.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (2 samples, 0.03%)</title><rect x="21.3" y="835.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="24.3" y="846.0"></text>
</g>
<g>
<title>[C2 CompilerThre tid=65433] (290 samples, 4.02%)</title><rect x="22.3" y="1027.0" width="47.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="25.3" y="1038.0">[C2 ..</text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="22.4" y="1011.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="25.4" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (3 samples, 0.04%)</title><rect x="22.4" y="995.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="25.4" y="1006.0"></text>
</g>
<g>
<title>start_thread (284 samples, 3.94%)</title><rect x="23.3" y="1011.0" width="46.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="26.3" y="1022.0">star..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (284 samples, 3.94%)</title><rect x="23.3" y="995.0" width="46.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="26.3" y="1006.0">thre..</text>
</g>
<g>
<title>Thread::call_run() (284 samples, 3.94%)</title><rect x="23.3" y="979.0" width="46.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="26.3" y="990.0">Thre..</text>
</g>
<g>
<title>JavaThread::run() (284 samples, 3.94%)</title><rect x="23.3" y="963.0" width="46.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="26.3" y="974.0">Java..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (284 samples, 3.94%)</title><rect x="23.3" y="947.0" width="46.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="26.3" y="958.0">Comp..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (284 samples, 3.94%)</title><rect x="23.3" y="931.0" width="46.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="26.3" y="942.0">Comp..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (284 samples, 3.94%)</title><rect x="23.3" y="915.0" width="46.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="26.3" y="926.0">C2Co..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (284 samples, 3.94%)</title><rect x="23.3" y="899.0" width="46.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="26.3" y="910.0">Comp..</text>
</g>
<g>
<title>Compile::Code_Gen() (159 samples, 2.21%)</title><rect x="23.4" y="883.0" width="26.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="26.4" y="894.0">C..</text>
</g>
<g>
<title>Compile::Output() (5 samples, 0.07%)</title><rect x="23.4" y="867.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="26.4" y="878.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (2 samples, 0.03%)</title><rect x="23.4" y="851.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="26.4" y="862.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (3 samples, 0.04%)</title><rect x="23.8" y="851.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="26.8" y="862.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (3 samples, 0.04%)</title><rect x="23.8" y="835.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="26.8" y="846.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (2 samples, 0.03%)</title><rect x="23.8" y="819.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="26.8" y="830.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (2 samples, 0.03%)</title><rect x="24.2" y="867.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="27.2" y="878.0"></text>
</g>
<g>
<title>Matcher::match() (17 samples, 0.24%)</title><rect x="24.7" y="867.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="27.7" y="878.0"></text>
</g>
<g>
<title>Matcher::Fixup_Save_On_Entry() (2 samples, 0.03%)</title><rect x="24.7" y="851.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="27.7" y="862.0"></text>
</g>
<g>
<title>Matcher::init_first_stack_mask() (2 samples, 0.03%)</title><rect x="24.7" y="835.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="27.7" y="846.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (2 samples, 0.03%)</title><rect x="25.1" y="851.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="28.1" y="862.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (13 samples, 0.18%)</title><rect x="25.4" y="851.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="28.4" y="862.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (7 samples, 0.10%)</title><rect x="25.9" y="835.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="28.9" y="846.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (6 samples, 0.08%)</title><rect x="25.9" y="819.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="28.9" y="830.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (5 samples, 0.07%)</title><rect x="26.0" y="803.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="29.0" y="814.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (3 samples, 0.04%)</title><rect x="26.2" y="787.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="29.2" y="798.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (2 samples, 0.03%)</title><rect x="26.4" y="771.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="29.4" y="782.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (2 samples, 0.03%)</title><rect x="26.4" y="755.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="29.4" y="766.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (2 samples, 0.03%)</title><rect x="27.5" y="867.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="30.5" y="878.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (17 samples, 0.24%)</title><rect x="27.8" y="867.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="30.8" y="878.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (17 samples, 0.24%)</title><rect x="27.8" y="851.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="30.8" y="862.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="27.8" y="835.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="30.8" y="846.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.03%)</title><rect x="27.8" y="819.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="30.8" y="830.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.03%)</title><rect x="27.8" y="803.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="30.8" y="814.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="27.8" y="787.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="30.8" y="798.0"></text>
</g>
<g>
<title>do_user_addr_fault (2 samples, 0.03%)</title><rect x="27.8" y="771.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="30.8" y="782.0"></text>
</g>
<g>
<title>PhaseCFG::implicit_null_check(Block*, Node*, Node*, int) (2 samples, 0.03%)</title><rect x="28.3" y="835.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="31.3" y="846.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (3 samples, 0.04%)</title><rect x="28.8" y="835.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="31.8" y="846.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (3 samples, 0.04%)</title><rect x="29.3" y="835.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="32.3" y="846.0"></text>
</g>
<g>
<title>PhaseCFG::select(Block*, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, unsigned int, long*) (2 samples, 0.03%)</title><rect x="29.3" y="819.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="32.3" y="830.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (3 samples, 0.04%)</title><rect x="30.1" y="835.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="33.1" y="846.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (2 samples, 0.03%)</title><rect x="30.3" y="819.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="33.3" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (115 samples, 1.60%)</title><rect x="30.6" y="867.0" width="18.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="33.6" y="878.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (6 samples, 0.08%)</title><rect x="31.5" y="851.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="34.5" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (7 samples, 0.10%)</title><rect x="32.4" y="851.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="35.4" y="862.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (4 samples, 0.06%)</title><rect x="32.8" y="835.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="35.8" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (6 samples, 0.08%)</title><rect x="33.6" y="851.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="36.6" y="862.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.03%)</title><rect x="33.9" y="835.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="36.9" y="846.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (2 samples, 0.03%)</title><rect x="34.2" y="835.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="37.2" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (13 samples, 0.18%)</title><rect x="34.6" y="851.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="37.6" y="862.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (2 samples, 0.03%)</title><rect x="35.7" y="835.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="38.7" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (24 samples, 0.33%)</title><rect x="36.9" y="851.0" width="3.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="39.9" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (9 samples, 0.12%)</title><rect x="37.5" y="835.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="40.5" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (8 samples, 0.11%)</title><rect x="39.0" y="835.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="42.0" y="846.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.03%)</title><rect x="39.5" y="819.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="42.5" y="830.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (3 samples, 0.04%)</title><rect x="39.8" y="819.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="42.8" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (5 samples, 0.07%)</title><rect x="41.1" y="851.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="44.1" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.87] (2 samples, 0.03%)</title><rect x="41.9" y="851.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="44.9" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (2 samples, 0.03%)</title><rect x="42.3" y="851.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="45.3" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (19 samples, 0.26%)</title><rect x="42.6" y="851.0" width="3.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="45.6" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (11 samples, 0.15%)</title><rect x="43.6" y="835.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="46.6" y="846.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (2 samples, 0.03%)</title><rect x="45.4" y="835.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="48.4" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (2 samples, 0.03%)</title><rect x="45.7" y="851.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="48.7" y="862.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (2 samples, 0.03%)</title><rect x="46.0" y="851.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="49.0" y="862.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (2 samples, 0.03%)</title><rect x="46.0" y="835.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="49.0" y="846.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (4 samples, 0.06%)</title><rect x="46.4" y="851.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="49.4" y="862.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.04%)</title><rect x="46.5" y="835.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="49.5" y="846.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (3 samples, 0.04%)</title><rect x="47.0" y="851.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="50.0" y="862.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (12 samples, 0.17%)</title><rect x="47.5" y="851.0" width="2.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="50.5" y="862.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (4 samples, 0.06%)</title><rect x="48.8" y="835.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="51.8" y="846.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.03%)</title><rect x="49.1" y="819.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="52.1" y="830.0"></text>
</g>
<g>
<title>Compile::Optimize() (79 samples, 1.10%)</title><rect x="49.5" y="883.0" width="12.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="52.5" y="894.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (3 samples, 0.04%)</title><rect x="49.6" y="867.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="52.6" y="878.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (3 samples, 0.04%)</title><rect x="49.6" y="851.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="52.6" y="862.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (25 samples, 0.35%)</title><rect x="50.1" y="867.0" width="4.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="53.1" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (25 samples, 0.35%)</title><rect x="50.1" y="851.0" width="4.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="53.1" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (4 samples, 0.06%)</title><rect x="50.6" y="835.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="53.6" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (4 samples, 0.06%)</title><rect x="51.3" y="835.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="54.3" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (3 samples, 0.04%)</title><rect x="51.4" y="819.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="54.4" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (2 samples, 0.03%)</title><rect x="51.6" y="803.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="54.6" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (8 samples, 0.11%)</title><rect x="51.9" y="835.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="54.9" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (2 samples, 0.03%)</title><rect x="52.6" y="819.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="55.6" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (2 samples, 0.03%)</title><rect x="52.9" y="819.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="55.9" y="830.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (5 samples, 0.07%)</title><rect x="53.2" y="835.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="56.2" y="846.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (5 samples, 0.07%)</title><rect x="53.2" y="819.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="56.2" y="830.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (2 samples, 0.03%)</title><rect x="53.6" y="803.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="56.6" y="814.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.157] (2 samples, 0.03%)</title><rect x="53.6" y="787.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="56.6" y="798.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="53.6" y="771.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="56.6" y="782.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="53.6" y="755.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="56.6" y="766.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="53.6" y="739.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="56.6" y="750.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="53.6" y="723.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="56.6" y="734.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="53.6" y="707.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="56.6" y="718.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="53.6" y="691.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="56.6" y="702.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="53.6" y="675.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="56.6" y="686.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="53.6" y="659.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="56.6" y="670.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="53.6" y="643.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="56.6" y="654.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="53.6" y="627.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="56.6" y="638.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="53.6" y="611.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="56.6" y="622.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (6 samples, 0.08%)</title><rect x="54.4" y="867.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="57.4" y="878.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (6 samples, 0.08%)</title><rect x="54.4" y="851.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="57.4" y="862.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (4 samples, 0.06%)</title><rect x="54.7" y="835.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="57.7" y="846.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (4 samples, 0.06%)</title><rect x="54.7" y="819.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="57.7" y="830.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (3 samples, 0.04%)</title><rect x="54.7" y="803.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="57.7" y="814.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (3 samples, 0.04%)</title><rect x="54.7" y="787.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="57.7" y="798.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (3 samples, 0.04%)</title><rect x="54.7" y="771.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="57.7" y="782.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (3 samples, 0.04%)</title><rect x="54.7" y="755.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="57.7" y="766.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (3 samples, 0.04%)</title><rect x="54.7" y="739.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="57.7" y="750.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (3 samples, 0.04%)</title><rect x="54.7" y="723.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="57.7" y="734.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (3 samples, 0.04%)</title><rect x="54.7" y="707.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="57.7" y="718.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="691.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="57.7" y="702.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="675.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="57.7" y="686.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="659.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="57.7" y="670.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="643.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="57.7" y="654.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="627.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="57.7" y="638.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="611.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="57.7" y="622.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="595.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="57.7" y="606.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="579.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="57.7" y="590.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="563.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="57.7" y="574.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="547.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="57.7" y="558.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="531.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="57.7" y="542.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="515.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="57.7" y="526.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="499.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="57.7" y="510.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="483.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="57.7" y="494.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="467.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="57.7" y="478.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="451.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="57.7" y="462.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="435.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="57.7" y="446.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="419.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="57.7" y="430.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="403.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="57.7" y="414.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="387.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="57.7" y="398.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="371.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="57.7" y="382.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="355.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="57.7" y="366.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="339.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="57.7" y="350.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="323.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="57.7" y="334.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="307.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="57.7" y="318.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="291.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="57.7" y="302.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="275.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="57.7" y="286.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="259.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="57.7" y="270.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="243.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="57.7" y="254.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="227.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="57.7" y="238.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="211.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="57.7" y="222.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="195.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="57.7" y="206.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="179.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="57.7" y="190.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="163.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="57.7" y="174.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="147.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="57.7" y="158.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="131.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="57.7" y="142.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="115.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="57.7" y="126.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="99.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="57.7" y="110.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="83.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="57.7" y="94.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="67.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="57.7" y="78.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="51.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="57.7" y="62.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="54.7" y="35.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="57.7" y="46.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (5 samples, 0.07%)</title><rect x="55.4" y="867.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="58.4" y="878.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (2 samples, 0.03%)</title><rect x="56.2" y="867.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="59.2" y="878.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (2 samples, 0.03%)</title><rect x="56.2" y="851.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="59.2" y="862.0"></text>
</g>
<g>
<title>PhaseCCP::transform_once(Node*) (2 samples, 0.03%)</title><rect x="56.2" y="835.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="59.2" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (20 samples, 0.28%)</title><rect x="56.5" y="867.0" width="3.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="59.5" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (3 samples, 0.04%)</title><rect x="56.8" y="851.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="59.8" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.03%)</title><rect x="57.3" y="851.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="60.3" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (9 samples, 0.12%)</title><rect x="57.7" y="851.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="60.7" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (7 samples, 0.10%)</title><rect x="57.8" y="835.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="60.8" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (4 samples, 0.06%)</title><rect x="58.3" y="819.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="61.3" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (2 samples, 0.03%)</title><rect x="58.3" y="803.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="61.3" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (2 samples, 0.03%)</title><rect x="58.3" y="787.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="61.3" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.123] (2 samples, 0.03%)</title><rect x="58.3" y="771.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="61.3" y="782.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.04%)</title><rect x="59.3" y="851.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="62.3" y="862.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.04%)</title><rect x="59.3" y="835.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="62.3" y="846.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (13 samples, 0.18%)</title><rect x="59.8" y="867.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="62.8" y="878.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (12 samples, 0.17%)</title><rect x="59.8" y="851.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="62.8" y="862.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.03%)</title><rect x="60.3" y="835.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="63.3" y="846.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.03%)</title><rect x="60.3" y="819.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="63.3" y="830.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (4 samples, 0.06%)</title><rect x="60.6" y="835.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="63.6" y="846.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (3 samples, 0.04%)</title><rect x="60.8" y="819.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="63.8" y="830.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (2 samples, 0.03%)</title><rect x="61.3" y="835.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="64.3" y="846.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.03%)</title><rect x="62.1" y="867.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="65.1" y="878.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.03%)</title><rect x="62.1" y="851.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="65.1" y="862.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (3 samples, 0.04%)</title><rect x="62.4" y="883.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="65.4" y="894.0"></text>
</g>
<g>
<title>CompileWrapper::CompileWrapper(Compile*) (2 samples, 0.03%)</title><rect x="62.9" y="883.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="65.9" y="894.0"></text>
</g>
<g>
<title>Type::Initialize(Compile*) (2 samples, 0.03%)</title><rect x="62.9" y="867.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="65.9" y="878.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (2 samples, 0.03%)</title><rect x="62.9" y="851.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="65.9" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (38 samples, 0.53%)</title><rect x="63.2" y="883.0" width="6.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="66.2" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (38 samples, 0.53%)</title><rect x="63.2" y="867.0" width="6.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="66.2" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (38 samples, 0.53%)</title><rect x="63.2" y="851.0" width="6.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="66.2" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (38 samples, 0.53%)</title><rect x="63.2" y="835.0" width="6.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="66.2" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (38 samples, 0.53%)</title><rect x="63.2" y="819.0" width="6.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="66.2" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (34 samples, 0.47%)</title><rect x="63.4" y="803.0" width="5.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="66.4" y="814.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (6 samples, 0.08%)</title><rect x="63.4" y="787.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="66.4" y="798.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.03%)</title><rect x="63.4" y="771.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="66.4" y="782.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.03%)</title><rect x="63.4" y="755.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="66.4" y="766.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (3 samples, 0.04%)</title><rect x="63.7" y="771.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="66.7" y="782.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.03%)</title><rect x="63.7" y="755.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="66.7" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (21 samples, 0.29%)</title><rect x="64.4" y="787.0" width="3.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="67.4" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (21 samples, 0.29%)</title><rect x="64.4" y="771.0" width="3.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="67.4" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (21 samples, 0.29%)</title><rect x="64.4" y="755.0" width="3.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="67.4" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (21 samples, 0.29%)</title><rect x="64.4" y="739.0" width="3.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="67.4" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (21 samples, 0.29%)</title><rect x="64.4" y="723.0" width="3.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="67.4" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (16 samples, 0.22%)</title><rect x="64.5" y="707.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="67.5" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.14%)</title><rect x="65.0" y="691.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="68.0" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.14%)</title><rect x="65.0" y="675.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="68.0" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.14%)</title><rect x="65.0" y="659.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="68.0" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.14%)</title><rect x="65.0" y="643.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="68.0" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.14%)</title><rect x="65.0" y="627.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="68.0" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.08%)</title><rect x="65.0" y="611.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="68.0" y="622.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.03%)</title><rect x="65.0" y="595.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="68.0" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="65.5" y="595.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="68.5" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="65.5" y="579.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="68.5" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="65.5" y="563.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="68.5" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="65.5" y="547.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="68.5" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="65.5" y="531.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="68.5" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="65.5" y="515.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="68.5" y="526.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="66.7" y="691.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="69.7" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="66.7" y="675.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="69.7" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="66.7" y="659.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="69.7" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="66.7" y="643.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="69.7" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="66.7" y="627.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="69.7" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="66.7" y="611.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="69.7" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="66.7" y="595.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="69.7" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="66.7" y="579.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="69.7" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="66.7" y="563.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="69.7" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="66.7" y="547.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="69.7" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="66.7" y="531.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="69.7" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="66.7" y="515.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="69.7" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="66.7" y="499.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="69.7" y="510.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="66.7" y="483.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="69.7" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="66.7" y="467.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="69.7" y="478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="66.7" y="451.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="69.7" y="462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="66.7" y="435.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="69.7" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="66.7" y="419.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="69.7" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="66.7" y="403.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="69.7" y="414.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="66.7" y="387.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="69.7" y="398.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="66.7" y="371.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="69.7" y="382.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="66.7" y="355.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="69.7" y="366.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="66.7" y="339.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="69.7" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="66.7" y="323.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="69.7" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="66.7" y="307.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="69.7" y="318.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="66.7" y="291.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="69.7" y="302.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.03%)</title><rect x="67.1" y="707.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="70.1" y="718.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (2 samples, 0.03%)</title><rect x="67.1" y="691.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="70.1" y="702.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (2 samples, 0.03%)</title><rect x="67.5" y="707.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="70.5" y="718.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (7 samples, 0.10%)</title><rect x="67.8" y="787.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="70.8" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.10%)</title><rect x="67.8" y="771.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="70.8" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.10%)</title><rect x="67.8" y="755.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="70.8" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.10%)</title><rect x="67.8" y="739.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="70.8" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.10%)</title><rect x="67.8" y="723.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="70.8" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.10%)</title><rect x="67.8" y="707.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="70.8" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.10%)</title><rect x="67.8" y="691.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="70.8" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.10%)</title><rect x="67.8" y="675.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="70.8" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.10%)</title><rect x="67.8" y="659.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="70.8" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.10%)</title><rect x="67.8" y="643.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="70.8" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.10%)</title><rect x="67.8" y="627.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="70.8" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.10%)</title><rect x="67.8" y="611.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="70.8" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.07%)</title><rect x="67.8" y="595.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="70.8" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="67.8" y="579.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="70.8" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="67.8" y="563.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="70.8" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="67.8" y="547.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="70.8" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="67.8" y="531.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="70.8" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="67.8" y="515.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="70.8" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="67.8" y="499.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="70.8" y="510.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="68.3" y="579.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="71.3" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="68.3" y="563.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="71.3" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="68.3" y="547.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="71.3" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="68.3" y="531.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="71.3" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="68.3" y="515.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="71.3" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="68.3" y="499.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="71.3" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="68.3" y="483.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="71.3" y="494.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (3 samples, 0.04%)</title><rect x="69.0" y="803.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="72.0" y="814.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (2 samples, 0.03%)</title><rect x="69.0" y="787.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="72.0" y="798.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.03%)</title><rect x="69.4" y="883.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="72.4" y="894.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (2 samples, 0.03%)</title><rect x="69.4" y="867.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="72.4" y="878.0"></text>
</g>
<g>
<title>[G1 Conc#0 tid=65421] (3 samples, 0.04%)</title><rect x="69.8" y="1027.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="72.8" y="1038.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.04%)</title><rect x="69.8" y="1011.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="72.8" y="1022.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.04%)</title><rect x="69.8" y="995.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="72.8" y="1006.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.04%)</title><rect x="69.8" y="979.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="72.8" y="990.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.04%)</title><rect x="69.8" y="963.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="72.8" y="974.0"></text>
</g>
<g>
<title>[G1 Young RemSet tid=65423] (3 samples, 0.04%)</title><rect x="70.3" y="1027.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="73.3" y="1038.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.04%)</title><rect x="70.3" y="1011.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="73.3" y="1022.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.04%)</title><rect x="70.3" y="995.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="73.3" y="1006.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.04%)</title><rect x="70.3" y="979.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="73.3" y="990.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (3 samples, 0.04%)</title><rect x="70.3" y="963.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="73.3" y="974.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (3 samples, 0.04%)</title><rect x="70.3" y="947.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="73.3" y="958.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (2 samples, 0.03%)</title><rect x="70.3" y="931.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="73.3" y="942.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (2 samples, 0.03%)</title><rect x="70.3" y="915.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="73.3" y="926.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (2 samples, 0.03%)</title><rect x="70.3" y="899.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="73.3" y="910.0"></text>
</g>
<g>
<title>[GC Thread#0 tid=65419] (23 samples, 0.32%)</title><rect x="70.8" y="1027.0" width="3.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="73.8" y="1038.0"></text>
</g>
<g>
<title>start_thread (23 samples, 0.32%)</title><rect x="70.8" y="1011.0" width="3.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="73.8" y="1022.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (23 samples, 0.32%)</title><rect x="70.8" y="995.0" width="3.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="73.8" y="1006.0"></text>
</g>
<g>
<title>Thread::call_run() (23 samples, 0.32%)</title><rect x="70.8" y="979.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="73.8" y="990.0"></text>
</g>
<g>
<title>GangWorker::loop() (23 samples, 0.32%)</title><rect x="70.8" y="963.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="73.8" y="974.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (22 samples, 0.31%)</title><rect x="70.9" y="947.0" width="3.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="73.9" y="958.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (20 samples, 0.28%)</title><rect x="70.9" y="931.0" width="3.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="73.9" y="942.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (19 samples, 0.26%)</title><rect x="70.9" y="915.0" width="3.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="73.9" y="926.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (10 samples, 0.14%)</title><rect x="72.2" y="899.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="75.2" y="910.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (3 samples, 0.04%)</title><rect x="73.4" y="883.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="76.4" y="894.0"></text>
</g>
<g>
<title>[GC Thread#1 tid=65479] (19 samples, 0.26%)</title><rect x="74.5" y="1027.0" width="3.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="77.5" y="1038.0"></text>
</g>
<g>
<title>start_thread (19 samples, 0.26%)</title><rect x="74.5" y="1011.0" width="3.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="77.5" y="1022.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (19 samples, 0.26%)</title><rect x="74.5" y="995.0" width="3.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="77.5" y="1006.0"></text>
</g>
<g>
<title>Thread::call_run() (19 samples, 0.26%)</title><rect x="74.5" y="979.0" width="3.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="77.5" y="990.0"></text>
</g>
<g>
<title>GangWorker::loop() (19 samples, 0.26%)</title><rect x="74.5" y="963.0" width="3.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="77.5" y="974.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (19 samples, 0.26%)</title><rect x="74.5" y="947.0" width="3.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="77.5" y="958.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (15 samples, 0.21%)</title><rect x="74.5" y="931.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="77.5" y="942.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (14 samples, 0.19%)</title><rect x="74.5" y="915.0" width="2.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="77.5" y="926.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (9 samples, 0.12%)</title><rect x="75.3" y="899.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="78.3" y="910.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="76.5" y="883.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="79.5" y="894.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (4 samples, 0.06%)</title><rect x="77.0" y="931.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="80.0" y="942.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.06%)</title><rect x="77.0" y="915.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="80.0" y="926.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (4 samples, 0.06%)</title><rect x="77.0" y="899.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="80.0" y="910.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (4 samples, 0.06%)</title><rect x="77.0" y="883.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="80.0" y="894.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (4 samples, 0.06%)</title><rect x="77.0" y="867.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="80.0" y="878.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (3 samples, 0.04%)</title><rect x="77.1" y="851.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="80.1" y="862.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (3 samples, 0.04%)</title><rect x="77.1" y="835.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="80.1" y="846.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (2 samples, 0.03%)</title><rect x="77.3" y="819.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="80.3" y="830.0"></text>
</g>
<g>
<title>[GC Thread#2 tid=65480] (23 samples, 0.32%)</title><rect x="77.6" y="1027.0" width="3.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="80.6" y="1038.0"></text>
</g>
<g>
<title>start_thread (23 samples, 0.32%)</title><rect x="77.6" y="1011.0" width="3.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="80.6" y="1022.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (23 samples, 0.32%)</title><rect x="77.6" y="995.0" width="3.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="80.6" y="1006.0"></text>
</g>
<g>
<title>Thread::call_run() (23 samples, 0.32%)</title><rect x="77.6" y="979.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="80.6" y="990.0"></text>
</g>
<g>
<title>GangWorker::loop() (23 samples, 0.32%)</title><rect x="77.6" y="963.0" width="3.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="80.6" y="974.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (23 samples, 0.32%)</title><rect x="77.6" y="947.0" width="3.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="80.6" y="958.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (20 samples, 0.28%)</title><rect x="77.6" y="931.0" width="3.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="80.6" y="942.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (20 samples, 0.28%)</title><rect x="77.6" y="915.0" width="3.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="80.6" y="926.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (13 samples, 0.18%)</title><rect x="78.6" y="899.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="81.6" y="910.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="80.4" y="883.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="83.4" y="894.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.04%)</title><rect x="80.9" y="931.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="83.9" y="942.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.04%)</title><rect x="80.9" y="915.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="83.9" y="926.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.04%)</title><rect x="80.9" y="899.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="83.9" y="910.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (3 samples, 0.04%)</title><rect x="80.9" y="883.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="83.9" y="894.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.03%)</title><rect x="80.9" y="867.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="83.9" y="878.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.03%)</title><rect x="80.9" y="851.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="83.9" y="862.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.03%)</title><rect x="80.9" y="835.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="83.9" y="846.0"></text>
</g>
<g>
<title>[GC Thread#3 tid=65481] (20 samples, 0.28%)</title><rect x="81.4" y="1027.0" width="3.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="84.4" y="1038.0"></text>
</g>
<g>
<title>start_thread (19 samples, 0.26%)</title><rect x="81.6" y="1011.0" width="3.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="84.6" y="1022.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (19 samples, 0.26%)</title><rect x="81.6" y="995.0" width="3.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="84.6" y="1006.0"></text>
</g>
<g>
<title>Thread::call_run() (19 samples, 0.26%)</title><rect x="81.6" y="979.0" width="3.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="84.6" y="990.0"></text>
</g>
<g>
<title>GangWorker::loop() (19 samples, 0.26%)</title><rect x="81.6" y="963.0" width="3.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="84.6" y="974.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (19 samples, 0.26%)</title><rect x="81.6" y="947.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="84.6" y="958.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (16 samples, 0.22%)</title><rect x="81.6" y="931.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="84.6" y="942.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (16 samples, 0.22%)</title><rect x="81.6" y="915.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="84.6" y="926.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (15 samples, 0.21%)</title><rect x="81.7" y="899.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="84.7" y="910.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (6 samples, 0.08%)</title><rect x="83.2" y="883.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="86.2" y="894.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.03%)</title><rect x="84.3" y="931.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="87.3" y="942.0"></text>
</g>
<g>
<title>[JMX server connection timeout 27 tid=65512] (4 samples, 0.06%)</title><rect x="84.7" y="1027.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="87.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 0.06%)</title><rect x="84.7" y="1011.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.7" y="1022.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (4 samples, 0.06%)</title><rect x="84.7" y="995.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/Object.wait (2 samples, 0.03%)</title><rect x="85.0" y="979.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="85.0" y="963.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="88.0" y="974.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="85.0" y="947.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="88.0" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="85.0" y="931.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="88.0" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="85.0" y="915.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="88.0" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="85.0" y="899.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="88.0" y="910.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="85.0" y="883.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="88.0" y="894.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.03%)</title><rect x="85.0" y="867.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="88.0" y="878.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.03%)</title><rect x="85.0" y="851.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="88.0" y="862.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=65445] (1,578 samples, 21.90%)</title><rect x="85.3" y="1027.0" width="258.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="88.3" y="1038.0">[NIO Selector #0 tid=65445]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,578 samples, 21.90%)</title><rect x="85.3" y="1011.0" width="258.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="88.3" y="1022.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (7 samples, 0.10%)</title><rect x="86.0" y="995.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="89.0" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (212 samples, 2.94%)</title><rect x="87.1" y="995.0" width="34.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="90.1" y="1006.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (209 samples, 2.90%)</title><rect x="87.6" y="979.0" width="34.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="90.6" y="990.0">on..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.07%)</title><rect x="88.9" y="963.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="91.9" y="974.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (5 samples, 0.07%)</title><rect x="89.7" y="963.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="92.7" y="974.0"></text>
</g>
<g>
<title>clock_gettime (18 samples, 0.25%)</title><rect x="90.6" y="963.0" width="2.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="93.6" y="974.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="92.7" y="947.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="95.7" y="958.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.04%)</title><rect x="93.0" y="947.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="96.0" y="958.0"></text>
</g>
<g>
<title>epoll_wait (173 samples, 2.40%)</title><rect x="93.5" y="963.0" width="28.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="96.5" y="974.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (136 samples, 1.89%)</title><rect x="99.6" y="947.0" width="22.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="102.6" y="958.0">e..</text>
</g>
<g>
<title>do_syscall_64 (135 samples, 1.87%)</title><rect x="99.7" y="931.0" width="22.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="102.7" y="942.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (121 samples, 1.68%)</title><rect x="102.0" y="915.0" width="19.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="105.0" y="926.0"></text>
</g>
<g>
<title>do_epoll_wait (119 samples, 1.65%)</title><rect x="102.2" y="899.0" width="19.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="105.2" y="910.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="102.2" y="883.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="105.2" y="894.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="102.2" y="867.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="105.2" y="878.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="102.2" y="851.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="105.2" y="862.0"></text>
</g>
<g>
<title>ep_poll (110 samples, 1.53%)</title><rect x="102.7" y="883.0" width="18.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="105.7" y="894.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (57 samples, 0.79%)</title><rect x="105.1" y="867.0" width="9.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="108.1" y="878.0"></text>
</g>
<g>
<title>_cond_resched (3 samples, 0.04%)</title><rect x="106.8" y="851.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="109.8" y="862.0"></text>
</g>
<g>
<title>ep_send_events_proc (38 samples, 0.53%)</title><rect x="107.3" y="851.0" width="6.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="110.3" y="862.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (21 samples, 0.29%)</title><rect x="109.2" y="835.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="112.2" y="846.0"></text>
</g>
<g>
<title>sock_poll (14 samples, 0.19%)</title><rect x="110.4" y="819.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="113.4" y="830.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.03%)</title><rect x="111.9" y="803.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="114.9" y="814.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.04%)</title><rect x="112.2" y="803.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="115.2" y="814.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.07%)</title><rect x="112.7" y="835.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="115.7" y="846.0"></text>
</g>
<g>
<title>mutex_lock (6 samples, 0.08%)</title><rect x="113.5" y="851.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="116.5" y="862.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.04%)</title><rect x="114.0" y="835.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="117.0" y="846.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="114.5" y="867.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="117.5" y="878.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (34 samples, 0.47%)</title><rect x="114.8" y="867.0" width="5.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="117.8" y="878.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (34 samples, 0.47%)</title><rect x="114.8" y="851.0" width="5.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="117.8" y="862.0"></text>
</g>
<g>
<title>schedule (30 samples, 0.42%)</title><rect x="115.5" y="835.0" width="4.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="118.5" y="846.0"></text>
</g>
<g>
<title>__schedule (27 samples, 0.37%)</title><rect x="115.9" y="819.0" width="4.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="118.9" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (22 samples, 0.31%)</title><rect x="116.8" y="803.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="119.8" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.03%)</title><rect x="120.4" y="867.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="123.4" y="878.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.06%)</title><rect x="120.7" y="883.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="123.7" y="894.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.03%)</title><rect x="121.4" y="883.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="124.4" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,354 samples, 18.79%)</title><rect x="121.8" y="995.0" width="221.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.8" y="1006.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,341 samples, 18.61%)</title><rect x="123.8" y="979.0" width="219.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.8" y="990.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,053 samples, 14.61%)</title><rect x="124.0" y="963.0" width="172.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.0" y="974.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (3 samples, 0.04%)</title><rect x="128.6" y="947.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="131.6" y="958.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.10%)</title><rect x="129.0" y="947.0" width="1.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="132.0" y="958.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="130.2" y="947.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="133.2" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (922 samples, 12.79%)</title><rect x="130.7" y="947.0" width="151.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.7" y="958.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (922 samples, 12.79%)</title><rect x="130.7" y="931.0" width="151.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="133.7" y="942.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (891 samples, 12.36%)</title><rect x="131.3" y="915.0" width="145.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="134.3" y="926.0">RequestHandler1_pu..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (719 samples, 9.98%)</title><rect x="131.5" y="899.0" width="117.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="134.5" y="910.0">one/nio/http/H..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (10 samples, 0.14%)</title><rect x="132.3" y="883.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="135.3" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.14%)</title><rect x="132.3" y="867.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="135.3" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.14%)</title><rect x="132.3" y="851.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="135.3" y="862.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="132.8" y="835.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="135.8" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.07%)</title><rect x="133.1" y="835.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="136.1" y="846.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="133.5" y="819.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="136.5" y="830.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="133.6" y="803.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="136.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (686 samples, 9.52%)</title><rect x="134.0" y="883.0" width="112.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="137.0" y="894.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (32 samples, 0.44%)</title><rect x="134.1" y="867.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="137.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (8 samples, 0.11%)</title><rect x="138.1" y="851.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="141.1" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.11%)</title><rect x="138.1" y="835.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="141.1" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.11%)</title><rect x="138.1" y="819.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="141.1" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.11%)</title><rect x="138.1" y="803.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="141.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.charAt (8 samples, 0.11%)</title><rect x="138.1" y="787.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.1" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (653 samples, 9.06%)</title><rect x="139.4" y="867.0" width="106.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.4" y="878.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/Session.write (653 samples, 9.06%)</title><rect x="139.4" y="851.0" width="106.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="142.4" y="862.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.06%)</title><rect x="139.9" y="835.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="142.9" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.04%)</title><rect x="140.5" y="835.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="143.5" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (643 samples, 8.92%)</title><rect x="141.0" y="835.0" width="105.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="144.0" y="846.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (643 samples, 8.92%)</title><rect x="141.0" y="819.0" width="105.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="144.0" y="830.0">one/nio/net/N..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (11 samples, 0.15%)</title><rect x="142.1" y="803.0" width="1.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="145.1" y="814.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (8 samples, 0.11%)</title><rect x="142.3" y="787.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="145.3" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.04%)</title><rect x="142.8" y="771.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="145.8" y="782.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="143.3" y="771.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="146.3" y="782.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.03%)</title><rect x="143.6" y="787.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="146.6" y="798.0"></text>
</g>
<g>
<title>__send (623 samples, 8.65%)</title><rect x="143.9" y="803.0" width="102.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="146.9" y="814.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (600 samples, 8.33%)</title><rect x="147.7" y="787.0" width="98.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="150.7" y="798.0">entry_SYSCAL..</text>
</g>
<g>
<title>__x64_sys_sendto (3 samples, 0.04%)</title><rect x="147.7" y="771.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="150.7" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (597 samples, 8.28%)</title><rect x="148.2" y="771.0" width="97.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="151.2" y="782.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (584 samples, 8.10%)</title><rect x="150.3" y="755.0" width="95.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="153.3" y="766.0">__x64_sys_s..</text>
</g>
<g>
<title>__sys_sendto (579 samples, 8.03%)</title><rect x="150.5" y="739.0" width="94.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="153.5" y="750.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (576 samples, 7.99%)</title><rect x="150.7" y="723.0" width="94.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="153.7" y="734.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.03%)</title><rect x="151.3" y="707.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="154.3" y="718.0"></text>
</g>
<g>
<title>inet6_sendmsg (559 samples, 7.76%)</title><rect x="151.6" y="707.0" width="91.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="154.6" y="718.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (557 samples, 7.73%)</title><rect x="152.0" y="691.0" width="91.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="155.0" y="702.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.04%)</title><rect x="152.3" y="675.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="155.3" y="686.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.04%)</title><rect x="152.3" y="659.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="155.3" y="670.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (546 samples, 7.58%)</title><rect x="153.4" y="675.0" width="89.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="156.4" y="686.0">tcp_sendms..</text>
</g>
<g>
<title>__check_object_size (6 samples, 0.08%)</title><rect x="154.8" y="659.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="157.8" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.07%)</title><rect x="154.9" y="643.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="157.9" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="155.7" y="659.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="158.7" y="670.0"></text>
</g>
<g>
<title>_copy_from_iter_full (9 samples, 0.12%)</title><rect x="156.1" y="659.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="159.1" y="670.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (7 samples, 0.10%)</title><rect x="156.2" y="643.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="159.2" y="654.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.03%)</title><rect x="157.7" y="659.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="160.7" y="670.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.03%)</title><rect x="157.7" y="643.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="160.7" y="654.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (46 samples, 0.64%)</title><rect x="158.0" y="659.0" width="7.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="161.0" y="670.0"></text>
</g>
<g>
<title>__alloc_skb (38 samples, 0.53%)</title><rect x="158.9" y="643.0" width="6.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="161.9" y="654.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (14 samples, 0.19%)</title><rect x="159.7" y="627.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="162.7" y="638.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (11 samples, 0.15%)</title><rect x="159.8" y="611.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="162.8" y="622.0"></text>
</g>
<g>
<title>memset_erms (2 samples, 0.03%)</title><rect x="161.6" y="611.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="164.6" y="622.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (9 samples, 0.12%)</title><rect x="162.0" y="627.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="165.0" y="638.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.04%)</title><rect x="162.9" y="611.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="165.9" y="622.0"></text>
</g>
<g>
<title>___slab_alloc (2 samples, 0.03%)</title><rect x="163.1" y="595.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="166.1" y="606.0"></text>
</g>
<g>
<title>new_slab (2 samples, 0.03%)</title><rect x="163.1" y="579.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="166.1" y="590.0"></text>
</g>
<g>
<title>allocate_slab (2 samples, 0.03%)</title><rect x="163.1" y="563.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="166.1" y="574.0"></text>
</g>
<g>
<title>ksize (6 samples, 0.08%)</title><rect x="163.4" y="627.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="166.4" y="638.0"></text>
</g>
<g>
<title>__ksize (6 samples, 0.08%)</title><rect x="163.4" y="611.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="166.4" y="622.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (2 samples, 0.03%)</title><rect x="164.4" y="627.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="167.4" y="638.0"></text>
</g>
<g>
<title>memset_erms (2 samples, 0.03%)</title><rect x="164.7" y="627.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="167.7" y="638.0"></text>
</g>
<g>
<title>skb_entail (7 samples, 0.10%)</title><rect x="165.6" y="659.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="168.6" y="670.0"></text>
</g>
<g>
<title>tcp_chrono_start (3 samples, 0.04%)</title><rect x="166.7" y="659.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="169.7" y="670.0"></text>
</g>
<g>
<title>tcp_push (453 samples, 6.29%)</title><rect x="167.4" y="659.0" width="74.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="170.4" y="670.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (453 samples, 6.29%)</title><rect x="167.4" y="643.0" width="74.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="170.4" y="654.0">__tcp_pu..</text>
</g>
<g>
<title>tcp_mtu_probe (2 samples, 0.03%)</title><rect x="167.9" y="627.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="170.9" y="638.0"></text>
</g>
<g>
<title>tcp_write_xmit (446 samples, 6.19%)</title><rect x="168.5" y="627.0" width="73.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="171.5" y="638.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_transmit_skb (408 samples, 5.66%)</title><rect x="169.3" y="611.0" width="66.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="172.3" y="622.0">__tcp_t..</text>
</g>
<g>
<title>ip_queue_xmit (375 samples, 5.20%)</title><rect x="172.4" y="595.0" width="61.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="175.4" y="606.0">ip_que..</text>
</g>
<g>
<title>__ip_queue_xmit (369 samples, 5.12%)</title><rect x="172.8" y="579.0" width="60.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="175.8" y="590.0">__ip_q..</text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.06%)</title><rect x="173.4" y="563.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="176.4" y="574.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.04%)</title><rect x="173.6" y="547.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="176.6" y="558.0"></text>
</g>
<g>
<title>ip_local_out (359 samples, 4.98%)</title><rect x="174.1" y="563.0" width="58.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="177.1" y="574.0">ip_loc..</text>
</g>
<g>
<title>ip_output (357 samples, 4.95%)</title><rect x="174.4" y="547.0" width="58.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="177.4" y="558.0">ip_out..</text>
</g>
<g>
<title>ip_finish_output (353 samples, 4.90%)</title><rect x="175.1" y="531.0" width="57.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="178.1" y="542.0">ip_fin..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.04%)</title><rect x="175.1" y="515.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="178.1" y="526.0"></text>
</g>
<g>
<title>__ip_finish_output (350 samples, 4.86%)</title><rect x="175.6" y="515.0" width="57.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="178.6" y="526.0">__ip_f..</text>
</g>
<g>
<title>ip_finish_output2 (348 samples, 4.83%)</title><rect x="175.9" y="499.0" width="57.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="178.9" y="510.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (298 samples, 4.14%)</title><rect x="177.5" y="483.0" width="48.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="180.5" y="494.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.0 (295 samples, 4.09%)</title><rect x="178.0" y="467.0" width="48.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="181.0" y="478.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (291 samples, 4.04%)</title><rect x="178.7" y="451.0" width="47.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="181.7" y="462.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (290 samples, 4.02%)</title><rect x="178.7" y="435.0" width="47.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="181.7" y="446.0">__so..</text>
</g>
<g>
<title>net_rx_action (281 samples, 3.90%)</title><rect x="179.8" y="419.0" width="46.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="182.8" y="430.0">net_..</text>
</g>
<g>
<title>process_backlog (273 samples, 3.79%)</title><rect x="181.1" y="403.0" width="44.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="184.1" y="414.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (266 samples, 3.69%)</title><rect x="182.1" y="387.0" width="43.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="185.1" y="398.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (264 samples, 3.66%)</title><rect x="182.1" y="371.0" width="43.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="185.1" y="382.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (8 samples, 0.11%)</title><rect x="182.4" y="355.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="185.4" y="366.0"></text>
</g>
<g>
<title>ip_rcv (254 samples, 3.52%)</title><rect x="183.7" y="355.0" width="41.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="186.7" y="366.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="184.2" y="339.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="187.2" y="350.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.03%)</title><rect x="184.6" y="339.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="187.6" y="350.0"></text>
</g>
<g>
<title>ip_rcv_finish (244 samples, 3.39%)</title><rect x="184.9" y="339.0" width="39.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="187.9" y="350.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (242 samples, 3.36%)</title><rect x="185.2" y="323.0" width="39.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="188.2" y="334.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (242 samples, 3.36%)</title><rect x="185.2" y="307.0" width="39.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="188.2" y="318.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (242 samples, 3.36%)</title><rect x="185.2" y="291.0" width="39.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="188.2" y="302.0">ip_..</text>
</g>
<g>
<title>tcp_v4_rcv (238 samples, 3.30%)</title><rect x="185.9" y="275.0" width="38.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="188.9" y="286.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.08%)</title><rect x="187.5" y="259.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="190.5" y="270.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.03%)</title><rect x="188.5" y="259.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="191.5" y="270.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (10 samples, 0.14%)</title><rect x="188.8" y="259.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="191.8" y="270.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.06%)</title><rect x="189.0" y="243.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="192.0" y="254.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (3 samples, 0.04%)</title><rect x="189.6" y="243.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="192.6" y="254.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.03%)</title><rect x="190.1" y="243.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="193.1" y="254.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (207 samples, 2.87%)</title><rect x="190.5" y="259.0" width="33.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="193.5" y="270.0">tc..</text>
</g>
<g>
<title>tcp_check_space (6 samples, 0.08%)</title><rect x="191.3" y="243.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="194.3" y="254.0"></text>
</g>
<g>
<title>tcp_rcv_established (194 samples, 2.69%)</title><rect x="192.6" y="243.0" width="31.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="195.6" y="254.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (15 samples, 0.21%)</title><rect x="194.1" y="227.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="197.1" y="238.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (14 samples, 0.19%)</title><rect x="194.2" y="211.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="197.2" y="222.0"></text>
</g>
<g>
<title>sk_reset_timer (14 samples, 0.19%)</title><rect x="194.2" y="195.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="197.2" y="206.0"></text>
</g>
<g>
<title>mod_timer (14 samples, 0.19%)</title><rect x="194.2" y="179.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="197.2" y="190.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.15%)</title><rect x="194.5" y="163.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="197.5" y="174.0"></text>
</g>
<g>
<title>tcp_ack (70 samples, 0.97%)</title><rect x="197.0" y="227.0" width="11.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="200.0" y="238.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.03%)</title><rect x="198.2" y="211.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="201.2" y="222.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="198.5" y="211.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="201.5" y="222.0"></text>
</g>
<g>
<title>rb_next (3 samples, 0.04%)</title><rect x="198.8" y="211.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="201.8" y="222.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.03%)</title><rect x="199.3" y="211.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="202.3" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (41 samples, 0.57%)</title><rect x="199.8" y="211.0" width="6.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="202.8" y="222.0"></text>
</g>
<g>
<title>__kfree_skb (22 samples, 0.31%)</title><rect x="201.4" y="195.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="204.4" y="206.0"></text>
</g>
<g>
<title>kfree_skbmem (6 samples, 0.08%)</title><rect x="201.4" y="179.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="204.4" y="190.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.07%)</title><rect x="201.6" y="163.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="204.6" y="174.0"></text>
</g>
<g>
<title>skb_release_all (15 samples, 0.21%)</title><rect x="202.6" y="179.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="205.6" y="190.0"></text>
</g>
<g>
<title>skb_release_data (15 samples, 0.21%)</title><rect x="202.6" y="163.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="205.6" y="174.0"></text>
</g>
<g>
<title>skb_free_head (12 samples, 0.17%)</title><rect x="203.1" y="147.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="206.1" y="158.0"></text>
</g>
<g>
<title>kfree (12 samples, 0.17%)</title><rect x="203.1" y="131.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="206.1" y="142.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="204.7" y="115.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="207.7" y="126.0"></text>
</g>
<g>
<title>bictcp_acked (4 samples, 0.06%)</title><rect x="205.0" y="195.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="208.0" y="206.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (4 samples, 0.06%)</title><rect x="205.7" y="195.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="208.7" y="206.0"></text>
</g>
<g>
<title>tcp_rate_gen (5 samples, 0.07%)</title><rect x="206.7" y="211.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="209.7" y="222.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.03%)</title><rect x="207.5" y="211.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="210.5" y="222.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="207.8" y="211.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="210.8" y="222.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.03%)</title><rect x="208.1" y="211.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="211.1" y="222.0"></text>
</g>
<g>
<title>tcp_data_ready (82 samples, 1.14%)</title><rect x="208.6" y="227.0" width="13.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="211.6" y="238.0"></text>
</g>
<g>
<title>sock_def_readable (81 samples, 1.12%)</title><rect x="208.8" y="211.0" width="13.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="211.8" y="222.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="209.8" y="195.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="212.8" y="206.0"></text>
</g>
<g>
<title>__wake_up_sync_key (73 samples, 1.01%)</title><rect x="210.1" y="195.0" width="12.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="213.1" y="206.0"></text>
</g>
<g>
<title>__wake_up_common_lock (73 samples, 1.01%)</title><rect x="210.1" y="179.0" width="12.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="213.1" y="190.0"></text>
</g>
<g>
<title>__lock_text_start (73 samples, 1.01%)</title><rect x="210.1" y="163.0" width="12.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="213.1" y="174.0"></text>
</g>
<g>
<title>tcp_event_data_recv (5 samples, 0.07%)</title><rect x="222.1" y="227.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="225.1" y="238.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.04%)</title><rect x="222.9" y="227.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="225.9" y="238.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="222.9" y="211.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="225.9" y="222.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="223.9" y="227.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="226.9" y="238.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.03%)</title><rect x="224.4" y="259.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="227.4" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (3 samples, 0.04%)</title><rect x="224.8" y="339.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="227.8" y="350.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.03%)</title><rect x="225.3" y="371.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="228.3" y="382.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.03%)</title><rect x="225.8" y="419.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="228.8" y="430.0"></text>
</g>
<g>
<title>dev_queue_xmit (40 samples, 0.56%)</title><rect x="226.3" y="483.0" width="6.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="229.3" y="494.0"></text>
</g>
<g>
<title>__dev_queue_xmit (36 samples, 0.50%)</title><rect x="226.3" y="467.0" width="5.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="229.3" y="478.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (15 samples, 0.21%)</title><rect x="228.1" y="451.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="231.1" y="462.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="228.3" y="435.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="231.3" y="446.0"></text>
</g>
<g>
<title>loopback_xmit (10 samples, 0.14%)</title><rect x="228.6" y="435.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="231.6" y="446.0"></text>
</g>
<g>
<title>netif_rx (5 samples, 0.07%)</title><rect x="228.8" y="419.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="231.8" y="430.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.07%)</title><rect x="228.8" y="403.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="231.8" y="414.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.06%)</title><rect x="228.9" y="387.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="231.9" y="398.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.03%)</title><rect x="229.6" y="419.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="232.6" y="430.0"></text>
</g>
<g>
<title>validate_xmit_skb (7 samples, 0.10%)</title><rect x="230.9" y="451.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="233.9" y="462.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.04%)</title><rect x="232.4" y="467.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="235.4" y="478.0"></text>
</g>
<g>
<title>ip_copy_addrs (3 samples, 0.04%)</title><rect x="233.4" y="579.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="236.4" y="590.0"></text>
</g>
<g>
<title>skb_clone (8 samples, 0.11%)</title><rect x="233.8" y="595.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="236.8" y="606.0"></text>
</g>
<g>
<title>__skb_clone (7 samples, 0.10%)</title><rect x="234.0" y="579.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="237.0" y="590.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="234.8" y="563.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="237.8" y="574.0"></text>
</g>
<g>
<title>tcp_options_write (2 samples, 0.03%)</title><rect x="235.5" y="595.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="238.5" y="606.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="236.1" y="611.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="239.1" y="622.0"></text>
</g>
<g>
<title>ip_queue_xmit (4 samples, 0.06%)</title><rect x="236.8" y="611.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="239.8" y="622.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.06%)</title><rect x="237.5" y="611.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="240.5" y="622.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (14 samples, 0.19%)</title><rect x="238.1" y="611.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="241.1" y="622.0"></text>
</g>
<g>
<title>tcp_rearm_rto (11 samples, 0.15%)</title><rect x="238.6" y="595.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="241.6" y="606.0"></text>
</g>
<g>
<title>sk_reset_timer (10 samples, 0.14%)</title><rect x="238.8" y="579.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="241.8" y="590.0"></text>
</g>
<g>
<title>mod_timer (10 samples, 0.14%)</title><rect x="238.8" y="563.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="241.8" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.10%)</title><rect x="239.1" y="547.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="242.1" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (5 samples, 0.07%)</title><rect x="240.6" y="611.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="243.6" y="622.0"></text>
</g>
<g>
<title>tcp_send_mss (8 samples, 0.11%)</title><rect x="241.5" y="659.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="244.5" y="670.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="241.5" y="643.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="244.5" y="654.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.07%)</title><rect x="241.9" y="643.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="244.9" y="654.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="242.9" y="675.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="245.9" y="686.0"></text>
</g>
<g>
<title>inet_send_prepare (2 samples, 0.03%)</title><rect x="243.2" y="707.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="246.2" y="718.0"></text>
</g>
<g>
<title>security_socket_sendmsg (8 samples, 0.11%)</title><rect x="243.7" y="707.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="246.7" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (7 samples, 0.10%)</title><rect x="243.8" y="691.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="246.8" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.10%)</title><rect x="243.8" y="675.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="246.8" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="245.0" y="723.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="248.0" y="734.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="245.3" y="739.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="248.3" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="246.0" y="803.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="249.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (18 samples, 0.25%)</title><rect x="246.3" y="883.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="249.3" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.17%)</title><rect x="247.3" y="867.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="250.3" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.17%)</title><rect x="247.3" y="851.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="250.3" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (21 samples, 0.29%)</title><rect x="249.2" y="899.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="252.2" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (21 samples, 0.29%)</title><rect x="249.2" y="883.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="252.2" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="250.6" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="253.6" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="250.6" y="851.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="253.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.10%)</title><rect x="250.9" y="867.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="253.9" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.10%)</title><rect x="250.9" y="851.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="253.9" y="862.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="251.7" y="835.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="254.7" y="846.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="252.4" y="867.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="255.4" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="252.4" y="851.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="255.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="252.4" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="255.4" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="252.4" y="819.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="255.4" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.put (150 samples, 2.08%)</title><rect x="252.7" y="899.0" width="24.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="255.7" y="910.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.29%)</title><rect x="253.2" y="883.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="256.2" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.29%)</title><rect x="253.2" y="867.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="256.2" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (21 samples, 0.29%)</title><rect x="253.2" y="851.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="256.2" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (21 samples, 0.29%)</title><rect x="253.2" y="835.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="256.2" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.08%)</title><rect x="253.3" y="819.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="256.3" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.04%)</title><rect x="253.8" y="803.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="256.8" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.04%)</title><rect x="253.8" y="787.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="256.8" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="254.0" y="771.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="257.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.03%)</title><rect x="254.0" y="755.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="257.0" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (14 samples, 0.19%)</title><rect x="254.3" y="819.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="257.3" y="830.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="255.1" y="803.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="258.1" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.06%)</title><rect x="255.8" y="803.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="258.8" y="814.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.06%)</title><rect x="255.8" y="787.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="258.8" y="798.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="256.0" y="771.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="259.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.03%)</title><rect x="256.6" y="883.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="259.6" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.upsert (124 samples, 1.72%)</title><rect x="256.9" y="883.0" width="20.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="259.9" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="256.9" y="867.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="259.9" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.upsert (122 samples, 1.69%)</title><rect x="257.3" y="867.0" width="19.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="260.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (9 samples, 0.12%)</title><rect x="257.3" y="851.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="260.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (9 samples, 0.12%)</title><rect x="257.3" y="835.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="260.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (6 samples, 0.08%)</title><rect x="257.8" y="819.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="260.8" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.06%)</title><rect x="257.9" y="803.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="260.9" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (4 samples, 0.06%)</title><rect x="257.9" y="787.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="260.9" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (3 samples, 0.04%)</title><rect x="258.1" y="771.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="261.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (5 samples, 0.07%)</title><rect x="258.7" y="851.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="261.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (5 samples, 0.07%)</title><rect x="258.7" y="835.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="261.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (5 samples, 0.07%)</title><rect x="258.7" y="819.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="261.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.07%)</title><rect x="258.7" y="803.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="261.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.07%)</title><rect x="258.7" y="787.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="261.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.07%)</title><rect x="258.7" y="771.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="261.7" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.04%)</title><rect x="259.1" y="755.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="262.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="259.2" y="739.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="262.2" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="259.2" y="723.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="262.2" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="259.2" y="707.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="262.2" y="718.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="259.2" y="691.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="262.2" y="702.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="259.2" y="675.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="262.2" y="686.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="259.2" y="659.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="262.2" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="259.2" y="643.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="262.2" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="259.2" y="627.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="262.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.upsert (91 samples, 1.26%)</title><rect x="259.6" y="851.0" width="14.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="262.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (91 samples, 1.26%)</title><rect x="259.6" y="835.0" width="14.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="262.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (89 samples, 1.24%)</title><rect x="259.7" y="819.0" width="14.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.7" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (10 samples, 0.14%)</title><rect x="261.4" y="803.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="264.4" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (10 samples, 0.14%)</title><rect x="261.4" y="787.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="264.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (17 samples, 0.24%)</title><rect x="263.0" y="803.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="266.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.03%)</title><rect x="265.8" y="803.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="268.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.03%)</title><rect x="265.8" y="787.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="268.8" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="265.8" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="268.8" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="265.8" y="755.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="268.8" y="766.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="265.8" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="268.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (45 samples, 0.62%)</title><rect x="266.1" y="803.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="269.1" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (42 samples, 0.58%)</title><rect x="266.6" y="787.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="269.6" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (36 samples, 0.50%)</title><rect x="267.6" y="771.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="270.6" y="782.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (32 samples, 0.44%)</title><rect x="268.2" y="755.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="271.2" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (27 samples, 0.37%)</title><rect x="269.1" y="739.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="272.1" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (27 samples, 0.37%)</title><rect x="269.1" y="723.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="272.1" y="734.0"></text>
</g>
<g>
<title>vectorizedMismatch (5 samples, 0.07%)</title><rect x="272.7" y="707.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="275.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (5 samples, 0.07%)</title><rect x="273.5" y="803.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="276.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.putIntoFlushQueue (17 samples, 0.24%)</title><rect x="274.5" y="851.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="277.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.04%)</title><rect x="274.5" y="835.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="277.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (11 samples, 0.15%)</title><rect x="275.0" y="835.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="278.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (11 samples, 0.15%)</title><rect x="275.0" y="819.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="278.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6 samples, 0.08%)</title><rect x="275.0" y="803.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="278.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (6 samples, 0.08%)</title><rect x="275.0" y="787.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="278.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.08%)</title><rect x="275.0" y="771.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="278.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.08%)</title><rect x="275.0" y="755.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="278.0" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.06%)</title><rect x="275.0" y="739.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="278.0" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="275.3" y="723.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="278.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="275.6" y="739.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="278.6" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.03%)</title><rect x="275.6" y="723.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="278.6" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="275.6" y="707.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="278.6" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="275.6" y="691.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="278.6" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="275.6" y="675.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="278.6" y="686.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="275.6" y="659.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="278.6" y="670.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.03%)</title><rect x="275.6" y="643.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="278.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquire (5 samples, 0.07%)</title><rect x="275.9" y="803.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="278.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock (3 samples, 0.04%)</title><rect x="276.8" y="835.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="279.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.04%)</title><rect x="276.8" y="819.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="279.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.04%)</title><rect x="276.8" y="803.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="279.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.04%)</title><rect x="276.8" y="787.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="279.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.04%)</title><rect x="276.8" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="279.8" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="276.8" y="755.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="279.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="277.2" y="915.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="280.2" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (6 samples, 0.08%)</title><rect x="277.6" y="915.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.6" y="926.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (5 samples, 0.07%)</title><rect x="278.6" y="915.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="281.6" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.07%)</title><rect x="278.6" y="899.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="281.6" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.04%)</title><rect x="278.6" y="883.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="281.6" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="279.0" y="883.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="282.0" y="894.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="279.0" y="867.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="282.0" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="279.0" y="851.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="282.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (14 samples, 0.19%)</title><rect x="279.4" y="915.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="282.4" y="926.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.17%)</title><rect x="279.4" y="899.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="282.4" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.17%)</title><rect x="279.4" y="883.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="282.4" y="894.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.03%)</title><rect x="281.3" y="899.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.3" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (75 samples, 1.04%)</title><rect x="281.7" y="947.0" width="12.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="284.7" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (18 samples, 0.25%)</title><rect x="289.7" y="931.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="292.7" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (18 samples, 0.25%)</title><rect x="289.7" y="915.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="292.7" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (18 samples, 0.25%)</title><rect x="289.7" y="899.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="292.7" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (18 samples, 0.25%)</title><rect x="289.7" y="883.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="292.7" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (8 samples, 0.11%)</title><rect x="292.6" y="931.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="295.6" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.15%)</title><rect x="293.9" y="947.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="296.9" y="958.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.12%)</title><rect x="294.1" y="931.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="297.1" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.12%)</title><rect x="294.1" y="915.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="297.1" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.06%)</title><rect x="295.7" y="947.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="298.7" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.06%)</title><rect x="295.7" y="931.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.7" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.03%)</title><rect x="296.4" y="963.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="299.4" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (285 samples, 3.96%)</title><rect x="296.7" y="963.0" width="46.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="299.7" y="974.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (280 samples, 3.89%)</title><rect x="297.5" y="947.0" width="45.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="300.5" y="958.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (34 samples, 0.47%)</title><rect x="298.5" y="931.0" width="5.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="301.5" y="942.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (9 samples, 0.12%)</title><rect x="299.4" y="915.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="302.4" y="926.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.04%)</title><rect x="300.8" y="915.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="303.8" y="926.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.04%)</title><rect x="301.3" y="915.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="304.3" y="926.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.04%)</title><rect x="301.8" y="915.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="304.8" y="926.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (10 samples, 0.14%)</title><rect x="302.3" y="915.0" width="1.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="305.3" y="926.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="302.5" y="899.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="305.5" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="303.0" y="899.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="306.0" y="910.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.06%)</title><rect x="303.3" y="899.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="306.3" y="910.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.04%)</title><rect x="304.1" y="931.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="307.1" y="942.0"></text>
</g>
<g>
<title>recv (236 samples, 3.28%)</title><rect x="304.6" y="931.0" width="38.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="307.6" y="942.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (202 samples, 2.80%)</title><rect x="310.2" y="915.0" width="33.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="313.2" y="926.0">en..</text>
</g>
<g>
<title>do_syscall_64 (201 samples, 2.79%)</title><rect x="310.3" y="899.0" width="32.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="313.3" y="910.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (170 samples, 2.36%)</title><rect x="315.4" y="883.0" width="27.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="318.4" y="894.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (166 samples, 2.30%)</title><rect x="315.6" y="867.0" width="27.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="318.6" y="878.0">_..</text>
</g>
<g>
<title>__fdget (5 samples, 0.07%)</title><rect x="316.1" y="851.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="319.1" y="862.0"></text>
</g>
<g>
<title>sock_recvmsg (142 samples, 1.97%)</title><rect x="316.9" y="851.0" width="23.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="319.9" y="862.0">s..</text>
</g>
<g>
<title>inet6_recvmsg (116 samples, 1.61%)</title><rect x="317.7" y="835.0" width="19.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="320.7" y="846.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="318.2" y="819.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="321.2" y="830.0"></text>
</g>
<g>
<title>tcp_recvmsg (109 samples, 1.51%)</title><rect x="318.8" y="819.0" width="17.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="321.8" y="830.0"></text>
</g>
<g>
<title>__kfree_skb (16 samples, 0.22%)</title><rect x="322.8" y="803.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="325.8" y="814.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.06%)</title><rect x="322.8" y="787.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="325.8" y="798.0"></text>
</g>
<g>
<title>skb_release_all (11 samples, 0.15%)</title><rect x="323.4" y="787.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="326.4" y="798.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="323.7" y="771.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="326.7" y="782.0"></text>
</g>
<g>
<title>skb_release_head_state (6 samples, 0.08%)</title><rect x="324.1" y="771.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="327.1" y="782.0"></text>
</g>
<g>
<title>dst_release (6 samples, 0.08%)</title><rect x="324.1" y="755.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="327.1" y="766.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.04%)</title><rect x="325.6" y="803.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="328.6" y="814.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (7 samples, 0.10%)</title><rect x="326.0" y="803.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="329.0" y="814.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="327.2" y="803.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="330.2" y="814.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="327.5" y="803.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="330.5" y="814.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (43 samples, 0.60%)</title><rect x="328.0" y="803.0" width="7.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="331.0" y="814.0"></text>
</g>
<g>
<title>__skb_datagram_iter (41 samples, 0.57%)</title><rect x="328.2" y="787.0" width="6.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="331.2" y="798.0"></text>
</g>
<g>
<title>simple_copy_to_iter (25 samples, 0.35%)</title><rect x="330.8" y="771.0" width="4.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="333.8" y="782.0"></text>
</g>
<g>
<title>__check_object_size (17 samples, 0.24%)</title><rect x="330.8" y="755.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="333.8" y="766.0"></text>
</g>
<g>
<title>__virt_addr_valid (13 samples, 0.18%)</title><rect x="331.4" y="739.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="334.4" y="750.0"></text>
</g>
<g>
<title>_copy_to_iter (7 samples, 0.10%)</title><rect x="333.6" y="755.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="336.6" y="766.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (7 samples, 0.10%)</title><rect x="333.6" y="739.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="336.6" y="750.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (5 samples, 0.07%)</title><rect x="335.0" y="803.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="338.0" y="814.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (5 samples, 0.07%)</title><rect x="335.9" y="803.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="338.9" y="814.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.04%)</title><rect x="336.2" y="787.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="339.2" y="798.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.04%)</title><rect x="336.2" y="771.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="339.2" y="782.0"></text>
</g>
<g>
<title>security_socket_recvmsg (21 samples, 0.29%)</title><rect x="336.7" y="835.0" width="3.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="339.7" y="846.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (15 samples, 0.21%)</title><rect x="337.7" y="819.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="340.7" y="830.0"></text>
</g>
<g>
<title>aa_sk_perm (14 samples, 0.19%)</title><rect x="337.8" y="803.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="340.8" y="814.0"></text>
</g>
<g>
<title>sockfd_lookup_light (16 samples, 0.22%)</title><rect x="340.1" y="851.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="343.1" y="862.0"></text>
</g>
<g>
<title>__fdget (12 samples, 0.17%)</title><rect x="340.1" y="835.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="343.1" y="846.0"></text>
</g>
<g>
<title>__fget_light (12 samples, 0.17%)</title><rect x="340.1" y="819.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="343.1" y="830.0"></text>
</g>
<g>
<title>__fget (12 samples, 0.17%)</title><rect x="340.1" y="803.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="343.1" y="814.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.06%)</title><rect x="342.1" y="835.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="345.1" y="846.0"></text>
</g>
<g>
<title>fput (2 samples, 0.03%)</title><rect x="342.7" y="867.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="345.7" y="878.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=65446] (1,563 samples, 21.69%)</title><rect x="343.7" y="1027.0" width="256.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="346.7" y="1038.0">[NIO Selector #1 tid=65446]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,563 samples, 21.69%)</title><rect x="343.7" y="1011.0" width="256.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="346.7" y="1022.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5 samples, 0.07%)</title><rect x="344.2" y="995.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="347.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (208 samples, 2.89%)</title><rect x="345.0" y="995.0" width="34.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="348.0" y="1006.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (190 samples, 2.64%)</title><rect x="348.0" y="979.0" width="31.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="351.0" y="990.0">on..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (7 samples, 0.10%)</title><rect x="350.1" y="963.0" width="1.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="353.1" y="974.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.03%)</title><rect x="351.3" y="963.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="354.3" y="974.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.11%)</title><rect x="351.6" y="963.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="354.6" y="974.0"></text>
</g>
<g>
<title>epoll_wait (160 samples, 2.22%)</title><rect x="352.9" y="963.0" width="26.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="355.9" y="974.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (126 samples, 1.75%)</title><rect x="358.5" y="947.0" width="20.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="361.5" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (124 samples, 1.72%)</title><rect x="358.8" y="931.0" width="20.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="361.8" y="942.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (112 samples, 1.55%)</title><rect x="360.4" y="915.0" width="18.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="363.4" y="926.0"></text>
</g>
<g>
<title>do_epoll_wait (110 samples, 1.53%)</title><rect x="360.8" y="899.0" width="18.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="363.8" y="910.0"></text>
</g>
<g>
<title>ep_poll (105 samples, 1.46%)</title><rect x="361.4" y="883.0" width="17.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="364.4" y="894.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (47 samples, 0.65%)</title><rect x="363.1" y="867.0" width="7.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="366.1" y="878.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="364.0" y="851.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="367.0" y="862.0"></text>
</g>
<g>
<title>ep_send_events_proc (35 samples, 0.49%)</title><rect x="364.4" y="851.0" width="5.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="367.4" y="862.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (24 samples, 0.33%)</title><rect x="365.5" y="835.0" width="3.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="368.5" y="846.0"></text>
</g>
<g>
<title>sock_poll (15 samples, 0.21%)</title><rect x="366.8" y="819.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="369.8" y="830.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.03%)</title><rect x="368.5" y="803.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="371.5" y="814.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.04%)</title><rect x="368.8" y="803.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="371.8" y="814.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.06%)</title><rect x="369.4" y="835.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="372.4" y="846.0"></text>
</g>
<g>
<title>mutex_lock (4 samples, 0.06%)</title><rect x="370.1" y="851.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="373.1" y="862.0"></text>
</g>
<g>
<title>mutex_unlock (5 samples, 0.07%)</title><rect x="371.1" y="867.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="374.1" y="878.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (40 samples, 0.56%)</title><rect x="371.9" y="867.0" width="6.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="374.9" y="878.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (39 samples, 0.54%)</title><rect x="372.1" y="851.0" width="6.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="375.1" y="862.0"></text>
</g>
<g>
<title>schedule (37 samples, 0.51%)</title><rect x="372.4" y="835.0" width="6.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="375.4" y="846.0"></text>
</g>
<g>
<title>__schedule (33 samples, 0.46%)</title><rect x="373.0" y="819.0" width="5.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="376.0" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (26 samples, 0.36%)</title><rect x="374.2" y="803.0" width="4.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="377.2" y="814.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.03%)</title><rect x="378.8" y="915.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="381.8" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,346 samples, 18.68%)</title><rect x="379.1" y="995.0" width="220.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="382.1" y="1006.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,345 samples, 18.67%)</title><rect x="379.3" y="979.0" width="220.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="382.3" y="990.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,075 samples, 14.92%)</title><rect x="379.6" y="963.0" width="176.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="382.6" y="974.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (5 samples, 0.07%)</title><rect x="383.8" y="947.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="386.8" y="958.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.07%)</title><rect x="384.7" y="947.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="387.7" y="958.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.04%)</title><rect x="385.5" y="947.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="388.5" y="958.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="386.0" y="947.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="389.0" y="958.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (5 samples, 0.07%)</title><rect x="386.3" y="947.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="389.3" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (946 samples, 13.13%)</title><rect x="387.1" y="947.0" width="154.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.1" y="958.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (946 samples, 13.13%)</title><rect x="387.1" y="931.0" width="154.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.1" y="942.0">one/nio/http/HttpSer..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (923 samples, 12.81%)</title><rect x="387.3" y="915.0" width="151.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="390.3" y="926.0">RequestHandler1_put..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (758 samples, 10.52%)</title><rect x="387.3" y="899.0" width="124.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="390.3" y="910.0">one/nio/http/Ht..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (9 samples, 0.12%)</title><rect x="387.9" y="883.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="390.9" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.12%)</title><rect x="387.9" y="867.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.9" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.12%)</title><rect x="387.9" y="851.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="390.9" y="862.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="388.4" y="835.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="391.4" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="388.9" y="835.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="391.9" y="846.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="389.1" y="819.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="392.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (727 samples, 10.09%)</title><rect x="389.4" y="883.0" width="119.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="392.4" y="894.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="389.7" y="867.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="392.7" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (32 samples, 0.44%)</title><rect x="390.1" y="867.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="393.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.08%)</title><rect x="394.3" y="851.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="397.3" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.08%)</title><rect x="394.3" y="835.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="397.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.08%)</title><rect x="394.3" y="819.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="397.3" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.08%)</title><rect x="394.3" y="803.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="397.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.08%)</title><rect x="394.3" y="787.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="397.3" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (691 samples, 9.59%)</title><rect x="395.3" y="867.0" width="113.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="398.3" y="878.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/Session.write (691 samples, 9.59%)</title><rect x="395.3" y="851.0" width="113.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="398.3" y="862.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.03%)</title><rect x="395.5" y="835.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="398.5" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.03%)</title><rect x="395.8" y="835.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="398.8" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (686 samples, 9.52%)</title><rect x="396.1" y="835.0" width="112.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="399.1" y="846.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (685 samples, 9.51%)</title><rect x="396.3" y="819.0" width="112.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="399.3" y="830.0">one/nio/net/Na..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (17 samples, 0.24%)</title><rect x="397.3" y="803.0" width="2.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="400.3" y="814.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.04%)</title><rect x="397.9" y="787.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="400.9" y="798.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (9 samples, 0.12%)</title><rect x="398.6" y="787.0" width="1.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="401.6" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.06%)</title><rect x="399.4" y="771.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="402.4" y="782.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="400.2" y="803.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="403.2" y="814.0"></text>
</g>
<g>
<title>__send (658 samples, 9.13%)</title><rect x="400.5" y="803.0" width="107.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="403.5" y="814.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (621 samples, 8.62%)</title><rect x="406.4" y="787.0" width="101.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="409.4" y="798.0">entry_SYSCAL..</text>
</g>
<g>
<title>do_syscall_64 (619 samples, 8.59%)</title><rect x="406.8" y="771.0" width="101.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="409.8" y="782.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (612 samples, 8.49%)</title><rect x="407.9" y="755.0" width="100.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="410.9" y="766.0">__x64_sys_se..</text>
</g>
<g>
<title>__sys_sendto (610 samples, 8.47%)</title><rect x="407.9" y="739.0" width="99.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="410.9" y="750.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (604 samples, 8.38%)</title><rect x="408.4" y="723.0" width="98.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="411.4" y="734.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (593 samples, 8.23%)</title><rect x="408.7" y="707.0" width="97.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="411.7" y="718.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (588 samples, 8.16%)</title><rect x="409.2" y="691.0" width="96.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="412.2" y="702.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="409.9" y="675.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="412.9" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (3 samples, 0.04%)</title><rect x="410.4" y="675.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="413.4" y="686.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.04%)</title><rect x="411.5" y="675.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="414.5" y="686.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (571 samples, 7.92%)</title><rect x="412.0" y="675.0" width="93.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="415.0" y="686.0">tcp_sendmsg..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="414.8" y="659.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="417.8" y="670.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (3 samples, 0.04%)</title><rect x="415.1" y="659.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="418.1" y="670.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.03%)</title><rect x="415.6" y="659.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="418.6" y="670.0"></text>
</g>
<g>
<title>sk_page_frag_refill (4 samples, 0.06%)</title><rect x="416.4" y="659.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="419.4" y="670.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.03%)</title><rect x="416.8" y="643.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="419.8" y="654.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (48 samples, 0.67%)</title><rect x="417.1" y="659.0" width="7.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="420.1" y="670.0"></text>
</g>
<g>
<title>__alloc_skb (42 samples, 0.58%)</title><rect x="417.7" y="643.0" width="6.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="420.7" y="654.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (22 samples, 0.31%)</title><rect x="418.9" y="627.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="421.9" y="638.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (12 samples, 0.17%)</title><rect x="418.9" y="611.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="421.9" y="622.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="420.2" y="595.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="423.2" y="606.0"></text>
</g>
<g>
<title>memset_erms (7 samples, 0.10%)</title><rect x="421.2" y="611.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="424.2" y="622.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (8 samples, 0.11%)</title><rect x="422.5" y="627.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="425.5" y="638.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.04%)</title><rect x="423.3" y="611.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="426.3" y="622.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (2 samples, 0.03%)</title><rect x="423.8" y="627.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="426.8" y="638.0"></text>
</g>
<g>
<title>should_failslab (2 samples, 0.03%)</title><rect x="424.3" y="627.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="427.3" y="638.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="424.6" y="643.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="427.6" y="654.0"></text>
</g>
<g>
<title>skb_entail (6 samples, 0.08%)</title><rect x="424.9" y="659.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="427.9" y="670.0"></text>
</g>
<g>
<title>tcp_push (480 samples, 6.66%)</title><rect x="426.3" y="659.0" width="78.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="429.3" y="670.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (479 samples, 6.65%)</title><rect x="426.3" y="643.0" width="78.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="429.3" y="654.0">__tcp_pus..</text>
</g>
<g>
<title>tcp_write_xmit (475 samples, 6.59%)</title><rect x="426.9" y="627.0" width="77.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="429.9" y="638.0">tcp_write..</text>
</g>
<g>
<title>__tcp_transmit_skb (438 samples, 6.08%)</title><rect x="429.2" y="611.0" width="71.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="432.2" y="622.0">__tcp_tr..</text>
</g>
<g>
<title>ip_queue_xmit (419 samples, 5.81%)</title><rect x="431.2" y="595.0" width="68.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="434.2" y="606.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (413 samples, 5.73%)</title><rect x="431.3" y="579.0" width="67.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="434.3" y="590.0">__ip_qu..</text>
</g>
<g>
<title>ip_local_out (405 samples, 5.62%)</title><rect x="432.0" y="563.0" width="66.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="435.0" y="574.0">ip_loca..</text>
</g>
<g>
<title>ip_output (400 samples, 5.55%)</title><rect x="432.6" y="547.0" width="65.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="435.6" y="558.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.04%)</title><rect x="432.8" y="531.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="435.8" y="542.0"></text>
</g>
<g>
<title>ip_finish_output (395 samples, 5.48%)</title><rect x="433.5" y="531.0" width="64.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="436.5" y="542.0">ip_fini..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (5 samples, 0.07%)</title><rect x="433.6" y="515.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="436.6" y="526.0"></text>
</g>
<g>
<title>__ip_finish_output (388 samples, 5.38%)</title><rect x="434.4" y="515.0" width="63.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="437.4" y="526.0">__ip_fi..</text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.06%)</title><rect x="434.8" y="499.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="437.8" y="510.0"></text>
</g>
<g>
<title>ip_finish_output2 (380 samples, 5.27%)</title><rect x="435.4" y="499.0" width="62.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="438.4" y="510.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (314 samples, 4.36%)</title><rect x="437.4" y="483.0" width="51.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="440.4" y="494.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.0 (312 samples, 4.33%)</title><rect x="437.7" y="467.0" width="51.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="440.7" y="478.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (309 samples, 4.29%)</title><rect x="438.2" y="451.0" width="50.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="441.2" y="462.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (309 samples, 4.29%)</title><rect x="438.2" y="435.0" width="50.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="441.2" y="446.0">__sof..</text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="439.2" y="419.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="442.2" y="430.0"></text>
</g>
<g>
<title>net_rx_action (298 samples, 4.14%)</title><rect x="439.5" y="419.0" width="48.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="442.5" y="430.0">net_..</text>
</g>
<g>
<title>process_backlog (293 samples, 4.07%)</title><rect x="440.3" y="403.0" width="48.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="443.3" y="414.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (290 samples, 4.02%)</title><rect x="440.8" y="387.0" width="47.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="443.8" y="398.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (286 samples, 3.97%)</title><rect x="441.2" y="371.0" width="46.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="444.2" y="382.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (9 samples, 0.12%)</title><rect x="441.7" y="355.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="444.7" y="366.0"></text>
</g>
<g>
<title>ip_rcv (271 samples, 3.76%)</title><rect x="443.1" y="355.0" width="44.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="446.1" y="366.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (3 samples, 0.04%)</title><rect x="443.3" y="339.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="446.3" y="350.0"></text>
</g>
<g>
<title>ip_rcv_finish (267 samples, 3.71%)</title><rect x="443.8" y="339.0" width="43.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="446.8" y="350.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (265 samples, 3.68%)</title><rect x="443.9" y="323.0" width="43.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="446.9" y="334.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (263 samples, 3.65%)</title><rect x="444.3" y="307.0" width="43.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="447.3" y="318.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (263 samples, 3.65%)</title><rect x="444.3" y="291.0" width="43.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="447.3" y="302.0">ip_p..</text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.03%)</title><rect x="445.1" y="275.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="448.1" y="286.0"></text>
</g>
<g>
<title>tcp_v4_rcv (254 samples, 3.52%)</title><rect x="445.7" y="275.0" width="41.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="448.7" y="286.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (9 samples, 0.12%)</title><rect x="447.7" y="259.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="450.7" y="270.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.04%)</title><rect x="448.7" y="243.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="451.7" y="254.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.03%)</title><rect x="449.3" y="259.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="452.3" y="270.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (7 samples, 0.10%)</title><rect x="449.8" y="259.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="452.8" y="270.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.04%)</title><rect x="450.2" y="243.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="453.2" y="254.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.03%)</title><rect x="450.7" y="243.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="453.7" y="254.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (221 samples, 3.07%)</title><rect x="451.1" y="259.0" width="36.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="454.1" y="270.0">tcp..</text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.06%)</title><rect x="451.3" y="243.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="454.3" y="254.0"></text>
</g>
<g>
<title>tcp_data_ready (2 samples, 0.03%)</title><rect x="452.0" y="243.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="455.0" y="254.0"></text>
</g>
<g>
<title>tcp_rcv_established (214 samples, 2.97%)</title><rect x="452.3" y="243.0" width="35.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="455.3" y="254.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (18 samples, 0.25%)</title><rect x="453.3" y="227.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="456.3" y="238.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (17 samples, 0.24%)</title><rect x="453.4" y="211.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="456.4" y="222.0"></text>
</g>
<g>
<title>sk_reset_timer (16 samples, 0.22%)</title><rect x="453.6" y="195.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="456.6" y="206.0"></text>
</g>
<g>
<title>mod_timer (15 samples, 0.21%)</title><rect x="453.8" y="179.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="456.8" y="190.0"></text>
</g>
<g>
<title>__lock_text_start (15 samples, 0.21%)</title><rect x="453.8" y="163.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="456.8" y="174.0"></text>
</g>
<g>
<title>tcp_ack (83 samples, 1.15%)</title><rect x="456.6" y="227.0" width="13.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="459.6" y="238.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.03%)</title><rect x="459.3" y="211.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="462.3" y="222.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="459.7" y="211.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="462.7" y="222.0"></text>
</g>
<g>
<title>rb_erase (3 samples, 0.04%)</title><rect x="460.0" y="211.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="463.0" y="222.0"></text>
</g>
<g>
<title>rb_next (2 samples, 0.03%)</title><rect x="460.6" y="211.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="463.6" y="222.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.04%)</title><rect x="461.0" y="211.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="464.0" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (46 samples, 0.64%)</title><rect x="461.5" y="211.0" width="7.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="464.5" y="222.0"></text>
</g>
<g>
<title>__kfree_skb (26 samples, 0.36%)</title><rect x="463.4" y="195.0" width="4.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="466.4" y="206.0"></text>
</g>
<g>
<title>kfree_skbmem (7 samples, 0.10%)</title><rect x="463.6" y="179.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="466.6" y="190.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.07%)</title><rect x="463.9" y="163.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="466.9" y="174.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="464.4" y="147.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="467.4" y="158.0"></text>
</g>
<g>
<title>skb_release_all (17 samples, 0.24%)</title><rect x="464.9" y="179.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="467.9" y="190.0"></text>
</g>
<g>
<title>skb_release_data (16 samples, 0.22%)</title><rect x="464.9" y="163.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="467.9" y="174.0"></text>
</g>
<g>
<title>skb_free_head (8 samples, 0.11%)</title><rect x="466.2" y="147.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="469.2" y="158.0"></text>
</g>
<g>
<title>kfree (7 samples, 0.10%)</title><rect x="466.4" y="131.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="469.4" y="142.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.06%)</title><rect x="466.9" y="115.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="469.9" y="126.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.03%)</title><rect x="467.7" y="195.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="470.7" y="206.0"></text>
</g>
<g>
<title>jiffies_to_usecs (2 samples, 0.03%)</title><rect x="468.0" y="195.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="471.0" y="206.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.04%)</title><rect x="468.5" y="195.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="471.5" y="206.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.03%)</title><rect x="469.8" y="211.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="472.8" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.04%)</title><rect x="470.1" y="227.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="473.1" y="238.0"></text>
</g>
<g>
<title>tcp_data_ready (90 samples, 1.25%)</title><rect x="470.6" y="227.0" width="14.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="473.6" y="238.0"></text>
</g>
<g>
<title>sock_def_readable (90 samples, 1.25%)</title><rect x="470.6" y="211.0" width="14.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="473.6" y="222.0"></text>
</g>
<g>
<title>__wake_up_sync_key (87 samples, 1.21%)</title><rect x="471.1" y="195.0" width="14.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="474.1" y="206.0"></text>
</g>
<g>
<title>__wake_up_common_lock (87 samples, 1.21%)</title><rect x="471.1" y="179.0" width="14.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="474.1" y="190.0"></text>
</g>
<g>
<title>__lock_text_start (86 samples, 1.19%)</title><rect x="471.3" y="163.0" width="14.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="474.3" y="174.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.06%)</title><rect x="485.4" y="227.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="488.4" y="238.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.04%)</title><rect x="486.0" y="227.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="489.0" y="238.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="486.2" y="211.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="489.2" y="222.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.03%)</title><rect x="486.5" y="227.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="489.5" y="238.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.03%)</title><rect x="487.0" y="227.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="490.0" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.04%)</title><rect x="487.5" y="355.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="490.5" y="366.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.03%)</title><rect x="488.0" y="371.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="491.0" y="382.0"></text>
</g>
<g>
<title>dev_queue_xmit (52 samples, 0.72%)</title><rect x="488.8" y="483.0" width="8.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="491.8" y="494.0"></text>
</g>
<g>
<title>__dev_queue_xmit (50 samples, 0.69%)</title><rect x="488.8" y="467.0" width="8.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="491.8" y="478.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (19 samples, 0.26%)</title><rect x="491.6" y="451.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="494.6" y="462.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="492.1" y="435.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="495.1" y="446.0"></text>
</g>
<g>
<title>loopback_xmit (13 samples, 0.18%)</title><rect x="492.4" y="435.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="495.4" y="446.0"></text>
</g>
<g>
<title>netif_rx (9 samples, 0.12%)</title><rect x="492.6" y="419.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="495.6" y="430.0"></text>
</g>
<g>
<title>netif_rx_internal (9 samples, 0.12%)</title><rect x="492.6" y="403.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="495.6" y="414.0"></text>
</g>
<g>
<title>enqueue_to_backlog (9 samples, 0.12%)</title><rect x="492.6" y="387.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="495.6" y="398.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.03%)</title><rect x="494.2" y="419.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="497.2" y="430.0"></text>
</g>
<g>
<title>validate_xmit_skb (11 samples, 0.15%)</title><rect x="495.0" y="451.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="498.0" y="462.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.04%)</title><rect x="496.2" y="435.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="499.2" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.0 (2 samples, 0.03%)</title><rect x="497.3" y="483.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="500.3" y="494.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="497.7" y="499.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="500.7" y="510.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.03%)</title><rect x="498.3" y="563.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="501.3" y="574.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="498.6" y="563.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="501.6" y="574.0"></text>
</g>
<g>
<title>ip_copy_addrs (5 samples, 0.07%)</title><rect x="499.0" y="579.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="502.0" y="590.0"></text>
</g>
<g>
<title>skb_clone (7 samples, 0.10%)</title><rect x="499.8" y="595.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="502.8" y="606.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="499.8" y="579.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="502.8" y="590.0"></text>
</g>
<g>
<title>__skb_clone (5 samples, 0.07%)</title><rect x="500.1" y="579.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="503.1" y="590.0"></text>
</g>
<g>
<title>__copy_skb_header (4 samples, 0.06%)</title><rect x="500.3" y="563.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="503.3" y="574.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.03%)</title><rect x="501.1" y="611.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="504.1" y="622.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="501.6" y="611.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="504.6" y="622.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.03%)</title><rect x="501.9" y="611.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="504.9" y="622.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (11 samples, 0.15%)</title><rect x="502.4" y="611.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="505.4" y="622.0"></text>
</g>
<g>
<title>tcp_rearm_rto (7 samples, 0.10%)</title><rect x="503.1" y="595.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="506.1" y="606.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.08%)</title><rect x="503.2" y="579.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="506.2" y="590.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.08%)</title><rect x="503.2" y="563.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="506.2" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.07%)</title><rect x="503.4" y="547.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="506.4" y="558.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="504.4" y="611.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="507.4" y="622.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.06%)</title><rect x="504.9" y="659.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="507.9" y="670.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.06%)</title><rect x="504.9" y="643.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="507.9" y="654.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (2 samples, 0.03%)</title><rect x="505.5" y="691.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="508.5" y="702.0"></text>
</g>
<g>
<title>inet_send_prepare (2 samples, 0.03%)</title><rect x="505.8" y="707.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="508.8" y="718.0"></text>
</g>
<g>
<title>security_socket_sendmsg (7 samples, 0.10%)</title><rect x="506.2" y="707.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="509.2" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (5 samples, 0.07%)</title><rect x="506.5" y="691.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="509.5" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.07%)</title><rect x="506.5" y="675.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="509.5" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.04%)</title><rect x="507.3" y="723.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="510.3" y="734.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.04%)</title><rect x="507.3" y="707.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="510.3" y="718.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="507.5" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="510.5" y="702.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="507.5" y="675.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="510.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (18 samples, 0.25%)</title><rect x="508.5" y="883.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="511.5" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.14%)</title><rect x="509.8" y="867.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.8" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.14%)</title><rect x="509.8" y="851.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="512.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (21 samples, 0.29%)</title><rect x="511.4" y="899.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="514.4" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (21 samples, 0.29%)</title><rect x="511.4" y="883.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="514.4" y="894.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.04%)</title><rect x="512.6" y="867.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="515.6" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="512.6" y="851.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="515.6" y="862.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="512.7" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="515.7" y="846.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (10 samples, 0.14%)</title><rect x="513.2" y="867.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="516.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.11%)</title><rect x="513.5" y="851.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="516.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.11%)</title><rect x="513.5" y="835.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="516.5" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.11%)</title><rect x="513.5" y="819.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="516.5" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.put (144 samples, 2.00%)</title><rect x="514.8" y="899.0" width="23.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="517.8" y="910.0">r..</text>
</g>
<g>
<title>java/lang/String.isEmpty (2 samples, 0.03%)</title><rect x="515.0" y="883.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="518.0" y="894.0"></text>
</g>
<g>
<title>java/lang/String.strip (5 samples, 0.07%)</title><rect x="515.3" y="883.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="518.3" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.strip (5 samples, 0.07%)</title><rect x="515.3" y="867.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="518.3" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.lastIndexOfNonWhitespace (5 samples, 0.07%)</title><rect x="515.3" y="851.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="518.3" y="862.0"></text>
</g>
<g>
<title>java/lang/Character.isWhitespace (5 samples, 0.07%)</title><rect x="515.3" y="835.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="518.3" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.isWhitespace (5 samples, 0.07%)</title><rect x="515.3" y="819.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.3" y="830.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (2 samples, 0.03%)</title><rect x="515.8" y="803.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="518.8" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.33%)</title><rect x="516.2" y="883.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="519.2" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.33%)</title><rect x="516.2" y="867.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="519.2" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (24 samples, 0.33%)</title><rect x="516.2" y="851.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="519.2" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (24 samples, 0.33%)</title><rect x="516.2" y="835.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="519.2" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (12 samples, 0.17%)</title><rect x="516.2" y="819.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="519.2" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.07%)</title><rect x="517.0" y="803.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="520.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (5 samples, 0.07%)</title><rect x="517.0" y="787.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="520.0" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="517.8" y="803.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="520.8" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="517.8" y="787.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="520.8" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="517.8" y="771.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="520.8" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.03%)</title><rect x="517.8" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="520.8" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (12 samples, 0.17%)</title><rect x="518.1" y="819.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="521.1" y="830.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.06%)</title><rect x="518.6" y="803.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="521.6" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="519.3" y="803.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="522.3" y="814.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="519.3" y="787.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="522.3" y="798.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="519.3" y="771.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="522.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.putIntoFlushQueue (3 samples, 0.04%)</title><rect x="519.6" y="803.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="522.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.03%)</title><rect x="520.1" y="883.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="523.1" y="894.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="520.1" y="867.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="523.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.upsert (110 samples, 1.53%)</title><rect x="520.4" y="883.0" width="18.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="523.4" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.04%)</title><rect x="520.4" y="867.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="523.4" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.04%)</title><rect x="520.4" y="851.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="523.4" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="520.4" y="835.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="523.4" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="520.4" y="819.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="523.4" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.upsert (107 samples, 1.48%)</title><rect x="520.9" y="867.0" width="17.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="523.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (8 samples, 0.11%)</title><rect x="520.9" y="851.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="523.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (8 samples, 0.11%)</title><rect x="520.9" y="835.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="523.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireShared (2 samples, 0.03%)</title><rect x="520.9" y="819.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="523.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (6 samples, 0.08%)</title><rect x="521.2" y="819.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="524.2" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="521.4" y="803.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="524.4" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.03%)</title><rect x="521.4" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="524.4" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.03%)</title><rect x="521.4" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="524.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (3 samples, 0.04%)</title><rect x="521.7" y="803.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="524.7" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="521.7" y="787.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.7" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.03%)</title><rect x="521.7" y="771.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="524.7" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.03%)</title><rect x="521.7" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="524.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 0.03%)</title><rect x="522.2" y="851.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="525.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (2 samples, 0.03%)</title><rect x="522.2" y="835.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="525.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (2 samples, 0.03%)</title><rect x="522.2" y="819.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="525.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.03%)</title><rect x="522.2" y="803.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="525.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="522.2" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="525.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="522.2" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="525.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.upsert (86 samples, 1.19%)</title><rect x="522.5" y="851.0" width="14.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="525.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (84 samples, 1.17%)</title><rect x="522.7" y="835.0" width="13.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (82 samples, 1.14%)</title><rect x="522.9" y="819.0" width="13.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="525.9" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (9 samples, 0.12%)</title><rect x="524.2" y="803.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="527.2" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (9 samples, 0.12%)</title><rect x="524.2" y="787.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="527.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (19 samples, 0.26%)</title><rect x="525.7" y="803.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="528.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (3 samples, 0.04%)</title><rect x="528.8" y="803.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="531.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (40 samples, 0.56%)</title><rect x="529.3" y="803.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="532.3" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (36 samples, 0.50%)</title><rect x="529.9" y="787.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="532.9" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (32 samples, 0.44%)</title><rect x="530.6" y="771.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="533.6" y="782.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (30 samples, 0.42%)</title><rect x="530.9" y="755.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="533.9" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (25 samples, 0.35%)</title><rect x="531.7" y="739.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="534.7" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (25 samples, 0.35%)</title><rect x="531.7" y="723.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="534.7" y="734.0"></text>
</g>
<g>
<title>vectorizedMismatch (10 samples, 0.14%)</title><rect x="534.2" y="707.0" width="1.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="537.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (3 samples, 0.04%)</title><rect x="535.8" y="803.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="538.8" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.putIntoFlushQueue (11 samples, 0.15%)</title><rect x="536.6" y="851.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="539.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.03%)</title><rect x="537.3" y="835.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="540.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (4 samples, 0.06%)</title><rect x="537.6" y="835.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="540.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.06%)</title><rect x="537.6" y="819.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="540.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.03%)</title><rect x="537.6" y="803.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="540.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.03%)</title><rect x="537.6" y="787.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="540.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.03%)</title><rect x="537.6" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="540.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.03%)</title><rect x="537.6" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="540.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquire (2 samples, 0.03%)</title><rect x="537.9" y="803.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="540.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.03%)</title><rect x="537.9" y="787.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="540.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.03%)</title><rect x="537.9" y="771.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="540.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="537.9" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="540.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.04%)</title><rect x="538.4" y="915.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="541.4" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (6 samples, 0.08%)</title><rect x="538.9" y="915.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="541.9" y="926.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 0.08%)</title><rect x="539.9" y="915.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="542.9" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.08%)</title><rect x="539.9" y="899.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="542.9" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.06%)</title><rect x="539.9" y="883.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="542.9" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="540.6" y="883.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="543.6" y="894.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="540.6" y="867.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.6" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="540.6" y="851.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="543.6" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (7 samples, 0.10%)</title><rect x="540.9" y="915.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="543.9" y="926.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.10%)</title><rect x="540.9" y="899.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="543.9" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.10%)</title><rect x="540.9" y="883.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.9" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (75 samples, 1.04%)</title><rect x="542.0" y="947.0" width="12.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="545.0" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (15 samples, 0.21%)</title><rect x="549.9" y="931.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="552.9" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (15 samples, 0.21%)</title><rect x="549.9" y="915.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="552.9" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (15 samples, 0.21%)</title><rect x="549.9" y="899.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.9" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (15 samples, 0.21%)</title><rect x="549.9" y="883.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="552.9" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (11 samples, 0.15%)</title><rect x="552.5" y="931.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="555.5" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.07%)</title><rect x="554.5" y="947.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="557.5" y="958.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.06%)</title><rect x="554.6" y="931.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="557.6" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.06%)</title><rect x="554.6" y="915.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="557.6" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.04%)</title><rect x="555.6" y="963.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="558.6" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (265 samples, 3.68%)</title><rect x="556.1" y="963.0" width="43.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="559.1" y="974.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (261 samples, 3.62%)</title><rect x="556.8" y="947.0" width="42.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="559.8" y="958.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (23 samples, 0.32%)</title><rect x="558.1" y="931.0" width="3.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="561.1" y="942.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.04%)</title><rect x="558.6" y="915.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="561.6" y="926.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.06%)</title><rect x="559.1" y="915.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="562.1" y="926.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (10 samples, 0.14%)</title><rect x="560.0" y="915.0" width="1.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="563.0" y="926.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="560.5" y="899.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="563.5" y="910.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.06%)</title><rect x="561.0" y="899.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="564.0" y="910.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="561.8" y="931.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="564.8" y="942.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.06%)</title><rect x="562.2" y="931.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="565.2" y="942.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.06%)</title><rect x="562.8" y="931.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="565.8" y="942.0"></text>
</g>
<g>
<title>recv (220 samples, 3.05%)</title><rect x="563.5" y="931.0" width="36.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="566.5" y="942.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (194 samples, 2.69%)</title><rect x="567.7" y="915.0" width="31.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="570.7" y="926.0">en..</text>
</g>
<g>
<title>__x64_sys_recvfrom (3 samples, 0.04%)</title><rect x="567.7" y="899.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="570.7" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (191 samples, 2.65%)</title><rect x="568.2" y="899.0" width="31.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="571.2" y="910.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (175 samples, 2.43%)</title><rect x="570.9" y="883.0" width="28.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="573.9" y="894.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (167 samples, 2.32%)</title><rect x="570.9" y="867.0" width="27.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="573.9" y="878.0">_..</text>
</g>
<g>
<title>__fdget (3 samples, 0.04%)</title><rect x="571.5" y="851.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="574.5" y="862.0"></text>
</g>
<g>
<title>sock_recvmsg (145 samples, 2.01%)</title><rect x="572.3" y="851.0" width="23.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="575.3" y="862.0">s..</text>
</g>
<g>
<title>inet6_recvmsg (118 samples, 1.64%)</title><rect x="573.1" y="835.0" width="19.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="576.1" y="846.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.06%)</title><rect x="573.3" y="819.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="576.3" y="830.0"></text>
</g>
<g>
<title>tcp_recvmsg (113 samples, 1.57%)</title><rect x="574.0" y="819.0" width="18.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="577.0" y="830.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.14%)</title><rect x="578.4" y="803.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="581.4" y="814.0"></text>
</g>
<g>
<title>skb_release_all (9 samples, 0.12%)</title><rect x="578.4" y="787.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="581.4" y="798.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.06%)</title><rect x="578.5" y="771.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="581.5" y="782.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.04%)</title><rect x="579.2" y="771.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="582.2" y="782.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="580.0" y="803.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="583.0" y="814.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.03%)</title><rect x="580.3" y="803.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="583.3" y="814.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (7 samples, 0.10%)</title><rect x="580.7" y="803.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="583.7" y="814.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.06%)</title><rect x="582.0" y="803.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="585.0" y="814.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="582.6" y="803.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="585.6" y="814.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (41 samples, 0.57%)</title><rect x="583.0" y="803.0" width="6.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="586.0" y="814.0"></text>
</g>
<g>
<title>__skb_datagram_iter (40 samples, 0.56%)</title><rect x="583.1" y="787.0" width="6.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="586.1" y="798.0"></text>
</g>
<g>
<title>simple_copy_to_iter (27 samples, 0.37%)</title><rect x="585.3" y="771.0" width="4.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="588.3" y="782.0"></text>
</g>
<g>
<title>__check_object_size (15 samples, 0.21%)</title><rect x="585.3" y="755.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="588.3" y="766.0"></text>
</g>
<g>
<title>__virt_addr_valid (11 samples, 0.15%)</title><rect x="585.9" y="739.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="588.9" y="750.0"></text>
</g>
<g>
<title>_copy_to_iter (8 samples, 0.11%)</title><rect x="587.9" y="755.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="590.9" y="766.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (8 samples, 0.11%)</title><rect x="587.9" y="739.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="590.9" y="750.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.03%)</title><rect x="589.2" y="755.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="592.2" y="766.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (5 samples, 0.07%)</title><rect x="589.7" y="803.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="592.7" y="814.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="590.2" y="787.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="593.2" y="798.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.04%)</title><rect x="590.5" y="803.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="593.5" y="814.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (9 samples, 0.12%)</title><rect x="591.0" y="803.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="594.0" y="814.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.08%)</title><rect x="591.5" y="787.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="594.5" y="798.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="591.5" y="771.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="594.5" y="782.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.04%)</title><rect x="592.0" y="771.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="595.0" y="782.0"></text>
</g>
<g>
<title>security_socket_recvmsg (22 samples, 0.31%)</title><rect x="592.5" y="835.0" width="3.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="595.5" y="846.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (13 samples, 0.18%)</title><rect x="593.9" y="819.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="596.9" y="830.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="593.9" y="803.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="596.9" y="814.0"></text>
</g>
<g>
<title>aa_sk_perm (11 samples, 0.15%)</title><rect x="594.3" y="803.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="597.3" y="814.0"></text>
</g>
<g>
<title>sockfd_lookup_light (13 samples, 0.18%)</title><rect x="596.1" y="851.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="599.1" y="862.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.10%)</title><rect x="596.1" y="835.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="599.1" y="846.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.10%)</title><rect x="596.1" y="819.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="599.1" y="830.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.10%)</title><rect x="596.1" y="803.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="599.1" y="814.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.08%)</title><rect x="597.2" y="835.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="600.2" y="846.0"></text>
</g>
<g>
<title>import_single_range (6 samples, 0.08%)</title><rect x="598.4" y="867.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="601.4" y="878.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=65451] (1,576 samples, 21.87%)</title><rect x="599.7" y="1027.0" width="258.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="602.7" y="1038.0">[NIO Selector #2 tid=65451]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,576 samples, 21.87%)</title><rect x="599.7" y="1011.0" width="258.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="602.7" y="1022.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (221 samples, 3.07%)</title><rect x="601.5" y="995.0" width="36.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="604.5" y="1006.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (220 samples, 3.05%)</title><rect x="601.6" y="979.0" width="36.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="604.6" y="990.0">one..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.04%)</title><rect x="603.1" y="963.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="606.1" y="974.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (5 samples, 0.07%)</title><rect x="603.6" y="963.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="606.6" y="974.0"></text>
</g>
<g>
<title>clock_gettime (16 samples, 0.22%)</title><rect x="604.4" y="963.0" width="2.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="607.4" y="974.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.03%)</title><rect x="606.7" y="947.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="609.7" y="958.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="606.7" y="931.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="609.7" y="942.0"></text>
</g>
<g>
<title>epoll_wait (186 samples, 2.58%)</title><rect x="607.2" y="963.0" width="30.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="610.2" y="974.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (134 samples, 1.86%)</title><rect x="615.7" y="947.0" width="22.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="618.7" y="958.0">e..</text>
</g>
<g>
<title>do_syscall_64 (133 samples, 1.85%)</title><rect x="615.9" y="931.0" width="21.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="618.9" y="942.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (123 samples, 1.71%)</title><rect x="617.5" y="915.0" width="20.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="620.5" y="926.0"></text>
</g>
<g>
<title>do_epoll_wait (122 samples, 1.69%)</title><rect x="617.7" y="899.0" width="20.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="620.7" y="910.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="618.2" y="883.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="621.2" y="894.0"></text>
</g>
<g>
<title>ep_poll (114 samples, 1.58%)</title><rect x="618.5" y="883.0" width="18.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="621.5" y="894.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (56 samples, 0.78%)</title><rect x="621.6" y="867.0" width="9.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="624.6" y="878.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="624.4" y="851.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="627.4" y="862.0"></text>
</g>
<g>
<title>ep_send_events_proc (31 samples, 0.43%)</title><rect x="624.7" y="851.0" width="5.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="627.7" y="862.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (22 samples, 0.31%)</title><rect x="625.4" y="835.0" width="3.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="628.4" y="846.0"></text>
</g>
<g>
<title>sock_poll (18 samples, 0.25%)</title><rect x="626.0" y="819.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="629.0" y="830.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.06%)</title><rect x="628.0" y="803.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="631.0" y="814.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="628.7" y="803.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="631.7" y="814.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.07%)</title><rect x="629.0" y="835.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="632.0" y="846.0"></text>
</g>
<g>
<title>mutex_lock (6 samples, 0.08%)</title><rect x="629.8" y="851.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="632.8" y="862.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (38 samples, 0.53%)</title><rect x="630.9" y="867.0" width="6.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="633.9" y="878.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (36 samples, 0.50%)</title><rect x="631.3" y="851.0" width="5.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="634.3" y="862.0"></text>
</g>
<g>
<title>schedule (30 samples, 0.42%)</title><rect x="632.3" y="835.0" width="4.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="635.3" y="846.0"></text>
</g>
<g>
<title>__schedule (29 samples, 0.40%)</title><rect x="632.4" y="819.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="635.4" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (24 samples, 0.33%)</title><rect x="633.2" y="803.0" width="4.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="636.2" y="814.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="637.3" y="883.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="640.3" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,343 samples, 18.64%)</title><rect x="637.7" y="995.0" width="219.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="640.7" y="1006.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,332 samples, 18.48%)</title><rect x="639.5" y="979.0" width="218.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.5" y="990.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,059 samples, 14.70%)</title><rect x="639.6" y="963.0" width="173.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.6" y="974.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (3 samples, 0.04%)</title><rect x="643.6" y="947.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.6" y="958.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.10%)</title><rect x="644.0" y="947.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="647.0" y="958.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.07%)</title><rect x="645.2" y="947.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="648.2" y="958.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="646.0" y="947.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="649.0" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (930 samples, 12.91%)</title><rect x="646.5" y="947.0" width="152.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="649.5" y="958.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (930 samples, 12.91%)</title><rect x="646.5" y="931.0" width="152.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="649.5" y="942.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (906 samples, 12.57%)</title><rect x="646.8" y="915.0" width="148.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="649.8" y="926.0">RequestHandler1_put..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (743 samples, 10.31%)</title><rect x="646.8" y="899.0" width="121.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="649.8" y="910.0">one/nio/http/Ht..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.07%)</title><rect x="647.2" y="883.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="650.2" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.07%)</title><rect x="647.2" y="867.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.2" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.07%)</title><rect x="647.2" y="851.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="650.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (723 samples, 10.03%)</title><rect x="648.0" y="883.0" width="118.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="651.0" y="894.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (20 samples, 0.28%)</title><rect x="648.8" y="867.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="651.8" y="878.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.08%)</title><rect x="651.1" y="851.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.1" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.08%)</title><rect x="651.1" y="835.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="654.1" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.08%)</title><rect x="651.1" y="819.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="654.1" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.08%)</title><rect x="651.1" y="803.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="654.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.08%)</title><rect x="651.1" y="787.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.1" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (698 samples, 9.69%)</title><rect x="652.1" y="867.0" width="114.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="655.1" y="878.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/Session.write (698 samples, 9.69%)</title><rect x="652.1" y="851.0" width="114.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="655.1" y="862.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (696 samples, 9.66%)</title><rect x="652.4" y="835.0" width="114.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="655.4" y="846.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (695 samples, 9.64%)</title><rect x="652.6" y="819.0" width="113.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="655.6" y="830.0">one/nio/net/Na..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (20 samples, 0.28%)</title><rect x="653.9" y="803.0" width="3.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="656.9" y="814.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.04%)</title><rect x="655.0" y="787.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="658.0" y="798.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="655.5" y="787.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="658.5" y="798.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.10%)</title><rect x="655.8" y="787.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="658.8" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.04%)</title><rect x="656.2" y="771.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="659.2" y="782.0"></text>
</g>
<g>
<title>__send (664 samples, 9.21%)</title><rect x="657.6" y="803.0" width="108.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="660.6" y="814.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (639 samples, 8.87%)</title><rect x="661.7" y="787.0" width="104.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="664.7" y="798.0">entry_SYSCAL..</text>
</g>
<g>
<title>__x64_sys_sendto (3 samples, 0.04%)</title><rect x="661.7" y="771.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="664.7" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (636 samples, 8.83%)</title><rect x="662.2" y="771.0" width="104.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="665.2" y="782.0">do_syscall_64</text>
</g>
<g>
<title>__sys_sendto (2 samples, 0.03%)</title><rect x="664.5" y="755.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="667.5" y="766.0"></text>
</g>
<g>
<title>__x64_sys_sendto (620 samples, 8.60%)</title><rect x="664.8" y="755.0" width="101.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="667.8" y="766.0">__x64_sys_se..</text>
</g>
<g>
<title>__sys_sendto (617 samples, 8.56%)</title><rect x="664.8" y="739.0" width="101.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="667.8" y="750.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="665.8" y="723.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="668.8" y="734.0"></text>
</g>
<g>
<title>sock_sendmsg (607 samples, 8.42%)</title><rect x="666.2" y="723.0" width="99.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="669.2" y="734.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.03%)</title><rect x="666.3" y="707.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="669.3" y="718.0"></text>
</g>
<g>
<title>inet6_sendmsg (599 samples, 8.31%)</title><rect x="666.6" y="707.0" width="98.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="669.6" y="718.0">inet6_sendmsg</text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="666.8" y="691.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="669.8" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg (595 samples, 8.26%)</title><rect x="667.1" y="691.0" width="97.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="670.1" y="702.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="667.3" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="670.3" y="686.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.03%)</title><rect x="668.0" y="675.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="671.0" y="686.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.03%)</title><rect x="668.3" y="675.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="671.3" y="686.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (585 samples, 8.12%)</title><rect x="668.6" y="675.0" width="95.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="671.6" y="686.0">tcp_sendmsg..</text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.06%)</title><rect x="671.7" y="659.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="674.7" y="670.0"></text>
</g>
<g>
<title>sk_page_frag_refill (4 samples, 0.06%)</title><rect x="672.5" y="659.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="675.5" y="670.0"></text>
</g>
<g>
<title>skb_page_frag_refill (3 samples, 0.04%)</title><rect x="672.7" y="643.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="675.7" y="654.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (46 samples, 0.64%)</title><rect x="673.2" y="659.0" width="7.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="676.2" y="670.0"></text>
</g>
<g>
<title>__alloc_skb (40 samples, 0.56%)</title><rect x="673.9" y="643.0" width="6.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="676.9" y="654.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (16 samples, 0.22%)</title><rect x="675.0" y="627.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="678.0" y="638.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (12 samples, 0.17%)</title><rect x="675.0" y="611.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="678.0" y="622.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.04%)</title><rect x="676.3" y="595.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="679.3" y="606.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (8 samples, 0.11%)</title><rect x="677.6" y="627.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="680.6" y="638.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.06%)</title><rect x="678.9" y="627.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="681.9" y="638.0"></text>
</g>
<g>
<title>__ksize (4 samples, 0.06%)</title><rect x="678.9" y="611.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="681.9" y="622.0"></text>
</g>
<g>
<title>memset_erms (2 samples, 0.03%)</title><rect x="679.7" y="627.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="682.7" y="638.0"></text>
</g>
<g>
<title>should_failslab (2 samples, 0.03%)</title><rect x="680.1" y="627.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="683.1" y="638.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.03%)</title><rect x="680.7" y="659.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="683.7" y="670.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.03%)</title><rect x="681.1" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="684.1" y="670.0"></text>
</g>
<g>
<title>tcp_push (504 samples, 6.99%)</title><rect x="681.4" y="659.0" width="82.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="684.4" y="670.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (503 samples, 6.98%)</title><rect x="681.5" y="643.0" width="82.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="684.5" y="654.0">__tcp_pus..</text>
</g>
<g>
<title>tcp_write_xmit (498 samples, 6.91%)</title><rect x="682.4" y="627.0" width="81.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="685.4" y="638.0">tcp_write..</text>
</g>
<g>
<title>__tcp_transmit_skb (462 samples, 6.41%)</title><rect x="683.2" y="611.0" width="75.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="686.2" y="622.0">__tcp_tr..</text>
</g>
<g>
<title>__tcp_v4_send_check (3 samples, 0.04%)</title><rect x="685.8" y="595.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="688.8" y="606.0"></text>
</g>
<g>
<title>ip_queue_xmit (438 samples, 6.08%)</title><rect x="686.3" y="595.0" width="71.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="689.3" y="606.0">ip_queue..</text>
</g>
<g>
<title>__ip_queue_xmit (435 samples, 6.04%)</title><rect x="686.3" y="579.0" width="71.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="689.3" y="590.0">__ip_que..</text>
</g>
<g>
<title>ip_local_out (424 samples, 5.88%)</title><rect x="687.3" y="563.0" width="69.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="690.3" y="574.0">ip_loca..</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.04%)</title><rect x="687.8" y="547.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="690.8" y="558.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.03%)</title><rect x="687.9" y="531.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="690.9" y="542.0"></text>
</g>
<g>
<title>ip_output (417 samples, 5.79%)</title><rect x="688.3" y="547.0" width="68.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="691.3" y="558.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (414 samples, 5.75%)</title><rect x="688.8" y="531.0" width="67.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="691.8" y="542.0">ip_fini..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.04%)</title><rect x="689.7" y="515.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="692.7" y="526.0"></text>
</g>
<g>
<title>__ip_finish_output (402 samples, 5.58%)</title><rect x="690.2" y="515.0" width="65.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="693.2" y="526.0">__ip_fi..</text>
</g>
<g>
<title>ip_finish_output2 (395 samples, 5.48%)</title><rect x="691.2" y="499.0" width="64.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="694.2" y="510.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (342 samples, 4.75%)</title><rect x="693.2" y="483.0" width="56.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="696.2" y="494.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.0 (337 samples, 4.68%)</title><rect x="694.0" y="467.0" width="55.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="697.0" y="478.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (333 samples, 4.62%)</title><rect x="694.6" y="451.0" width="54.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="697.6" y="462.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (331 samples, 4.59%)</title><rect x="694.6" y="435.0" width="54.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="697.6" y="446.0">__sof..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.03%)</title><rect x="696.5" y="419.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="699.5" y="430.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="696.8" y="419.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="699.8" y="430.0"></text>
</g>
<g>
<title>net_rx_action (315 samples, 4.37%)</title><rect x="697.3" y="419.0" width="51.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="700.3" y="430.0">net_r..</text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="698.1" y="403.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="701.1" y="414.0"></text>
</g>
<g>
<title>process_backlog (308 samples, 4.27%)</title><rect x="698.4" y="403.0" width="50.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="701.4" y="414.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (302 samples, 4.19%)</title><rect x="699.4" y="387.0" width="49.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="702.4" y="398.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (299 samples, 4.15%)</title><rect x="699.6" y="371.0" width="48.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="702.6" y="382.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (13 samples, 0.18%)</title><rect x="699.6" y="355.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="702.6" y="366.0"></text>
</g>
<g>
<title>ip_rcv (285 samples, 3.96%)</title><rect x="701.7" y="355.0" width="46.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="704.7" y="366.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (6 samples, 0.08%)</title><rect x="702.3" y="339.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="705.3" y="350.0"></text>
</g>
<g>
<title>ip_rcv_finish (274 samples, 3.80%)</title><rect x="703.3" y="339.0" width="44.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="706.3" y="350.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (271 samples, 3.76%)</title><rect x="703.7" y="323.0" width="44.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="706.7" y="334.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (270 samples, 3.75%)</title><rect x="703.8" y="307.0" width="44.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="706.8" y="318.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (267 samples, 3.71%)</title><rect x="703.8" y="291.0" width="43.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="706.8" y="302.0">ip_p..</text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.03%)</title><rect x="704.6" y="275.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="707.6" y="286.0"></text>
</g>
<g>
<title>tcp_v4_rcv (260 samples, 3.61%)</title><rect x="705.0" y="275.0" width="42.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="708.0" y="286.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (11 samples, 0.15%)</title><rect x="706.3" y="259.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="709.3" y="270.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (8 samples, 0.11%)</title><rect x="708.2" y="259.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="711.2" y="270.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (5 samples, 0.07%)</title><rect x="708.7" y="243.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="711.7" y="254.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (228 samples, 3.16%)</title><rect x="709.6" y="259.0" width="37.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="712.6" y="270.0">tcp..</text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="709.9" y="243.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="712.9" y="254.0"></text>
</g>
<g>
<title>tcp_check_space (5 samples, 0.07%)</title><rect x="710.2" y="243.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="713.2" y="254.0"></text>
</g>
<g>
<title>tcp_rcv_established (218 samples, 3.03%)</title><rect x="711.2" y="243.0" width="35.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="714.2" y="254.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (18 samples, 0.25%)</title><rect x="712.7" y="227.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="715.7" y="238.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="713.0" y="211.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="716.0" y="222.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (14 samples, 0.19%)</title><rect x="713.3" y="211.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="716.3" y="222.0"></text>
</g>
<g>
<title>sk_reset_timer (14 samples, 0.19%)</title><rect x="713.3" y="195.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="716.3" y="206.0"></text>
</g>
<g>
<title>mod_timer (13 samples, 0.18%)</title><rect x="713.5" y="179.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="716.5" y="190.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.14%)</title><rect x="713.5" y="163.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="716.5" y="174.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.03%)</title><rect x="715.3" y="163.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="718.3" y="174.0"></text>
</g>
<g>
<title>tcp_ack (81 samples, 1.12%)</title><rect x="715.8" y="227.0" width="13.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="718.8" y="238.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.03%)</title><rect x="719.2" y="211.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="722.2" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (42 samples, 0.58%)</title><rect x="720.2" y="211.0" width="6.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="723.2" y="222.0"></text>
</g>
<g>
<title>__kfree_skb (18 samples, 0.25%)</title><rect x="721.8" y="195.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="724.8" y="206.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.04%)</title><rect x="721.8" y="179.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="724.8" y="190.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="722.0" y="163.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="725.0" y="174.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="722.3" y="179.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="725.3" y="190.0"></text>
</g>
<g>
<title>skb_release_all (12 samples, 0.17%)</title><rect x="722.7" y="179.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="725.7" y="190.0"></text>
</g>
<g>
<title>skb_release_data (12 samples, 0.17%)</title><rect x="722.7" y="163.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="725.7" y="174.0"></text>
</g>
<g>
<title>skb_free_head (8 samples, 0.11%)</title><rect x="723.3" y="147.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="726.3" y="158.0"></text>
</g>
<g>
<title>kfree (8 samples, 0.11%)</title><rect x="723.3" y="131.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="726.3" y="142.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.06%)</title><rect x="724.0" y="115.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="727.0" y="126.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.03%)</title><rect x="724.9" y="195.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="727.9" y="206.0"></text>
</g>
<g>
<title>jiffies_to_usecs (3 samples, 0.04%)</title><rect x="725.3" y="195.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="728.3" y="206.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="725.8" y="195.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="728.8" y="206.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (4 samples, 0.06%)</title><rect x="726.3" y="195.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="729.3" y="206.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.03%)</title><rect x="727.1" y="211.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="730.1" y="222.0"></text>
</g>
<g>
<title>tcp_rack_advance (2 samples, 0.03%)</title><rect x="727.4" y="211.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="730.4" y="222.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.03%)</title><rect x="727.7" y="211.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="730.7" y="222.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="728.2" y="211.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="731.2" y="222.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="728.5" y="211.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="731.5" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.03%)</title><rect x="729.0" y="227.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="732.0" y="238.0"></text>
</g>
<g>
<title>tcp_data_ready (91 samples, 1.26%)</title><rect x="729.4" y="227.0" width="14.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="732.4" y="238.0"></text>
</g>
<g>
<title>sock_def_readable (91 samples, 1.26%)</title><rect x="729.4" y="211.0" width="14.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="732.4" y="222.0"></text>
</g>
<g>
<title>__wake_up_sync_key (91 samples, 1.26%)</title><rect x="729.4" y="195.0" width="14.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="732.4" y="206.0"></text>
</g>
<g>
<title>__wake_up_common_lock (91 samples, 1.26%)</title><rect x="729.4" y="179.0" width="14.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="732.4" y="190.0"></text>
</g>
<g>
<title>__lock_text_start (90 samples, 1.25%)</title><rect x="729.5" y="163.0" width="14.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="732.5" y="174.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="744.3" y="227.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="747.3" y="238.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (7 samples, 0.10%)</title><rect x="744.6" y="227.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="747.6" y="238.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.04%)</title><rect x="745.2" y="211.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="748.2" y="222.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.04%)</title><rect x="745.9" y="227.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="748.9" y="238.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.03%)</title><rect x="746.9" y="259.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="749.9" y="270.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (2 samples, 0.03%)</title><rect x="747.2" y="259.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="750.2" y="270.0"></text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.04%)</title><rect x="747.5" y="291.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="750.5" y="302.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.03%)</title><rect x="748.5" y="371.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="751.5" y="382.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.03%)</title><rect x="748.9" y="435.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="751.9" y="446.0"></text>
</g>
<g>
<title>dev_queue_xmit (41 samples, 0.57%)</title><rect x="749.2" y="483.0" width="6.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="752.2" y="494.0"></text>
</g>
<g>
<title>__dev_queue_xmit (39 samples, 0.54%)</title><rect x="749.2" y="467.0" width="6.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="752.2" y="478.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (22 samples, 0.31%)</title><rect x="750.0" y="451.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="753.0" y="462.0"></text>
</g>
<g>
<title>loopback_xmit (18 samples, 0.25%)</title><rect x="750.3" y="435.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="753.3" y="446.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="751.0" y="419.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="754.0" y="430.0"></text>
</g>
<g>
<title>netif_rx (5 samples, 0.07%)</title><rect x="751.3" y="419.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="754.3" y="430.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.03%)</title><rect x="751.3" y="403.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="754.3" y="414.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.04%)</title><rect x="751.6" y="403.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="754.6" y="414.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.04%)</title><rect x="751.6" y="387.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="754.6" y="398.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.03%)</title><rect x="752.1" y="419.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="755.1" y="430.0"></text>
</g>
<g>
<title>sk_free (5 samples, 0.07%)</title><rect x="752.5" y="419.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="755.5" y="430.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.03%)</title><rect x="753.3" y="435.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="756.3" y="446.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.03%)</title><rect x="753.6" y="451.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="756.6" y="462.0"></text>
</g>
<g>
<title>validate_xmit_skb (7 samples, 0.10%)</title><rect x="754.1" y="451.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="757.1" y="462.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="754.4" y="435.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="757.4" y="446.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (3 samples, 0.04%)</title><rect x="754.7" y="435.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="757.7" y="446.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.03%)</title><rect x="755.2" y="451.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="758.2" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="755.6" y="467.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="758.6" y="478.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="756.2" y="515.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="759.2" y="526.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.04%)</title><rect x="756.9" y="563.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="759.9" y="574.0"></text>
</g>
<g>
<title>ip_copy_addrs (3 samples, 0.04%)</title><rect x="757.5" y="579.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="760.5" y="590.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.04%)</title><rect x="758.0" y="595.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="761.0" y="606.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="758.0" y="579.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="761.0" y="590.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.03%)</title><rect x="759.0" y="611.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="762.0" y="622.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.03%)</title><rect x="759.3" y="611.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="762.3" y="622.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.04%)</title><rect x="759.7" y="611.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="762.7" y="622.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (15 samples, 0.21%)</title><rect x="760.3" y="611.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="763.3" y="622.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.03%)</title><rect x="760.6" y="595.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="763.6" y="606.0"></text>
</g>
<g>
<title>tcp_rearm_rto (11 samples, 0.15%)</title><rect x="761.0" y="595.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="764.0" y="606.0"></text>
</g>
<g>
<title>sk_reset_timer (11 samples, 0.15%)</title><rect x="761.0" y="579.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="764.0" y="590.0"></text>
</g>
<g>
<title>mod_timer (9 samples, 0.12%)</title><rect x="761.3" y="563.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="764.3" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.08%)</title><rect x="761.8" y="547.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="764.8" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="762.9" y="611.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="765.9" y="622.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="763.3" y="611.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="766.3" y="622.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.04%)</title><rect x="763.9" y="659.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="766.9" y="670.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.03%)</title><rect x="764.1" y="643.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="767.1" y="654.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.06%)</title><rect x="764.7" y="707.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="767.7" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.06%)</title><rect x="764.7" y="691.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="767.7" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.06%)</title><rect x="764.7" y="675.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="767.7" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="765.6" y="723.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="768.6" y="734.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="765.6" y="707.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="768.6" y="718.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="765.6" y="691.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="768.6" y="702.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="765.6" y="675.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="768.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (13 samples, 0.18%)</title><rect x="766.4" y="883.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.4" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.10%)</title><rect x="767.4" y="867.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="770.4" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.10%)</title><rect x="767.4" y="851.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="770.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (16 samples, 0.22%)</title><rect x="768.5" y="899.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="771.5" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (16 samples, 0.22%)</title><rect x="768.5" y="883.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="771.5" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="769.8" y="867.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="772.8" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.04%)</title><rect x="769.8" y="851.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="772.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="770.3" y="867.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="773.3" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="770.3" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="773.3" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="770.6" y="867.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="773.6" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.put (146 samples, 2.03%)</title><rect x="771.3" y="899.0" width="23.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="774.3" y="910.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.03%)</title><rect x="771.3" y="883.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="774.3" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (23 samples, 0.32%)</title><rect x="771.8" y="883.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="774.8" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (23 samples, 0.32%)</title><rect x="771.8" y="867.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="774.8" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (23 samples, 0.32%)</title><rect x="771.8" y="851.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="774.8" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (23 samples, 0.32%)</title><rect x="771.8" y="835.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="774.8" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (11 samples, 0.15%)</title><rect x="771.9" y="819.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="774.9" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="772.8" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="775.8" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.06%)</title><rect x="773.1" y="803.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="776.1" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.06%)</title><rect x="773.1" y="787.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="776.1" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.06%)</title><rect x="773.1" y="771.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="776.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.04%)</title><rect x="773.3" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="776.3" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (11 samples, 0.15%)</title><rect x="773.7" y="819.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.7" y="830.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="774.4" y="803.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="777.4" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.06%)</title><rect x="774.7" y="803.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="777.7" y="814.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="774.9" y="787.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="777.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.08%)</title><rect x="775.5" y="883.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="778.5" y="894.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="776.2" y="867.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="779.2" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.upsert (114 samples, 1.58%)</title><rect x="776.5" y="883.0" width="18.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="779.5" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="776.5" y="867.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="779.5" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="776.5" y="851.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="779.5" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="776.5" y="835.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="779.5" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="776.5" y="819.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="779.5" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="776.5" y="803.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="779.5" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="776.5" y="787.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="779.5" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="776.5" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="779.5" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.03%)</title><rect x="776.5" y="755.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="779.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.upsert (112 samples, 1.55%)</title><rect x="776.9" y="867.0" width="18.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="779.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (7 samples, 0.10%)</title><rect x="777.0" y="851.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="780.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (6 samples, 0.08%)</title><rect x="777.2" y="835.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="780.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.06%)</title><rect x="777.5" y="819.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="780.5" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="777.7" y="803.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="780.7" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.03%)</title><rect x="777.7" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="780.7" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.03%)</title><rect x="777.7" y="771.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="780.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (7 samples, 0.10%)</title><rect x="778.2" y="851.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="781.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (7 samples, 0.10%)</title><rect x="778.2" y="835.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="781.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (7 samples, 0.10%)</title><rect x="778.2" y="819.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="781.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.10%)</title><rect x="778.2" y="803.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="781.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.10%)</title><rect x="778.2" y="787.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="781.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.10%)</title><rect x="778.2" y="771.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="781.2" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.08%)</title><rect x="778.3" y="755.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="781.3" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.07%)</title><rect x="778.5" y="739.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="781.5" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.07%)</title><rect x="778.5" y="723.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="781.5" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.07%)</title><rect x="778.5" y="707.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="781.5" y="718.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.07%)</title><rect x="778.5" y="691.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="781.5" y="702.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.07%)</title><rect x="778.5" y="675.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="781.5" y="686.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.04%)</title><rect x="778.8" y="659.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="781.8" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.04%)</title><rect x="778.8" y="643.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="781.8" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.04%)</title><rect x="778.8" y="627.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="781.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.upsert (87 samples, 1.21%)</title><rect x="779.3" y="851.0" width="14.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (87 samples, 1.21%)</title><rect x="779.3" y="835.0" width="14.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="782.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (85 samples, 1.18%)</title><rect x="779.5" y="819.0" width="13.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="782.5" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (8 samples, 0.11%)</title><rect x="781.1" y="803.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="784.1" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (8 samples, 0.11%)</title><rect x="781.1" y="787.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="784.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (21 samples, 0.29%)</title><rect x="782.4" y="803.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="785.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (41 samples, 0.57%)</title><rect x="786.0" y="803.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="789.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (37 samples, 0.51%)</title><rect x="786.7" y="787.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="789.7" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (32 samples, 0.44%)</title><rect x="787.5" y="771.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="790.5" y="782.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (30 samples, 0.42%)</title><rect x="787.8" y="755.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="790.8" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (27 samples, 0.37%)</title><rect x="788.3" y="739.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="791.3" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (27 samples, 0.37%)</title><rect x="788.3" y="723.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="791.3" y="734.0"></text>
</g>
<g>
<title>vectorizedMismatch (13 samples, 0.18%)</title><rect x="790.6" y="707.0" width="2.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="793.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (4 samples, 0.06%)</title><rect x="792.7" y="803.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="795.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.putIntoFlushQueue (10 samples, 0.14%)</title><rect x="793.6" y="851.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="796.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (7 samples, 0.10%)</title><rect x="793.7" y="835.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="796.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.10%)</title><rect x="793.7" y="819.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="796.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (7 samples, 0.10%)</title><rect x="793.7" y="803.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="796.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (7 samples, 0.10%)</title><rect x="793.7" y="787.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="796.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.10%)</title><rect x="793.7" y="771.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="796.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.10%)</title><rect x="793.7" y="755.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="796.7" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.04%)</title><rect x="793.9" y="739.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="796.9" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="794.0" y="723.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="797.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="794.4" y="739.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="797.4" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.04%)</title><rect x="794.4" y="723.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="797.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="795.2" y="915.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="798.2" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (5 samples, 0.07%)</title><rect x="795.5" y="915.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="798.5" y="926.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 0.08%)</title><rect x="796.3" y="915.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="799.3" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.08%)</title><rect x="796.3" y="899.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="799.3" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="796.3" y="883.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="799.3" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.06%)</title><rect x="796.7" y="883.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="799.7" y="894.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.06%)</title><rect x="796.7" y="867.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="799.7" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.06%)</title><rect x="796.7" y="851.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="799.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (9 samples, 0.12%)</title><rect x="797.3" y="915.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="800.3" y="926.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.12%)</title><rect x="797.3" y="899.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="800.3" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.12%)</title><rect x="797.3" y="883.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="800.3" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (77 samples, 1.07%)</title><rect x="798.8" y="947.0" width="12.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="801.8" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (14 samples, 0.19%)</title><rect x="807.6" y="931.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="810.6" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (14 samples, 0.19%)</title><rect x="807.6" y="915.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="810.6" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (14 samples, 0.19%)</title><rect x="807.6" y="899.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="810.6" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (14 samples, 0.19%)</title><rect x="807.6" y="883.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="810.6" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (8 samples, 0.11%)</title><rect x="810.1" y="931.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="813.1" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.11%)</title><rect x="811.4" y="947.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="814.4" y="958.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.10%)</title><rect x="811.6" y="931.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="814.6" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.10%)</title><rect x="811.6" y="915.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="814.6" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="812.7" y="947.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="815.7" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.03%)</title><rect x="812.7" y="931.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="815.7" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (271 samples, 3.76%)</title><rect x="813.2" y="963.0" width="44.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="816.2" y="974.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (269 samples, 3.73%)</title><rect x="813.5" y="947.0" width="44.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.5" y="958.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (45 samples, 0.62%)</title><rect x="814.7" y="931.0" width="7.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="817.7" y="942.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.04%)</title><rect x="815.2" y="915.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="818.2" y="926.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (6 samples, 0.08%)</title><rect x="815.7" y="915.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="818.7" y="926.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.04%)</title><rect x="817.0" y="915.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="820.0" y="926.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (24 samples, 0.33%)</title><rect x="817.6" y="915.0" width="4.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="820.6" y="926.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="818.8" y="899.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="821.8" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (7 samples, 0.10%)</title><rect x="819.3" y="899.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="822.3" y="910.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (7 samples, 0.10%)</title><rect x="820.4" y="899.0" width="1.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="823.4" y="910.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.06%)</title><rect x="820.9" y="883.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="823.9" y="894.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.04%)</title><rect x="821.6" y="915.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="824.6" y="926.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="822.0" y="931.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="825.0" y="942.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.07%)</title><rect x="822.4" y="931.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="825.4" y="942.0"></text>
</g>
<g>
<title>recv (210 samples, 2.91%)</title><rect x="823.2" y="931.0" width="34.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="826.2" y="942.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (181 samples, 2.51%)</title><rect x="827.9" y="915.0" width="29.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="830.9" y="926.0">en..</text>
</g>
<g>
<title>__x64_sys_recvfrom (5 samples, 0.07%)</title><rect x="827.9" y="899.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="830.9" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (176 samples, 2.44%)</title><rect x="828.8" y="899.0" width="28.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="831.8" y="910.0">do..</text>
</g>
<g>
<title>__sys_recvfrom (2 samples, 0.03%)</title><rect x="831.9" y="883.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="834.9" y="894.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (155 samples, 2.15%)</title><rect x="832.2" y="883.0" width="25.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="835.2" y="894.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (151 samples, 2.10%)</title><rect x="832.2" y="867.0" width="24.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="835.2" y="878.0">_..</text>
</g>
<g>
<title>sock_recvmsg (131 samples, 1.82%)</title><rect x="833.2" y="851.0" width="21.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="836.2" y="862.0">s..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.03%)</title><rect x="833.7" y="835.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="836.7" y="846.0"></text>
</g>
<g>
<title>inet6_recvmsg (105 samples, 1.46%)</title><rect x="834.0" y="835.0" width="17.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="837.0" y="846.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.04%)</title><rect x="834.5" y="819.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="837.5" y="830.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.03%)</title><rect x="835.3" y="819.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="838.3" y="830.0"></text>
</g>
<g>
<title>tcp_recvmsg (95 samples, 1.32%)</title><rect x="835.6" y="819.0" width="15.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="838.6" y="830.0"></text>
</g>
<g>
<title>__kfree_skb (17 samples, 0.24%)</title><rect x="838.9" y="803.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="841.9" y="814.0"></text>
</g>
<g>
<title>skb_release_all (14 samples, 0.19%)</title><rect x="839.1" y="787.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="842.1" y="798.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.03%)</title><rect x="839.1" y="771.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="842.1" y="782.0"></text>
</g>
<g>
<title>skb_release_head_state (6 samples, 0.08%)</title><rect x="839.4" y="771.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="842.4" y="782.0"></text>
</g>
<g>
<title>dst_release (6 samples, 0.08%)</title><rect x="839.4" y="755.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="842.4" y="766.0"></text>
</g>
<g>
<title>sock_rfree (6 samples, 0.08%)</title><rect x="840.4" y="771.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="843.4" y="782.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="841.7" y="803.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="844.7" y="814.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="842.4" y="803.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="845.4" y="814.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="842.7" y="803.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="845.7" y="814.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (35 samples, 0.49%)</title><rect x="843.2" y="803.0" width="5.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="846.2" y="814.0"></text>
</g>
<g>
<title>__skb_datagram_iter (33 samples, 0.46%)</title><rect x="843.5" y="787.0" width="5.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="846.5" y="798.0"></text>
</g>
<g>
<title>simple_copy_to_iter (19 samples, 0.26%)</title><rect x="845.8" y="771.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="848.8" y="782.0"></text>
</g>
<g>
<title>__check_object_size (9 samples, 0.12%)</title><rect x="846.0" y="755.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="849.0" y="766.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.08%)</title><rect x="846.4" y="739.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="849.4" y="750.0"></text>
</g>
<g>
<title>_copy_to_iter (6 samples, 0.08%)</title><rect x="847.4" y="755.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="850.4" y="766.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.06%)</title><rect x="847.6" y="739.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="850.6" y="750.0"></text>
</g>
<g>
<title>check_stack_object (3 samples, 0.04%)</title><rect x="848.4" y="755.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="851.4" y="766.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.06%)</title><rect x="848.9" y="803.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="851.9" y="814.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (6 samples, 0.08%)</title><rect x="849.7" y="803.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="852.7" y="814.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.06%)</title><rect x="850.0" y="787.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="853.0" y="798.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="850.0" y="771.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="853.0" y="782.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="850.4" y="771.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="853.4" y="782.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.04%)</title><rect x="850.7" y="803.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="853.7" y="814.0"></text>
</g>
<g>
<title>security_socket_recvmsg (21 samples, 0.29%)</title><rect x="851.2" y="835.0" width="3.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="854.2" y="846.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (15 samples, 0.21%)</title><rect x="852.2" y="819.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="855.2" y="830.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="852.2" y="803.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="855.2" y="814.0"></text>
</g>
<g>
<title>aa_sk_perm (13 samples, 0.18%)</title><rect x="852.5" y="803.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="855.5" y="814.0"></text>
</g>
<g>
<title>sockfd_lookup_light (14 samples, 0.19%)</title><rect x="854.6" y="851.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="857.6" y="862.0"></text>
</g>
<g>
<title>__fdget (8 samples, 0.11%)</title><rect x="855.0" y="835.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="858.0" y="846.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.11%)</title><rect x="855.0" y="819.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="858.0" y="830.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.11%)</title><rect x="855.0" y="803.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="858.0" y="814.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.06%)</title><rect x="856.3" y="835.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="859.3" y="846.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.04%)</title><rect x="856.9" y="867.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="859.9" y="878.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=65452] (1,671 samples, 23.19%)</title><rect x="857.7" y="1027.0" width="273.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="860.7" y="1038.0">[NIO Selector #3 tid=65452]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,671 samples, 23.19%)</title><rect x="857.7" y="1011.0" width="273.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="860.7" y="1022.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3 samples, 0.04%)</title><rect x="858.4" y="995.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="861.4" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (202 samples, 2.80%)</title><rect x="858.9" y="995.0" width="33.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="861.9" y="1006.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (202 samples, 2.80%)</title><rect x="858.9" y="979.0" width="33.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="861.9" y="990.0">on..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.03%)</title><rect x="859.7" y="963.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="862.7" y="974.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (5 samples, 0.07%)</title><rect x="860.0" y="963.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="863.0" y="974.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.10%)</title><rect x="860.9" y="963.0" width="1.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="863.9" y="974.0"></text>
</g>
<g>
<title>epoll_wait (183 samples, 2.54%)</title><rect x="862.0" y="963.0" width="30.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="865.0" y="974.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (143 samples, 1.98%)</title><rect x="868.6" y="947.0" width="23.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="871.6" y="958.0">e..</text>
</g>
<g>
<title>do_syscall_64 (141 samples, 1.96%)</title><rect x="868.9" y="931.0" width="23.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="871.9" y="942.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (130 samples, 1.80%)</title><rect x="870.7" y="915.0" width="21.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="873.7" y="926.0">_..</text>
</g>
<g>
<title>do_epoll_wait (130 samples, 1.80%)</title><rect x="870.7" y="899.0" width="21.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="873.7" y="910.0">d..</text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="871.3" y="883.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="874.3" y="894.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="871.3" y="867.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="874.3" y="878.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="871.3" y="851.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="874.3" y="862.0"></text>
</g>
<g>
<title>ep_poll (119 samples, 1.65%)</title><rect x="871.8" y="883.0" width="19.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="874.8" y="894.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (45 samples, 0.62%)</title><rect x="874.1" y="867.0" width="7.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="877.1" y="878.0"></text>
</g>
<g>
<title>ep_send_events_proc (30 samples, 0.42%)</title><rect x="875.6" y="851.0" width="4.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="878.6" y="862.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (22 samples, 0.31%)</title><rect x="876.1" y="835.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="879.1" y="846.0"></text>
</g>
<g>
<title>sock_poll (16 samples, 0.22%)</title><rect x="877.1" y="819.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="880.1" y="830.0"></text>
</g>
<g>
<title>tcp_poll (5 samples, 0.07%)</title><rect x="878.2" y="803.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="881.2" y="814.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.06%)</title><rect x="879.0" y="803.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="882.0" y="814.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.07%)</title><rect x="879.7" y="835.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="882.7" y="846.0"></text>
</g>
<g>
<title>mutex_lock (6 samples, 0.08%)</title><rect x="880.5" y="851.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="883.5" y="862.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="881.2" y="835.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="884.2" y="846.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.03%)</title><rect x="881.5" y="867.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="884.5" y="878.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.04%)</title><rect x="881.8" y="867.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="884.8" y="878.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="882.3" y="867.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="885.3" y="878.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (52 samples, 0.72%)</title><rect x="882.6" y="867.0" width="8.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="885.6" y="878.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (49 samples, 0.68%)</title><rect x="883.1" y="851.0" width="8.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="886.1" y="862.0"></text>
</g>
<g>
<title>schedule (44 samples, 0.61%)</title><rect x="883.9" y="835.0" width="7.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="886.9" y="846.0"></text>
</g>
<g>
<title>__schedule (41 samples, 0.57%)</title><rect x="884.4" y="819.0" width="6.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="887.4" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (37 samples, 0.51%)</title><rect x="885.1" y="803.0" width="6.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="888.1" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (2 samples, 0.03%)</title><rect x="891.3" y="883.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="894.3" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,458 samples, 20.23%)</title><rect x="892.0" y="995.0" width="238.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="895.0" y="1006.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,444 samples, 20.04%)</title><rect x="894.1" y="979.0" width="236.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="897.1" y="990.0">one/nio/http/HttpSession.proces..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,132 samples, 15.71%)</title><rect x="894.1" y="963.0" width="185.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="897.1" y="974.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (4 samples, 0.06%)</title><rect x="898.5" y="947.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="901.5" y="958.0"></text>
</g>
<g>
<title>itable stub (10 samples, 0.14%)</title><rect x="899.3" y="947.0" width="1.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="902.3" y="958.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.08%)</title><rect x="901.0" y="947.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="904.0" y="958.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.06%)</title><rect x="902.0" y="947.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="905.0" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (980 samples, 13.60%)</title><rect x="902.6" y="947.0" width="160.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="905.6" y="958.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (980 samples, 13.60%)</title><rect x="902.6" y="931.0" width="160.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="905.6" y="942.0">one/nio/http/HttpSer..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (964 samples, 13.38%)</title><rect x="903.3" y="915.0" width="157.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="906.3" y="926.0">RequestHandler1_put...</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (784 samples, 10.88%)</title><rect x="903.3" y="899.0" width="128.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="906.3" y="910.0">one/nio/http/Htt..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (16 samples, 0.22%)</title><rect x="903.4" y="883.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="906.4" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (16 samples, 0.22%)</title><rect x="903.4" y="867.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="906.4" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (16 samples, 0.22%)</title><rect x="903.4" y="851.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="906.4" y="862.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.06%)</title><rect x="904.6" y="835.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="907.6" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.07%)</title><rect x="905.2" y="835.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="908.2" y="846.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.07%)</title><rect x="905.2" y="819.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="908.2" y="830.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.07%)</title><rect x="905.2" y="803.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="908.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (750 samples, 10.41%)</title><rect x="906.1" y="883.0" width="122.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="909.1" y="894.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (20 samples, 0.28%)</title><rect x="906.4" y="867.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="909.4" y="878.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.03%)</title><rect x="909.3" y="851.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="912.3" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.03%)</title><rect x="909.3" y="835.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="912.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.03%)</title><rect x="909.3" y="819.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="912.3" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.03%)</title><rect x="909.3" y="803.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="912.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="909.3" y="787.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="912.3" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (728 samples, 10.10%)</title><rect x="909.7" y="867.0" width="119.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="912.7" y="878.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/net/Session.write (727 samples, 10.09%)</title><rect x="909.8" y="851.0" width="119.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="912.8" y="862.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (722 samples, 10.02%)</title><rect x="910.6" y="835.0" width="118.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="913.6" y="846.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (722 samples, 10.02%)</title><rect x="910.6" y="819.0" width="118.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="913.6" y="830.0">one/nio/net/Na..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (20 samples, 0.28%)</title><rect x="911.3" y="803.0" width="3.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="914.3" y="814.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.04%)</title><rect x="912.1" y="787.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="915.1" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="912.9" y="787.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="915.9" y="798.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (8 samples, 0.11%)</title><rect x="913.3" y="787.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="916.3" y="798.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="914.1" y="771.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="917.1" y="782.0"></text>
</g>
<g>
<title>__send (696 samples, 9.66%)</title><rect x="914.9" y="803.0" width="114.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="917.9" y="814.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (677 samples, 9.39%)</title><rect x="918.0" y="787.0" width="110.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="921.0" y="798.0">entry_SYSCALL..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.06%)</title><rect x="918.0" y="771.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="921.0" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (673 samples, 9.34%)</title><rect x="918.7" y="771.0" width="110.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="921.7" y="782.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (660 samples, 9.16%)</title><rect x="920.8" y="755.0" width="108.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="923.8" y="766.0">__x64_sys_sen..</text>
</g>
<g>
<title>__sys_sendto (658 samples, 9.13%)</title><rect x="920.8" y="739.0" width="107.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="923.8" y="750.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (650 samples, 9.02%)</title><rect x="921.8" y="723.0" width="106.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="924.8" y="734.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.04%)</title><rect x="922.1" y="707.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="925.1" y="718.0"></text>
</g>
<g>
<title>inet6_sendmsg (637 samples, 8.84%)</title><rect x="922.6" y="707.0" width="104.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="925.6" y="718.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (632 samples, 8.77%)</title><rect x="923.2" y="691.0" width="103.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="926.2" y="702.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="924.1" y="675.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="927.1" y="686.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="924.7" y="675.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="927.7" y="686.0"></text>
</g>
<g>
<title>sock_zerocopy_put (2 samples, 0.03%)</title><rect x="925.4" y="675.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="928.4" y="686.0"></text>
</g>
<g>
<title>tcp_push (3 samples, 0.04%)</title><rect x="925.7" y="675.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="928.7" y="686.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="926.2" y="675.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="929.2" y="686.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.03%)</title><rect x="926.5" y="675.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="929.5" y="686.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (608 samples, 8.44%)</title><rect x="926.8" y="675.0" width="99.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="929.8" y="686.0">tcp_sendmsg_..</text>
</g>
<g>
<title>__check_object_size (5 samples, 0.07%)</title><rect x="930.8" y="659.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="933.8" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.06%)</title><rect x="930.9" y="643.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="933.9" y="654.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.06%)</title><rect x="931.9" y="659.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="934.9" y="670.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="932.1" y="643.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="935.1" y="654.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (2 samples, 0.03%)</title><rect x="932.6" y="659.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="935.6" y="670.0"></text>
</g>
<g>
<title>sk_page_frag_refill (3 samples, 0.04%)</title><rect x="932.9" y="659.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="935.9" y="670.0"></text>
</g>
<g>
<title>skb_page_frag_refill (3 samples, 0.04%)</title><rect x="932.9" y="643.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="935.9" y="654.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (44 samples, 0.61%)</title><rect x="933.4" y="659.0" width="7.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="936.4" y="670.0"></text>
</g>
<g>
<title>__alloc_skb (41 samples, 0.57%)</title><rect x="933.7" y="643.0" width="6.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="936.7" y="654.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (10 samples, 0.14%)</title><rect x="934.5" y="627.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="937.5" y="638.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (8 samples, 0.11%)</title><rect x="934.5" y="611.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="937.5" y="622.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="935.2" y="595.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="938.2" y="606.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="935.5" y="595.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="938.5" y="606.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="935.9" y="611.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="938.9" y="622.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.04%)</title><rect x="936.2" y="627.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="939.2" y="638.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (13 samples, 0.18%)</title><rect x="936.8" y="627.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="939.8" y="638.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="938.6" y="611.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="941.6" y="622.0"></text>
</g>
<g>
<title>ksize (7 samples, 0.10%)</title><rect x="939.0" y="627.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="942.0" y="638.0"></text>
</g>
<g>
<title>__ksize (7 samples, 0.10%)</title><rect x="939.0" y="611.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="942.0" y="622.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.06%)</title><rect x="940.6" y="659.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="943.6" y="670.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.04%)</title><rect x="941.6" y="659.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="944.6" y="670.0"></text>
</g>
<g>
<title>tcp_push (501 samples, 6.95%)</title><rect x="942.1" y="659.0" width="82.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="945.1" y="670.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (500 samples, 6.94%)</title><rect x="942.1" y="643.0" width="81.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="945.1" y="654.0">__tcp_pus..</text>
</g>
<g>
<title>tcp_write_xmit (498 samples, 6.91%)</title><rect x="942.4" y="627.0" width="81.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="945.4" y="638.0">tcp_write..</text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="944.2" y="611.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="947.2" y="622.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (451 samples, 6.26%)</title><rect x="944.5" y="611.0" width="73.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="947.5" y="622.0">__tcp_tr..</text>
</g>
<g>
<title>__skb_clone (2 samples, 0.03%)</title><rect x="946.7" y="595.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="949.7" y="606.0"></text>
</g>
<g>
<title>ip_queue_xmit (427 samples, 5.93%)</title><rect x="947.2" y="595.0" width="69.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="950.2" y="606.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (425 samples, 5.90%)</title><rect x="947.2" y="579.0" width="69.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="950.2" y="590.0">__ip_qu..</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.04%)</title><rect x="947.6" y="563.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="950.6" y="574.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.03%)</title><rect x="948.1" y="563.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="951.1" y="574.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="948.1" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="951.1" y="558.0"></text>
</g>
<g>
<title>ip_local_out (412 samples, 5.72%)</title><rect x="948.6" y="563.0" width="67.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="951.6" y="574.0">ip_loca..</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.04%)</title><rect x="949.0" y="547.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="952.0" y="558.0"></text>
</g>
<g>
<title>ip_output (405 samples, 5.62%)</title><rect x="949.6" y="547.0" width="66.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="952.6" y="558.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (402 samples, 5.58%)</title><rect x="950.1" y="531.0" width="65.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="953.1" y="542.0">ip_fini..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.04%)</title><rect x="950.8" y="515.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="953.8" y="526.0"></text>
</g>
<g>
<title>__ip_finish_output (395 samples, 5.48%)</title><rect x="951.2" y="515.0" width="64.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="954.2" y="526.0">__ip_fi..</text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="951.7" y="499.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="954.7" y="510.0"></text>
</g>
<g>
<title>ip_finish_output2 (390 samples, 5.41%)</title><rect x="952.1" y="499.0" width="63.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="955.1" y="510.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (331 samples, 4.59%)</title><rect x="955.0" y="483.0" width="54.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="958.0" y="494.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.0 (331 samples, 4.59%)</title><rect x="955.0" y="467.0" width="54.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="958.0" y="478.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (322 samples, 4.47%)</title><rect x="956.5" y="451.0" width="52.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="959.5" y="462.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (321 samples, 4.45%)</title><rect x="956.5" y="435.0" width="52.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="959.5" y="446.0">__sof..</text>
</g>
<g>
<title>net_rx_action (311 samples, 4.32%)</title><rect x="957.8" y="419.0" width="50.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="960.8" y="430.0">net_r..</text>
</g>
<g>
<title>process_backlog (309 samples, 4.29%)</title><rect x="958.1" y="403.0" width="50.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="961.1" y="414.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (303 samples, 4.20%)</title><rect x="958.9" y="387.0" width="49.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="961.9" y="398.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (299 samples, 4.15%)</title><rect x="959.6" y="371.0" width="49.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="962.6" y="382.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (10 samples, 0.14%)</title><rect x="960.1" y="355.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="963.1" y="366.0"></text>
</g>
<g>
<title>ip_rcv (284 samples, 3.94%)</title><rect x="961.7" y="355.0" width="46.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="964.7" y="366.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (4 samples, 0.06%)</title><rect x="962.4" y="339.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="965.4" y="350.0"></text>
</g>
<g>
<title>ip_rcv_finish (274 samples, 3.80%)</title><rect x="963.0" y="339.0" width="44.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="966.0" y="350.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (270 samples, 3.75%)</title><rect x="963.2" y="323.0" width="44.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="966.2" y="334.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (269 samples, 3.73%)</title><rect x="963.2" y="307.0" width="44.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="966.2" y="318.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (267 samples, 3.71%)</title><rect x="963.4" y="291.0" width="43.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="966.4" y="302.0">ip_p..</text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="964.2" y="275.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="967.2" y="286.0"></text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.04%)</title><rect x="964.5" y="275.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="967.5" y="286.0"></text>
</g>
<g>
<title>tcp_v4_rcv (256 samples, 3.55%)</title><rect x="965.2" y="275.0" width="41.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="968.2" y="286.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (9 samples, 0.12%)</title><rect x="966.0" y="259.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="969.0" y="270.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (9 samples, 0.12%)</title><rect x="967.6" y="259.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="970.6" y="270.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (3 samples, 0.04%)</title><rect x="968.1" y="243.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="971.1" y="254.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.04%)</title><rect x="968.6" y="243.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="971.6" y="254.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (231 samples, 3.21%)</title><rect x="969.1" y="259.0" width="37.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="972.1" y="270.0">tcp..</text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="969.4" y="243.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="972.4" y="254.0"></text>
</g>
<g>
<title>ktime_get_seconds (2 samples, 0.03%)</title><rect x="969.8" y="243.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="972.8" y="254.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.04%)</title><rect x="970.1" y="243.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="973.1" y="254.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.03%)</title><rect x="970.6" y="243.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="973.6" y="254.0"></text>
</g>
<g>
<title>tcp_data_ready (3 samples, 0.04%)</title><rect x="970.9" y="243.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="973.9" y="254.0"></text>
</g>
<g>
<title>tcp_rcv_established (216 samples, 3.00%)</title><rect x="971.6" y="243.0" width="35.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="974.6" y="254.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (25 samples, 0.35%)</title><rect x="973.2" y="227.0" width="4.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="976.2" y="238.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (22 samples, 0.31%)</title><rect x="973.7" y="211.0" width="3.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="976.7" y="222.0"></text>
</g>
<g>
<title>sk_reset_timer (20 samples, 0.28%)</title><rect x="974.0" y="195.0" width="3.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="977.0" y="206.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.03%)</title><rect x="974.2" y="179.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="977.2" y="190.0"></text>
</g>
<g>
<title>mod_timer (17 samples, 0.24%)</title><rect x="974.5" y="179.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="977.5" y="190.0"></text>
</g>
<g>
<title>__lock_text_start (15 samples, 0.21%)</title><rect x="974.8" y="163.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="977.8" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.03%)</title><rect x="977.4" y="227.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="980.4" y="238.0"></text>
</g>
<g>
<title>tcp_ack (79 samples, 1.10%)</title><rect x="977.8" y="227.0" width="12.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="980.8" y="238.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.04%)</title><rect x="981.1" y="211.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="984.1" y="222.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.03%)</title><rect x="981.5" y="211.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="984.5" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (44 samples, 0.61%)</title><rect x="981.9" y="211.0" width="7.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="984.9" y="222.0"></text>
</g>
<g>
<title>__kfree_skb (27 samples, 0.37%)</title><rect x="982.7" y="195.0" width="4.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="985.7" y="206.0"></text>
</g>
<g>
<title>kfree_skbmem (9 samples, 0.12%)</title><rect x="982.7" y="179.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="985.7" y="190.0"></text>
</g>
<g>
<title>kmem_cache_free (8 samples, 0.11%)</title><rect x="982.9" y="163.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="985.9" y="174.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.06%)</title><rect x="983.5" y="147.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="986.5" y="158.0"></text>
</g>
<g>
<title>skb_release_all (18 samples, 0.25%)</title><rect x="984.2" y="179.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="987.2" y="190.0"></text>
</g>
<g>
<title>skb_release_data (15 samples, 0.21%)</title><rect x="984.3" y="163.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="987.3" y="174.0"></text>
</g>
<g>
<title>skb_free_head (9 samples, 0.12%)</title><rect x="985.3" y="147.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="988.3" y="158.0"></text>
</g>
<g>
<title>kfree (9 samples, 0.12%)</title><rect x="985.3" y="131.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="988.3" y="142.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="986.5" y="115.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="989.5" y="126.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="986.8" y="163.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="989.8" y="174.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (3 samples, 0.04%)</title><rect x="987.1" y="195.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="990.1" y="206.0"></text>
</g>
<g>
<title>jiffies_to_usecs (3 samples, 0.04%)</title><rect x="987.6" y="195.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="990.6" y="206.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (4 samples, 0.06%)</title><rect x="988.4" y="195.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="991.4" y="206.0"></text>
</g>
<g>
<title>tcp_rate_gen (3 samples, 0.04%)</title><rect x="989.1" y="211.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="992.1" y="222.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="989.6" y="211.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="992.6" y="222.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.04%)</title><rect x="989.9" y="211.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="992.9" y="222.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.03%)</title><rect x="990.4" y="211.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="993.4" y="222.0"></text>
</g>
<g>
<title>tcp_data_ready (88 samples, 1.22%)</title><rect x="990.9" y="227.0" width="14.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="993.9" y="238.0"></text>
</g>
<g>
<title>sock_def_readable (88 samples, 1.22%)</title><rect x="990.9" y="211.0" width="14.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="993.9" y="222.0"></text>
</g>
<g>
<title>__wake_up_sync_key (84 samples, 1.17%)</title><rect x="991.5" y="195.0" width="13.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="994.5" y="206.0"></text>
</g>
<g>
<title>__wake_up_common_lock (83 samples, 1.15%)</title><rect x="991.5" y="179.0" width="13.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="994.5" y="190.0"></text>
</g>
<g>
<title>__lock_text_start (83 samples, 1.15%)</title><rect x="991.5" y="163.0" width="13.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="994.5" y="174.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.04%)</title><rect x="1005.3" y="227.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1008.3" y="238.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.03%)</title><rect x="1005.9" y="227.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1008.9" y="238.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="1006.6" y="227.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1009.6" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (2 samples, 0.03%)</title><rect x="1007.6" y="323.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1010.6" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (2 samples, 0.03%)</title><rect x="1007.9" y="339.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1010.9" y="350.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.03%)</title><rect x="1008.7" y="419.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1011.7" y="430.0"></text>
</g>
<g>
<title>dev_queue_xmit (40 samples, 0.56%)</title><rect x="1009.2" y="483.0" width="6.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1012.2" y="494.0"></text>
</g>
<g>
<title>__dev_queue_xmit (38 samples, 0.53%)</title><rect x="1009.2" y="467.0" width="6.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1012.2" y="478.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (15 samples, 0.21%)</title><rect x="1010.5" y="451.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1013.5" y="462.0"></text>
</g>
<g>
<title>loopback_xmit (14 samples, 0.19%)</title><rect x="1010.5" y="435.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1013.5" y="446.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.06%)</title><rect x="1010.9" y="419.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1013.9" y="430.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.06%)</title><rect x="1011.5" y="419.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1014.5" y="430.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.04%)</title><rect x="1011.7" y="403.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1014.7" y="414.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.04%)</title><rect x="1011.7" y="387.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1014.7" y="398.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (4 samples, 0.06%)</title><rect x="1012.2" y="419.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1015.2" y="430.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.04%)</title><rect x="1013.0" y="451.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1016.0" y="462.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (2 samples, 0.03%)</title><rect x="1013.5" y="451.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1016.5" y="462.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (2 samples, 0.03%)</title><rect x="1013.8" y="451.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1016.8" y="462.0"></text>
</g>
<g>
<title>validate_xmit_skb (7 samples, 0.10%)</title><rect x="1014.1" y="451.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1017.1" y="462.0"></text>
</g>
<g>
<title>skb_push (2 samples, 0.03%)</title><rect x="1016.4" y="563.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1019.4" y="574.0"></text>
</g>
<g>
<title>ip_copy_addrs (2 samples, 0.03%)</title><rect x="1016.7" y="579.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1019.7" y="590.0"></text>
</g>
<g>
<title>skb_clone (7 samples, 0.10%)</title><rect x="1017.1" y="595.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1020.1" y="606.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="1017.6" y="579.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1020.6" y="590.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.03%)</title><rect x="1017.9" y="579.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1020.9" y="590.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.03%)</title><rect x="1018.7" y="611.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1021.7" y="622.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.06%)</title><rect x="1019.2" y="611.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1022.2" y="622.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="1019.9" y="611.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1022.9" y="622.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (13 samples, 0.18%)</title><rect x="1020.4" y="611.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1023.4" y="622.0"></text>
</g>
<g>
<title>tcp_rearm_rto (11 samples, 0.15%)</title><rect x="1020.7" y="595.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1023.7" y="606.0"></text>
</g>
<g>
<title>sk_reset_timer (9 samples, 0.12%)</title><rect x="1021.0" y="579.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1024.0" y="590.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.11%)</title><rect x="1021.2" y="563.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1024.2" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.11%)</title><rect x="1021.2" y="547.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1024.2" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (6 samples, 0.08%)</title><rect x="1022.8" y="611.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1025.8" y="622.0"></text>
</g>
<g>
<title>tcp_send_mss (13 samples, 0.18%)</title><rect x="1024.3" y="659.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1027.3" y="670.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.06%)</title><rect x="1024.3" y="643.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1027.3" y="654.0"></text>
</g>
<g>
<title>tcp_current_mss (9 samples, 0.12%)</title><rect x="1024.9" y="643.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1027.9" y="654.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.04%)</title><rect x="1025.9" y="627.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1028.9" y="638.0"></text>
</g>
<g>
<title>inet_send_prepare (2 samples, 0.03%)</title><rect x="1026.9" y="707.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1029.9" y="718.0"></text>
</g>
<g>
<title>security_socket_sendmsg (6 samples, 0.08%)</title><rect x="1027.2" y="707.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1030.2" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.04%)</title><rect x="1027.7" y="691.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1030.7" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.04%)</title><rect x="1027.7" y="675.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1030.7" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="1028.2" y="723.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1031.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (17 samples, 0.24%)</title><rect x="1028.9" y="883.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1031.9" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.08%)</title><rect x="1030.7" y="867.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1033.7" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.08%)</title><rect x="1030.7" y="851.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1033.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (19 samples, 0.26%)</title><rect x="1031.7" y="899.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1034.7" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (19 samples, 0.26%)</title><rect x="1031.7" y="883.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1034.7" y="894.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.06%)</title><rect x="1033.0" y="867.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1036.0" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.06%)</title><rect x="1033.0" y="851.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1036.0" y="862.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.04%)</title><rect x="1033.1" y="835.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1036.1" y="846.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="1033.6" y="867.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1036.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.06%)</title><rect x="1034.1" y="867.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1037.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.06%)</title><rect x="1034.1" y="851.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1037.1" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.06%)</title><rect x="1034.1" y="835.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1037.1" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.06%)</title><rect x="1034.1" y="819.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1037.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.put (161 samples, 2.23%)</title><rect x="1034.8" y="899.0" width="26.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1037.8" y="910.0">r..</text>
</g>
<g>
<title>java/lang/String.strip (3 samples, 0.04%)</title><rect x="1034.9" y="883.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1037.9" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.strip (3 samples, 0.04%)</title><rect x="1034.9" y="867.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1037.9" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.lastIndexOfNonWhitespace (3 samples, 0.04%)</title><rect x="1034.9" y="851.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1037.9" y="862.0"></text>
</g>
<g>
<title>java/lang/Character.isWhitespace (3 samples, 0.04%)</title><rect x="1034.9" y="835.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1037.9" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.isWhitespace (3 samples, 0.04%)</title><rect x="1034.9" y="819.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1037.9" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (26 samples, 0.36%)</title><rect x="1035.4" y="883.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1038.4" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (26 samples, 0.36%)</title><rect x="1035.4" y="867.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1038.4" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (26 samples, 0.36%)</title><rect x="1035.4" y="851.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1038.4" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (26 samples, 0.36%)</title><rect x="1035.4" y="835.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1038.4" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.10%)</title><rect x="1035.7" y="819.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1038.7" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="1036.1" y="803.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1039.1" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.04%)</title><rect x="1036.4" y="803.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1039.4" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.04%)</title><rect x="1036.4" y="787.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1039.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (17 samples, 0.24%)</title><rect x="1036.9" y="819.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1039.9" y="830.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.06%)</title><rect x="1037.9" y="803.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1040.9" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.06%)</title><rect x="1038.5" y="803.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1041.5" y="814.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.06%)</title><rect x="1038.5" y="787.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1041.5" y="798.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="1038.7" y="771.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1041.7" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.putIntoFlushQueue (3 samples, 0.04%)</title><rect x="1039.2" y="803.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1042.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.08%)</title><rect x="1039.7" y="883.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1042.7" y="894.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.07%)</title><rect x="1039.8" y="867.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1042.8" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.upsert (125 samples, 1.73%)</title><rect x="1040.7" y="883.0" width="20.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1043.7" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="1040.7" y="867.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1043.7" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1040.7" y="851.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1043.7" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1040.7" y="835.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1043.7" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1040.7" y="819.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1043.7" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1040.7" y="803.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1043.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.upsert (123 samples, 1.71%)</title><rect x="1041.0" y="867.0" width="20.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1044.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (16 samples, 0.22%)</title><rect x="1041.0" y="851.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1044.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (13 samples, 0.18%)</title><rect x="1041.5" y="835.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1044.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (10 samples, 0.14%)</title><rect x="1042.0" y="819.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1045.0" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (8 samples, 0.11%)</title><rect x="1042.0" y="803.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1045.0" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (8 samples, 0.11%)</title><rect x="1042.0" y="787.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1045.0" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (5 samples, 0.07%)</title><rect x="1042.0" y="771.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1045.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (3 samples, 0.04%)</title><rect x="1042.8" y="771.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1045.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (9 samples, 0.12%)</title><rect x="1043.6" y="851.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1046.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (9 samples, 0.12%)</title><rect x="1043.6" y="835.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1046.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (9 samples, 0.12%)</title><rect x="1043.6" y="819.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1046.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.12%)</title><rect x="1043.6" y="803.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1046.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.12%)</title><rect x="1043.6" y="787.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1046.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.12%)</title><rect x="1043.6" y="771.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1046.6" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="1043.8" y="755.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1046.8" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.07%)</title><rect x="1044.1" y="755.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1047.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.07%)</title><rect x="1044.1" y="739.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1047.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.07%)</title><rect x="1044.1" y="723.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1047.1" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.07%)</title><rect x="1044.1" y="707.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1047.1" y="718.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.06%)</title><rect x="1044.1" y="691.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1047.1" y="702.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.06%)</title><rect x="1044.1" y="675.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1047.1" y="686.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.06%)</title><rect x="1044.1" y="659.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1047.1" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.06%)</title><rect x="1044.1" y="643.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1047.1" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.06%)</title><rect x="1044.1" y="627.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1047.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.upsert (80 samples, 1.11%)</title><rect x="1045.2" y="851.0" width="13.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1048.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (80 samples, 1.11%)</title><rect x="1045.2" y="835.0" width="13.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1048.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (80 samples, 1.11%)</title><rect x="1045.2" y="819.0" width="13.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1048.2" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (8 samples, 0.11%)</title><rect x="1046.6" y="803.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1049.6" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (8 samples, 0.11%)</title><rect x="1046.6" y="787.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1049.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (31 samples, 0.43%)</title><rect x="1048.0" y="803.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1051.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (27 samples, 0.37%)</title><rect x="1053.4" y="803.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1056.4" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (25 samples, 0.35%)</title><rect x="1053.8" y="787.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1056.8" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (20 samples, 0.28%)</title><rect x="1054.6" y="771.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1057.6" y="782.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (19 samples, 0.26%)</title><rect x="1054.7" y="755.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1057.7" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (16 samples, 0.22%)</title><rect x="1055.2" y="739.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1058.2" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (16 samples, 0.22%)</title><rect x="1055.2" y="723.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1058.2" y="734.0"></text>
</g>
<g>
<title>vectorizedMismatch (5 samples, 0.07%)</title><rect x="1057.0" y="707.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1060.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (3 samples, 0.04%)</title><rect x="1057.9" y="803.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1060.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.putIntoFlushQueue (17 samples, 0.24%)</title><rect x="1058.3" y="851.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1061.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.07%)</title><rect x="1058.5" y="835.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1061.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (9 samples, 0.12%)</title><rect x="1059.3" y="835.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1062.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (9 samples, 0.12%)</title><rect x="1059.3" y="819.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1062.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.06%)</title><rect x="1059.3" y="803.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1062.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.06%)</title><rect x="1059.3" y="787.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1062.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.06%)</title><rect x="1059.3" y="771.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1062.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.06%)</title><rect x="1059.3" y="755.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1062.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="1059.5" y="739.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1062.5" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (2 samples, 0.03%)</title><rect x="1059.5" y="723.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1062.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquire (4 samples, 0.06%)</title><rect x="1060.1" y="803.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1063.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.03%)</title><rect x="1060.5" y="787.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1063.5" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.03%)</title><rect x="1060.5" y="771.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1063.5" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="1060.5" y="755.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1063.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock (2 samples, 0.03%)</title><rect x="1060.8" y="835.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1063.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.03%)</title><rect x="1060.8" y="819.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1063.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.03%)</title><rect x="1060.8" y="803.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1063.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="1060.8" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1063.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="1060.8" y="771.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1063.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="1061.1" y="915.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.1" y="926.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 0.08%)</title><rect x="1061.6" y="915.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1064.6" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.07%)</title><rect x="1061.8" y="899.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1064.8" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="1061.8" y="883.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1064.8" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.04%)</title><rect x="1062.1" y="883.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1065.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.04%)</title><rect x="1062.1" y="867.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1065.1" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.04%)</title><rect x="1062.1" y="851.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1065.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.04%)</title><rect x="1062.6" y="915.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1065.6" y="926.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.04%)</title><rect x="1062.6" y="899.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1065.6" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="1062.6" y="883.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1065.6" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (92 samples, 1.28%)</title><rect x="1063.1" y="947.0" width="15.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1066.1" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (20 samples, 0.28%)</title><rect x="1072.9" y="931.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1075.9" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (20 samples, 0.28%)</title><rect x="1072.9" y="915.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1075.9" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (20 samples, 0.28%)</title><rect x="1072.9" y="899.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1075.9" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (20 samples, 0.28%)</title><rect x="1072.9" y="883.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1075.9" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (12 samples, 0.17%)</title><rect x="1076.2" y="931.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1079.2" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.11%)</title><rect x="1078.2" y="947.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1081.2" y="958.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.08%)</title><rect x="1078.5" y="931.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1081.5" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.08%)</title><rect x="1078.5" y="915.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1081.5" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.04%)</title><rect x="1079.5" y="963.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1082.5" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (309 samples, 4.29%)</title><rect x="1080.0" y="963.0" width="50.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1083.0" y="974.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (304 samples, 4.22%)</title><rect x="1080.8" y="947.0" width="49.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1083.8" y="958.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (50 samples, 0.69%)</title><rect x="1082.7" y="931.0" width="8.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1085.7" y="942.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (10 samples, 0.14%)</title><rect x="1083.2" y="915.0" width="1.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1086.2" y="926.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.06%)</title><rect x="1084.9" y="915.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1087.9" y="926.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.04%)</title><rect x="1085.5" y="915.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1088.5" y="926.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.03%)</title><rect x="1086.2" y="915.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1089.2" y="926.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.06%)</title><rect x="1086.5" y="915.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1089.5" y="926.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (18 samples, 0.25%)</title><rect x="1087.2" y="915.0" width="2.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1090.2" y="926.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="1087.8" y="899.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1090.8" y="910.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="1088.1" y="899.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1091.1" y="910.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="1088.5" y="899.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1091.5" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.06%)</title><rect x="1088.8" y="899.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1091.8" y="910.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.06%)</title><rect x="1089.5" y="899.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1092.5" y="910.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (5 samples, 0.07%)</title><rect x="1090.1" y="915.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1093.1" y="926.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.04%)</title><rect x="1090.9" y="931.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1093.9" y="942.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.04%)</title><rect x="1091.4" y="931.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1094.4" y="942.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.06%)</title><rect x="1091.9" y="931.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1094.9" y="942.0"></text>
</g>
<g>
<title>recv (232 samples, 3.22%)</title><rect x="1092.6" y="931.0" width="38.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1095.6" y="942.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (190 samples, 2.64%)</title><rect x="1099.4" y="915.0" width="31.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1102.4" y="926.0">en..</text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.03%)</title><rect x="1099.4" y="899.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1102.4" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (188 samples, 2.61%)</title><rect x="1099.8" y="899.0" width="30.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1102.8" y="910.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (175 samples, 2.43%)</title><rect x="1101.9" y="883.0" width="28.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1104.9" y="894.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (172 samples, 2.39%)</title><rect x="1101.9" y="867.0" width="28.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1104.9" y="878.0">__..</text>
</g>
<g>
<title>inet6_recvmsg (2 samples, 0.03%)</title><rect x="1103.0" y="851.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1106.0" y="862.0"></text>
</g>
<g>
<title>sock_recvmsg (147 samples, 2.04%)</title><rect x="1103.4" y="851.0" width="24.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1106.4" y="862.0">s..</text>
</g>
<g>
<title>inet6_recvmsg (123 samples, 1.71%)</title><rect x="1103.5" y="835.0" width="20.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1106.5" y="846.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.03%)</title><rect x="1104.8" y="819.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1107.8" y="830.0"></text>
</g>
<g>
<title>tcp_recvmsg (113 samples, 1.57%)</title><rect x="1105.2" y="819.0" width="18.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1108.2" y="830.0"></text>
</g>
<g>
<title>__kfree_skb (21 samples, 0.29%)</title><rect x="1108.0" y="803.0" width="3.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1111.0" y="814.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="1108.0" y="787.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1111.0" y="798.0"></text>
</g>
<g>
<title>skb_release_all (19 samples, 0.26%)</title><rect x="1108.3" y="787.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1111.3" y="798.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.03%)</title><rect x="1108.5" y="771.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1111.5" y="782.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.06%)</title><rect x="1108.8" y="771.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1111.8" y="782.0"></text>
</g>
<g>
<title>skb_release_head_state (7 samples, 0.10%)</title><rect x="1109.4" y="771.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1112.4" y="782.0"></text>
</g>
<g>
<title>dst_release (4 samples, 0.06%)</title><rect x="1109.9" y="755.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1112.9" y="766.0"></text>
</g>
<g>
<title>sock_rfree (5 samples, 0.07%)</title><rect x="1110.6" y="771.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1113.6" y="782.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.03%)</title><rect x="1111.4" y="803.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1114.4" y="814.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.07%)</title><rect x="1112.1" y="803.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1115.1" y="814.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.04%)</title><rect x="1113.2" y="803.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1116.2" y="814.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="1113.7" y="803.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1116.7" y="814.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (39 samples, 0.54%)</title><rect x="1114.2" y="803.0" width="6.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1117.2" y="814.0"></text>
</g>
<g>
<title>__skb_datagram_iter (39 samples, 0.54%)</title><rect x="1114.2" y="787.0" width="6.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1117.2" y="798.0"></text>
</g>
<g>
<title>simple_copy_to_iter (25 samples, 0.35%)</title><rect x="1116.5" y="771.0" width="4.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1119.5" y="782.0"></text>
</g>
<g>
<title>__check_object_size (17 samples, 0.24%)</title><rect x="1116.5" y="755.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1119.5" y="766.0"></text>
</g>
<g>
<title>__virt_addr_valid (13 samples, 0.18%)</title><rect x="1117.1" y="739.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1120.1" y="750.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.07%)</title><rect x="1119.4" y="755.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1122.4" y="766.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.07%)</title><rect x="1119.4" y="739.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1122.4" y="750.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.03%)</title><rect x="1120.2" y="755.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1123.2" y="766.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.06%)</title><rect x="1120.7" y="803.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1123.7" y="814.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (10 samples, 0.14%)</title><rect x="1121.6" y="803.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1124.6" y="814.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (8 samples, 0.11%)</title><rect x="1121.9" y="787.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1124.9" y="798.0"></text>
</g>
<g>
<title>read_tsc (7 samples, 0.10%)</title><rect x="1122.0" y="771.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1125.0" y="782.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.04%)</title><rect x="1123.2" y="803.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1126.2" y="814.0"></text>
</g>
<g>
<title>security_socket_recvmsg (23 samples, 0.32%)</title><rect x="1123.7" y="835.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1126.7" y="846.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (15 samples, 0.21%)</title><rect x="1125.0" y="819.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1128.0" y="830.0"></text>
</g>
<g>
<title>aa_sk_perm (14 samples, 0.19%)</title><rect x="1125.2" y="803.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1128.2" y="814.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.03%)</title><rect x="1127.1" y="787.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1130.1" y="798.0"></text>
</g>
<g>
<title>sockfd_lookup_light (16 samples, 0.22%)</title><rect x="1127.4" y="851.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1130.4" y="862.0"></text>
</g>
<g>
<title>__fdget (13 samples, 0.18%)</title><rect x="1127.6" y="835.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1130.6" y="846.0"></text>
</g>
<g>
<title>__fget_light (13 samples, 0.18%)</title><rect x="1127.6" y="819.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1130.6" y="830.0"></text>
</g>
<g>
<title>__fget (13 samples, 0.18%)</title><rect x="1127.6" y="803.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1130.6" y="814.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="1129.7" y="835.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1132.7" y="846.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.04%)</title><rect x="1130.1" y="867.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1133.1" y="878.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.06%)</title><rect x="1130.7" y="995.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1133.7" y="1006.0"></text>
</g>
<g>
<title>[RMI TCP Connection(4)-127.0.0.1 tid=65510] (46 samples, 0.64%)</title><rect x="1131.4" y="1027.0" width="7.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1134.4" y="1038.0"></text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.06%)</title><rect x="1131.4" y="1011.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1134.4" y="1022.0"></text>
</g>
<g>
<title>Interpreter (2 samples, 0.03%)</title><rect x="1131.5" y="995.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1134.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/Thread.run (41 samples, 0.57%)</title><rect x="1132.0" y="1011.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1135.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (41 samples, 0.57%)</title><rect x="1132.0" y="995.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1135.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (41 samples, 0.57%)</title><rect x="1132.0" y="979.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1135.0" y="990.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (41 samples, 0.57%)</title><rect x="1132.0" y="963.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1135.0" y="974.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (41 samples, 0.57%)</title><rect x="1132.0" y="947.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1135.0" y="958.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$92/1211696232.run (41 samples, 0.57%)</title><rect x="1132.0" y="931.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1135.0" y="942.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (41 samples, 0.57%)</title><rect x="1132.0" y="915.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1135.0" y="926.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (41 samples, 0.57%)</title><rect x="1132.0" y="899.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1135.0" y="910.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (41 samples, 0.57%)</title><rect x="1132.0" y="883.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1135.0" y="894.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (3 samples, 0.04%)</title><rect x="1132.2" y="867.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1135.2" y="878.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.read (3 samples, 0.04%)</title><rect x="1132.2" y="851.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1135.2" y="862.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.fill (3 samples, 0.04%)</title><rect x="1132.2" y="835.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1135.2" y="846.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.read (3 samples, 0.04%)</title><rect x="1132.2" y="819.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1135.2" y="830.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.read (3 samples, 0.04%)</title><rect x="1132.2" y="803.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1135.2" y="814.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.socketRead (3 samples, 0.04%)</title><rect x="1132.2" y="787.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1135.2" y="798.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.socketRead0 (3 samples, 0.04%)</title><rect x="1132.2" y="771.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1135.2" y="782.0"></text>
</g>
<g>
<title>Java_java_net_SocketInputStream_socketRead0 (2 samples, 0.03%)</title><rect x="1132.2" y="755.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1135.2" y="766.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (37 samples, 0.51%)</title><rect x="1132.7" y="867.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1135.7" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (31 samples, 0.43%)</title><rect x="1132.7" y="851.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1135.7" y="862.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (31 samples, 0.43%)</title><rect x="1132.7" y="835.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1135.7" y="846.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (31 samples, 0.43%)</title><rect x="1132.7" y="819.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1135.7" y="830.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (31 samples, 0.43%)</title><rect x="1132.7" y="803.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1135.7" y="814.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (15 samples, 0.21%)</title><rect x="1132.7" y="787.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1135.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (15 samples, 0.21%)</title><rect x="1132.7" y="771.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1135.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (2 samples, 0.03%)</title><rect x="1132.9" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1135.9" y="766.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttribute (2 samples, 0.03%)</title><rect x="1132.9" y="739.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1135.9" y="750.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (2 samples, 0.03%)</title><rect x="1132.9" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1135.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (6 samples, 0.08%)</title><rect x="1133.2" y="755.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1136.2" y="766.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (6 samples, 0.08%)</title><rect x="1133.2" y="739.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1136.2" y="750.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (5 samples, 0.07%)</title><rect x="1133.2" y="723.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1136.2" y="734.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (5 samples, 0.07%)</title><rect x="1133.2" y="707.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1136.2" y="718.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (5 samples, 0.07%)</title><rect x="1133.2" y="691.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1136.2" y="702.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (5 samples, 0.07%)</title><rect x="1133.2" y="675.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1136.2" y="686.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (5 samples, 0.07%)</title><rect x="1133.2" y="659.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1136.2" y="670.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (5 samples, 0.07%)</title><rect x="1133.2" y="643.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1136.2" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (5 samples, 0.07%)</title><rect x="1133.2" y="627.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1136.2" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (5 samples, 0.07%)</title><rect x="1133.2" y="611.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1136.2" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (5 samples, 0.07%)</title><rect x="1133.2" y="595.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1136.2" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (5 samples, 0.07%)</title><rect x="1133.2" y="579.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1136.2" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (5 samples, 0.07%)</title><rect x="1133.2" y="563.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1136.2" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (5 samples, 0.07%)</title><rect x="1133.2" y="547.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1136.2" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (5 samples, 0.07%)</title><rect x="1133.2" y="531.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1136.2" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (4 samples, 0.06%)</title><rect x="1133.2" y="515.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1136.2" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (4 samples, 0.06%)</title><rect x="1133.2" y="499.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1136.2" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (4 samples, 0.06%)</title><rect x="1133.2" y="483.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1136.2" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (4 samples, 0.06%)</title><rect x="1133.2" y="467.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1136.2" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (2 samples, 0.03%)</title><rect x="1133.2" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1136.2" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (2 samples, 0.03%)</title><rect x="1133.2" y="435.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1136.2" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (2 samples, 0.03%)</title><rect x="1133.2" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1136.2" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (2 samples, 0.03%)</title><rect x="1133.2" y="403.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1136.2" y="414.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1133.5" y="451.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1136.5" y="462.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1133.5" y="435.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1136.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (5 samples, 0.07%)</title><rect x="1134.3" y="755.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1137.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (5 samples, 0.07%)</title><rect x="1134.3" y="739.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1137.3" y="750.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (4 samples, 0.06%)</title><rect x="1134.3" y="723.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1137.3" y="734.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (3 samples, 0.04%)</title><rect x="1134.3" y="707.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1137.3" y="718.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (3 samples, 0.04%)</title><rect x="1134.3" y="691.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1137.3" y="702.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (3 samples, 0.04%)</title><rect x="1134.3" y="675.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1137.3" y="686.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (3 samples, 0.04%)</title><rect x="1134.3" y="659.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1137.3" y="670.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (3 samples, 0.04%)</title><rect x="1134.3" y="643.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1137.3" y="654.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (3 samples, 0.04%)</title><rect x="1134.3" y="627.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1137.3" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (3 samples, 0.04%)</title><rect x="1134.3" y="611.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1137.3" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (3 samples, 0.04%)</title><rect x="1134.3" y="595.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1137.3" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (3 samples, 0.04%)</title><rect x="1134.3" y="579.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1137.3" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (3 samples, 0.04%)</title><rect x="1134.3" y="563.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1137.3" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (3 samples, 0.04%)</title><rect x="1134.3" y="547.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1137.3" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (3 samples, 0.04%)</title><rect x="1134.3" y="531.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1137.3" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (3 samples, 0.04%)</title><rect x="1134.3" y="515.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1137.3" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (3 samples, 0.04%)</title><rect x="1134.3" y="499.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1137.3" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (3 samples, 0.04%)</title><rect x="1134.3" y="483.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1137.3" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (3 samples, 0.04%)</title><rect x="1134.3" y="467.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1137.3" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (3 samples, 0.04%)</title><rect x="1134.3" y="451.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1137.3" y="462.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.03%)</title><rect x="1134.5" y="435.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1137.5" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.03%)</title><rect x="1134.5" y="419.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1137.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.03%)</title><rect x="1134.5" y="403.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1137.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (2 samples, 0.03%)</title><rect x="1134.5" y="387.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1137.5" y="398.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (2 samples, 0.03%)</title><rect x="1134.5" y="371.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1137.5" y="382.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.03%)</title><rect x="1134.5" y="355.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1137.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.03%)</title><rect x="1134.5" y="339.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1137.5" y="350.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (7 samples, 0.10%)</title><rect x="1135.1" y="787.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1138.1" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (7 samples, 0.10%)</title><rect x="1135.1" y="771.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1138.1" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (7 samples, 0.10%)</title><rect x="1135.1" y="755.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1138.1" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (3 samples, 0.04%)</title><rect x="1135.5" y="739.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1138.5" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.04%)</title><rect x="1135.5" y="723.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1138.5" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.04%)</title><rect x="1135.5" y="707.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1138.5" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.04%)</title><rect x="1135.5" y="691.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1138.5" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (3 samples, 0.04%)</title><rect x="1135.5" y="675.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1138.5" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.04%)</title><rect x="1135.5" y="659.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1138.5" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.04%)</title><rect x="1135.5" y="643.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1138.5" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.04%)</title><rect x="1135.5" y="627.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1138.5" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (2 samples, 0.03%)</title><rect x="1135.6" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1138.6" y="622.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.03%)</title><rect x="1135.6" y="595.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1138.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.03%)</title><rect x="1135.6" y="579.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1138.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (2 samples, 0.03%)</title><rect x="1135.6" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1138.6" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (2 samples, 0.03%)</title><rect x="1135.6" y="547.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1138.6" y="558.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (5 samples, 0.07%)</title><rect x="1136.3" y="787.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1139.3" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (5 samples, 0.07%)</title><rect x="1136.3" y="771.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1139.3" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (5 samples, 0.07%)</title><rect x="1136.3" y="755.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1139.3" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (5 samples, 0.07%)</title><rect x="1136.3" y="739.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1139.3" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (4 samples, 0.06%)</title><rect x="1136.5" y="723.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1139.5" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (3 samples, 0.04%)</title><rect x="1136.5" y="707.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1139.5" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (3 samples, 0.04%)</title><rect x="1136.5" y="691.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1139.5" y="702.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.oldDispatch (3 samples, 0.04%)</title><rect x="1137.1" y="787.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1140.1" y="798.0"></text>
</g>
<g>
<title>sun/rmi/transport/DGCImpl_Skel.dispatch (3 samples, 0.04%)</title><rect x="1137.1" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1140.1" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.03%)</title><rect x="1137.1" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.1" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.03%)</title><rect x="1137.1" y="739.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1140.1" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.03%)</title><rect x="1137.1" y="723.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1140.1" y="734.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (4 samples, 0.06%)</title><rect x="1137.9" y="851.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.9" y="862.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1138.1" y="835.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1141.1" y="846.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1138.1" y="819.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.1" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1138.1" y="803.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1141.1" y="814.0"></text>
</g>
<g>
<title>[RMI TCP Connection(idle) tid=65516] (51 samples, 0.71%)</title><rect x="1138.9" y="1027.0" width="8.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1141.9" y="1038.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.03%)</title><rect x="1138.9" y="1011.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1141.9" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.03%)</title><rect x="1138.9" y="995.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1141.9" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1138.9" y="979.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1141.9" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1138.9" y="963.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1141.9" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="1138.9" y="947.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1141.9" y="958.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="1138.9" y="931.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1141.9" y="942.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="1138.9" y="915.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1141.9" y="926.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="1138.9" y="899.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1141.9" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="1138.9" y="883.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1141.9" y="894.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="1138.9" y="867.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1141.9" y="878.0"></text>
</g>
<g>
<title>java/lang/Thread.run (49 samples, 0.68%)</title><rect x="1139.2" y="1011.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1142.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (49 samples, 0.68%)</title><rect x="1139.2" y="995.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1142.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (49 samples, 0.68%)</title><rect x="1139.2" y="979.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1142.2" y="990.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (49 samples, 0.68%)</title><rect x="1139.2" y="963.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1142.2" y="974.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (49 samples, 0.68%)</title><rect x="1139.2" y="947.0" width="8.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1142.2" y="958.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$92/1211696232.run (49 samples, 0.68%)</title><rect x="1139.2" y="931.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1142.2" y="942.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (49 samples, 0.68%)</title><rect x="1139.2" y="915.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1142.2" y="926.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (49 samples, 0.68%)</title><rect x="1139.2" y="899.0" width="8.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1142.2" y="910.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (49 samples, 0.68%)</title><rect x="1139.2" y="883.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1142.2" y="894.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (4 samples, 0.06%)</title><rect x="1139.4" y="867.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1142.4" y="878.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.read (4 samples, 0.06%)</title><rect x="1139.4" y="851.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1142.4" y="862.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.fill (4 samples, 0.06%)</title><rect x="1139.4" y="835.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1142.4" y="846.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.read (4 samples, 0.06%)</title><rect x="1139.4" y="819.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1142.4" y="830.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.read (4 samples, 0.06%)</title><rect x="1139.4" y="803.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1142.4" y="814.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.socketRead (4 samples, 0.06%)</title><rect x="1139.4" y="787.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1142.4" y="798.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.socketRead0 (4 samples, 0.06%)</title><rect x="1139.4" y="771.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1142.4" y="782.0"></text>
</g>
<g>
<title>Java_java_net_SocketInputStream_socketRead0 (3 samples, 0.04%)</title><rect x="1139.4" y="755.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1142.4" y="766.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (41 samples, 0.57%)</title><rect x="1140.1" y="867.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1143.1" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (38 samples, 0.53%)</title><rect x="1140.1" y="851.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1143.1" y="862.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (37 samples, 0.51%)</title><rect x="1140.2" y="835.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1143.2" y="846.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (37 samples, 0.51%)</title><rect x="1140.2" y="819.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1143.2" y="830.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (37 samples, 0.51%)</title><rect x="1140.2" y="803.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1143.2" y="814.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (17 samples, 0.24%)</title><rect x="1140.2" y="787.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1143.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (17 samples, 0.24%)</title><rect x="1140.2" y="771.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1143.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (7 samples, 0.10%)</title><rect x="1140.2" y="755.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1143.2" y="766.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttribute (6 samples, 0.08%)</title><rect x="1140.4" y="739.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1143.4" y="750.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (6 samples, 0.08%)</title><rect x="1140.4" y="723.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1143.4" y="734.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (5 samples, 0.07%)</title><rect x="1140.5" y="707.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1143.5" y="718.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (5 samples, 0.07%)</title><rect x="1140.5" y="691.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1143.5" y="702.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttribute (5 samples, 0.07%)</title><rect x="1140.5" y="675.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1143.5" y="686.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttribute (5 samples, 0.07%)</title><rect x="1140.5" y="659.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1143.5" y="670.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.getAttribute (3 samples, 0.04%)</title><rect x="1140.9" y="643.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1143.9" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttribute (3 samples, 0.04%)</title><rect x="1140.9" y="627.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1143.9" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.getAttribute (3 samples, 0.04%)</title><rect x="1140.9" y="611.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1143.9" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (3 samples, 0.04%)</title><rect x="1140.9" y="595.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1143.9" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (3 samples, 0.04%)</title><rect x="1140.9" y="579.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1143.9" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (3 samples, 0.04%)</title><rect x="1140.9" y="563.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1143.9" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (3 samples, 0.04%)</title><rect x="1140.9" y="547.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1143.9" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (3 samples, 0.04%)</title><rect x="1140.9" y="531.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1143.9" y="542.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.03%)</title><rect x="1141.0" y="515.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1144.0" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.03%)</title><rect x="1141.0" y="499.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1144.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.03%)</title><rect x="1141.0" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1144.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (2 samples, 0.03%)</title><rect x="1141.0" y="467.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1144.0" y="478.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (2 samples, 0.03%)</title><rect x="1141.0" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1144.0" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.03%)</title><rect x="1141.0" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1144.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.03%)</title><rect x="1141.0" y="419.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1144.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor41.invoke (2 samples, 0.03%)</title><rect x="1141.0" y="403.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1144.0" y="414.0"></text>
</g>
<g>
<title>com/sun/management/internal/OperatingSystemImpl.getProcessCpuTime (2 samples, 0.03%)</title><rect x="1141.0" y="387.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1144.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (4 samples, 0.06%)</title><rect x="1141.4" y="755.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1144.4" y="766.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (4 samples, 0.06%)</title><rect x="1141.4" y="739.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1144.4" y="750.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (4 samples, 0.06%)</title><rect x="1141.4" y="723.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1144.4" y="734.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (4 samples, 0.06%)</title><rect x="1141.4" y="707.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1144.4" y="718.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (4 samples, 0.06%)</title><rect x="1141.4" y="691.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1144.4" y="702.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (4 samples, 0.06%)</title><rect x="1141.4" y="675.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1144.4" y="686.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (4 samples, 0.06%)</title><rect x="1141.4" y="659.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1144.4" y="670.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (4 samples, 0.06%)</title><rect x="1141.4" y="643.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1144.4" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (4 samples, 0.06%)</title><rect x="1141.4" y="627.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1144.4" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (4 samples, 0.06%)</title><rect x="1141.4" y="611.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1144.4" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (4 samples, 0.06%)</title><rect x="1141.4" y="595.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1144.4" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (4 samples, 0.06%)</title><rect x="1141.4" y="579.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1144.4" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (4 samples, 0.06%)</title><rect x="1141.4" y="563.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1144.4" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (4 samples, 0.06%)</title><rect x="1141.4" y="547.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1144.4" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (4 samples, 0.06%)</title><rect x="1141.4" y="531.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1144.4" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (2 samples, 0.03%)</title><rect x="1141.4" y="515.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1144.4" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (2 samples, 0.03%)</title><rect x="1141.4" y="499.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1144.4" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (2 samples, 0.03%)</title><rect x="1141.4" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1144.4" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (2 samples, 0.03%)</title><rect x="1141.4" y="467.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1144.4" y="478.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1141.4" y="451.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1144.4" y="462.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1141.4" y="435.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1144.4" y="446.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.03%)</title><rect x="1141.7" y="515.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1144.7" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.03%)</title><rect x="1141.7" y="499.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1144.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.03%)</title><rect x="1141.7" y="483.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1144.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (2 samples, 0.03%)</title><rect x="1141.7" y="467.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1144.7" y="478.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (2 samples, 0.03%)</title><rect x="1141.7" y="451.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1144.7" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.03%)</title><rect x="1141.7" y="435.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1144.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.03%)</title><rect x="1141.7" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1144.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (2 samples, 0.03%)</title><rect x="1141.7" y="403.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1144.7" y="414.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (2 samples, 0.03%)</title><rect x="1141.7" y="387.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1144.7" y="398.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (2 samples, 0.03%)</title><rect x="1141.7" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1144.7" y="382.0"></text>
</g>
<g>
<title>jmm_GetThreadInfo (2 samples, 0.03%)</title><rect x="1141.7" y="355.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1144.7" y="366.0"></text>
</g>
<g>
<title>Management::create_thread_info_instance(ThreadSnapshot*, Thread*) (2 samples, 0.03%)</title><rect x="1141.7" y="339.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1144.7" y="350.0"></text>
</g>
<g>
<title>initialize_ThreadInfo_constructor_arguments(JavaCallArguments*, ThreadSnapshot*, Thread*) (2 samples, 0.03%)</title><rect x="1141.7" y="323.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1144.7" y="334.0"></text>
</g>
<g>
<title>ThreadStackTrace::allocate_fill_stack_trace_element_array(Thread*) (2 samples, 0.03%)</title><rect x="1141.7" y="307.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1144.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor38.invoke (3 samples, 0.04%)</title><rect x="1142.0" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1145.0" y="766.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttributes (3 samples, 0.04%)</title><rect x="1142.0" y="739.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1145.0" y="750.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (3 samples, 0.04%)</title><rect x="1142.0" y="723.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1145.0" y="734.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (3 samples, 0.04%)</title><rect x="1142.0" y="707.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1145.0" y="718.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (3 samples, 0.04%)</title><rect x="1142.0" y="691.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1145.0" y="702.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttributes (3 samples, 0.04%)</title><rect x="1142.0" y="675.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1145.0" y="686.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttributes (3 samples, 0.04%)</title><rect x="1142.0" y="659.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1145.0" y="670.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getMBean (2 samples, 0.03%)</title><rect x="1142.0" y="643.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1145.0" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieve (2 samples, 0.03%)</title><rect x="1142.0" y="627.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1145.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke (3 samples, 0.04%)</title><rect x="1142.5" y="755.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1145.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeMethodAccessorImpl.invoke0 (3 samples, 0.04%)</title><rect x="1142.5" y="739.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1145.5" y="750.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (3 samples, 0.04%)</title><rect x="1142.5" y="723.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1145.5" y="734.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (3 samples, 0.04%)</title><rect x="1142.5" y="707.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1145.5" y="718.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (3 samples, 0.04%)</title><rect x="1142.5" y="691.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1145.5" y="702.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (3 samples, 0.04%)</title><rect x="1142.5" y="675.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1145.5" y="686.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (3 samples, 0.04%)</title><rect x="1142.5" y="659.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1145.5" y="670.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (3 samples, 0.04%)</title><rect x="1142.5" y="643.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1145.5" y="654.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (3 samples, 0.04%)</title><rect x="1142.5" y="627.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1145.5" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (3 samples, 0.04%)</title><rect x="1142.5" y="611.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1145.5" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (3 samples, 0.04%)</title><rect x="1142.5" y="595.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1145.5" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (3 samples, 0.04%)</title><rect x="1142.5" y="579.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1145.5" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (3 samples, 0.04%)</title><rect x="1142.5" y="563.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1145.5" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (3 samples, 0.04%)</title><rect x="1142.5" y="547.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1145.5" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (3 samples, 0.04%)</title><rect x="1142.5" y="531.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1145.5" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (3 samples, 0.04%)</title><rect x="1142.5" y="515.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1145.5" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (3 samples, 0.04%)</title><rect x="1142.5" y="499.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1145.5" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (3 samples, 0.04%)</title><rect x="1142.5" y="483.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1145.5" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (3 samples, 0.04%)</title><rect x="1142.5" y="467.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1145.5" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (3 samples, 0.04%)</title><rect x="1142.5" y="451.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1145.5" y="462.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (4 samples, 0.06%)</title><rect x="1143.0" y="787.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1146.0" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (4 samples, 0.06%)</title><rect x="1143.0" y="771.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1146.0" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.06%)</title><rect x="1143.0" y="755.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1146.0" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (4 samples, 0.06%)</title><rect x="1143.0" y="739.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1146.0" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.06%)</title><rect x="1143.0" y="723.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1146.0" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (4 samples, 0.06%)</title><rect x="1143.0" y="707.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1146.0" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (4 samples, 0.06%)</title><rect x="1143.0" y="691.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1146.0" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (4 samples, 0.06%)</title><rect x="1143.0" y="675.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1146.0" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.06%)</title><rect x="1143.0" y="659.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1146.0" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (4 samples, 0.06%)</title><rect x="1143.0" y="643.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1146.0" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (4 samples, 0.06%)</title><rect x="1143.0" y="627.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1146.0" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (3 samples, 0.04%)</title><rect x="1143.2" y="611.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1146.2" y="622.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.04%)</title><rect x="1143.2" y="595.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1146.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.04%)</title><rect x="1143.2" y="579.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1146.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (3 samples, 0.04%)</title><rect x="1143.2" y="563.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1146.2" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (3 samples, 0.04%)</title><rect x="1143.2" y="547.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1146.2" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (3 samples, 0.04%)</title><rect x="1143.2" y="531.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1146.2" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.04%)</title><rect x="1143.2" y="515.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1146.2" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (2 samples, 0.03%)</title><rect x="1143.2" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1146.2" y="510.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (12 samples, 0.17%)</title><rect x="1143.7" y="787.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1146.7" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (11 samples, 0.15%)</title><rect x="1143.8" y="771.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1146.8" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (11 samples, 0.15%)</title><rect x="1143.8" y="755.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1146.8" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (11 samples, 0.15%)</title><rect x="1143.8" y="739.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1146.8" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (11 samples, 0.15%)</title><rect x="1143.8" y="723.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1146.8" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (6 samples, 0.08%)</title><rect x="1143.8" y="707.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1146.8" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (6 samples, 0.08%)</title><rect x="1143.8" y="691.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1146.8" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (2 samples, 0.03%)</title><rect x="1143.8" y="675.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1146.8" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (2 samples, 0.03%)</title><rect x="1143.8" y="659.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1146.8" y="670.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.resolveClass (2 samples, 0.03%)</title><rect x="1144.5" y="675.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1147.5" y="686.0"></text>
</g>
<g>
<title>java/rmi/server/RMIClassLoader.loadClass (2 samples, 0.03%)</title><rect x="1144.5" y="659.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1147.5" y="670.0"></text>
</g>
<g>
<title>java/rmi/server/RMIClassLoader$2.loadClass (2 samples, 0.03%)</title><rect x="1144.5" y="643.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1147.5" y="654.0"></text>
</g>
<g>
<title>sun/rmi/server/LoaderHandler.loadClass (2 samples, 0.03%)</title><rect x="1144.5" y="627.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1147.5" y="638.0"></text>
</g>
<g>
<title>sun/rmi/server/LoaderHandler.loadClass (2 samples, 0.03%)</title><rect x="1144.5" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1147.5" y="622.0"></text>
</g>
<g>
<title>java/lang/Class.forName (2 samples, 0.03%)</title><rect x="1144.5" y="595.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1147.5" y="606.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (2 samples, 0.03%)</title><rect x="1144.5" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1147.5" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (4 samples, 0.06%)</title><rect x="1144.8" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1147.8" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (2 samples, 0.03%)</title><rect x="1144.8" y="691.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1147.8" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (2 samples, 0.03%)</title><rect x="1144.8" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1147.8" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (2 samples, 0.03%)</title><rect x="1145.1" y="691.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1148.1" y="702.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.03%)</title><rect x="1145.1" y="675.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1148.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.03%)</title><rect x="1145.1" y="659.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1148.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor2.invoke (2 samples, 0.03%)</title><rect x="1145.1" y="643.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1148.1" y="654.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (2 samples, 0.03%)</title><rect x="1145.1" y="627.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1148.1" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.releaseOutputStream (2 samples, 0.03%)</title><rect x="1146.0" y="787.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1149.0" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.flush (2 samples, 0.03%)</title><rect x="1146.0" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1149.0" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.flush (2 samples, 0.03%)</title><rect x="1146.0" y="755.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1149.0" y="766.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (2 samples, 0.03%)</title><rect x="1146.0" y="739.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1149.0" y="750.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (2 samples, 0.03%)</title><rect x="1146.0" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1149.0" y="734.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.write (2 samples, 0.03%)</title><rect x="1146.0" y="707.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1149.0" y="718.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite (2 samples, 0.03%)</title><rect x="1146.0" y="691.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1149.0" y="702.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite0 (2 samples, 0.03%)</title><rect x="1146.0" y="675.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1149.0" y="686.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.setContextClassLoader (3 samples, 0.04%)</title><rect x="1146.3" y="851.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1149.3" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.04%)</title><rect x="1146.3" y="835.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1149.3" y="846.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (3 samples, 0.04%)</title><rect x="1146.3" y="819.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1149.3" y="830.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (2 samples, 0.03%)</title><rect x="1146.4" y="803.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1149.4" y="814.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.03%)</title><rect x="1146.4" y="787.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.4" y="798.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPConnection.releaseOutputStream (3 samples, 0.04%)</title><rect x="1146.8" y="867.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1149.8" y="878.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (3 samples, 0.04%)</title><rect x="1146.8" y="851.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1149.8" y="862.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (3 samples, 0.04%)</title><rect x="1146.8" y="835.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1149.8" y="846.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.write (3 samples, 0.04%)</title><rect x="1146.8" y="819.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1149.8" y="830.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite (3 samples, 0.04%)</title><rect x="1146.8" y="803.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1149.8" y="814.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite0 (3 samples, 0.04%)</title><rect x="1146.8" y="787.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1149.8" y="798.0"></text>
</g>
<g>
<title>__send (2 samples, 0.03%)</title><rect x="1146.9" y="771.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1149.9" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1146.9" y="755.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1149.9" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1146.9" y="739.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1149.9" y="750.0"></text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.03%)</title><rect x="1146.9" y="723.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1149.9" y="734.0"></text>
</g>
<g>
<title>__sys_sendto (2 samples, 0.03%)</title><rect x="1146.9" y="707.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1149.9" y="718.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.03%)</title><rect x="1146.9" y="691.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1149.9" y="702.0"></text>
</g>
<g>
<title>inet6_sendmsg (2 samples, 0.03%)</title><rect x="1146.9" y="675.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1149.9" y="686.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.03%)</title><rect x="1146.9" y="659.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1149.9" y="670.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (2 samples, 0.03%)</title><rect x="1146.9" y="643.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1149.9" y="654.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.03%)</title><rect x="1146.9" y="627.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1149.9" y="638.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.03%)</title><rect x="1146.9" y="611.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1149.9" y="622.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.03%)</title><rect x="1146.9" y="595.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1149.9" y="606.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.03%)</title><rect x="1146.9" y="579.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1149.9" y="590.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.03%)</title><rect x="1146.9" y="563.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1149.9" y="574.0"></text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.03%)</title><rect x="1146.9" y="547.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1149.9" y="558.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.03%)</title><rect x="1146.9" y="531.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1149.9" y="542.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.03%)</title><rect x="1146.9" y="515.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1149.9" y="526.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.03%)</title><rect x="1146.9" y="499.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1149.9" y="510.0"></text>
</g>
<g>
<title>__ip_finish_output (2 samples, 0.03%)</title><rect x="1146.9" y="483.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1149.9" y="494.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.03%)</title><rect x="1146.9" y="467.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1149.9" y="478.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="1146.9" y="451.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1149.9" y="462.0"></text>
</g>
<g>
<title>do_softirq.part.0 (2 samples, 0.03%)</title><rect x="1146.9" y="435.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1149.9" y="446.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.03%)</title><rect x="1146.9" y="419.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1149.9" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="1146.9" y="403.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1149.9" y="414.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.03%)</title><rect x="1146.9" y="387.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1149.9" y="398.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.03%)</title><rect x="1146.9" y="371.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1149.9" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="1146.9" y="355.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1149.9" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.03%)</title><rect x="1146.9" y="339.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1149.9" y="350.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.03%)</title><rect x="1146.9" y="323.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1149.9" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="1146.9" y="307.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1149.9" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.03%)</title><rect x="1146.9" y="291.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1149.9" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="1146.9" y="275.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1149.9" y="286.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.03%)</title><rect x="1146.9" y="259.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1149.9" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="1146.9" y="243.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1149.9" y="254.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.03%)</title><rect x="1146.9" y="227.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1149.9" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.03%)</title><rect x="1146.9" y="211.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1149.9" y="222.0"></text>
</g>
<g>
<title>tcp_data_ready (2 samples, 0.03%)</title><rect x="1146.9" y="195.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1149.9" y="206.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.03%)</title><rect x="1146.9" y="179.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1149.9" y="190.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.03%)</title><rect x="1146.9" y="163.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1149.9" y="174.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="1146.9" y="147.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1149.9" y="158.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.03%)</title><rect x="1146.9" y="131.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1149.9" y="142.0"></text>
</g>
<g>
<title>[Service Thread tid=65436] (6 samples, 0.08%)</title><rect x="1147.3" y="1027.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1150.3" y="1038.0"></text>
</g>
<g>
<title>start_thread (6 samples, 0.08%)</title><rect x="1147.3" y="1011.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1150.3" y="1022.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 0.08%)</title><rect x="1147.3" y="995.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1150.3" y="1006.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 0.08%)</title><rect x="1147.3" y="979.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1150.3" y="990.0"></text>
</g>
<g>
<title>JavaThread::run() (6 samples, 0.08%)</title><rect x="1147.3" y="963.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1150.3" y="974.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (6 samples, 0.08%)</title><rect x="1147.3" y="947.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1150.3" y="958.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (6 samples, 0.08%)</title><rect x="1147.3" y="931.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1150.3" y="942.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (5 samples, 0.07%)</title><rect x="1147.3" y="915.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1150.3" y="926.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (4 samples, 0.06%)</title><rect x="1147.4" y="899.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1150.4" y="910.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (2 samples, 0.03%)</title><rect x="1147.8" y="883.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1150.8" y="894.0"></text>
</g>
<g>
<title>[VM Periodic Tas tid=65437] (9 samples, 0.12%)</title><rect x="1148.4" y="1027.0" width="1.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1151.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="1148.4" y="1011.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1151.4" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (6 samples, 0.08%)</title><rect x="1148.4" y="995.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1151.4" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.06%)</title><rect x="1148.7" y="979.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1151.7" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.06%)</title><rect x="1148.7" y="963.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1151.7" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.06%)</title><rect x="1148.7" y="947.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1151.7" y="958.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.06%)</title><rect x="1148.7" y="931.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1151.7" y="942.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.06%)</title><rect x="1148.7" y="915.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1151.7" y="926.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.04%)</title><rect x="1148.7" y="899.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1151.7" y="910.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.04%)</title><rect x="1148.7" y="883.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1151.7" y="894.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.04%)</title><rect x="1148.7" y="867.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1151.7" y="878.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.04%)</title><rect x="1148.7" y="851.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1151.7" y="862.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.04%)</title><rect x="1149.4" y="1011.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1152.4" y="1022.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.04%)</title><rect x="1149.4" y="995.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1152.4" y="1006.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.04%)</title><rect x="1149.4" y="979.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1152.4" y="990.0"></text>
</g>
<g>
<title>WatcherThread::run() (3 samples, 0.04%)</title><rect x="1149.4" y="963.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1152.4" y="974.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (3 samples, 0.04%)</title><rect x="1149.4" y="947.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1152.4" y="958.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (3 samples, 0.04%)</title><rect x="1149.4" y="931.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1152.4" y="942.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (3 samples, 0.04%)</title><rect x="1149.4" y="915.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.4" y="926.0"></text>
</g>
<g>
<title>[VM Thread tid=65429] (5 samples, 0.07%)</title><rect x="1149.9" y="1027.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1152.9" y="1038.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.06%)</title><rect x="1150.0" y="1011.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1153.0" y="1022.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.06%)</title><rect x="1150.0" y="995.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1153.0" y="1006.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 0.06%)</title><rect x="1150.0" y="979.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1153.0" y="990.0"></text>
</g>
<g>
<title>VMThread::run() (4 samples, 0.06%)</title><rect x="1150.0" y="963.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1153.0" y="974.0"></text>
</g>
<g>
<title>VMThread::loop() (4 samples, 0.06%)</title><rect x="1150.0" y="947.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.0" y="958.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (2 samples, 0.03%)</title><rect x="1150.0" y="931.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1153.0" y="942.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (2 samples, 0.03%)</title><rect x="1150.4" y="931.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.4" y="942.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.03%)</title><rect x="1150.4" y="915.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1153.4" y="926.0"></text>
</g>
<g>
<title>VM_ThreadDump::doit() (2 samples, 0.03%)</title><rect x="1150.4" y="899.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1153.4" y="910.0"></text>
</g>
<g>
<title>ThreadStackTrace::dump_stack_at_safepoint(int) (2 samples, 0.03%)</title><rect x="1150.4" y="883.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1153.4" y="894.0"></text>
</g>
<g>
<title>JavaThread::last_java_vframe(RegisterMap*) (2 samples, 0.03%)</title><rect x="1150.4" y="867.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.4" y="878.0"></text>
</g>
<g>
<title>[pool-1-thread-1 tid=65439] (240 samples, 3.33%)</title><rect x="1150.7" y="1027.0" width="39.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1153.7" y="1038.0">[po..</text>
</g>
<g>
<title>java/lang/Thread.run (238 samples, 3.30%)</title><rect x="1151.0" y="1011.0" width="39.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1154.0" y="1022.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (238 samples, 3.30%)</title><rect x="1151.0" y="995.0" width="39.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1154.0" y="1006.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (238 samples, 3.30%)</title><rect x="1151.0" y="979.0" width="39.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1154.0" y="990.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$13/863125040.run (238 samples, 3.30%)</title><rect x="1151.0" y="963.0" width="39.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1154.0" y="974.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.flushingHelper (238 samples, 3.30%)</title><rect x="1151.0" y="947.0" width="39.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1154.0" y="958.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.flush (237 samples, 3.29%)</title><rect x="1151.0" y="931.0" width="38.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1154.0" y="942.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.serialize (236 samples, 3.28%)</title><rect x="1151.2" y="915.0" width="38.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1154.2" y="926.0">ru/..</text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="1153.2" y="899.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1156.2" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="1153.2" y="883.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1156.2" y="894.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (4 samples, 0.06%)</title><rect x="1153.5" y="899.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1156.5" y="910.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (4 samples, 0.06%)</title><rect x="1153.5" y="883.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1156.5" y="894.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (4 samples, 0.06%)</title><rect x="1153.5" y="867.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1156.5" y="878.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (3 samples, 0.04%)</title><rect x="1153.6" y="851.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1156.6" y="862.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$108/403875893.getAsBoolean (3 samples, 0.04%)</title><rect x="1153.6" y="835.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1156.6" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (3 samples, 0.04%)</title><rect x="1153.6" y="819.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1156.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (3 samples, 0.04%)</title><rect x="1153.6" y="803.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1156.6" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (216 samples, 3.00%)</title><rect x="1154.5" y="899.0" width="35.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1157.5" y="910.0">sun..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (2 samples, 0.03%)</title><rect x="1154.8" y="883.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1157.8" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (8 samples, 0.11%)</title><rect x="1155.1" y="883.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1158.1" y="894.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (8 samples, 0.11%)</title><rect x="1155.1" y="867.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1158.1" y="878.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.06%)</title><rect x="1155.8" y="851.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1158.8" y="862.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.06%)</title><rect x="1155.8" y="835.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1158.8" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.06%)</title><rect x="1155.8" y="819.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1158.8" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (3 samples, 0.04%)</title><rect x="1156.4" y="883.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1159.4" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (194 samples, 2.69%)</title><rect x="1157.1" y="883.0" width="31.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1160.1" y="894.0">su..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (9 samples, 0.12%)</title><rect x="1158.1" y="867.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1161.1" y="878.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (6 samples, 0.08%)</title><rect x="1158.6" y="851.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1161.6" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (3 samples, 0.04%)</title><rect x="1158.7" y="835.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1161.7" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (3 samples, 0.04%)</title><rect x="1158.7" y="819.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1161.7" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (2 samples, 0.03%)</title><rect x="1158.7" y="803.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1161.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.03%)</title><rect x="1159.2" y="835.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1162.2" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (167 samples, 2.32%)</title><rect x="1159.5" y="867.0" width="27.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1162.5" y="878.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (166 samples, 2.30%)</title><rect x="1159.7" y="851.0" width="27.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1162.7" y="862.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (166 samples, 2.30%)</title><rect x="1159.7" y="835.0" width="27.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1162.7" y="846.0">s..</text>
</g>
<g>
<title>__libc_write (160 samples, 2.22%)</title><rect x="1160.2" y="819.0" width="26.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1163.2" y="830.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (123 samples, 1.71%)</title><rect x="1166.3" y="803.0" width="20.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1169.3" y="814.0"></text>
</g>
<g>
<title>__x64_sys_write (2 samples, 0.03%)</title><rect x="1166.3" y="787.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1169.3" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (121 samples, 1.68%)</title><rect x="1166.6" y="787.0" width="19.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1169.6" y="798.0"></text>
</g>
<g>
<title>__x64_sys_write (85 samples, 1.18%)</title><rect x="1172.5" y="771.0" width="13.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1175.5" y="782.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.03%)</title><rect x="1172.5" y="755.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1175.5" y="766.0"></text>
</g>
<g>
<title>ksys_write (83 samples, 1.15%)</title><rect x="1172.8" y="755.0" width="13.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1175.8" y="766.0"></text>
</g>
<g>
<title>__fdget_pos (7 samples, 0.10%)</title><rect x="1172.8" y="739.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1175.8" y="750.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.08%)</title><rect x="1173.0" y="723.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1176.0" y="734.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.08%)</title><rect x="1173.0" y="707.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1176.0" y="718.0"></text>
</g>
<g>
<title>vfs_write (72 samples, 1.00%)</title><rect x="1174.6" y="739.0" width="11.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1177.6" y="750.0"></text>
</g>
<g>
<title>__vfs_write (62 samples, 0.86%)</title><rect x="1175.4" y="723.0" width="10.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1178.4" y="734.0"></text>
</g>
<g>
<title>new_sync_write (62 samples, 0.86%)</title><rect x="1175.4" y="707.0" width="10.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1178.4" y="718.0"></text>
</g>
<g>
<title>generic_file_write_iter (59 samples, 0.82%)</title><rect x="1175.6" y="691.0" width="9.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1178.6" y="702.0"></text>
</g>
<g>
<title>__generic_file_write_iter (51 samples, 0.71%)</title><rect x="1176.4" y="675.0" width="8.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1179.4" y="686.0"></text>
</g>
<g>
<title>file_update_time (3 samples, 0.04%)</title><rect x="1177.4" y="659.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1180.4" y="670.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.03%)</title><rect x="1177.6" y="643.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1180.6" y="654.0"></text>
</g>
<g>
<title>generic_perform_write (39 samples, 0.54%)</title><rect x="1177.9" y="659.0" width="6.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1180.9" y="670.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (4 samples, 0.06%)</title><rect x="1178.7" y="643.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1181.7" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="1179.0" y="627.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1182.0" y="638.0"></text>
</g>
<g>
<title>shmem_write_begin (23 samples, 0.32%)</title><rect x="1179.5" y="643.0" width="3.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1182.5" y="654.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (23 samples, 0.32%)</title><rect x="1179.5" y="627.0" width="3.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1182.5" y="638.0"></text>
</g>
<g>
<title>find_lock_entry (13 samples, 0.18%)</title><rect x="1180.5" y="611.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1183.5" y="622.0"></text>
</g>
<g>
<title>find_get_entry (9 samples, 0.12%)</title><rect x="1181.0" y="595.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1184.0" y="606.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.04%)</title><rect x="1181.6" y="579.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1184.6" y="590.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.03%)</title><rect x="1182.1" y="579.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1185.1" y="590.0"></text>
</g>
<g>
<title>mark_page_accessed (3 samples, 0.04%)</title><rect x="1182.6" y="611.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1185.6" y="622.0"></text>
</g>
<g>
<title>shmem_write_end (6 samples, 0.08%)</title><rect x="1183.3" y="643.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1186.3" y="654.0"></text>
</g>
<g>
<title>__set_page_dirty_no_writeback (2 samples, 0.03%)</title><rect x="1183.8" y="627.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1186.8" y="638.0"></text>
</g>
<g>
<title>shmem_write_begin (2 samples, 0.03%)</title><rect x="1184.4" y="659.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1187.4" y="670.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.06%)</title><rect x="1185.7" y="723.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1188.7" y="734.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.04%)</title><rect x="1185.9" y="707.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1188.9" y="718.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.04%)</title><rect x="1186.4" y="819.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1189.4" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.08%)</title><rect x="1186.9" y="867.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1189.9" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.04%)</title><rect x="1187.4" y="851.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1190.4" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (6 samples, 0.08%)</title><rect x="1187.9" y="867.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1190.9" y="878.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.04%)</title><rect x="1187.9" y="851.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1190.9" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (2 samples, 0.03%)</title><rect x="1188.5" y="851.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1191.5" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.07%)</title><rect x="1188.9" y="883.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1191.9" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (5 samples, 0.07%)</title><rect x="1188.9" y="867.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1191.9" y="878.0"></text>
</g>
</g>
</svg>
