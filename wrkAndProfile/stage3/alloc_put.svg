<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1174" onload="init(evt)" viewBox="0 0 1200 1174" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1157"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1157"> </text>
<g id="frames">
<g>
<title>all (4,189 samples, 100.00%)</title><rect x="10.0" y="1123.0" width="1180.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="13.0" y="1134.0">all</text>
</g>
<g>
<title>[JMX server connection timeout 27 tid=60398] (48 samples, 1.15%)</title><rect x="10.0" y="1107.0" width="13.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/Thread.run (48 samples, 1.15%)</title><rect x="10.0" y="1091.0" width="13.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="1102.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (48 samples, 1.15%)</title><rect x="10.0" y="1075.0" width="13.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="1086.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (48 samples, 1.15%)</title><rect x="10.0" y="1059.0" width="13.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1658533399.linkToTargetMethod (48 samples, 1.15%)</title><rect x="10.0" y="1043.0" width="13.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/574519372.invoke (48 samples, 1.15%)</title><rect x="10.0" y="1027.0" width="13.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 1.15%)</title><rect x="10.0" y="1011.0" width="13.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (48 samples, 1.15%)</title><rect x="10.0" y="995.0" width="13.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (48 samples, 1.15%)</title><rect x="10.0" y="979.0" width="13.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>byte[] (48 samples, 1.15%)</title><rect x="10.0" y="963.0" width="13.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=60315] (387 samples, 9.24%)</title><rect x="23.5" y="1107.0" width="109.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="26.5" y="1118.0">[NIO Selector..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (387 samples, 9.24%)</title><rect x="23.5" y="1091.0" width="109.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.5" y="1102.0">one/nio/serve..</text>
</g>
<g>
<title>one/nio/net/Session.process (387 samples, 9.24%)</title><rect x="23.5" y="1075.0" width="109.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="26.5" y="1086.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (387 samples, 9.24%)</title><rect x="23.5" y="1059.0" width="109.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="26.5" y="1070.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (387 samples, 9.24%)</title><rect x="23.5" y="1043.0" width="109.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="26.5" y="1054.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (70 samples, 1.67%)</title><rect x="23.5" y="1027.0" width="19.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="26.5" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (70 samples, 1.67%)</title><rect x="23.5" y="1011.0" width="19.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.5" y="1022.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (45 samples, 1.07%)</title><rect x="23.5" y="995.0" width="12.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (23 samples, 0.55%)</title><rect x="23.5" y="979.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="26.5" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (23 samples, 0.55%)</title><rect x="23.5" y="963.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.5" y="974.0"></text>
</g>
<g>
<title>java/lang/String.substring (23 samples, 0.55%)</title><rect x="23.5" y="947.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="26.5" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (23 samples, 0.55%)</title><rect x="23.5" y="931.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="26.5" y="942.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.21%)</title><rect x="23.5" y="915.0" width="2.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="26.5" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.33%)</title><rect x="26.1" y="915.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="29.1" y="926.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.33%)</title><rect x="26.1" y="899.0" width="3.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="29.1" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.put (22 samples, 0.53%)</title><rect x="30.0" y="979.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="33.0" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.50%)</title><rect x="30.0" y="963.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="33.0" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.50%)</title><rect x="30.0" y="947.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="33.0" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$105/1788683425.get$Lambda (21 samples, 0.50%)</title><rect x="30.0" y="931.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="33.0" y="942.0"></text>
</g>
<g>
<title>ru.mail.polis.service.valaubr.HttpService$$Lambda$105 (21 samples, 0.50%)</title><rect x="30.0" y="915.0" width="5.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="33.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="35.9" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="38.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.02%)</title><rect x="35.9" y="947.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="38.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="35.9" y="931.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="38.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="35.9" y="915.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="38.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="35.9" y="899.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="38.9" y="910.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.02%)</title><rect x="35.9" y="883.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="38.9" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (25 samples, 0.60%)</title><rect x="36.2" y="995.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="39.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (25 samples, 0.60%)</title><rect x="36.2" y="979.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="39.2" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (25 samples, 0.60%)</title><rect x="36.2" y="963.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.2" y="974.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.31%)</title><rect x="36.2" y="947.0" width="3.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="39.2" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.29%)</title><rect x="39.9" y="947.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="42.9" y="958.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.29%)</title><rect x="39.9" y="931.0" width="3.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="42.9" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (174 samples, 4.15%)</title><rect x="43.2" y="1027.0" width="49.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="46.2" y="1038.0">one/n..</text>
</g>
<g>
<title>one.nio.http.Request (18 samples, 0.43%)</title><rect x="43.2" y="1011.0" width="5.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="46.2" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (37 samples, 0.88%)</title><rect x="48.3" y="1011.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="51.3" y="1022.0"></text>
</g>
<g>
<title>java.lang.String[] (37 samples, 0.88%)</title><rect x="48.3" y="995.0" width="10.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="51.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (119 samples, 2.84%)</title><rect x="58.7" y="1011.0" width="33.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.7" y="1022.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (119 samples, 2.84%)</title><rect x="58.7" y="995.0" width="33.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.7" y="1006.0">on..</text>
</g>
<g>
<title>char[] (79 samples, 1.89%)</title><rect x="58.7" y="979.0" width="22.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="61.7" y="990.0">c..</text>
</g>
<g>
<title>java.lang.String (19 samples, 0.45%)</title><rect x="81.0" y="979.0" width="5.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="84.0" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (21 samples, 0.50%)</title><rect x="86.3" y="979.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="89.3" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (21 samples, 0.50%)</title><rect x="86.3" y="963.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="89.3" y="974.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (21 samples, 0.50%)</title><rect x="86.3" y="947.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="89.3" y="958.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.50%)</title><rect x="86.3" y="931.0" width="6.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="89.3" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (11 samples, 0.26%)</title><rect x="92.3" y="1027.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.3" y="1038.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.26%)</title><rect x="92.3" y="1011.0" width="3.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="95.3" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (24 samples, 0.57%)</title><rect x="95.4" y="1027.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="98.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.substring (24 samples, 0.57%)</title><rect x="95.4" y="1011.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="98.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (24 samples, 0.57%)</title><rect x="95.4" y="995.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="98.4" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.33%)</title><rect x="95.4" y="979.0" width="3.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="98.4" y="990.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.24%)</title><rect x="99.3" y="979.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="102.3" y="990.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.24%)</title><rect x="99.3" y="963.0" width="2.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="102.3" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (108 samples, 2.58%)</title><rect x="102.1" y="1027.0" width="30.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="105.1" y="1038.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (108 samples, 2.58%)</title><rect x="102.1" y="1011.0" width="30.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.1" y="1022.0">on..</text>
</g>
<g>
<title>char[] (47 samples, 1.12%)</title><rect x="102.1" y="995.0" width="13.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="105.1" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.67%)</title><rect x="115.4" y="995.0" width="7.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="118.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (33 samples, 0.79%)</title><rect x="123.2" y="995.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (33 samples, 0.79%)</title><rect x="123.2" y="979.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="126.2" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (33 samples, 0.79%)</title><rect x="123.2" y="963.0" width="9.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.2" y="974.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.79%)</title><rect x="123.2" y="947.0" width="9.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="126.2" y="958.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=60316] (471 samples, 11.24%)</title><rect x="132.5" y="1107.0" width="132.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="135.5" y="1118.0">[NIO Selector #1..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (471 samples, 11.24%)</title><rect x="132.5" y="1091.0" width="132.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="135.5" y="1102.0">one/nio/server/S..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (32 samples, 0.76%)</title><rect x="132.5" y="1075.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.5" y="1086.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (32 samples, 0.76%)</title><rect x="132.5" y="1059.0" width="9.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="135.5" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (439 samples, 10.48%)</title><rect x="141.5" y="1075.0" width="123.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.5" y="1086.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (439 samples, 10.48%)</title><rect x="141.5" y="1059.0" width="123.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="144.5" y="1070.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (439 samples, 10.48%)</title><rect x="141.5" y="1043.0" width="123.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="144.5" y="1054.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (86 samples, 2.05%)</title><rect x="141.5" y="1027.0" width="24.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.5" y="1038.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (86 samples, 2.05%)</title><rect x="141.5" y="1011.0" width="24.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="144.5" y="1022.0">o..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (54 samples, 1.29%)</title><rect x="141.5" y="995.0" width="15.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (36 samples, 0.86%)</title><rect x="141.5" y="979.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="144.5" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (36 samples, 0.86%)</title><rect x="141.5" y="963.0" width="10.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="144.5" y="974.0"></text>
</g>
<g>
<title>java/lang/String.substring (36 samples, 0.86%)</title><rect x="141.5" y="947.0" width="10.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="144.5" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (36 samples, 0.86%)</title><rect x="141.5" y="931.0" width="10.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="144.5" y="942.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.41%)</title><rect x="141.5" y="915.0" width="4.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="144.5" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.45%)</title><rect x="146.3" y="915.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.3" y="926.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.45%)</title><rect x="146.3" y="899.0" width="5.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="149.3" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.put (18 samples, 0.43%)</title><rect x="151.7" y="979.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="154.7" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.43%)</title><rect x="151.7" y="963.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="154.7" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.43%)</title><rect x="151.7" y="947.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="154.7" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$105/1788683425.get$Lambda (18 samples, 0.43%)</title><rect x="151.7" y="931.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="154.7" y="942.0"></text>
</g>
<g>
<title>ru.mail.polis.service.valaubr.HttpService$$Lambda$105 (18 samples, 0.43%)</title><rect x="151.7" y="915.0" width="5.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="154.7" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (32 samples, 0.76%)</title><rect x="156.8" y="995.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (32 samples, 0.76%)</title><rect x="156.8" y="979.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="159.8" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.76%)</title><rect x="156.8" y="963.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="159.8" y="974.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.43%)</title><rect x="156.8" y="947.0" width="5.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="159.8" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.33%)</title><rect x="161.8" y="947.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="164.8" y="958.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.33%)</title><rect x="161.8" y="931.0" width="4.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="164.8" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (147 samples, 3.51%)</title><rect x="165.8" y="1027.0" width="41.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="168.8" y="1038.0">one..</text>
</g>
<g>
<title>one.nio.http.Request (28 samples, 0.67%)</title><rect x="165.8" y="1011.0" width="7.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="168.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (47 samples, 1.12%)</title><rect x="173.7" y="1011.0" width="13.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="176.7" y="1022.0"></text>
</g>
<g>
<title>java.lang.String[] (46 samples, 1.10%)</title><rect x="173.7" y="995.0" width="12.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="176.7" y="1006.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.02%)</title><rect x="186.6" y="995.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="189.6" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (72 samples, 1.72%)</title><rect x="186.9" y="1011.0" width="20.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="189.9" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (72 samples, 1.72%)</title><rect x="186.9" y="995.0" width="20.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="189.9" y="1006.0"></text>
</g>
<g>
<title>char[] (36 samples, 0.86%)</title><rect x="186.9" y="979.0" width="10.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="189.9" y="990.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.21%)</title><rect x="197.0" y="979.0" width="2.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="200.0" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27 samples, 0.64%)</title><rect x="199.6" y="979.0" width="7.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="202.6" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (27 samples, 0.64%)</title><rect x="199.6" y="963.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="202.6" y="974.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (27 samples, 0.64%)</title><rect x="199.6" y="947.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="202.6" y="958.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.64%)</title><rect x="199.6" y="931.0" width="7.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="202.6" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (19 samples, 0.45%)</title><rect x="207.2" y="1027.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.2" y="1038.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.45%)</title><rect x="207.2" y="1011.0" width="5.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="210.2" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (35 samples, 0.84%)</title><rect x="212.5" y="1027.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="215.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.substring (35 samples, 0.84%)</title><rect x="212.5" y="1011.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="215.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (35 samples, 0.84%)</title><rect x="212.5" y="995.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="215.5" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.41%)</title><rect x="212.5" y="979.0" width="4.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="215.5" y="990.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.43%)</title><rect x="217.3" y="979.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="220.3" y="990.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.43%)</title><rect x="217.3" y="963.0" width="5.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="220.3" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (152 samples, 3.63%)</title><rect x="222.4" y="1027.0" width="42.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="225.4" y="1038.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (152 samples, 3.63%)</title><rect x="222.4" y="1011.0" width="42.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="225.4" y="1022.0">one/..</text>
</g>
<g>
<title>char[] (63 samples, 1.50%)</title><rect x="222.4" y="995.0" width="17.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="225.4" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.93%)</title><rect x="240.1" y="995.0" width="11.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="243.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (50 samples, 1.19%)</title><rect x="251.1" y="995.0" width="14.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="254.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (50 samples, 1.19%)</title><rect x="251.1" y="979.0" width="14.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="254.1" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (50 samples, 1.19%)</title><rect x="251.1" y="963.0" width="14.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="254.1" y="974.0"></text>
</g>
<g>
<title>byte[] (50 samples, 1.19%)</title><rect x="251.1" y="947.0" width="14.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="254.1" y="958.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=60317] (398 samples, 9.50%)</title><rect x="265.2" y="1107.0" width="112.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="268.2" y="1118.0">[NIO Selector ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (398 samples, 9.50%)</title><rect x="265.2" y="1091.0" width="112.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="268.2" y="1102.0">one/nio/server..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (32 samples, 0.76%)</title><rect x="265.2" y="1075.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="268.2" y="1086.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (32 samples, 0.76%)</title><rect x="265.2" y="1059.0" width="9.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="268.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (366 samples, 8.74%)</title><rect x="274.2" y="1075.0" width="103.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="277.2" y="1086.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (366 samples, 8.74%)</title><rect x="274.2" y="1059.0" width="103.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="277.2" y="1070.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (366 samples, 8.74%)</title><rect x="274.2" y="1043.0" width="103.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="277.2" y="1054.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (79 samples, 1.89%)</title><rect x="274.2" y="1027.0" width="22.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="277.2" y="1038.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (79 samples, 1.89%)</title><rect x="274.2" y="1011.0" width="22.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="277.2" y="1022.0">o..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (41 samples, 0.98%)</title><rect x="274.2" y="995.0" width="11.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="277.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (24 samples, 0.57%)</title><rect x="274.2" y="979.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="277.2" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (24 samples, 0.57%)</title><rect x="274.2" y="963.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="277.2" y="974.0"></text>
</g>
<g>
<title>java/lang/String.substring (24 samples, 0.57%)</title><rect x="274.2" y="947.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="277.2" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (24 samples, 0.57%)</title><rect x="274.2" y="931.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="277.2" y="942.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.29%)</title><rect x="274.2" y="915.0" width="3.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="277.2" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.29%)</title><rect x="277.6" y="915.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="280.6" y="926.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.29%)</title><rect x="277.6" y="899.0" width="3.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="280.6" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.put (17 samples, 0.41%)</title><rect x="281.0" y="979.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="284.0" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.38%)</title><rect x="281.0" y="963.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="284.0" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.38%)</title><rect x="281.0" y="947.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.0" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$105/1788683425.get$Lambda (16 samples, 0.38%)</title><rect x="281.0" y="931.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="284.0" y="942.0"></text>
</g>
<g>
<title>ru.mail.polis.service.valaubr.HttpService$$Lambda$105 (16 samples, 0.38%)</title><rect x="281.0" y="915.0" width="4.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="284.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="285.5" y="963.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="288.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.02%)</title><rect x="285.5" y="947.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="288.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="285.5" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="288.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="285.5" y="915.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="288.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="285.5" y="899.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.5" y="910.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.02%)</title><rect x="285.5" y="883.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="288.5" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (38 samples, 0.91%)</title><rect x="285.8" y="995.0" width="10.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="288.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (38 samples, 0.91%)</title><rect x="285.8" y="979.0" width="10.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="288.8" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (38 samples, 0.91%)</title><rect x="285.8" y="963.0" width="10.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="288.8" y="974.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.53%)</title><rect x="285.8" y="947.0" width="6.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="288.8" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.38%)</title><rect x="292.0" y="947.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="295.0" y="958.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.38%)</title><rect x="292.0" y="931.0" width="4.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="295.0" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (112 samples, 2.67%)</title><rect x="296.5" y="1027.0" width="31.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="299.5" y="1038.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (24 samples, 0.57%)</title><rect x="296.5" y="1011.0" width="6.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="299.5" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (43 samples, 1.03%)</title><rect x="303.2" y="1011.0" width="12.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="306.2" y="1022.0"></text>
</g>
<g>
<title>java.lang.String[] (39 samples, 0.93%)</title><rect x="303.2" y="995.0" width="11.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="306.2" y="1006.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.10%)</title><rect x="314.2" y="995.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="317.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (45 samples, 1.07%)</title><rect x="315.4" y="1011.0" width="12.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="318.4" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (45 samples, 1.07%)</title><rect x="315.4" y="995.0" width="12.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="318.4" y="1006.0"></text>
</g>
<g>
<title>char[] (20 samples, 0.48%)</title><rect x="315.4" y="979.0" width="5.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="318.4" y="990.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.21%)</title><rect x="321.0" y="979.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="324.0" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.38%)</title><rect x="323.5" y="979.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="326.5" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.38%)</title><rect x="323.5" y="963.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="326.5" y="974.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (16 samples, 0.38%)</title><rect x="323.5" y="947.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="326.5" y="958.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.38%)</title><rect x="323.5" y="931.0" width="4.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="326.5" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (8 samples, 0.19%)</title><rect x="328.0" y="1027.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="331.0" y="1038.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.19%)</title><rect x="328.0" y="1011.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="331.0" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (18 samples, 0.43%)</title><rect x="330.3" y="1027.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="333.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.43%)</title><rect x="330.3" y="1011.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="333.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.43%)</title><rect x="330.3" y="995.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="333.3" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.19%)</title><rect x="330.3" y="979.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="333.3" y="990.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.24%)</title><rect x="332.5" y="979.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="335.5" y="990.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.24%)</title><rect x="332.5" y="963.0" width="2.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="335.5" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (149 samples, 3.56%)</title><rect x="335.4" y="1027.0" width="41.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="338.4" y="1038.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (149 samples, 3.56%)</title><rect x="335.4" y="1011.0" width="41.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="338.4" y="1022.0">one..</text>
</g>
<g>
<title>char[] (70 samples, 1.67%)</title><rect x="335.4" y="995.0" width="19.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="338.4" y="1006.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.02%)</title><rect x="355.1" y="995.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="358.1" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (35 samples, 0.84%)</title><rect x="355.4" y="995.0" width="9.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="358.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (43 samples, 1.03%)</title><rect x="365.2" y="995.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="368.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (43 samples, 1.03%)</title><rect x="365.2" y="979.0" width="12.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="368.2" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (43 samples, 1.03%)</title><rect x="365.2" y="963.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="368.2" y="974.0"></text>
</g>
<g>
<title>byte[] (43 samples, 1.03%)</title><rect x="365.2" y="947.0" width="12.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="368.2" y="958.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=60318] (340 samples, 8.12%)</title><rect x="377.3" y="1107.0" width="95.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="380.3" y="1118.0">[NIO Select..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (340 samples, 8.12%)</title><rect x="377.3" y="1091.0" width="95.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="380.3" y="1102.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (22 samples, 0.53%)</title><rect x="377.3" y="1075.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="380.3" y="1086.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (22 samples, 0.53%)</title><rect x="377.3" y="1059.0" width="6.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="380.3" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (318 samples, 7.59%)</title><rect x="383.5" y="1075.0" width="89.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="386.5" y="1086.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (318 samples, 7.59%)</title><rect x="383.5" y="1059.0" width="89.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="386.5" y="1070.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (318 samples, 7.59%)</title><rect x="383.5" y="1043.0" width="89.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="386.5" y="1054.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (68 samples, 1.62%)</title><rect x="383.5" y="1027.0" width="19.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="386.5" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (68 samples, 1.62%)</title><rect x="383.5" y="1011.0" width="19.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="386.5" y="1022.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (41 samples, 0.98%)</title><rect x="383.5" y="995.0" width="11.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (28 samples, 0.67%)</title><rect x="383.5" y="979.0" width="7.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="386.5" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (28 samples, 0.67%)</title><rect x="383.5" y="963.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="386.5" y="974.0"></text>
</g>
<g>
<title>java/lang/String.substring (28 samples, 0.67%)</title><rect x="383.5" y="947.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.5" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.67%)</title><rect x="383.5" y="931.0" width="7.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="386.5" y="942.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.07%)</title><rect x="383.5" y="915.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="386.5" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.60%)</title><rect x="384.4" y="915.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="387.4" y="926.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.60%)</title><rect x="384.4" y="899.0" width="7.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="387.4" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.put (13 samples, 0.31%)</title><rect x="391.4" y="979.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.4" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.31%)</title><rect x="391.4" y="963.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="394.4" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.31%)</title><rect x="391.4" y="947.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="394.4" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$105/1788683425.get$Lambda (13 samples, 0.31%)</title><rect x="391.4" y="931.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="394.4" y="942.0"></text>
</g>
<g>
<title>ru.mail.polis.service.valaubr.HttpService$$Lambda$105 (13 samples, 0.31%)</title><rect x="391.4" y="915.0" width="3.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="394.4" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (27 samples, 0.64%)</title><rect x="395.1" y="995.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="398.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (27 samples, 0.64%)</title><rect x="395.1" y="979.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="398.1" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (27 samples, 0.64%)</title><rect x="395.1" y="963.0" width="7.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="398.1" y="974.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.41%)</title><rect x="395.1" y="947.0" width="4.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="398.1" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.24%)</title><rect x="399.9" y="947.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="402.9" y="958.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.24%)</title><rect x="399.9" y="931.0" width="2.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="402.9" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (115 samples, 2.75%)</title><rect x="402.7" y="1027.0" width="32.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="405.7" y="1038.0">on..</text>
</g>
<g>
<title>one.nio.http.Request (26 samples, 0.62%)</title><rect x="402.7" y="1011.0" width="7.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="405.7" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (30 samples, 0.72%)</title><rect x="410.0" y="1011.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="413.0" y="1022.0"></text>
</g>
<g>
<title>java.lang.String[] (30 samples, 0.72%)</title><rect x="410.0" y="995.0" width="8.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="413.0" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 1.41%)</title><rect x="418.5" y="1011.0" width="16.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="421.5" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 1.41%)</title><rect x="418.5" y="995.0" width="16.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="421.5" y="1006.0"></text>
</g>
<g>
<title>char[] (34 samples, 0.81%)</title><rect x="418.5" y="979.0" width="9.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="421.5" y="990.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.29%)</title><rect x="428.0" y="979.0" width="3.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="431.0" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.31%)</title><rect x="431.4" y="979.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="434.4" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (13 samples, 0.31%)</title><rect x="431.4" y="963.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="434.4" y="974.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (13 samples, 0.31%)</title><rect x="431.4" y="947.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="434.4" y="958.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.31%)</title><rect x="431.4" y="931.0" width="3.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="434.4" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (14 samples, 0.33%)</title><rect x="435.1" y="1027.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="438.1" y="1038.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.33%)</title><rect x="435.1" y="1011.0" width="3.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="438.1" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (17 samples, 0.41%)</title><rect x="439.0" y="1027.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="442.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.substring (17 samples, 0.41%)</title><rect x="439.0" y="1011.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="442.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (17 samples, 0.41%)</title><rect x="439.0" y="995.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="442.0" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.26%)</title><rect x="439.0" y="979.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="442.0" y="990.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.14%)</title><rect x="442.1" y="979.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="445.1" y="990.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.14%)</title><rect x="442.1" y="963.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="445.1" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (104 samples, 2.48%)</title><rect x="443.8" y="1027.0" width="29.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="446.8" y="1038.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (104 samples, 2.48%)</title><rect x="443.8" y="1011.0" width="29.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="446.8" y="1022.0">on..</text>
</g>
<g>
<title>char[] (46 samples, 1.10%)</title><rect x="443.8" y="995.0" width="13.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="446.8" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.50%)</title><rect x="456.8" y="995.0" width="5.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="459.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.88%)</title><rect x="462.7" y="995.0" width="10.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.88%)</title><rect x="462.7" y="979.0" width="10.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="465.7" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (37 samples, 0.88%)</title><rect x="462.7" y="963.0" width="10.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="465.7" y="974.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.88%)</title><rect x="462.7" y="947.0" width="10.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="465.7" y="958.0"></text>
</g>
<g>
<title>[RMI TCP Connection(4)-127.0.0.1 tid=60964] (439 samples, 10.48%)</title><rect x="473.1" y="1107.0" width="123.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="476.1" y="1118.0">[RMI TCP Connec..</text>
</g>
<g>
<title>java/lang/Thread.run (439 samples, 10.48%)</title><rect x="473.1" y="1091.0" width="123.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="476.1" y="1102.0">java/lang/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (439 samples, 10.48%)</title><rect x="473.1" y="1075.0" width="123.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="476.1" y="1086.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (439 samples, 10.48%)</title><rect x="473.1" y="1059.0" width="123.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="476.1" y="1070.0">java/util/concu..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (439 samples, 10.48%)</title><rect x="473.1" y="1043.0" width="123.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.1" y="1054.0">sun/rmi/transpo..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (439 samples, 10.48%)</title><rect x="473.1" y="1027.0" width="123.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="476.1" y="1038.0">java/security/A..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$92/1130878433.run (439 samples, 10.48%)</title><rect x="473.1" y="1011.0" width="123.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="476.1" y="1022.0">sun/rmi/transpo..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (439 samples, 10.48%)</title><rect x="473.1" y="995.0" width="123.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="476.1" y="1006.0">sun/rmi/transpo..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (439 samples, 10.48%)</title><rect x="473.1" y="979.0" width="123.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="476.1" y="990.0">sun/rmi/transpo..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (439 samples, 10.48%)</title><rect x="473.1" y="963.0" width="123.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="476.1" y="974.0">sun/rmi/transpo..</text>
</g>
<g>
<title>java.io.DataOutputStream (6 samples, 0.14%)</title><rect x="473.1" y="947.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="476.1" y="958.0"></text>
</g>
<g>
<title>sun.rmi.transport.StreamRemoteCall (1 samples, 0.02%)</title><rect x="474.8" y="947.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="477.8" y="958.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (432 samples, 10.31%)</title><rect x="475.1" y="947.0" width="121.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="478.1" y="958.0">sun/rmi/transpo..</text>
</g>
<g>
<title>java/rmi/server/ObjID.read (1 samples, 0.02%)</title><rect x="475.1" y="931.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="478.1" y="942.0"></text>
</g>
<g>
<title>java/rmi/server/UID.read (1 samples, 0.02%)</title><rect x="475.1" y="915.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="478.1" y="926.0"></text>
</g>
<g>
<title>java.rmi.server.UID (1 samples, 0.02%)</title><rect x="475.1" y="899.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="478.1" y="910.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (384 samples, 9.17%)</title><rect x="475.4" y="931.0" width="108.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="478.4" y="942.0">java/security..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (384 samples, 9.17%)</title><rect x="475.4" y="915.0" width="108.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="478.4" y="926.0">sun/rmi/trans..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (384 samples, 9.17%)</title><rect x="475.4" y="899.0" width="108.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="478.4" y="910.0">sun/rmi/trans..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (384 samples, 9.17%)</title><rect x="475.4" y="883.0" width="108.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="478.4" y="894.0">sun/rmi/serve..</text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="475.4" y="867.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="478.4" y="878.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.02%)</title><rect x="475.9" y="867.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="478.9" y="878.0"></text>
</g>
<g>
<title>java.lang.Long (1 samples, 0.02%)</title><rect x="475.9" y="851.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="478.9" y="862.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (212 samples, 5.06%)</title><rect x="476.2" y="867.0" width="59.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="479.2" y="878.0">java/l..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (212 samples, 5.06%)</title><rect x="476.2" y="851.0" width="59.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="479.2" y="862.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (5 samples, 0.12%)</title><rect x="476.2" y="835.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="479.2" y="846.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttribute (5 samples, 0.12%)</title><rect x="476.2" y="819.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.2" y="830.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (5 samples, 0.12%)</title><rect x="476.2" y="803.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="479.2" y="814.0"></text>
</g>
<g>
<title>javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation (1 samples, 0.02%)</title><rect x="476.2" y="787.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="479.2" y="798.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (4 samples, 0.10%)</title><rect x="476.5" y="787.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.5" y="798.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (4 samples, 0.10%)</title><rect x="476.5" y="771.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="479.5" y="782.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttribute (4 samples, 0.10%)</title><rect x="476.5" y="755.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="479.5" y="766.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttribute (4 samples, 0.10%)</title><rect x="476.5" y="739.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="479.5" y="750.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getMBean (2 samples, 0.05%)</title><rect x="476.5" y="723.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="479.5" y="734.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieve (2 samples, 0.05%)</title><rect x="476.5" y="707.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="479.5" y="718.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieveNamedObject (2 samples, 0.05%)</title><rect x="476.5" y="691.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="479.5" y="702.0"></text>
</g>
<g>
<title>javax/management/ObjectName.getCanonicalKeyPropertyListString (1 samples, 0.02%)</title><rect x="476.5" y="675.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="479.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="476.5" y="659.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="479.5" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="476.5" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="479.5" y="654.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="476.5" y="627.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="479.5" y="638.0"></text>
</g>
<g>
<title>javax/management/ObjectName.getDomain (1 samples, 0.02%)</title><rect x="476.8" y="675.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="479.8" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="476.8" y="659.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="479.8" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="476.8" y="643.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="479.8" y="654.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="476.8" y="627.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="479.8" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.nonDefaultDomain (1 samples, 0.02%)</title><rect x="477.0" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="480.0" y="734.0"></text>
</g>
<g>
<title>javax/management/ObjectName.getDomain (1 samples, 0.02%)</title><rect x="477.0" y="707.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="477.0" y="691.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="480.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="477.0" y="675.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.0" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="477.0" y="659.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="480.0" y="670.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="477.0" y="643.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="480.0" y="654.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.getAttribute (1 samples, 0.02%)</title><rect x="477.3" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="480.3" y="734.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttribute (1 samples, 0.02%)</title><rect x="477.3" y="707.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="480.3" y="718.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.getAttribute (1 samples, 0.02%)</title><rect x="477.3" y="691.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.3" y="702.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (1 samples, 0.02%)</title><rect x="477.3" y="675.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.3" y="686.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.02%)</title><rect x="477.3" y="659.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="480.3" y="670.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.02%)</title><rect x="477.3" y="643.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.3" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.02%)</title><rect x="477.3" y="627.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="480.3" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.02%)</title><rect x="477.3" y="611.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.3" y="622.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (1 samples, 0.02%)</title><rect x="477.3" y="595.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.3" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="477.3" y="579.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="480.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (1 samples, 0.02%)</title><rect x="477.6" y="835.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="480.6" y="846.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttributes (1 samples, 0.02%)</title><rect x="477.6" y="819.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="480.6" y="830.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (1 samples, 0.02%)</title><rect x="477.6" y="803.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="480.6" y="814.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (1 samples, 0.02%)</title><rect x="477.6" y="787.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="480.6" y="798.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (1 samples, 0.02%)</title><rect x="477.6" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="480.6" y="782.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttributes (1 samples, 0.02%)</title><rect x="477.6" y="755.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="480.6" y="766.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttributes (1 samples, 0.02%)</title><rect x="477.6" y="739.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="480.6" y="750.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.getAttributes (1 samples, 0.02%)</title><rect x="477.6" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="480.6" y="734.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttributes (1 samples, 0.02%)</title><rect x="477.6" y="707.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.6" y="718.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttribute (1 samples, 0.02%)</title><rect x="477.6" y="691.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="480.6" y="702.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.getAttribute (1 samples, 0.02%)</title><rect x="477.6" y="675.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="480.6" y="686.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (1 samples, 0.02%)</title><rect x="477.6" y="659.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="480.6" y="670.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.02%)</title><rect x="477.6" y="643.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.6" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.02%)</title><rect x="477.6" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="480.6" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.02%)</title><rect x="477.6" y="611.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.6" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.02%)</title><rect x="477.6" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="480.6" y="606.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (1 samples, 0.02%)</title><rect x="477.6" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.6" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="477.6" y="563.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="480.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="477.6" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="480.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (1 samples, 0.02%)</title><rect x="477.6" y="531.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="480.6" y="542.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (1 samples, 0.02%)</title><rect x="477.6" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="480.6" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="477.6" y="499.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="480.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="477.6" y="483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor44.invoke (1 samples, 0.02%)</title><rect x="477.6" y="467.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="480.6" y="478.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getAllThreadIds (1 samples, 0.02%)</title><rect x="477.6" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="480.6" y="462.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreads (1 samples, 0.02%)</title><rect x="477.6" y="435.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.6" y="446.0"></text>
</g>
<g>
<title>java.lang.Thread[] (1 samples, 0.02%)</title><rect x="477.6" y="419.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="480.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor40.invoke (206 samples, 4.92%)</title><rect x="477.9" y="835.0" width="58.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.9" y="846.0">jdk/in..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (206 samples, 4.92%)</title><rect x="477.9" y="819.0" width="58.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.9" y="830.0">javax/..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (177 samples, 4.23%)</title><rect x="477.9" y="803.0" width="49.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="480.9" y="814.0">javax..</text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.rspOutgoing (2 samples, 0.05%)</title><rect x="477.9" y="787.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="480.9" y="798.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (2 samples, 0.05%)</title><rect x="477.9" y="771.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="480.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1658533399.linkToTargetMethod (2 samples, 0.05%)</title><rect x="477.9" y="755.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="480.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/574519372.invoke (2 samples, 0.05%)</title><rect x="477.9" y="739.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="477.9" y="723.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="480.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.02%)</title><rect x="477.9" y="707.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="480.9" y="718.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="477.9" y="691.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="480.9" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.02%)</title><rect x="478.2" y="707.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="481.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.02%)</title><rect x="478.2" y="691.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="481.2" y="702.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="478.2" y="675.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="481.2" y="686.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (175 samples, 4.18%)</title><rect x="478.5" y="787.0" width="49.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="481.5" y="798.0">javax..</text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (175 samples, 4.18%)</title><rect x="478.5" y="771.0" width="49.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="481.5" y="782.0">javax..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (175 samples, 4.18%)</title><rect x="478.5" y="755.0" width="49.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="481.5" y="766.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (175 samples, 4.18%)</title><rect x="478.5" y="739.0" width="49.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="481.5" y="750.0">com/s..</text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (175 samples, 4.18%)</title><rect x="478.5" y="723.0" width="49.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="481.5" y="734.0">javax..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (175 samples, 4.18%)</title><rect x="478.5" y="707.0" width="49.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="481.5" y="718.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (175 samples, 4.18%)</title><rect x="478.5" y="691.0" width="49.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="481.5" y="702.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (175 samples, 4.18%)</title><rect x="478.5" y="675.0" width="49.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="481.5" y="686.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (175 samples, 4.18%)</title><rect x="478.5" y="659.0" width="49.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="481.5" y="670.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (175 samples, 4.18%)</title><rect x="478.5" y="643.0" width="49.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="481.5" y="654.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (175 samples, 4.18%)</title><rect x="478.5" y="627.0" width="49.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="481.5" y="638.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (175 samples, 4.18%)</title><rect x="478.5" y="611.0" width="49.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.5" y="622.0">com/s..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (166 samples, 3.96%)</title><rect x="478.5" y="595.0" width="46.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="481.5" y="606.0">com/..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (166 samples, 3.96%)</title><rect x="478.5" y="579.0" width="46.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="481.5" y="590.0">com/..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (165 samples, 3.94%)</title><rect x="478.5" y="563.0" width="46.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="481.5" y="574.0">com/..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (165 samples, 3.94%)</title><rect x="478.5" y="547.0" width="46.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="481.5" y="558.0">com/..</text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (65 samples, 1.55%)</title><rect x="478.5" y="531.0" width="18.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="481.5" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (56 samples, 1.34%)</title><rect x="478.5" y="515.0" width="15.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.5" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (51 samples, 1.22%)</title><rect x="478.5" y="499.0" width="14.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="481.5" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (51 samples, 1.22%)</title><rect x="478.5" y="483.0" width="14.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="481.5" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.10%)</title><rect x="478.5" y="467.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="481.5" y="478.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (33 samples, 0.79%)</title><rect x="479.6" y="467.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="482.6" y="478.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (2 samples, 0.05%)</title><rect x="479.6" y="451.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="482.6" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySet (2 samples, 0.05%)</title><rect x="479.6" y="435.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="482.6" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (2 samples, 0.05%)</title><rect x="479.6" y="419.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="482.6" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (2 samples, 0.05%)</title><rect x="479.6" y="403.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="482.6" y="414.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (31 samples, 0.74%)</title><rect x="480.1" y="451.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="483.1" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.05%)</title><rect x="480.1" y="435.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="483.1" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (29 samples, 0.69%)</title><rect x="480.7" y="435.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="483.7" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (29 samples, 0.69%)</title><rect x="480.7" y="419.0" width="8.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="483.7" y="430.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (14 samples, 0.33%)</title><rect x="488.9" y="467.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="491.9" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.33%)</title><rect x="488.9" y="451.0" width="3.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="491.9" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (5 samples, 0.12%)</title><rect x="492.8" y="499.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="495.8" y="510.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeData[] (5 samples, 0.12%)</title><rect x="492.8" y="483.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="495.8" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (9 samples, 0.21%)</title><rect x="494.2" y="515.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="497.2" y="526.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeDataSupport (1 samples, 0.02%)</title><rect x="494.2" y="499.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="497.2" y="510.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (5 samples, 0.12%)</title><rect x="494.5" y="499.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="497.5" y="510.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (3 samples, 0.07%)</title><rect x="494.5" y="483.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="497.5" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (2 samples, 0.05%)</title><rect x="494.5" y="467.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="497.5" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (2 samples, 0.05%)</title><rect x="494.5" y="451.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="497.5" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (2 samples, 0.05%)</title><rect x="494.5" y="435.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="497.5" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (2 samples, 0.05%)</title><rect x="494.5" y="419.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.5" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (2 samples, 0.05%)</title><rect x="494.5" y="403.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="497.5" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.keySet (1 samples, 0.02%)</title><rect x="495.1" y="467.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="498.1" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (1 samples, 0.02%)</title><rect x="495.1" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="498.1" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (1 samples, 0.02%)</title><rect x="495.1" y="435.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="498.1" y="446.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (2 samples, 0.05%)</title><rect x="495.4" y="483.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="498.4" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (1 samples, 0.02%)</title><rect x="495.4" y="467.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="498.4" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="495.6" y="467.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="498.6" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.02%)</title><rect x="495.6" y="451.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="498.6" y="462.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (3 samples, 0.07%)</title><rect x="495.9" y="499.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="498.9" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="495.9" y="483.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="498.9" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="496.5" y="483.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="499.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="496.5" y="467.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="499.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (1 samples, 0.02%)</title><rect x="496.5" y="451.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="499.5" y="462.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (1 samples, 0.02%)</title><rect x="496.5" y="435.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="499.5" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="496.5" y="419.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="499.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="496.5" y="403.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="499.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor32.invoke (1 samples, 0.02%)</title><rect x="496.5" y="387.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="499.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.02%)</title><rect x="496.5" y="371.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="499.5" y="382.0"></text>
</g>
<g>
<title>java.lang.Integer (1 samples, 0.02%)</title><rect x="496.5" y="355.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="499.5" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.12%)</title><rect x="496.8" y="531.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="499.8" y="542.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (49 samples, 1.17%)</title><rect x="498.2" y="531.0" width="13.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="501.2" y="542.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (3 samples, 0.07%)</title><rect x="498.2" y="515.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="501.2" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (3 samples, 0.07%)</title><rect x="498.2" y="499.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="501.2" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (3 samples, 0.07%)</title><rect x="498.2" y="483.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="501.2" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (3 samples, 0.07%)</title><rect x="498.2" y="467.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="501.2" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (3 samples, 0.07%)</title><rect x="498.2" y="451.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="501.2" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (3 samples, 0.07%)</title><rect x="498.2" y="435.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="501.2" y="446.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (46 samples, 1.10%)</title><rect x="499.0" y="515.0" width="13.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="502.0" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.10%)</title><rect x="499.0" y="499.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="502.0" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (42 samples, 1.00%)</title><rect x="500.1" y="499.0" width="11.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="503.1" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (42 samples, 1.00%)</title><rect x="500.1" y="483.0" width="11.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="503.1" y="494.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (46 samples, 1.10%)</title><rect x="512.0" y="531.0" width="12.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="515.0" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (41 samples, 0.98%)</title><rect x="512.0" y="515.0" width="11.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="515.0" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.12%)</title><rect x="523.5" y="515.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="526.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="523.5" y="499.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="526.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (5 samples, 0.12%)</title><rect x="523.5" y="483.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="526.5" y="494.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (5 samples, 0.12%)</title><rect x="523.5" y="467.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="526.5" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (5 samples, 0.12%)</title><rect x="523.5" y="451.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="526.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (5 samples, 0.12%)</title><rect x="523.5" y="435.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="526.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor12.invoke (1 samples, 0.02%)</title><rect x="523.5" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="526.5" y="430.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getLockedMonitors (1 samples, 0.02%)</title><rect x="523.5" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="526.5" y="414.0"></text>
</g>
<g>
<title>java.lang.management.MonitorInfo[] (1 samples, 0.02%)</title><rect x="523.5" y="387.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="526.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor13.invoke (1 samples, 0.02%)</title><rect x="523.8" y="419.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="526.8" y="430.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getLockedSynchronizers (1 samples, 0.02%)</title><rect x="523.8" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="526.8" y="414.0"></text>
</g>
<g>
<title>java.lang.management.LockInfo[] (1 samples, 0.02%)</title><rect x="523.8" y="387.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="526.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor15.invoke (1 samples, 0.02%)</title><rect x="524.1" y="419.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="527.1" y="430.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.getStackTrace (1 samples, 0.02%)</title><rect x="524.1" y="403.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="527.1" y="414.0"></text>
</g>
<g>
<title>java.lang.StackTraceElement[] (1 samples, 0.02%)</title><rect x="524.1" y="387.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="527.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor20.invoke (1 samples, 0.02%)</title><rect x="524.4" y="419.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="527.4" y="430.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.02%)</title><rect x="524.4" y="403.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="527.4" y="414.0"></text>
</g>
<g>
<title>java.lang.Long (1 samples, 0.02%)</title><rect x="524.4" y="387.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="527.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor4.invoke (1 samples, 0.02%)</title><rect x="524.6" y="419.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="527.6" y="430.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.02%)</title><rect x="524.6" y="403.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="527.6" y="414.0"></text>
</g>
<g>
<title>java.lang.Long (1 samples, 0.02%)</title><rect x="524.6" y="387.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="527.6" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1 samples, 0.02%)</title><rect x="524.9" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="527.9" y="574.0"></text>
</g>
<g>
<title>javax.management.openmbean.CompositeData[] (1 samples, 0.02%)</title><rect x="524.9" y="547.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="527.9" y="558.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (9 samples, 0.21%)</title><rect x="525.2" y="595.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="528.2" y="606.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (9 samples, 0.21%)</title><rect x="525.2" y="579.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="528.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (9 samples, 0.21%)</title><rect x="525.2" y="563.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="528.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (9 samples, 0.21%)</title><rect x="525.2" y="547.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="528.2" y="558.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (9 samples, 0.21%)</title><rect x="525.2" y="531.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="528.2" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (9 samples, 0.21%)</title><rect x="525.2" y="515.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="528.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (9 samples, 0.21%)</title><rect x="525.2" y="499.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="528.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (9 samples, 0.21%)</title><rect x="525.2" y="483.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="528.2" y="494.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (9 samples, 0.21%)</title><rect x="525.2" y="467.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="528.2" y="478.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (9 samples, 0.21%)</title><rect x="525.2" y="451.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="528.2" y="462.0"></text>
</g>
<g>
<title>java.lang.management.ThreadInfo (6 samples, 0.14%)</title><rect x="525.2" y="435.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="528.2" y="446.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.&lt;init&gt; (3 samples, 0.07%)</title><rect x="526.9" y="435.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="529.9" y="446.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.initialize (3 samples, 0.07%)</title><rect x="526.9" y="419.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="529.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="526.9" y="403.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="529.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (3 samples, 0.07%)</title><rect x="526.9" y="387.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1010931249.invoke (3 samples, 0.07%)</title><rect x="526.9" y="371.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="529.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="526.9" y="355.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="529.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.07%)</title><rect x="526.9" y="339.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="529.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.07%)</title><rect x="526.9" y="323.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="529.9" y="334.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="526.9" y="307.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="529.9" y="318.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getClassLoaderFor (4 samples, 0.10%)</title><rect x="527.7" y="803.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="530.7" y="814.0"></text>
</g>
<g>
<title>javax/management/MBeanPermission.&lt;init&gt; (2 samples, 0.05%)</title><rect x="527.7" y="787.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="530.7" y="798.0"></text>
</g>
<g>
<title>javax/management/MBeanPermission.parseActions (2 samples, 0.05%)</title><rect x="527.7" y="771.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="530.7" y="782.0"></text>
</g>
<g>
<title>javax/management/MBeanPermission.getMask (2 samples, 0.05%)</title><rect x="527.7" y="755.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="530.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.toCharArray (2 samples, 0.05%)</title><rect x="527.7" y="739.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="530.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toChars (2 samples, 0.05%)</title><rect x="527.7" y="723.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.7" y="734.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.05%)</title><rect x="527.7" y="707.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="530.7" y="718.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.withPermissions (2 samples, 0.05%)</title><rect x="528.3" y="787.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="531.3" y="798.0"></text>
</g>
<g>
<title>java/security/Permissions.add (2 samples, 0.05%)</title><rect x="528.3" y="771.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="531.3" y="782.0"></text>
</g>
<g>
<title>java/security/Permissions.getPermissionCollection (2 samples, 0.05%)</title><rect x="528.3" y="755.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="531.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (2 samples, 0.05%)</title><rect x="528.3" y="739.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="531.3" y="750.0"></text>
</g>
<g>
<title>java/security/Permissions$1.apply (1 samples, 0.02%)</title><rect x="528.3" y="723.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="531.3" y="734.0"></text>
</g>
<g>
<title>java/security/Permissions$1.apply (1 samples, 0.02%)</title><rect x="528.3" y="707.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="531.3" y="718.0"></text>
</g>
<g>
<title>java/security/PermissionsHash.&lt;init&gt; (1 samples, 0.02%)</title><rect x="528.3" y="691.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="531.3" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentHashMap (1 samples, 0.02%)</title><rect x="528.3" y="675.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="531.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.initTable (1 samples, 0.02%)</title><rect x="528.6" y="723.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="531.6" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentHashMap$Node[] (1 samples, 0.02%)</title><rect x="528.6" y="707.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="531.6" y="718.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (25 samples, 0.60%)</title><rect x="528.9" y="803.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="531.9" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (19 samples, 0.45%)</title><rect x="528.9" y="787.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="531.9" y="798.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (19 samples, 0.45%)</title><rect x="528.9" y="771.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="531.9" y="782.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (19 samples, 0.45%)</title><rect x="528.9" y="755.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="531.9" y="766.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/util/OrderClassLoaders.&lt;init&gt; (3 samples, 0.07%)</title><rect x="528.9" y="739.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="531.9" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (3 samples, 0.07%)</title><rect x="528.9" y="723.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="531.9" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (3 samples, 0.07%)</title><rect x="528.9" y="707.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="531.9" y="718.0"></text>
</g>
<g>
<title>java.util.Hashtable (1 samples, 0.02%)</title><rect x="528.9" y="691.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="531.9" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (1 samples, 0.02%)</title><rect x="529.2" y="691.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="532.2" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.02%)</title><rect x="529.2" y="675.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="529.2" y="659.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="532.2" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="529.2" y="643.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="532.2" y="654.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="529.2" y="627.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="532.2" y="638.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (1 samples, 0.02%)</title><rect x="529.4" y="691.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="532.4" y="702.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (1 samples, 0.02%)</title><rect x="529.4" y="675.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="532.4" y="686.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (1 samples, 0.02%)</title><rect x="529.4" y="659.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.4" y="670.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="529.4" y="643.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="532.4" y="654.0"></text>
</g>
<g>
<title>javax.management.remote.rmi.RMIConnectionImpl$CombinedClassLoader (1 samples, 0.02%)</title><rect x="529.7" y="739.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="532.7" y="750.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader.&lt;init&gt; (15 samples, 0.36%)</title><rect x="530.0" y="739.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="533.0" y="750.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (6 samples, 0.14%)</title><rect x="530.0" y="723.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="533.0" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (6 samples, 0.14%)</title><rect x="530.0" y="707.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="533.0" y="718.0"></text>
</g>
<g>
<title>java.util.Vector (1 samples, 0.02%)</title><rect x="530.0" y="691.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="533.0" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (1 samples, 0.02%)</title><rect x="530.3" y="691.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="533.3" y="702.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (1 samples, 0.02%)</title><rect x="530.3" y="675.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="533.3" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (1 samples, 0.02%)</title><rect x="530.3" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="533.3" y="670.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="530.3" y="643.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="533.3" y="654.0"></text>
</g>
<g>
<title>java/util/Hashtable.&lt;init&gt; (1 samples, 0.02%)</title><rect x="530.6" y="691.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="533.6" y="702.0"></text>
</g>
<g>
<title>java/util/Hashtable.&lt;init&gt; (1 samples, 0.02%)</title><rect x="530.6" y="675.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="533.6" y="686.0"></text>
</g>
<g>
<title>java.util.Hashtable$Entry[] (1 samples, 0.02%)</title><rect x="530.6" y="659.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="533.6" y="670.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (3 samples, 0.07%)</title><rect x="530.8" y="691.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="533.8" y="702.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (3 samples, 0.07%)</title><rect x="530.8" y="675.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="533.8" y="686.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (3 samples, 0.07%)</title><rect x="530.8" y="659.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="533.8" y="670.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.07%)</title><rect x="530.8" y="643.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="533.8" y="654.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader$ClassLoaderWrapper.&lt;init&gt; (9 samples, 0.21%)</title><rect x="531.7" y="723.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="534.7" y="734.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (9 samples, 0.21%)</title><rect x="531.7" y="707.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="534.7" y="718.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (9 samples, 0.21%)</title><rect x="531.7" y="691.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="534.7" y="702.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.nameAndId (7 samples, 0.17%)</title><rect x="531.7" y="675.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="534.7" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.toHexString (1 samples, 0.02%)</title><rect x="531.7" y="659.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="534.7" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.toUnsignedString0 (1 samples, 0.02%)</title><rect x="531.7" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="534.7" y="654.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="531.7" y="627.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="534.7" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="532.0" y="659.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="535.0" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="532.0" y="643.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="535.0" y="654.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="532.0" y="627.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="535.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.05%)</title><rect x="532.3" y="659.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="535.3" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.05%)</title><rect x="532.3" y="643.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="535.3" y="654.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.05%)</title><rect x="532.3" y="627.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="535.3" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="532.3" y="611.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="535.3" y="622.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="532.3" y="595.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="535.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.07%)</title><rect x="532.8" y="659.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="535.8" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="532.8" y="643.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="535.8" y="654.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="532.8" y="627.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="535.8" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="533.1" y="627.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="536.1" y="638.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="533.1" y="611.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="536.1" y="622.0"></text>
</g>
<g>
<title>java/util/Hashtable.&lt;init&gt; (1 samples, 0.02%)</title><rect x="533.7" y="675.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="536.7" y="686.0"></text>
</g>
<g>
<title>java/util/Hashtable.&lt;init&gt; (1 samples, 0.02%)</title><rect x="533.7" y="659.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="536.7" y="670.0"></text>
</g>
<g>
<title>java.util.Hashtable$Entry[] (1 samples, 0.02%)</title><rect x="533.7" y="643.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="536.7" y="654.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (1 samples, 0.02%)</title><rect x="533.9" y="675.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="536.9" y="686.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (1 samples, 0.02%)</title><rect x="533.9" y="659.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="536.9" y="670.0"></text>
</g>
<g>
<title>java/util/Vector.&lt;init&gt; (1 samples, 0.02%)</title><rect x="533.9" y="643.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="536.9" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="533.9" y="627.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="536.9" y="638.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (6 samples, 0.14%)</title><rect x="534.2" y="787.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="537.2" y="798.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (6 samples, 0.14%)</title><rect x="534.2" y="771.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="537.2" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.05%)</title><rect x="534.2" y="755.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="537.2" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.05%)</title><rect x="534.2" y="739.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="537.2" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.05%)</title><rect x="534.2" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="537.2" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (2 samples, 0.05%)</title><rect x="534.2" y="707.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="537.2" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (2 samples, 0.05%)</title><rect x="534.2" y="691.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="537.2" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (2 samples, 0.05%)</title><rect x="534.2" y="675.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="537.2" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (2 samples, 0.05%)</title><rect x="534.2" y="659.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="537.2" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getReflector (2 samples, 0.05%)</title><rect x="534.2" y="643.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="537.2" y="654.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$FieldReflectorKey (2 samples, 0.05%)</title><rect x="534.2" y="627.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="537.2" y="638.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject$MarshalledObjectInputStream.&lt;init&gt; (4 samples, 0.10%)</title><rect x="534.8" y="755.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="537.8" y="766.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (4 samples, 0.10%)</title><rect x="534.8" y="739.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="537.8" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (4 samples, 0.10%)</title><rect x="534.8" y="723.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="537.8" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (4 samples, 0.10%)</title><rect x="534.8" y="707.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="537.8" y="718.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="534.8" y="691.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="537.8" y="702.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.02%)</title><rect x="535.4" y="691.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="538.4" y="702.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (1 samples, 0.02%)</title><rect x="535.6" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="538.6" y="702.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.02%)</title><rect x="535.6" y="675.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="538.6" y="686.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (103 samples, 2.46%)</title><rect x="535.9" y="867.0" width="29.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="538.9" y="878.0">su..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (103 samples, 2.46%)</title><rect x="535.9" y="851.0" width="29.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="538.9" y="862.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (103 samples, 2.46%)</title><rect x="535.9" y="835.0" width="29.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="538.9" y="846.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (101 samples, 2.41%)</title><rect x="535.9" y="819.0" width="28.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="538.9" y="830.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (101 samples, 2.41%)</title><rect x="535.9" y="803.0" width="28.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="538.9" y="814.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (100 samples, 2.39%)</title><rect x="535.9" y="787.0" width="28.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="538.9" y="798.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (100 samples, 2.39%)</title><rect x="535.9" y="771.0" width="28.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="538.9" y="782.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (100 samples, 2.39%)</title><rect x="535.9" y="755.0" width="28.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="538.9" y="766.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (100 samples, 2.39%)</title><rect x="535.9" y="739.0" width="28.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="538.9" y="750.0">ja..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (99 samples, 2.36%)</title><rect x="535.9" y="723.0" width="27.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="538.9" y="734.0">j..</text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (3 samples, 0.07%)</title><rect x="535.9" y="707.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="538.9" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (1 samples, 0.02%)</title><rect x="535.9" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="538.9" y="702.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.02%)</title><rect x="535.9" y="675.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="538.9" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growSpine (2 samples, 0.05%)</title><rect x="536.2" y="691.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="539.2" y="702.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.05%)</title><rect x="536.2" y="675.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="539.2" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (96 samples, 2.29%)</title><rect x="536.8" y="707.0" width="27.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="539.8" y="718.0">j..</text>
</g>
<g>
<title>java.io.SerialCallbackContext (3 samples, 0.07%)</title><rect x="536.8" y="691.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="539.8" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (10 samples, 0.24%)</title><rect x="537.6" y="691.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="540.6" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (10 samples, 0.24%)</title><rect x="537.6" y="675.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="540.6" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (10 samples, 0.24%)</title><rect x="537.6" y="659.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="540.6" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (10 samples, 0.24%)</title><rect x="537.6" y="643.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="540.6" y="654.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (1 samples, 0.02%)</title><rect x="537.6" y="627.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="540.6" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (9 samples, 0.21%)</title><rect x="537.9" y="627.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="540.9" y="638.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (9 samples, 0.21%)</title><rect x="537.9" y="611.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="540.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (9 samples, 0.21%)</title><rect x="537.9" y="595.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="540.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (9 samples, 0.21%)</title><rect x="537.9" y="579.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="540.9" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (9 samples, 0.21%)</title><rect x="537.9" y="563.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="540.9" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (9 samples, 0.21%)</title><rect x="537.9" y="547.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="540.9" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (9 samples, 0.21%)</title><rect x="537.9" y="531.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="540.9" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (6 samples, 0.14%)</title><rect x="537.9" y="515.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="540.9" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (6 samples, 0.14%)</title><rect x="537.9" y="499.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="540.9" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (6 samples, 0.14%)</title><rect x="537.9" y="483.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="540.9" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (6 samples, 0.14%)</title><rect x="537.9" y="467.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="540.9" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (5 samples, 0.12%)</title><rect x="537.9" y="451.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="540.9" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (5 samples, 0.12%)</title><rect x="537.9" y="435.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="540.9" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (3 samples, 0.07%)</title><rect x="537.9" y="419.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="540.9" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.07%)</title><rect x="537.9" y="403.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="540.9" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (3 samples, 0.07%)</title><rect x="537.9" y="387.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="540.9" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (3 samples, 0.07%)</title><rect x="537.9" y="371.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="540.9" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (3 samples, 0.07%)</title><rect x="537.9" y="355.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="540.9" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.07%)</title><rect x="537.9" y="339.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="540.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.07%)</title><rect x="537.9" y="323.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="540.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (3 samples, 0.07%)</title><rect x="537.9" y="307.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="540.9" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (3 samples, 0.07%)</title><rect x="537.9" y="291.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="540.9" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (3 samples, 0.07%)</title><rect x="537.9" y="275.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="540.9" y="286.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (3 samples, 0.07%)</title><rect x="537.9" y="259.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="540.9" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.05%)</title><rect x="537.9" y="243.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="540.9" y="254.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.05%)</title><rect x="537.9" y="227.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="540.9" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.05%)</title><rect x="537.9" y="211.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="540.9" y="222.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.05%)</title><rect x="537.9" y="195.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="540.9" y="206.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.05%)</title><rect x="537.9" y="179.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="540.9" y="190.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.05%)</title><rect x="537.9" y="163.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="540.9" y="174.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (2 samples, 0.05%)</title><rect x="537.9" y="147.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="540.9" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="537.9" y="131.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="540.9" y="142.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="538.2" y="131.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="541.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="538.2" y="115.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="541.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (1 samples, 0.02%)</title><rect x="538.2" y="99.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="541.2" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.02%)</title><rect x="538.2" y="83.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="541.2" y="94.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (1 samples, 0.02%)</title><rect x="538.2" y="67.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="541.2" y="78.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.02%)</title><rect x="538.2" y="51.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="541.2" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="538.2" y="35.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="541.2" y="46.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.02%)</title><rect x="538.5" y="243.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="541.5" y="254.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.02%)</title><rect x="538.5" y="227.0" width="0.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="541.5" y="238.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (2 samples, 0.05%)</title><rect x="538.7" y="419.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="541.7" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.05%)</title><rect x="538.7" y="403.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="541.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.05%)</title><rect x="538.7" y="387.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="541.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (2 samples, 0.05%)</title><rect x="538.7" y="371.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="541.7" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (2 samples, 0.05%)</title><rect x="538.7" y="355.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="541.7" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2 samples, 0.05%)</title><rect x="538.7" y="339.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="541.7" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.05%)</title><rect x="538.7" y="323.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="541.7" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeString (2 samples, 0.05%)</title><rect x="538.7" y="307.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="541.7" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (2 samples, 0.05%)</title><rect x="538.7" y="291.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="541.7" y="302.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (2 samples, 0.05%)</title><rect x="538.7" y="275.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="541.7" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="538.7" y="259.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="541.7" y="270.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.02%)</title><rect x="539.3" y="451.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="542.3" y="462.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.02%)</title><rect x="539.3" y="435.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="542.3" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (3 samples, 0.07%)</title><rect x="539.6" y="515.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="542.6" y="526.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (3 samples, 0.07%)</title><rect x="539.6" y="499.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="542.6" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (83 samples, 1.98%)</title><rect x="540.4" y="691.0" width="23.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="543.4" y="702.0">j..</text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (83 samples, 1.98%)</title><rect x="540.4" y="675.0" width="23.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="543.4" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (83 samples, 1.98%)</title><rect x="540.4" y="659.0" width="23.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.4" y="670.0">j..</text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (83 samples, 1.98%)</title><rect x="540.4" y="643.0" width="23.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="543.4" y="654.0">j..</text>
</g>
<g>
<title>java/util/TreeMap.writeObject (83 samples, 1.98%)</title><rect x="540.4" y="627.0" width="23.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="543.4" y="638.0">j..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (2 samples, 0.05%)</title><rect x="540.4" y="611.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="543.4" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.05%)</title><rect x="540.4" y="595.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="543.4" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="540.4" y="579.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="543.4" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (78 samples, 1.86%)</title><rect x="541.0" y="611.0" width="22.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="544.0" y="622.0">j..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (78 samples, 1.86%)</title><rect x="541.0" y="595.0" width="22.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="544.0" y="606.0">j..</text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (41 samples, 0.98%)</title><rect x="541.0" y="579.0" width="11.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="544.0" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (17 samples, 0.41%)</title><rect x="541.0" y="563.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="544.0" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (17 samples, 0.41%)</title><rect x="541.0" y="547.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="544.0" y="558.0"></text>
</g>
<g>
<title>int[] (3 samples, 0.07%)</title><rect x="541.0" y="531.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="544.0" y="542.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.02%)</title><rect x="541.8" y="531.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="544.8" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.12%)</title><rect x="542.1" y="531.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="545.1" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.19%)</title><rect x="543.5" y="531.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="546.5" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (24 samples, 0.57%)</title><rect x="545.8" y="563.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="548.8" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (21 samples, 0.50%)</title><rect x="545.8" y="547.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="548.8" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (6 samples, 0.14%)</title><rect x="545.8" y="531.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="548.8" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (6 samples, 0.14%)</title><rect x="545.8" y="515.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="548.8" y="526.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.05%)</title><rect x="545.8" y="499.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="548.8" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="546.3" y="499.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="549.3" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.07%)</title><rect x="546.6" y="499.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="549.6" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (15 samples, 0.36%)</title><rect x="547.5" y="531.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="550.5" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (15 samples, 0.36%)</title><rect x="547.5" y="515.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="550.5" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.07%)</title><rect x="547.5" y="499.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="550.5" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (12 samples, 0.29%)</title><rect x="548.3" y="499.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="551.3" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (9 samples, 0.21%)</title><rect x="548.3" y="483.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="551.3" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (9 samples, 0.21%)</title><rect x="548.3" y="467.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="551.3" y="478.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (2 samples, 0.05%)</title><rect x="548.3" y="451.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="551.3" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (7 samples, 0.17%)</title><rect x="548.9" y="451.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="551.9" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="548.9" y="435.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="551.9" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (6 samples, 0.14%)</title><rect x="549.2" y="435.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="552.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (6 samples, 0.14%)</title><rect x="549.2" y="419.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="552.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (6 samples, 0.14%)</title><rect x="549.2" y="403.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="552.2" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (6 samples, 0.14%)</title><rect x="549.2" y="387.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="552.2" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (1 samples, 0.02%)</title><rect x="549.2" y="371.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.2" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.02%)</title><rect x="549.2" y="355.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="552.2" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="549.2" y="339.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="552.2" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (5 samples, 0.12%)</title><rect x="549.4" y="371.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="552.4" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (5 samples, 0.12%)</title><rect x="549.4" y="355.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="552.4" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (5 samples, 0.12%)</title><rect x="549.4" y="339.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.4" y="350.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (5 samples, 0.12%)</title><rect x="549.4" y="323.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="552.4" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (3 samples, 0.07%)</title><rect x="550.8" y="483.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="553.8" y="494.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (3 samples, 0.07%)</title><rect x="550.8" y="467.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="553.8" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (3 samples, 0.07%)</title><rect x="551.7" y="547.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="554.7" y="558.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (3 samples, 0.07%)</title><rect x="551.7" y="531.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="554.7" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (21 samples, 0.50%)</title><rect x="552.5" y="579.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="555.5" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (6 samples, 0.14%)</title><rect x="552.5" y="563.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="555.5" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (6 samples, 0.14%)</title><rect x="552.5" y="547.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="555.5" y="558.0"></text>
</g>
<g>
<title>int[] (3 samples, 0.07%)</title><rect x="552.5" y="531.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="555.5" y="542.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.02%)</title><rect x="553.4" y="531.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="556.4" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="553.7" y="531.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="556.7" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="553.9" y="531.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="556.9" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (15 samples, 0.36%)</title><rect x="554.2" y="563.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="557.2" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (15 samples, 0.36%)</title><rect x="554.2" y="547.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="557.2" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (15 samples, 0.36%)</title><rect x="554.2" y="531.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="557.2" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (15 samples, 0.36%)</title><rect x="554.2" y="515.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="557.2" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (15 samples, 0.36%)</title><rect x="554.2" y="499.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="557.2" y="510.0"></text>
</g>
<g>
<title>java.io.SerialCallbackContext (1 samples, 0.02%)</title><rect x="554.2" y="483.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="557.2" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (14 samples, 0.33%)</title><rect x="554.5" y="483.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="557.5" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (14 samples, 0.33%)</title><rect x="554.5" y="467.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="557.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (14 samples, 0.33%)</title><rect x="554.5" y="451.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="557.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (14 samples, 0.33%)</title><rect x="554.5" y="435.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="557.5" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (14 samples, 0.33%)</title><rect x="554.5" y="419.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="557.5" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (1 samples, 0.02%)</title><rect x="554.5" y="403.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="557.5" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.02%)</title><rect x="554.5" y="387.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="557.5" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="554.5" y="371.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="557.5" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (13 samples, 0.31%)</title><rect x="554.8" y="403.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="557.8" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (13 samples, 0.31%)</title><rect x="554.8" y="387.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="557.8" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (11 samples, 0.26%)</title><rect x="554.8" y="371.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="557.8" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (11 samples, 0.26%)</title><rect x="554.8" y="355.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="557.8" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.growEntries (11 samples, 0.26%)</title><rect x="554.8" y="339.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="557.8" y="350.0"></text>
</g>
<g>
<title>int[] (5 samples, 0.12%)</title><rect x="554.8" y="323.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="557.8" y="334.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.02%)</title><rect x="556.2" y="323.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="559.2" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.07%)</title><rect x="556.5" y="323.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="559.5" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="557.3" y="323.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="560.3" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (2 samples, 0.05%)</title><rect x="557.9" y="371.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="560.9" y="382.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (2 samples, 0.05%)</title><rect x="557.9" y="355.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="560.9" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (16 samples, 0.38%)</title><rect x="558.5" y="579.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="561.5" y="590.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (16 samples, 0.38%)</title><rect x="558.5" y="563.0" width="4.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="561.5" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (3 samples, 0.07%)</title><rect x="563.0" y="611.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="566.0" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (3 samples, 0.07%)</title><rect x="563.0" y="595.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="566.0" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.02%)</title><rect x="563.8" y="723.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="566.8" y="734.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.02%)</title><rect x="563.8" y="707.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="566.8" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.02%)</title><rect x="564.1" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.1" y="798.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$WeakClassKey (1 samples, 0.02%)</title><rect x="564.1" y="771.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="567.1" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.05%)</title><rect x="564.4" y="819.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="567.4" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.05%)</title><rect x="564.4" y="803.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.4" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.02%)</title><rect x="564.4" y="787.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="567.4" y="798.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="564.4" y="771.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="567.4" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.02%)</title><rect x="564.6" y="787.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.6" y="798.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.02%)</title><rect x="564.6" y="771.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.02%)</title><rect x="564.6" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="567.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor39.invoke (1 samples, 0.02%)</title><rect x="564.6" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="567.6" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.writeObject (1 samples, 0.02%)</title><rect x="564.6" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.6" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteObject (1 samples, 0.02%)</title><rect x="564.6" y="707.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.6" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.02%)</title><rect x="564.6" y="691.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.6" y="702.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="564.6" y="675.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="567.6" y="686.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (27 samples, 0.64%)</title><rect x="564.9" y="867.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="567.9" y="878.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$$Lambda$97/245631911.readString (3 samples, 0.07%)</title><rect x="564.9" y="851.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.9" y="862.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (3 samples, 0.07%)</title><rect x="564.9" y="835.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="567.9" y="846.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 0.07%)</title><rect x="564.9" y="819.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.9" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (3 samples, 0.07%)</title><rect x="564.9" y="803.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="567.9" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (3 samples, 0.07%)</title><rect x="564.9" y="787.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.9" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (3 samples, 0.07%)</title><rect x="564.9" y="771.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="567.9" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (3 samples, 0.07%)</title><rect x="564.9" y="755.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="567.9" y="766.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.02%)</title><rect x="564.9" y="739.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="567.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="565.2" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="568.2" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="565.2" y="723.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="568.2" y="734.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="565.2" y="707.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="568.2" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.02%)</title><rect x="565.5" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="568.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="565.5" y="723.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="568.5" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="565.5" y="707.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="568.5" y="718.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="565.5" y="691.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="568.5" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (24 samples, 0.57%)</title><rect x="565.8" y="851.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="568.8" y="862.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (24 samples, 0.57%)</title><rect x="565.8" y="835.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="568.8" y="846.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (24 samples, 0.57%)</title><rect x="565.8" y="819.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.8" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (2 samples, 0.05%)</title><rect x="565.8" y="803.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="568.8" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.assign (1 samples, 0.02%)</title><rect x="565.8" y="787.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="568.8" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.grow (1 samples, 0.02%)</title><rect x="565.8" y="771.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="568.8" y="782.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="565.8" y="755.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="568.8" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.02%)</title><rect x="566.1" y="787.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="569.1" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.02%)</title><rect x="566.1" y="771.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="569.1" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (1 samples, 0.02%)</title><rect x="566.1" y="755.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.1" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getReflector (1 samples, 0.02%)</title><rect x="566.1" y="739.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="569.1" y="750.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass$FieldReflectorKey (1 samples, 0.02%)</title><rect x="566.1" y="723.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="569.1" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (22 samples, 0.53%)</title><rect x="566.3" y="803.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="569.3" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (8 samples, 0.19%)</title><rect x="566.3" y="787.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="569.3" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (8 samples, 0.19%)</title><rect x="566.3" y="771.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="569.3" y="782.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (1 samples, 0.02%)</title><rect x="566.3" y="755.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="569.3" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (6 samples, 0.14%)</title><rect x="566.6" y="755.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="569.6" y="766.0"></text>
</g>
<g>
<title>java.io.ObjectStreamClass (1 samples, 0.02%)</title><rect x="566.6" y="739.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="569.6" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (5 samples, 0.12%)</title><rect x="566.9" y="739.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="569.9" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (4 samples, 0.10%)</title><rect x="566.9" y="723.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="569.9" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (4 samples, 0.10%)</title><rect x="566.9" y="707.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="569.9" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (4 samples, 0.10%)</title><rect x="566.9" y="691.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="569.9" y="702.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (1 samples, 0.02%)</title><rect x="566.9" y="675.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="569.9" y="686.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="567.2" y="675.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="570.2" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="567.2" y="659.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.2" y="670.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="567.2" y="643.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="570.2" y="654.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.05%)</title><rect x="567.5" y="675.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="570.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="567.5" y="659.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="570.5" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="567.5" y="643.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="570.5" y="654.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="567.5" y="627.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="570.5" y="638.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.02%)</title><rect x="568.0" y="723.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="571.0" y="734.0"></text>
</g>
<g>
<title>java.lang.Long (1 samples, 0.02%)</title><rect x="568.0" y="707.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="571.0" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (1 samples, 0.02%)</title><rect x="568.3" y="755.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="571.3" y="766.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.02%)</title><rect x="568.3" y="739.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="571.3" y="750.0"></text>
</g>
<g>
<title>java.lang.Long (1 samples, 0.02%)</title><rect x="568.3" y="723.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="571.3" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (14 samples, 0.33%)</title><rect x="568.6" y="787.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="571.6" y="798.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout (2 samples, 0.05%)</title><rect x="568.6" y="771.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="571.6" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.getClassDataLayout0 (2 samples, 0.05%)</title><rect x="568.6" y="755.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="571.6" y="766.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (2 samples, 0.05%)</title><rect x="568.6" y="739.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="571.6" y="750.0"></text>
</g>
<g>
<title>java.util.HashMap (2 samples, 0.05%)</title><rect x="568.6" y="723.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="571.6" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (12 samples, 0.29%)</title><rect x="569.2" y="771.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="572.2" y="782.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (12 samples, 0.29%)</title><rect x="569.2" y="755.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="572.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (12 samples, 0.29%)</title><rect x="569.2" y="739.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="572.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor2.invoke (9 samples, 0.21%)</title><rect x="569.2" y="723.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="572.2" y="734.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (9 samples, 0.21%)</title><rect x="569.2" y="707.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="572.2" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadObject (1 samples, 0.02%)</title><rect x="569.2" y="691.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="572.2" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadFields (1 samples, 0.02%)</title><rect x="569.2" y="675.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="572.2" y="686.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$FieldValues (1 samples, 0.02%)</title><rect x="569.2" y="659.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="572.2" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.02%)</title><rect x="569.4" y="691.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="572.4" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.02%)</title><rect x="569.4" y="675.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.4" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.02%)</title><rect x="569.4" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="572.4" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readString (1 samples, 0.02%)</title><rect x="569.4" y="643.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.4" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (1 samples, 0.02%)</title><rect x="569.4" y="627.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="572.4" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (1 samples, 0.02%)</title><rect x="569.4" y="611.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.02%)</title><rect x="569.4" y="595.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="572.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="569.4" y="579.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="572.4" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="569.4" y="563.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="572.4" y="574.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="569.4" y="547.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="572.4" y="558.0"></text>
</g>
<g>
<title>javax/management/ObjectName.construct (7 samples, 0.17%)</title><rect x="569.7" y="691.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="572.7" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.05%)</title><rect x="569.7" y="675.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="572.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.toCharArray (1 samples, 0.02%)</title><rect x="570.3" y="675.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="573.3" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toChars (1 samples, 0.02%)</title><rect x="570.3" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.3" y="670.0"></text>
</g>
<g>
<title>char[] (1 samples, 0.02%)</title><rect x="570.3" y="643.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="573.3" y="654.0"></text>
</g>
<g>
<title>javax.management.ObjectName$Property (2 samples, 0.05%)</title><rect x="570.6" y="675.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="573.6" y="686.0"></text>
</g>
<g>
<title>javax/management/ObjectName.addProperty (1 samples, 0.02%)</title><rect x="571.1" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.1" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="571.1" y="659.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="574.1" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.02%)</title><rect x="571.1" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="574.1" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.02%)</title><rect x="571.1" y="627.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="574.1" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1 samples, 0.02%)</title><rect x="571.1" y="611.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="574.1" y="622.0"></text>
</g>
<g>
<title>javax/management/ObjectName.setCanonicalName (1 samples, 0.02%)</title><rect x="571.4" y="675.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="574.4" y="686.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.02%)</title><rect x="571.4" y="659.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="574.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor36.invoke (3 samples, 0.07%)</title><rect x="571.7" y="723.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="574.7" y="734.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.readObject (3 samples, 0.07%)</title><rect x="571.7" y="707.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="574.7" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadObject (3 samples, 0.07%)</title><rect x="571.7" y="691.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="574.7" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.defaultReadFields (3 samples, 0.07%)</title><rect x="571.7" y="675.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="574.7" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (3 samples, 0.07%)</title><rect x="571.7" y="659.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="574.7" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (3 samples, 0.07%)</title><rect x="571.7" y="643.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="574.7" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.02%)</title><rect x="571.7" y="627.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.7" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.02%)</title><rect x="571.7" y="611.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="574.7" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDescriptor (1 samples, 0.02%)</title><rect x="571.7" y="595.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="574.7" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.readNonProxy (1 samples, 0.02%)</title><rect x="571.7" y="579.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="574.7" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readUTF (1 samples, 0.02%)</title><rect x="571.7" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="574.7" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTF (1 samples, 0.02%)</title><rect x="571.7" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="574.7" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readUTFBody (1 samples, 0.02%)</title><rect x="571.7" y="531.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="574.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="571.7" y="515.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.7" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="571.7" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="574.7" y="510.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="571.7" y="483.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="574.7" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (2 samples, 0.05%)</title><rect x="572.0" y="627.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="575.0" y="638.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newArray (2 samples, 0.05%)</title><rect x="572.0" y="611.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="575.0" y="622.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="572.0" y="595.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="575.0" y="606.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (38 samples, 0.91%)</title><rect x="572.5" y="867.0" width="10.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="575.5" y="878.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (38 samples, 0.91%)</title><rect x="572.5" y="851.0" width="10.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="575.5" y="862.0"></text>
</g>
<g>
<title>sun.rmi.transport.ConnectionOutputStream (1 samples, 0.02%)</title><rect x="572.5" y="835.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="575.5" y="846.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (37 samples, 0.88%)</title><rect x="572.8" y="835.0" width="10.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="575.8" y="846.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (37 samples, 0.88%)</title><rect x="572.8" y="819.0" width="10.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="575.8" y="830.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (37 samples, 0.88%)</title><rect x="572.8" y="803.0" width="10.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="575.8" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (36 samples, 0.86%)</title><rect x="572.8" y="787.0" width="10.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="575.8" y="798.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$BlockDataOutputStream (2 samples, 0.05%)</title><rect x="572.8" y="771.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="575.8" y="782.0"></text>
</g>
<g>
<title>java.io.ObjectOutputStream$HandleTable (3 samples, 0.07%)</title><rect x="573.4" y="771.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="576.4" y="782.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.&lt;init&gt; (24 samples, 0.57%)</title><rect x="574.2" y="771.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="577.2" y="782.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.31%)</title><rect x="574.2" y="755.0" width="3.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="577.2" y="766.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="577.9" y="755.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="580.9" y="766.0"></text>
</g>
<g>
<title>char[] (8 samples, 0.19%)</title><rect x="578.5" y="755.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="581.5" y="766.0"></text>
</g>
<g>
<title>java.io.DataOutputStream (1 samples, 0.02%)</title><rect x="580.7" y="755.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="583.7" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (3 samples, 0.07%)</title><rect x="581.0" y="771.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="584.0" y="782.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.02%)</title><rect x="581.0" y="755.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="584.0" y="766.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="581.3" y="755.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="584.3" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$ReplaceTable.&lt;init&gt; (4 samples, 0.10%)</title><rect x="581.8" y="771.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="584.8" y="782.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="581.8" y="755.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="584.8" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (3 samples, 0.07%)</title><rect x="582.1" y="755.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="585.1" y="766.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.05%)</title><rect x="582.1" y="739.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="585.1" y="750.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.02%)</title><rect x="582.7" y="739.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="585.7" y="750.0"></text>
</g>
<g>
<title>sun.rmi.server.MarshalOutputStream$1 (1 samples, 0.02%)</title><rect x="583.0" y="787.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="586.0" y="798.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.releaseInputStream (1 samples, 0.02%)</title><rect x="583.2" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="586.2" y="878.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.done (1 samples, 0.02%)</title><rect x="583.2" y="851.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="586.2" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.values (1 samples, 0.02%)</title><rect x="583.2" y="835.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="586.2" y="846.0"></text>
</g>
<g>
<title>java.util.HashMap$Values (1 samples, 0.02%)</title><rect x="583.2" y="819.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="586.2" y="830.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (44 samples, 1.05%)</title><rect x="583.5" y="931.0" width="12.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="586.5" y="942.0"></text>
</g>
<g>
<title>sun.rmi.transport.ConnectionInputStream (4 samples, 0.10%)</title><rect x="583.5" y="915.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="586.5" y="926.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (40 samples, 0.95%)</title><rect x="584.6" y="915.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="587.6" y="926.0"></text>
</g>
<g>
<title>java.util.HashMap (1 samples, 0.02%)</title><rect x="584.6" y="899.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="587.6" y="910.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (39 samples, 0.93%)</title><rect x="584.9" y="899.0" width="11.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="587.9" y="910.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (39 samples, 0.93%)</title><rect x="584.9" y="883.0" width="11.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="587.9" y="894.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.&lt;init&gt; (35 samples, 0.84%)</title><rect x="584.9" y="867.0" width="9.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="587.9" y="878.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.45%)</title><rect x="584.9" y="851.0" width="5.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="587.9" y="862.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="590.3" y="851.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="593.3" y="862.0"></text>
</g>
<g>
<title>char[] (7 samples, 0.17%)</title><rect x="590.6" y="851.0" width="1.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="593.6" y="862.0"></text>
</g>
<g>
<title>java.io.DataInputStream (1 samples, 0.02%)</title><rect x="592.5" y="851.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="595.5" y="862.0"></text>
</g>
<g>
<title>java.io.ObjectInputStream$PeekInputStream (2 samples, 0.05%)</title><rect x="592.8" y="851.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="595.8" y="862.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (5 samples, 0.12%)</title><rect x="593.4" y="851.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.4" y="862.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="593.4" y="835.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="596.4" y="846.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.05%)</title><rect x="594.2" y="835.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="597.2" y="846.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$HandleTable.&lt;init&gt; (4 samples, 0.10%)</title><rect x="594.8" y="867.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="597.8" y="878.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="594.8" y="851.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="597.8" y="862.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.05%)</title><rect x="595.4" y="851.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="598.4" y="862.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.setContextClassLoader (3 samples, 0.07%)</title><rect x="595.9" y="931.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="598.9" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="595.9" y="915.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="598.9" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="595.9" y="899.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="598.9" y="910.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$$Lambda$99/640020356.get$Lambda (3 samples, 0.07%)</title><rect x="595.9" y="883.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="598.9" y="894.0"></text>
</g>
<g>
<title>sun.rmi.transport.Transport$$Lambda$99 (3 samples, 0.07%)</title><rect x="595.9" y="867.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="598.9" y="878.0"></text>
</g>
<g>
<title>[pool-1-thread-1 tid=60307] (548 samples, 13.08%)</title><rect x="596.8" y="1107.0" width="154.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="599.8" y="1118.0">[pool-1-thread-1 tid..</text>
</g>
<g>
<title>java/lang/Thread.run (548 samples, 13.08%)</title><rect x="596.8" y="1091.0" width="154.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="599.8" y="1102.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (548 samples, 13.08%)</title><rect x="596.8" y="1075.0" width="154.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="599.8" y="1086.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (548 samples, 13.08%)</title><rect x="596.8" y="1059.0" width="154.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="599.8" y="1070.0">java/util/concurrent..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$13/863125040.run (548 samples, 13.08%)</title><rect x="596.8" y="1043.0" width="154.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="599.8" y="1054.0">ru/mail/polis/dao/va..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.flushingHelper (548 samples, 13.08%)</title><rect x="596.8" y="1027.0" width="154.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="599.8" y="1038.0">ru/mail/polis/dao/va..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.flush (548 samples, 13.08%)</title><rect x="596.8" y="1011.0" width="154.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="599.8" y="1022.0">ru/mail/polis/dao/va..</text>
</g>
<g>
<title>java.io.File (2 samples, 0.05%)</title><rect x="596.8" y="995.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="599.8" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.serialize (546 samples, 13.03%)</title><rect x="597.3" y="995.0" width="153.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="600.3" y="1006.0">ru/mail/polis/dao/v..</text>
</g>
<g>
<title>java/lang/Integer.valueOf (7 samples, 0.17%)</title><rect x="597.3" y="979.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="600.3" y="990.0"></text>
</g>
<g>
<title>java.lang.Integer (7 samples, 0.17%)</title><rect x="597.3" y="963.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="600.3" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (373 samples, 8.90%)</title><rect x="599.3" y="979.0" width="105.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="602.3" y="990.0">java/nio/Byte..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (240 samples, 5.73%)</title><rect x="599.3" y="963.0" width="67.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="602.3" y="974.0">java.ni..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (133 samples, 3.17%)</title><rect x="666.9" y="963.0" width="37.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="669.9" y="974.0">jav..</text>
</g>
<g>
<title>byte[] (133 samples, 3.17%)</title><rect x="666.9" y="947.0" width="37.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="669.9" y="958.0">byt..</text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.24%)</title><rect x="704.4" y="979.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="707.4" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.24%)</title><rect x="704.4" y="963.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="707.4" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.24%)</title><rect x="704.4" y="947.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="707.4" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.24%)</title><rect x="704.4" y="931.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="707.4" y="942.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.24%)</title><rect x="704.4" y="915.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="707.4" y="926.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.24%)</title><rect x="704.4" y="899.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="707.4" y="910.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (14 samples, 0.33%)</title><rect x="707.2" y="979.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.2" y="990.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (14 samples, 0.33%)</title><rect x="707.2" y="963.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="710.2" y="974.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (14 samples, 0.33%)</title><rect x="707.2" y="947.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="710.2" y="958.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (14 samples, 0.33%)</title><rect x="707.2" y="931.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="710.2" y="942.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$111/1312109180.getAsBoolean (14 samples, 0.33%)</title><rect x="707.2" y="915.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="710.2" y="926.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (14 samples, 0.33%)</title><rect x="707.2" y="899.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="710.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (14 samples, 0.33%)</title><rect x="707.2" y="883.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="710.2" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (14 samples, 0.33%)</title><rect x="707.2" y="867.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="710.2" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable$$Lambda$108/2117681235.apply (14 samples, 0.33%)</title><rect x="707.2" y="851.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="710.2" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.lambda$iterator$0 (14 samples, 0.33%)</title><rect x="707.2" y="835.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.2" y="846.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.valaubr.Cell (14 samples, 0.33%)</title><rect x="707.2" y="819.0" width="3.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="710.2" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (77 samples, 1.84%)</title><rect x="711.1" y="979.0" width="21.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="714.1" y="990.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (77 samples, 1.84%)</title><rect x="711.1" y="963.0" width="21.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="714.1" y="974.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (77 samples, 1.84%)</title><rect x="711.1" y="947.0" width="21.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="714.1" y="958.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Value.getData (65 samples, 1.55%)</title><rect x="732.8" y="979.0" width="18.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="735.8" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (65 samples, 1.55%)</title><rect x="732.8" y="963.0" width="18.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="735.8" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (65 samples, 1.55%)</title><rect x="732.8" y="947.0" width="18.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="735.8" y="958.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (65 samples, 1.55%)</title><rect x="732.8" y="931.0" width="18.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="735.8" y="942.0"></text>
</g>
<g>
<title>[pool-3-thread-1 tid=60619] (389 samples, 9.29%)</title><rect x="751.1" y="1107.0" width="109.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="754.1" y="1118.0">[pool-3-threa..</text>
</g>
<g>
<title>java/lang/Thread.run (389 samples, 9.29%)</title><rect x="751.1" y="1091.0" width="109.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="754.1" y="1102.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (389 samples, 9.29%)</title><rect x="751.1" y="1075.0" width="109.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="754.1" y="1086.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (389 samples, 9.29%)</title><rect x="751.1" y="1059.0" width="109.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="754.1" y="1070.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (30 samples, 0.72%)</title><rect x="751.1" y="1043.0" width="8.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="754.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (30 samples, 0.72%)</title><rect x="751.1" y="1027.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="754.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (30 samples, 0.72%)</title><rect x="751.1" y="1011.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (30 samples, 0.72%)</title><rect x="751.1" y="995.0" width="8.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="754.1" y="1006.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (30 samples, 0.72%)</title><rect x="751.1" y="979.0" width="8.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="754.1" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$105/1788683425.run (359 samples, 8.57%)</title><rect x="759.6" y="1043.0" width="101.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.6" y="1054.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.lambda$put$1 (359 samples, 8.57%)</title><rect x="759.6" y="1027.0" width="101.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="762.6" y="1038.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/String.getBytes (30 samples, 0.72%)</title><rect x="759.6" y="1011.0" width="8.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="762.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (30 samples, 0.72%)</title><rect x="759.6" y="995.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (30 samples, 0.72%)</title><rect x="759.6" y="979.0" width="8.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="762.6" y="990.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (30 samples, 0.72%)</title><rect x="759.6" y="963.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="762.6" y="974.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.72%)</title><rect x="759.6" y="947.0" width="8.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="762.6" y="958.0"></text>
</g>
<g>
<title>one.nio.http.Response (19 samples, 0.45%)</title><rect x="768.0" y="1011.0" width="5.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="771.0" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (111 samples, 2.65%)</title><rect x="773.4" y="1011.0" width="31.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="776.4" y="1022.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (111 samples, 2.65%)</title><rect x="773.4" y="995.0" width="31.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="776.4" y="1006.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (74 samples, 1.77%)</title><rect x="773.4" y="979.0" width="20.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="776.4" y="990.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (74 samples, 1.77%)</title><rect x="773.4" y="963.0" width="20.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="776.4" y="974.0"></text>
</g>
<g>
<title>byte[] (73 samples, 1.74%)</title><rect x="773.4" y="947.0" width="20.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="776.4" y="958.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="793.9" y="947.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="796.9" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (37 samples, 0.88%)</title><rect x="794.2" y="979.0" width="10.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="797.2" y="990.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (37 samples, 0.88%)</title><rect x="794.2" y="963.0" width="10.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="797.2" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (80 samples, 1.91%)</title><rect x="804.6" y="1011.0" width="22.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="807.6" y="1022.0">o..</text>
</g>
<g>
<title>byte[] (37 samples, 0.88%)</title><rect x="804.6" y="995.0" width="10.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="807.6" y="1006.0"></text>
</g>
<g>
<title>java.lang.String[] (23 samples, 0.55%)</title><rect x="815.1" y="995.0" width="6.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="818.1" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.48%)</title><rect x="821.5" y="995.0" width="5.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="824.5" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.upsert (119 samples, 2.84%)</title><rect x="827.2" y="1011.0" width="33.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="830.2" y="1022.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.upsert (119 samples, 2.84%)</title><rect x="827.2" y="995.0" width="33.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.2" y="1006.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (37 samples, 0.88%)</title><rect x="827.2" y="979.0" width="10.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.2" y="990.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (37 samples, 0.88%)</title><rect x="827.2" y="963.0" width="10.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="830.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.02%)</title><rect x="837.6" y="979.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="840.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.02%)</title><rect x="837.6" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="840.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireShared (1 samples, 0.02%)</title><rect x="837.6" y="947.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="840.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="837.6" y="931.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="840.6" y="942.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.02%)</title><rect x="837.6" y="915.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="840.6" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.upsert (81 samples, 1.93%)</title><rect x="837.9" y="979.0" width="22.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="840.9" y="990.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (39 samples, 0.93%)</title><rect x="837.9" y="963.0" width="11.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="840.9" y="974.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (39 samples, 0.93%)</title><rect x="837.9" y="947.0" width="11.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="840.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (30 samples, 0.72%)</title><rect x="848.9" y="963.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="851.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (30 samples, 0.72%)</title><rect x="848.9" y="947.0" width="8.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="851.9" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (13 samples, 0.31%)</title><rect x="848.9" y="931.0" width="3.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="851.9" y="942.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (17 samples, 0.41%)</title><rect x="852.5" y="931.0" width="4.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="855.5" y="942.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.valaubr.Value (12 samples, 0.29%)</title><rect x="857.3" y="963.0" width="3.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="860.3" y="974.0"></text>
</g>
<g>
<title>[pool-3-thread-2 tid=60616] (383 samples, 9.14%)</title><rect x="860.7" y="1107.0" width="107.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="863.7" y="1118.0">[pool-3-threa..</text>
</g>
<g>
<title>java/lang/Thread.run (383 samples, 9.14%)</title><rect x="860.7" y="1091.0" width="107.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="863.7" y="1102.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (383 samples, 9.14%)</title><rect x="860.7" y="1075.0" width="107.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="863.7" y="1086.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (383 samples, 9.14%)</title><rect x="860.7" y="1059.0" width="107.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="863.7" y="1070.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (30 samples, 0.72%)</title><rect x="860.7" y="1043.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="863.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (30 samples, 0.72%)</title><rect x="860.7" y="1027.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="863.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (30 samples, 0.72%)</title><rect x="860.7" y="1011.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="863.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (30 samples, 0.72%)</title><rect x="860.7" y="995.0" width="8.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="863.7" y="1006.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (30 samples, 0.72%)</title><rect x="860.7" y="979.0" width="8.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="863.7" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$105/1788683425.run (353 samples, 8.43%)</title><rect x="869.2" y="1043.0" width="99.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="872.2" y="1054.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.lambda$put$1 (353 samples, 8.43%)</title><rect x="869.2" y="1027.0" width="99.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="872.2" y="1038.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/String.getBytes (23 samples, 0.55%)</title><rect x="869.2" y="1011.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="872.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (23 samples, 0.55%)</title><rect x="869.2" y="995.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="872.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (23 samples, 0.55%)</title><rect x="869.2" y="979.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="872.2" y="990.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (23 samples, 0.55%)</title><rect x="869.2" y="963.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="872.2" y="974.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.55%)</title><rect x="869.2" y="947.0" width="6.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="872.2" y="958.0"></text>
</g>
<g>
<title>one.nio.http.Response (17 samples, 0.41%)</title><rect x="875.6" y="1011.0" width="4.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="878.6" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (108 samples, 2.58%)</title><rect x="880.4" y="1011.0" width="30.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="883.4" y="1022.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (108 samples, 2.58%)</title><rect x="880.4" y="995.0" width="30.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="883.4" y="1006.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (79 samples, 1.89%)</title><rect x="880.4" y="979.0" width="22.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="883.4" y="990.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (79 samples, 1.89%)</title><rect x="880.4" y="963.0" width="22.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="883.4" y="974.0">o..</text>
</g>
<g>
<title>byte[] (76 samples, 1.81%)</title><rect x="880.4" y="947.0" width="21.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="883.4" y="958.0">b..</text>
</g>
<g>
<title>byte[] (3 samples, 0.07%)</title><rect x="901.8" y="947.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="904.8" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (29 samples, 0.69%)</title><rect x="902.7" y="979.0" width="8.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.7" y="990.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (29 samples, 0.69%)</title><rect x="902.7" y="963.0" width="8.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="905.7" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (79 samples, 1.89%)</title><rect x="910.8" y="1011.0" width="22.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="913.8" y="1022.0">o..</text>
</g>
<g>
<title>byte[] (27 samples, 0.64%)</title><rect x="910.8" y="995.0" width="7.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="913.8" y="1006.0"></text>
</g>
<g>
<title>java.lang.String[] (31 samples, 0.74%)</title><rect x="918.5" y="995.0" width="8.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="921.5" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.50%)</title><rect x="927.2" y="995.0" width="5.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="930.2" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.upsert (126 samples, 3.01%)</title><rect x="933.1" y="1011.0" width="35.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="936.1" y="1022.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.upsert (126 samples, 3.01%)</title><rect x="933.1" y="995.0" width="35.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="936.1" y="1006.0">ru/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (43 samples, 1.03%)</title><rect x="933.1" y="979.0" width="12.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="936.1" y="990.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (43 samples, 1.03%)</title><rect x="933.1" y="963.0" width="12.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="936.1" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.upsert (83 samples, 1.98%)</title><rect x="945.2" y="979.0" width="23.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="948.2" y="990.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (34 samples, 0.81%)</title><rect x="945.2" y="963.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="948.2" y="974.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (34 samples, 0.81%)</title><rect x="945.2" y="947.0" width="9.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="948.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (29 samples, 0.69%)</title><rect x="954.8" y="963.0" width="8.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="957.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (29 samples, 0.69%)</title><rect x="954.8" y="947.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="957.8" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (14 samples, 0.33%)</title><rect x="954.8" y="931.0" width="3.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="957.8" y="942.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (15 samples, 0.36%)</title><rect x="958.7" y="931.0" width="4.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="961.7" y="942.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.valaubr.Value (20 samples, 0.48%)</title><rect x="963.0" y="963.0" width="5.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="966.0" y="974.0"></text>
</g>
<g>
<title>[pool-3-thread-3 tid=60617] (390 samples, 9.31%)</title><rect x="968.6" y="1107.0" width="109.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="971.6" y="1118.0">[pool-3-threa..</text>
</g>
<g>
<title>java/lang/Thread.run (390 samples, 9.31%)</title><rect x="968.6" y="1091.0" width="109.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="971.6" y="1102.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (390 samples, 9.31%)</title><rect x="968.6" y="1075.0" width="109.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="971.6" y="1086.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (390 samples, 9.31%)</title><rect x="968.6" y="1059.0" width="109.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="971.6" y="1070.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (28 samples, 0.67%)</title><rect x="968.6" y="1043.0" width="7.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="971.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (28 samples, 0.67%)</title><rect x="968.6" y="1027.0" width="7.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="971.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (28 samples, 0.67%)</title><rect x="968.6" y="1011.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="971.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (28 samples, 0.67%)</title><rect x="968.6" y="995.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="971.6" y="1006.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (28 samples, 0.67%)</title><rect x="968.6" y="979.0" width="7.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="971.6" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$105/1788683425.run (362 samples, 8.64%)</title><rect x="976.5" y="1043.0" width="102.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="979.5" y="1054.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.lambda$put$1 (362 samples, 8.64%)</title><rect x="976.5" y="1027.0" width="102.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="979.5" y="1038.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/String.getBytes (29 samples, 0.69%)</title><rect x="976.5" y="1011.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="979.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (29 samples, 0.69%)</title><rect x="976.5" y="995.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="979.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (29 samples, 0.69%)</title><rect x="976.5" y="979.0" width="8.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="979.5" y="990.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (29 samples, 0.69%)</title><rect x="976.5" y="963.0" width="8.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="979.5" y="974.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.69%)</title><rect x="976.5" y="947.0" width="8.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="979.5" y="958.0"></text>
</g>
<g>
<title>one.nio.http.Response (22 samples, 0.53%)</title><rect x="984.6" y="1011.0" width="6.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="987.6" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (103 samples, 2.46%)</title><rect x="990.8" y="1011.0" width="29.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="993.8" y="1022.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (103 samples, 2.46%)</title><rect x="990.8" y="995.0" width="29.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="993.8" y="1006.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (66 samples, 1.58%)</title><rect x="990.8" y="979.0" width="18.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="993.8" y="990.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (66 samples, 1.58%)</title><rect x="990.8" y="963.0" width="18.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="993.8" y="974.0"></text>
</g>
<g>
<title>byte[] (65 samples, 1.55%)</title><rect x="990.8" y="947.0" width="18.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="993.8" y="958.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.02%)</title><rect x="1009.2" y="947.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1012.2" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (37 samples, 0.88%)</title><rect x="1009.4" y="979.0" width="10.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1012.4" y="990.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (37 samples, 0.88%)</title><rect x="1009.4" y="963.0" width="10.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1012.4" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (84 samples, 2.01%)</title><rect x="1019.9" y="1011.0" width="23.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1022.9" y="1022.0">o..</text>
</g>
<g>
<title>byte[] (37 samples, 0.88%)</title><rect x="1019.9" y="995.0" width="10.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1022.9" y="1006.0"></text>
</g>
<g>
<title>java.lang.String[] (32 samples, 0.76%)</title><rect x="1030.3" y="995.0" width="9.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1033.3" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.36%)</title><rect x="1039.3" y="995.0" width="4.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1042.3" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.upsert (124 samples, 2.96%)</title><rect x="1043.5" y="1011.0" width="35.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1046.5" y="1022.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.upsert (124 samples, 2.96%)</title><rect x="1043.5" y="995.0" width="35.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1046.5" y="1006.0">ru..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (40 samples, 0.95%)</title><rect x="1043.5" y="979.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1046.5" y="990.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (40 samples, 0.95%)</title><rect x="1043.5" y="963.0" width="11.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1046.5" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.upsert (84 samples, 2.01%)</title><rect x="1054.8" y="979.0" width="23.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1057.8" y="990.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (36 samples, 0.86%)</title><rect x="1054.8" y="963.0" width="10.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1057.8" y="974.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (36 samples, 0.86%)</title><rect x="1054.8" y="947.0" width="10.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1057.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (24 samples, 0.57%)</title><rect x="1064.9" y="963.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1067.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (24 samples, 0.57%)</title><rect x="1064.9" y="947.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1067.9" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (10 samples, 0.24%)</title><rect x="1064.9" y="931.0" width="2.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1067.9" y="942.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (14 samples, 0.33%)</title><rect x="1067.7" y="931.0" width="4.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1070.7" y="942.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.valaubr.Value (24 samples, 0.57%)</title><rect x="1071.7" y="963.0" width="6.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1074.7" y="974.0"></text>
</g>
<g>
<title>[pool-3-thread-4 tid=60618] (396 samples, 9.45%)</title><rect x="1078.5" y="1107.0" width="111.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1081.5" y="1118.0">[pool-3-threa..</text>
</g>
<g>
<title>java/lang/Thread.run (396 samples, 9.45%)</title><rect x="1078.5" y="1091.0" width="111.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1081.5" y="1102.0">java/lang/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (396 samples, 9.45%)</title><rect x="1078.5" y="1075.0" width="111.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1081.5" y="1086.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (396 samples, 9.45%)</title><rect x="1078.5" y="1059.0" width="111.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1081.5" y="1070.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (25 samples, 0.60%)</title><rect x="1078.5" y="1043.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1081.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (25 samples, 0.60%)</title><rect x="1078.5" y="1027.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1081.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (25 samples, 0.60%)</title><rect x="1078.5" y="1011.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1081.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (25 samples, 0.60%)</title><rect x="1078.5" y="995.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1081.5" y="1006.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (25 samples, 0.60%)</title><rect x="1078.5" y="979.0" width="7.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1081.5" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$105/1788683425.run (371 samples, 8.86%)</title><rect x="1085.5" y="1043.0" width="104.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1088.5" y="1054.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.lambda$put$1 (371 samples, 8.86%)</title><rect x="1085.5" y="1027.0" width="104.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1088.5" y="1038.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/String.getBytes (27 samples, 0.64%)</title><rect x="1085.5" y="1011.0" width="7.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1088.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (27 samples, 0.64%)</title><rect x="1085.5" y="995.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1088.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (27 samples, 0.64%)</title><rect x="1085.5" y="979.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1088.5" y="990.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (27 samples, 0.64%)</title><rect x="1085.5" y="963.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1088.5" y="974.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.64%)</title><rect x="1085.5" y="947.0" width="7.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1088.5" y="958.0"></text>
</g>
<g>
<title>one.nio.http.Response (25 samples, 0.60%)</title><rect x="1093.1" y="1011.0" width="7.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1096.1" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (111 samples, 2.65%)</title><rect x="1100.1" y="1011.0" width="31.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1103.1" y="1022.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (111 samples, 2.65%)</title><rect x="1100.1" y="995.0" width="31.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1103.1" y="1006.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (83 samples, 1.98%)</title><rect x="1100.1" y="979.0" width="23.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1103.1" y="990.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (83 samples, 1.98%)</title><rect x="1100.1" y="963.0" width="23.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1103.1" y="974.0">o..</text>
</g>
<g>
<title>byte[] (79 samples, 1.89%)</title><rect x="1100.1" y="947.0" width="22.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1103.1" y="958.0">b..</text>
</g>
<g>
<title>byte[] (4 samples, 0.10%)</title><rect x="1122.4" y="947.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1125.4" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (28 samples, 0.67%)</title><rect x="1123.5" y="979.0" width="7.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1126.5" y="990.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (28 samples, 0.67%)</title><rect x="1123.5" y="963.0" width="7.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1126.5" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (81 samples, 1.93%)</title><rect x="1131.4" y="1011.0" width="22.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1134.4" y="1022.0">o..</text>
</g>
<g>
<title>byte[] (34 samples, 0.81%)</title><rect x="1131.4" y="995.0" width="9.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1134.4" y="1006.0"></text>
</g>
<g>
<title>java.lang.String[] (28 samples, 0.67%)</title><rect x="1141.0" y="995.0" width="7.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1144.0" y="1006.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.45%)</title><rect x="1148.9" y="995.0" width="5.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1151.9" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.upsert (127 samples, 3.03%)</title><rect x="1154.2" y="1011.0" width="35.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1157.2" y="1022.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.upsert (127 samples, 3.03%)</title><rect x="1154.2" y="995.0" width="35.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1157.2" y="1006.0">ru/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (45 samples, 1.07%)</title><rect x="1154.2" y="979.0" width="12.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1157.2" y="990.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (45 samples, 1.07%)</title><rect x="1154.2" y="963.0" width="12.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1157.2" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.upsert (82 samples, 1.96%)</title><rect x="1166.9" y="979.0" width="23.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1169.9" y="990.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (31 samples, 0.74%)</title><rect x="1166.9" y="963.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1169.9" y="974.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (31 samples, 0.74%)</title><rect x="1166.9" y="947.0" width="8.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1169.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (32 samples, 0.76%)</title><rect x="1175.6" y="963.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1178.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (32 samples, 0.76%)</title><rect x="1175.6" y="947.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1178.6" y="958.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (15 samples, 0.36%)</title><rect x="1175.6" y="931.0" width="4.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1178.6" y="942.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (17 samples, 0.41%)</title><rect x="1179.9" y="931.0" width="4.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1182.9" y="942.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.valaubr.Value (19 samples, 0.45%)</title><rect x="1184.6" y="963.0" width="5.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1187.6" y="974.0"></text>
</g>
</g>
</svg>
