<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (8,832 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (4 samples, 0.05%)</title><rect x="10.1" y="883.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="13.1" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.02%)</title><rect x="10.3" y="867.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.3" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.02%)</title><rect x="10.3" y="851.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.3" y="862.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="10.7" y="883.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.7" y="894.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (3 samples, 0.03%)</title><rect x="10.7" y="867.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="13.7" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.03%)</title><rect x="10.7" y="851.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="13.7" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.03%)</title><rect x="10.7" y="835.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="13.7" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.02%)</title><rect x="10.8" y="819.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="13.8" y="830.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.02%)</title><rect x="10.8" y="803.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="13.8" y="814.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.02%)</title><rect x="10.8" y="787.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="13.8" y="798.0"></text>
</g>
<g>
<title>[unknown_Java] (14 samples, 0.16%)</title><rect x="11.1" y="883.0" width="1.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="14.1" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.12%)</title><rect x="11.2" y="867.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="14.2" y="878.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (11 samples, 0.12%)</title><rect x="11.2" y="851.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.2" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.02%)</title><rect x="12.7" y="867.0" width="0.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="15.7" y="878.0"></text>
</g>
<g>
<title>java/lang/Thread.run (8,512 samples, 96.38%)</title><rect x="13.1" y="883.0" width="1137.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.1" y="894.0">java/lang/Thread.run</text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (2 samples, 0.02%)</title><rect x="13.1" y="867.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="16.1" y="878.0"></text>
</g>
<g>
<title>java/lang/Object.wait (2 samples, 0.02%)</title><rect x="13.1" y="851.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="16.1" y="862.0"></text>
</g>
<g>
<title>JVM_MonitorWait (2 samples, 0.02%)</title><rect x="13.1" y="835.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="16.1" y="846.0"></text>
</g>
<g>
<title>ObjectSynchronizer::wait(Handle, long, Thread*) (2 samples, 0.02%)</title><rect x="13.1" y="819.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="16.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (8,510 samples, 96.35%)</title><rect x="13.3" y="867.0" width="1137.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="16.3" y="878.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (8,510 samples, 96.35%)</title><rect x="13.3" y="851.0" width="1137.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="16.3" y="862.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (146 samples, 1.65%)</title><rect x="13.7" y="835.0" width="19.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="16.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (142 samples, 1.61%)</title><rect x="14.3" y="819.0" width="18.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (97 samples, 1.10%)</title><rect x="14.3" y="803.0" width="12.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="17.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.03%)</title><rect x="14.7" y="787.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.03%)</title><rect x="14.7" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.02%)</title><rect x="14.8" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.02%)</title><rect x="14.8" y="739.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="17.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.02%)</title><rect x="14.8" y="723.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="17.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (2 samples, 0.02%)</title><rect x="15.1" y="787.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (2 samples, 0.02%)</title><rect x="15.1" y="771.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (89 samples, 1.01%)</title><rect x="15.3" y="787.0" width="11.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (87 samples, 0.99%)</title><rect x="15.6" y="771.0" width="11.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.6" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (37 samples, 0.42%)</title><rect x="16.0" y="755.0" width="5.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="19.0" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.05%)</title><rect x="16.5" y="739.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="19.5" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (2 samples, 0.02%)</title><rect x="17.3" y="739.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="20.3" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (21 samples, 0.24%)</title><rect x="17.6" y="739.0" width="2.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="20.6" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.12%)</title><rect x="19.0" y="723.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="22.0" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.11%)</title><rect x="19.1" y="707.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="22.1" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.03%)</title><rect x="19.9" y="691.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="22.9" y="702.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.03%)</title><rect x="19.9" y="675.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="22.9" y="686.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.03%)</title><rect x="19.9" y="659.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="22.9" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.03%)</title><rect x="20.4" y="739.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="23.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.51%)</title><rect x="21.0" y="755.0" width="6.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="24.0" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (41 samples, 0.46%)</title><rect x="21.0" y="739.0" width="5.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="24.0" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.25%)</title><rect x="23.5" y="723.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="26.5" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.24%)</title><rect x="23.6" y="707.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="26.6" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.16%)</title><rect x="24.4" y="691.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="27.4" y="702.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.14%)</title><rect x="24.7" y="675.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="27.7" y="686.0"></text>
</g>
<g>
<title>futex_wait (10 samples, 0.11%)</title><rect x="24.7" y="659.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="27.7" y="670.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.03%)</title><rect x="24.7" y="643.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="27.7" y="654.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.06%)</title><rect x="25.1" y="643.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="28.1" y="654.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (2 samples, 0.02%)</title><rect x="25.5" y="627.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="28.5" y="638.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.02%)</title><rect x="25.8" y="643.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="28.8" y="654.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.02%)</title><rect x="26.0" y="659.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="29.0" y="670.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.03%)</title><rect x="26.4" y="739.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="29.4" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.02%)</title><rect x="27.0" y="755.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="30.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (44 samples, 0.50%)</title><rect x="27.4" y="803.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (44 samples, 0.50%)</title><rect x="27.4" y="787.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (44 samples, 0.50%)</title><rect x="27.4" y="771.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (44 samples, 0.50%)</title><rect x="27.4" y="755.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="30.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (44 samples, 0.50%)</title><rect x="27.4" y="739.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="30.4" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.02%)</title><rect x="27.4" y="723.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="30.4" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (42 samples, 0.48%)</title><rect x="27.6" y="723.0" width="5.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="30.6" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.46%)</title><rect x="27.8" y="707.0" width="5.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="30.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 0.46%)</title><rect x="27.8" y="691.0" width="5.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="30.8" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (38 samples, 0.43%)</title><rect x="28.2" y="675.0" width="5.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="31.2" y="686.0"></text>
</g>
<g>
<title>do_futex (37 samples, 0.42%)</title><rect x="28.3" y="659.0" width="4.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="31.3" y="670.0"></text>
</g>
<g>
<title>futex_wake (37 samples, 0.42%)</title><rect x="28.3" y="643.0" width="4.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="31.3" y="654.0"></text>
</g>
<g>
<title>wake_up_q (36 samples, 0.41%)</title><rect x="28.4" y="627.0" width="4.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="31.4" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (35 samples, 0.40%)</title><rect x="28.6" y="611.0" width="4.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="31.6" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (32 samples, 0.36%)</title><rect x="28.8" y="595.0" width="4.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="31.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$118/366139759.run (8,325 samples, 94.26%)</title><rect x="33.2" y="835.0" width="1112.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="36.2" y="846.0">ru/mail/polis/service/valaubr/HttpService$$Lambda$118/366139759.run</text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.lambda$get$0 (8,324 samples, 94.25%)</title><rect x="33.4" y="819.0" width="1112.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="36.4" y="830.0">ru/mail/polis/service/valaubr/HttpService.lambda$get$0</text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.05%)</title><rect x="33.5" y="803.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="36.5" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.02%)</title><rect x="33.5" y="787.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="36.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.02%)</title><rect x="33.5" y="771.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$130/1575652623.apply (2 samples, 0.02%)</title><rect x="33.8" y="787.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="36.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.strip (2 samples, 0.02%)</title><rect x="34.0" y="803.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.strip (2 samples, 0.02%)</title><rect x="34.0" y="787.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="37.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.lastIndexOfNonWhitespace (2 samples, 0.02%)</title><rect x="34.0" y="771.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="37.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.05%)</title><rect x="34.3" y="803.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="37.3" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.05%)</title><rect x="34.3" y="787.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="37.3" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="34.6" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="37.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="34.6" y="755.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="37.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.03%)</title><rect x="34.9" y="803.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="37.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (223 samples, 2.52%)</title><rect x="35.4" y="803.0" width="29.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="38.4" y="814.0">on..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.02%)</title><rect x="35.5" y="787.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="38.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.02%)</title><rect x="35.5" y="771.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="38.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.02%)</title><rect x="35.5" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="38.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (214 samples, 2.42%)</title><rect x="35.8" y="787.0" width="28.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="38.8" y="798.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.10%)</title><rect x="35.8" y="771.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="38.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.07%)</title><rect x="36.2" y="755.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="39.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (6 samples, 0.07%)</title><rect x="36.2" y="739.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.07%)</title><rect x="36.2" y="723.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="39.2" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (205 samples, 2.32%)</title><rect x="37.0" y="771.0" width="27.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="40.0" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (205 samples, 2.32%)</title><rect x="37.0" y="755.0" width="27.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.0" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (204 samples, 2.31%)</title><rect x="37.1" y="739.0" width="27.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="40.1" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (204 samples, 2.31%)</title><rect x="37.1" y="723.0" width="27.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="40.1" y="734.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (13 samples, 0.15%)</title><rect x="37.4" y="707.0" width="1.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="40.4" y="718.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.02%)</title><rect x="37.8" y="691.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="40.8" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.02%)</title><rect x="38.1" y="691.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="41.1" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.05%)</title><rect x="38.5" y="691.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="41.5" y="702.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.02%)</title><rect x="39.3" y="707.0" width="0.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="42.3" y="718.0"></text>
</g>
<g>
<title>__send (184 samples, 2.08%)</title><rect x="39.5" y="707.0" width="24.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="42.5" y="718.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (176 samples, 1.99%)</title><rect x="40.6" y="691.0" width="23.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="43.6" y="702.0">e..</text>
</g>
<g>
<title>do_syscall_64 (175 samples, 1.98%)</title><rect x="40.7" y="675.0" width="23.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="43.7" y="686.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (170 samples, 1.92%)</title><rect x="41.4" y="659.0" width="22.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="44.4" y="670.0">_..</text>
</g>
<g>
<title>__sys_sendto (170 samples, 1.92%)</title><rect x="41.4" y="643.0" width="22.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="44.4" y="654.0">_..</text>
</g>
<g>
<title>sock_sendmsg (170 samples, 1.92%)</title><rect x="41.4" y="627.0" width="22.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="44.4" y="638.0">s..</text>
</g>
<g>
<title>inet6_sendmsg (169 samples, 1.91%)</title><rect x="41.5" y="611.0" width="22.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="44.5" y="622.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (168 samples, 1.90%)</title><rect x="41.7" y="595.0" width="22.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="44.7" y="606.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (163 samples, 1.85%)</title><rect x="42.2" y="579.0" width="21.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="45.2" y="590.0">t..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.02%)</title><rect x="43.0" y="563.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="46.0" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (9 samples, 0.10%)</title><rect x="43.5" y="563.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="46.5" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.10%)</title><rect x="43.5" y="547.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="46.5" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (5 samples, 0.06%)</title><rect x="43.7" y="531.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="46.7" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.02%)</title><rect x="43.7" y="515.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="46.7" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.02%)</title><rect x="43.9" y="515.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="46.9" y="526.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.02%)</title><rect x="44.5" y="531.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="47.5" y="542.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.02%)</title><rect x="44.5" y="515.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="47.5" y="526.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.05%)</title><rect x="44.7" y="563.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="47.7" y="574.0"></text>
</g>
<g>
<title>tcp_chrono_start (4 samples, 0.05%)</title><rect x="44.7" y="547.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="47.7" y="558.0"></text>
</g>
<g>
<title>tcp_push (136 samples, 1.54%)</title><rect x="45.5" y="563.0" width="18.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="48.5" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (135 samples, 1.53%)</title><rect x="45.7" y="547.0" width="18.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="48.7" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (133 samples, 1.51%)</title><rect x="45.9" y="531.0" width="17.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="48.9" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (115 samples, 1.30%)</title><rect x="46.3" y="515.0" width="15.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="49.3" y="526.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.02%)</title><rect x="46.7" y="499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="49.7" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (106 samples, 1.20%)</title><rect x="47.1" y="499.0" width="14.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="50.1" y="510.0"></text>
</g>
<g>
<title>__ip_queue_xmit (104 samples, 1.18%)</title><rect x="47.1" y="483.0" width="13.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="50.1" y="494.0"></text>
</g>
<g>
<title>ip_local_out (98 samples, 1.11%)</title><rect x="47.9" y="467.0" width="13.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="50.9" y="478.0"></text>
</g>
<g>
<title>ip_output (97 samples, 1.10%)</title><rect x="48.1" y="451.0" width="12.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="51.1" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (97 samples, 1.10%)</title><rect x="48.1" y="435.0" width="12.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="51.1" y="446.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.05%)</title><rect x="48.1" y="419.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="51.1" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (92 samples, 1.04%)</title><rect x="48.6" y="419.0" width="12.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="51.6" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (91 samples, 1.03%)</title><rect x="48.7" y="403.0" width="12.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="51.7" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (69 samples, 0.78%)</title><rect x="48.9" y="387.0" width="9.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="51.9" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.0 (69 samples, 0.78%)</title><rect x="48.9" y="371.0" width="9.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="51.9" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (67 samples, 0.76%)</title><rect x="49.1" y="355.0" width="9.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="52.1" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (66 samples, 0.75%)</title><rect x="49.1" y="339.0" width="8.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="52.1" y="350.0"></text>
</g>
<g>
<title>net_rx_action (65 samples, 0.74%)</title><rect x="49.3" y="323.0" width="8.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="52.3" y="334.0"></text>
</g>
<g>
<title>process_backlog (64 samples, 0.72%)</title><rect x="49.4" y="307.0" width="8.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="52.4" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (64 samples, 0.72%)</title><rect x="49.4" y="291.0" width="8.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="52.4" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (62 samples, 0.70%)</title><rect x="49.5" y="275.0" width="8.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="52.5" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.02%)</title><rect x="49.5" y="259.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="52.5" y="270.0"></text>
</g>
<g>
<title>ip_rcv (58 samples, 0.66%)</title><rect x="49.8" y="259.0" width="7.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="52.8" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (4 samples, 0.05%)</title><rect x="49.8" y="243.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="52.8" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (54 samples, 0.61%)</title><rect x="50.3" y="243.0" width="7.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="53.3" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (53 samples, 0.60%)</title><rect x="50.3" y="227.0" width="7.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="53.3" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (52 samples, 0.59%)</title><rect x="50.3" y="211.0" width="7.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="53.3" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (52 samples, 0.59%)</title><rect x="50.3" y="195.0" width="7.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="53.3" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (50 samples, 0.57%)</title><rect x="50.6" y="179.0" width="6.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="53.6" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (43 samples, 0.49%)</title><rect x="51.3" y="163.0" width="5.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="54.3" y="174.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.02%)</title><rect x="51.4" y="147.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="54.4" y="158.0"></text>
</g>
<g>
<title>tcp_data_ready (2 samples, 0.02%)</title><rect x="51.7" y="147.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="54.7" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (38 samples, 0.43%)</title><rect x="52.0" y="147.0" width="5.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="55.0" y="158.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.02%)</title><rect x="52.2" y="131.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="55.2" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.02%)</title><rect x="52.2" y="115.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="55.2" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.02%)</title><rect x="52.2" y="99.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="55.2" y="110.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.02%)</title><rect x="52.2" y="83.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="55.2" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.02%)</title><rect x="52.2" y="67.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="55.2" y="78.0"></text>
</g>
<g>
<title>tcp_ack (26 samples, 0.29%)</title><rect x="52.5" y="131.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="55.5" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (15 samples, 0.17%)</title><rect x="53.6" y="115.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="56.6" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.08%)</title><rect x="54.0" y="99.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="57.0" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.02%)</title><rect x="54.0" y="83.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="57.0" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.02%)</title><rect x="54.0" y="67.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="57.0" y="78.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.06%)</title><rect x="54.2" y="83.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="57.2" y="94.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.06%)</title><rect x="54.2" y="67.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="57.2" y="78.0"></text>
</g>
<g>
<title>skb_free_head (5 samples, 0.06%)</title><rect x="54.2" y="51.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="57.2" y="62.0"></text>
</g>
<g>
<title>kfree (5 samples, 0.06%)</title><rect x="54.2" y="35.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="57.2" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.02%)</title><rect x="54.9" y="99.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="57.9" y="110.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.02%)</title><rect x="55.2" y="99.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="58.2" y="110.0"></text>
</g>
<g>
<title>tcp_data_ready (5 samples, 0.06%)</title><rect x="56.1" y="131.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="59.1" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 0.06%)</title><rect x="56.1" y="115.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="59.1" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 0.06%)</title><rect x="56.1" y="99.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="59.1" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.06%)</title><rect x="56.1" y="83.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="59.1" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.06%)</title><rect x="56.1" y="67.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="59.1" y="78.0"></text>
</g>
<g>
<title>dev_queue_xmit (20 samples, 0.23%)</title><rect x="58.1" y="387.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="61.1" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (17 samples, 0.19%)</title><rect x="58.1" y="371.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="61.1" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.08%)</title><rect x="58.5" y="355.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="61.5" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.02%)</title><rect x="58.9" y="339.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="61.9" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.02%)</title><rect x="59.4" y="355.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="62.4" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.06%)</title><rect x="59.7" y="355.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="62.7" y="366.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.02%)</title><rect x="61.3" y="499.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="64.3" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.06%)</title><rect x="62.2" y="515.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="65.2" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.05%)</title><rect x="62.4" y="499.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="65.4" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.05%)</title><rect x="62.4" y="483.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="65.4" y="494.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.05%)</title><rect x="62.4" y="467.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="65.4" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.02%)</title><rect x="62.6" y="451.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="65.6" y="462.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.02%)</title><rect x="63.3" y="515.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="66.3" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.02%)</title><rect x="63.7" y="563.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="66.7" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.02%)</title><rect x="63.7" y="547.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="66.7" y="558.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.02%)</title><rect x="64.1" y="707.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="67.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.07%)</title><rect x="64.4" y="787.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="67.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (8,086 samples, 91.55%)</title><rect x="65.2" y="803.0" width="1080.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.2" y="814.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (367 samples, 4.16%)</title><rect x="65.2" y="787.0" width="49.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.2" y="798.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (367 samples, 4.16%)</title><rect x="65.2" y="771.0" width="49.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.2" y="782.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (367 samples, 4.16%)</title><rect x="65.2" y="755.0" width="49.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.2" y="766.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (367 samples, 4.16%)</title><rect x="65.2" y="739.0" width="49.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.2" y="750.0">com/g..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (367 samples, 4.16%)</title><rect x="65.2" y="723.0" width="49.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="68.2" y="734.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (353 samples, 4.00%)</title><rect x="65.8" y="707.0" width="47.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.8" y="718.0">com/..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (17 samples, 0.19%)</title><rect x="66.2" y="691.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="69.2" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (17 samples, 0.19%)</title><rect x="66.2" y="675.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.2" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (16 samples, 0.18%)</title><rect x="66.4" y="659.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.4" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.17%)</title><rect x="66.5" y="643.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.5" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.16%)</title><rect x="66.6" y="627.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.6" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$116/1794098734.compare (14 samples, 0.16%)</title><rect x="66.6" y="611.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.6" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (14 samples, 0.16%)</title><rect x="66.6" y="595.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="69.6" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$114/52043408.compare (14 samples, 0.16%)</title><rect x="66.6" y="579.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.6" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (13 samples, 0.15%)</title><rect x="66.8" y="563.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="69.8" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.09%)</title><rect x="66.9" y="547.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.9" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.09%)</title><rect x="66.9" y="531.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="69.9" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.02%)</title><rect x="66.9" y="515.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="69.9" y="526.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.02%)</title><rect x="66.9" y="499.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="69.9" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.05%)</title><rect x="67.2" y="515.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="70.2" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.03%)</title><rect x="67.3" y="499.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="70.3" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.02%)</title><rect x="67.7" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="70.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$113/942999045.apply (4 samples, 0.05%)</title><rect x="68.0" y="547.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (4 samples, 0.05%)</title><rect x="68.0" y="531.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.0" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.05%)</title><rect x="68.0" y="515.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="71.0" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.03%)</title><rect x="68.1" y="499.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="71.1" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="68.3" y="483.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="71.3" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="68.3" y="467.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.3" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (333 samples, 3.77%)</title><rect x="68.5" y="691.0" width="44.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="71.5" y="702.0">java..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (333 samples, 3.77%)</title><rect x="68.5" y="675.0" width="44.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="71.5" y="686.0">java..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (332 samples, 3.76%)</title><rect x="68.7" y="659.0" width="44.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="71.7" y="670.0">java..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (332 samples, 3.76%)</title><rect x="68.7" y="643.0" width="44.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="71.7" y="654.0">java..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (332 samples, 3.76%)</title><rect x="68.7" y="627.0" width="44.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="71.7" y="638.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (332 samples, 3.76%)</title><rect x="68.7" y="611.0" width="44.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="71.7" y="622.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (323 samples, 3.66%)</title><rect x="68.8" y="595.0" width="43.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.8" y="606.0">com/..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (322 samples, 3.65%)</title><rect x="68.9" y="579.0" width="43.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.9" y="590.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (322 samples, 3.65%)</title><rect x="68.9" y="563.0" width="43.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="71.9" y="574.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getCell (322 samples, 3.65%)</title><rect x="68.9" y="547.0" width="43.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="71.9" y="558.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.03%)</title><rect x="68.9" y="531.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="71.9" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="68.9" y="515.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="71.9" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="68.9" y="499.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="71.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (134 samples, 1.52%)</title><rect x="69.3" y="531.0" width="17.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="72.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (46 samples, 0.52%)</title><rect x="69.5" y="515.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (46 samples, 0.52%)</title><rect x="69.5" y="499.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (46 samples, 0.52%)</title><rect x="69.5" y="483.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.02%)</title><rect x="69.6" y="467.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.6" y="478.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.02%)</title><rect x="69.6" y="451.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.6" y="462.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.02%)</title><rect x="69.6" y="435.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.6" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (39 samples, 0.44%)</title><rect x="69.9" y="467.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="72.9" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.03%)</title><rect x="70.0" y="451.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.0" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.03%)</title><rect x="70.0" y="435.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.02%)</title><rect x="70.1" y="419.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="73.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.02%)</title><rect x="70.1" y="403.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="73.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.02%)</title><rect x="70.1" y="387.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="73.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (2 samples, 0.02%)</title><rect x="70.1" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.1" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (28 samples, 0.32%)</title><rect x="70.4" y="451.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="73.4" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (28 samples, 0.32%)</title><rect x="70.4" y="435.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (28 samples, 0.32%)</title><rect x="70.4" y="419.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="73.4" y="430.0"></text>
</g>
<g>
<title>__libc_pread64 (25 samples, 0.28%)</title><rect x="70.7" y="403.0" width="3.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="73.7" y="414.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.22%)</title><rect x="71.5" y="387.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="74.5" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.20%)</title><rect x="71.6" y="371.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="74.6" y="382.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (12 samples, 0.14%)</title><rect x="72.4" y="355.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="75.4" y="366.0"></text>
</g>
<g>
<title>ksys_pread64 (12 samples, 0.14%)</title><rect x="72.4" y="339.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="75.4" y="350.0"></text>
</g>
<g>
<title>vfs_read (10 samples, 0.11%)</title><rect x="72.7" y="323.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="75.7" y="334.0"></text>
</g>
<g>
<title>__vfs_read (9 samples, 0.10%)</title><rect x="72.8" y="307.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="75.8" y="318.0"></text>
</g>
<g>
<title>new_sync_read (8 samples, 0.09%)</title><rect x="72.8" y="291.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="75.8" y="302.0"></text>
</g>
<g>
<title>shmem_file_read_iter (7 samples, 0.08%)</title><rect x="72.8" y="275.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="75.8" y="286.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (4 samples, 0.05%)</title><rect x="73.2" y="259.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="76.2" y="270.0"></text>
</g>
<g>
<title>find_lock_entry (3 samples, 0.03%)</title><rect x="73.3" y="243.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="76.3" y="254.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.02%)</title><rect x="73.5" y="227.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="76.5" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.07%)</title><rect x="74.1" y="451.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.1" y="462.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.02%)</title><rect x="74.5" y="435.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.5" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.02%)</title><rect x="74.5" y="419.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="77.5" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.05%)</title><rect x="75.1" y="467.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="78.1" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (87 samples, 0.99%)</title><rect x="75.6" y="515.0" width="11.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="78.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (86 samples, 0.97%)</title><rect x="75.7" y="499.0" width="11.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (4 samples, 0.05%)</title><rect x="76.0" y="483.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.0" y="494.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (4 samples, 0.05%)</title><rect x="76.0" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.0" y="478.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.02%)</title><rect x="76.3" y="451.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="79.3" y="462.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.02%)</title><rect x="76.3" y="435.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="79.3" y="446.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.02%)</title><rect x="76.3" y="419.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="79.3" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (78 samples, 0.88%)</title><rect x="76.5" y="483.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="79.5" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.03%)</title><rect x="76.5" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.5" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.03%)</title><rect x="76.5" y="451.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.02%)</title><rect x="76.7" y="435.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="79.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.02%)</title><rect x="76.7" y="419.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="79.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.02%)</title><rect x="76.7" y="403.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="79.7" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (73 samples, 0.83%)</title><rect x="76.9" y="467.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="79.9" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (73 samples, 0.83%)</title><rect x="76.9" y="451.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="79.9" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (73 samples, 0.83%)</title><rect x="76.9" y="435.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="79.9" y="446.0"></text>
</g>
<g>
<title>__libc_pread64 (66 samples, 0.75%)</title><rect x="77.5" y="419.0" width="8.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="80.5" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.46%)</title><rect x="80.8" y="403.0" width="5.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="83.8" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (40 samples, 0.45%)</title><rect x="80.9" y="387.0" width="5.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="83.9" y="398.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (30 samples, 0.34%)</title><rect x="82.3" y="371.0" width="4.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="85.3" y="382.0"></text>
</g>
<g>
<title>ksys_pread64 (30 samples, 0.34%)</title><rect x="82.3" y="355.0" width="4.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="85.3" y="366.0"></text>
</g>
<g>
<title>vfs_read (28 samples, 0.32%)</title><rect x="82.5" y="339.0" width="3.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="85.5" y="350.0"></text>
</g>
<g>
<title>__vfs_read (19 samples, 0.22%)</title><rect x="82.9" y="323.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="85.9" y="334.0"></text>
</g>
<g>
<title>new_sync_read (17 samples, 0.19%)</title><rect x="82.9" y="307.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="85.9" y="318.0"></text>
</g>
<g>
<title>shmem_file_read_iter (14 samples, 0.16%)</title><rect x="83.1" y="291.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="86.1" y="302.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (9 samples, 0.10%)</title><rect x="83.7" y="275.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="86.7" y="286.0"></text>
</g>
<g>
<title>find_lock_entry (8 samples, 0.09%)</title><rect x="83.9" y="259.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="86.9" y="270.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.06%)</title><rect x="84.2" y="243.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="87.2" y="254.0"></text>
</g>
<g>
<title>unlock_page (2 samples, 0.02%)</title><rect x="85.0" y="291.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="88.0" y="302.0"></text>
</g>
<g>
<title>shmem_file_read_iter (2 samples, 0.02%)</title><rect x="85.2" y="307.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="88.2" y="318.0"></text>
</g>
<g>
<title>rw_verify_area (6 samples, 0.07%)</title><rect x="85.5" y="323.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="88.5" y="334.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.06%)</title><rect x="85.6" y="307.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="88.6" y="318.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="86.0" y="291.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="89.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.02%)</title><rect x="87.0" y="483.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (54 samples, 0.61%)</title><rect x="87.2" y="531.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="90.2" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.03%)</title><rect x="87.2" y="515.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.2" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="87.4" y="499.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="90.4" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="87.4" y="483.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.4" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="87.4" y="467.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.4" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (51 samples, 0.58%)</title><rect x="87.6" y="515.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="90.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (51 samples, 0.58%)</title><rect x="87.6" y="499.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="90.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.03%)</title><rect x="87.6" y="483.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="90.6" y="494.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.03%)</title><rect x="87.6" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="90.6" y="478.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.03%)</title><rect x="87.6" y="451.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.6" y="462.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.03%)</title><rect x="87.6" y="435.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.6" y="446.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.02%)</title><rect x="87.8" y="419.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.8" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (44 samples, 0.50%)</title><rect x="88.0" y="483.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="91.0" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.03%)</title><rect x="88.0" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="91.0" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.03%)</title><rect x="88.0" y="451.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (40 samples, 0.45%)</title><rect x="88.4" y="467.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="91.4" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (38 samples, 0.43%)</title><rect x="88.7" y="451.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="91.7" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (38 samples, 0.43%)</title><rect x="88.7" y="435.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="91.7" y="446.0"></text>
</g>
<g>
<title>__libc_pread64 (36 samples, 0.41%)</title><rect x="88.7" y="419.0" width="4.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="91.7" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.24%)</title><rect x="90.7" y="403.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="93.7" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.24%)</title><rect x="90.7" y="387.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="93.7" y="398.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (18 samples, 0.20%)</title><rect x="91.0" y="371.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="94.0" y="382.0"></text>
</g>
<g>
<title>ksys_pread64 (18 samples, 0.20%)</title><rect x="91.0" y="355.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="94.0" y="366.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.02%)</title><rect x="91.0" y="339.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="94.0" y="350.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="91.0" y="323.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="94.0" y="334.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.02%)</title><rect x="91.0" y="307.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="94.0" y="318.0"></text>
</g>
<g>
<title>vfs_read (15 samples, 0.17%)</title><rect x="91.4" y="339.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="94.4" y="350.0"></text>
</g>
<g>
<title>__vfs_read (8 samples, 0.09%)</title><rect x="91.9" y="323.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="94.9" y="334.0"></text>
</g>
<g>
<title>new_sync_read (7 samples, 0.08%)</title><rect x="91.9" y="307.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="94.9" y="318.0"></text>
</g>
<g>
<title>shmem_file_read_iter (6 samples, 0.07%)</title><rect x="92.0" y="291.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="95.0" y="302.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (4 samples, 0.05%)</title><rect x="92.2" y="275.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="95.2" y="286.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="93.1" y="323.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="96.1" y="334.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="93.1" y="307.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="96.1" y="318.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.02%)</title><rect x="93.1" y="291.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="96.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.05%)</title><rect x="93.9" y="483.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="96.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.05%)</title><rect x="93.9" y="467.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="96.9" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (131 samples, 1.48%)</title><rect x="94.4" y="531.0" width="17.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (131 samples, 1.48%)</title><rect x="94.4" y="515.0" width="17.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="97.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.05%)</title><rect x="94.6" y="499.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="97.6" y="510.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.05%)</title><rect x="94.6" y="483.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="97.6" y="494.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.03%)</title><rect x="94.7" y="467.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.7" y="478.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.03%)</title><rect x="94.7" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.7" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.03%)</title><rect x="94.7" y="435.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.7" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (119 samples, 1.35%)</title><rect x="95.1" y="499.0" width="15.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="98.1" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (5 samples, 0.06%)</title><rect x="95.2" y="483.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="98.2" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.06%)</title><rect x="95.2" y="467.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="98.2" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.02%)</title><rect x="95.4" y="451.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="98.4" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.02%)</title><rect x="95.4" y="435.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="98.4" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.02%)</title><rect x="95.4" y="419.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="98.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.02%)</title><rect x="95.6" y="451.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="98.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (111 samples, 1.26%)</title><rect x="95.9" y="483.0" width="14.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="98.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (111 samples, 1.26%)</title><rect x="95.9" y="467.0" width="14.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="98.9" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (111 samples, 1.26%)</title><rect x="95.9" y="451.0" width="14.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="98.9" y="462.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.02%)</title><rect x="96.4" y="435.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="99.4" y="446.0"></text>
</g>
<g>
<title>__libc_pread64 (101 samples, 1.14%)</title><rect x="96.7" y="435.0" width="13.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="99.7" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (69 samples, 0.78%)</title><rect x="101.0" y="419.0" width="9.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="104.0" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.02%)</title><rect x="101.0" y="403.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="104.0" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (67 samples, 0.76%)</title><rect x="101.3" y="403.0" width="8.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="104.3" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (45 samples, 0.51%)</title><rect x="104.2" y="387.0" width="6.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="107.2" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (45 samples, 0.51%)</title><rect x="104.2" y="371.0" width="6.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="107.2" y="382.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.05%)</title><rect x="104.2" y="355.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="107.2" y="366.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="104.2" y="339.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="107.2" y="350.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.05%)</title><rect x="104.2" y="323.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="107.2" y="334.0"></text>
</g>
<g>
<title>vfs_read (41 samples, 0.46%)</title><rect x="104.7" y="355.0" width="5.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="107.7" y="366.0"></text>
</g>
<g>
<title>__vfs_read (28 samples, 0.32%)</title><rect x="105.1" y="339.0" width="3.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="108.1" y="350.0"></text>
</g>
<g>
<title>new_sync_read (27 samples, 0.31%)</title><rect x="105.1" y="323.0" width="3.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="108.1" y="334.0"></text>
</g>
<g>
<title>shmem_file_read_iter (26 samples, 0.29%)</title><rect x="105.3" y="307.0" width="3.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="108.3" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (8 samples, 0.09%)</title><rect x="105.8" y="291.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="108.8" y="302.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (6 samples, 0.07%)</title><rect x="106.1" y="275.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="109.1" y="286.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (12 samples, 0.14%)</title><rect x="106.9" y="291.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="109.9" y="302.0"></text>
</g>
<g>
<title>find_lock_entry (11 samples, 0.12%)</title><rect x="107.0" y="275.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="110.0" y="286.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.03%)</title><rect x="107.8" y="259.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="110.8" y="270.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.03%)</title><rect x="107.8" y="243.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="110.8" y="254.0"></text>
</g>
<g>
<title>page_mapping (2 samples, 0.02%)</title><rect x="108.2" y="259.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="111.2" y="270.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.02%)</title><rect x="108.5" y="291.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="111.5" y="302.0"></text>
</g>
<g>
<title>rw_verify_area (8 samples, 0.09%)</title><rect x="109.1" y="339.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="112.1" y="350.0"></text>
</g>
<g>
<title>security_file_permission (8 samples, 0.09%)</title><rect x="109.1" y="323.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="112.1" y="334.0"></text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.03%)</title><rect x="109.1" y="307.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="112.1" y="318.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.03%)</title><rect x="109.5" y="307.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="112.5" y="318.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.02%)</title><rect x="109.7" y="291.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="112.7" y="302.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="109.9" y="307.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="112.9" y="318.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.02%)</title><rect x="110.3" y="435.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="113.3" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.02%)</title><rect x="110.7" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="113.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (7 samples, 0.08%)</title><rect x="111.0" y="499.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="114.0" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$116/1794098734.compare (8 samples, 0.09%)</title><rect x="111.9" y="595.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="114.9" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (8 samples, 0.09%)</title><rect x="111.9" y="579.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="114.9" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$114/52043408.compare (7 samples, 0.08%)</title><rect x="112.1" y="563.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="115.1" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (7 samples, 0.08%)</title><rect x="112.1" y="547.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="115.1" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.06%)</title><rect x="112.1" y="531.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="115.1" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.06%)</title><rect x="112.1" y="515.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="115.1" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.02%)</title><rect x="112.1" y="499.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="115.1" y="510.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.02%)</title><rect x="112.1" y="483.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="115.1" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.03%)</title><rect x="112.3" y="499.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="115.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$113/942999045.apply (2 samples, 0.02%)</title><rect x="112.7" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="115.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (2 samples, 0.02%)</title><rect x="112.7" y="515.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="115.7" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.02%)</title><rect x="112.7" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="115.7" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.02%)</title><rect x="112.7" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="115.7" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="112.7" y="467.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.7" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="112.7" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="115.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$128/703866235.apply (2 samples, 0.02%)</title><rect x="113.1" y="707.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="116.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (2 samples, 0.02%)</title><rect x="113.1" y="691.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="116.1" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.02%)</title><rect x="113.1" y="675.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="116.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool$$Lambda$121/96529653.apply (6 samples, 0.07%)</title><rect x="113.4" y="707.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (4 samples, 0.05%)</title><rect x="113.7" y="691.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="116.7" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.05%)</title><rect x="113.7" y="675.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="116.7" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (4 samples, 0.05%)</title><rect x="113.7" y="659.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.7" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="113.7" y="643.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.7" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="113.7" y="627.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="116.7" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="113.7" y="611.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="116.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (4 samples, 0.05%)</title><rect x="114.2" y="787.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.2" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (4 samples, 0.05%)</title><rect x="114.2" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="117.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$130/1575652623.apply (3 samples, 0.03%)</title><rect x="114.3" y="755.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="117.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.lambda$iterator$3 (3 samples, 0.03%)</title><rect x="114.3" y="739.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="117.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (2 samples, 0.02%)</title><rect x="114.5" y="723.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="117.5" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.02%)</title><rect x="114.5" y="707.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="117.5" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.02%)</title><rect x="114.5" y="691.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="117.5" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="114.5" y="675.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.5" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="114.5" y="659.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="117.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.iterator (7,715 samples, 87.35%)</title><rect x="114.7" y="787.0" width="1030.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="117.7" y="798.0">ru/mail/polis/dao/valaubr/LsmDAO.iterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (3 samples, 0.03%)</title><rect x="114.7" y="771.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.7" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.&lt;init&gt; (3 samples, 0.03%)</title><rect x="114.7" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="117.7" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.&lt;init&gt; (2 samples, 0.02%)</title><rect x="114.9" y="739.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="117.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.03%)</title><rect x="115.1" y="771.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.03%)</title><rect x="115.1" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="118.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.03%)</title><rect x="115.1" y="739.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.cellIterator (7,707 samples, 87.26%)</title><rect x="115.7" y="771.0" width="1029.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="118.7" y="782.0">ru/mail/polis/dao/valaubr/LsmDAO.cellIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,014 samples, 11.48%)</title><rect x="115.8" y="755.0" width="135.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.8" y="766.0">com/google/common..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,014 samples, 11.48%)</title><rect x="115.8" y="739.0" width="135.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="118.8" y="750.0">com/google/common..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (25 samples, 0.28%)</title><rect x="117.2" y="723.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.2" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (21 samples, 0.24%)</title><rect x="117.7" y="707.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="120.7" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (21 samples, 0.24%)</title><rect x="117.7" y="691.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="120.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (21 samples, 0.24%)</title><rect x="117.7" y="675.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.7" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.hasNext (4 samples, 0.05%)</title><rect x="117.7" y="659.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="120.7" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.isEmpty (2 samples, 0.02%)</title><rect x="118.0" y="643.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="121.0" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10 samples, 0.11%)</title><rect x="118.2" y="659.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="121.2" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (7 samples, 0.08%)</title><rect x="118.2" y="643.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.2" y="654.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (7 samples, 0.08%)</title><rect x="118.2" y="627.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="121.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (5 samples, 0.06%)</title><rect x="118.5" y="611.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.5" y="622.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (5 samples, 0.06%)</title><rect x="118.5" y="595.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.5" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.05%)</title><rect x="118.6" y="579.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="121.6" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$112/1312109180.getAsBoolean (2 samples, 0.02%)</title><rect x="118.9" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="121.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2 samples, 0.02%)</title><rect x="118.9" y="547.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="121.9" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.02%)</title><rect x="119.3" y="643.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="122.3" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.02%)</title><rect x="119.3" y="627.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="122.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$128/703866235.apply (2 samples, 0.02%)</title><rect x="119.7" y="659.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="122.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (2 samples, 0.02%)</title><rect x="119.7" y="643.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="122.7" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.02%)</title><rect x="119.7" y="627.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="122.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool$$Lambda$121/96529653.apply (4 samples, 0.05%)</title><rect x="120.0" y="659.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (3 samples, 0.03%)</title><rect x="120.1" y="643.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="123.1" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.03%)</title><rect x="120.1" y="627.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="123.1" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.02%)</title><rect x="120.2" y="611.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="123.2" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="120.2" y="595.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="123.2" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="120.2" y="579.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="123.2" y="590.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.03%)</title><rect x="120.6" y="723.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="123.6" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (975 samples, 11.04%)</title><rect x="121.0" y="723.0" width="130.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="124.0" y="734.0">java/util/Priori..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (974 samples, 11.03%)</title><rect x="121.2" y="707.0" width="130.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="124.2" y="718.0">java/util/Priori..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (10 samples, 0.11%)</title><rect x="121.2" y="691.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.2" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.02%)</title><rect x="122.2" y="675.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.2" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (964 samples, 10.91%)</title><rect x="122.5" y="691.0" width="128.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.5" y="702.0">java/util/Priori..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (964 samples, 10.91%)</title><rect x="122.5" y="675.0" width="128.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.5" y="686.0">java/util/Priori..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (958 samples, 10.85%)</title><rect x="123.3" y="659.0" width="128.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="126.3" y="670.0">com/google/commo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (957 samples, 10.84%)</title><rect x="123.4" y="643.0" width="127.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.4" y="654.0">com/google/commo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (935 samples, 10.59%)</title><rect x="124.1" y="627.0" width="124.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="127.1" y="638.0">com/google/comm..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (3 samples, 0.03%)</title><rect x="124.8" y="611.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (927 samples, 10.50%)</title><rect x="125.2" y="611.0" width="123.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="128.2" y="622.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (927 samples, 10.50%)</title><rect x="125.2" y="595.0" width="123.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="128.2" y="606.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getCell (927 samples, 10.50%)</title><rect x="125.2" y="579.0" width="123.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="128.2" y="590.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (11 samples, 0.12%)</title><rect x="125.2" y="563.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="128.2" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.08%)</title><rect x="125.4" y="547.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="128.4" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.07%)</title><rect x="125.6" y="531.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="128.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.02%)</title><rect x="126.4" y="547.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (425 samples, 4.81%)</title><rect x="126.6" y="563.0" width="56.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="129.6" y="574.0">ru/mai..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.02%)</title><rect x="126.8" y="547.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="129.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (179 samples, 2.03%)</title><rect x="127.0" y="547.0" width="24.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="130.0" y="558.0">r..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (179 samples, 2.03%)</title><rect x="127.0" y="531.0" width="24.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="130.0" y="542.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (179 samples, 2.03%)</title><rect x="127.0" y="515.0" width="24.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="130.0" y="526.0">s..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (2 samples, 0.02%)</title><rect x="127.7" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="130.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (11 samples, 0.12%)</title><rect x="128.0" y="499.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="131.0" y="510.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (11 samples, 0.12%)</title><rect x="128.0" y="483.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="131.0" y="494.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.05%)</title><rect x="128.9" y="467.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="131.9" y="478.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.03%)</title><rect x="128.9" y="451.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="131.9" y="462.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.03%)</title><rect x="128.9" y="435.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="131.9" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (142 samples, 1.61%)</title><rect x="129.6" y="499.0" width="18.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.6" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (13 samples, 0.15%)</title><rect x="129.7" y="483.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.7" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (11 samples, 0.12%)</title><rect x="130.0" y="467.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="133.0" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.03%)</title><rect x="130.4" y="451.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="133.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (5 samples, 0.06%)</title><rect x="130.8" y="451.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="133.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (5 samples, 0.06%)</title><rect x="130.8" y="435.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (5 samples, 0.06%)</title><rect x="130.8" y="419.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="133.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (2 samples, 0.02%)</title><rect x="130.8" y="403.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (3 samples, 0.03%)</title><rect x="131.0" y="403.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="134.0" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOStatus.normalize (3 samples, 0.03%)</title><rect x="131.0" y="387.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (101 samples, 1.14%)</title><rect x="131.4" y="483.0" width="13.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="134.4" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (99 samples, 1.12%)</title><rect x="131.7" y="467.0" width="13.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.7" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (98 samples, 1.11%)</title><rect x="131.8" y="451.0" width="13.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="134.8" y="462.0"></text>
</g>
<g>
<title>__libc_pread64 (92 samples, 1.04%)</title><rect x="132.2" y="435.0" width="12.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="135.2" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (63 samples, 0.71%)</title><rect x="136.1" y="419.0" width="8.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="139.1" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.02%)</title><rect x="136.1" y="403.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="139.1" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (61 samples, 0.69%)</title><rect x="136.4" y="403.0" width="8.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="139.4" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (42 samples, 0.48%)</title><rect x="138.9" y="387.0" width="5.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="141.9" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (42 samples, 0.48%)</title><rect x="138.9" y="371.0" width="5.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="141.9" y="382.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.05%)</title><rect x="139.1" y="355.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="142.1" y="366.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="139.1" y="339.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="142.1" y="350.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.05%)</title><rect x="139.1" y="323.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="142.1" y="334.0"></text>
</g>
<g>
<title>vfs_read (33 samples, 0.37%)</title><rect x="140.1" y="355.0" width="4.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="143.1" y="366.0"></text>
</g>
<g>
<title>__vfs_read (26 samples, 0.29%)</title><rect x="140.3" y="339.0" width="3.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="143.3" y="350.0"></text>
</g>
<g>
<title>new_sync_read (24 samples, 0.27%)</title><rect x="140.5" y="323.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="143.5" y="334.0"></text>
</g>
<g>
<title>shmem_file_read_iter (24 samples, 0.27%)</title><rect x="140.5" y="307.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="143.5" y="318.0"></text>
</g>
<g>
<title>copy_page_to_iter (5 samples, 0.06%)</title><rect x="141.3" y="291.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="144.3" y="302.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.02%)</title><rect x="141.7" y="275.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="144.7" y="286.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (12 samples, 0.14%)</title><rect x="142.1" y="291.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="145.1" y="302.0"></text>
</g>
<g>
<title>find_lock_entry (7 samples, 0.08%)</title><rect x="142.8" y="275.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="145.8" y="286.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.03%)</title><rect x="142.9" y="259.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="145.9" y="270.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.02%)</title><rect x="143.1" y="243.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="146.1" y="254.0"></text>
</g>
<g>
<title>page_mapping (3 samples, 0.03%)</title><rect x="143.3" y="259.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="146.3" y="270.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.06%)</title><rect x="143.9" y="339.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="146.9" y="350.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.06%)</title><rect x="143.9" y="323.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="146.9" y="334.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="144.3" y="307.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="147.3" y="318.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.02%)</title><rect x="144.5" y="435.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="147.5" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (26 samples, 0.29%)</title><rect x="145.1" y="483.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="148.1" y="494.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (8 samples, 0.09%)</title><rect x="146.3" y="467.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.3" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.05%)</title><rect x="146.7" y="451.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.7" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (9 samples, 0.10%)</title><rect x="147.3" y="467.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="150.3" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (2 samples, 0.02%)</title><rect x="148.3" y="451.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="151.3" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (18 samples, 0.20%)</title><rect x="148.5" y="499.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="151.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.02%)</title><rect x="150.2" y="483.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="153.2" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.02%)</title><rect x="150.4" y="483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.4" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.02%)</title><rect x="150.7" y="483.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="153.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (243 samples, 2.75%)</title><rect x="151.0" y="547.0" width="32.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="154.0" y="558.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (238 samples, 2.69%)</title><rect x="151.6" y="531.0" width="31.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="154.6" y="542.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (6 samples, 0.07%)</title><rect x="151.9" y="515.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="154.9" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (5 samples, 0.06%)</title><rect x="152.0" y="499.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (215 samples, 2.43%)</title><rect x="152.8" y="515.0" width="28.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="155.8" y="526.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (7 samples, 0.08%)</title><rect x="153.0" y="499.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.0" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (6 samples, 0.07%)</title><rect x="153.1" y="483.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (5 samples, 0.06%)</title><rect x="153.2" y="467.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="156.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.03%)</title><rect x="153.5" y="451.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.03%)</title><rect x="153.5" y="435.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (2 samples, 0.02%)</title><rect x="153.6" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.6" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (2 samples, 0.02%)</title><rect x="153.6" y="403.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.6" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (197 samples, 2.23%)</title><rect x="153.9" y="499.0" width="26.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.9" y="510.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (197 samples, 2.23%)</title><rect x="153.9" y="483.0" width="26.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.9" y="494.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (197 samples, 2.23%)</title><rect x="153.9" y="467.0" width="26.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="156.9" y="478.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.02%)</title><rect x="154.6" y="451.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="157.6" y="462.0"></text>
</g>
<g>
<title>__libc_pread64 (186 samples, 2.11%)</title><rect x="154.8" y="451.0" width="24.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="157.8" y="462.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (137 samples, 1.55%)</title><rect x="161.4" y="435.0" width="18.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="164.4" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (136 samples, 1.54%)</title><rect x="161.5" y="419.0" width="18.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="164.5" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (100 samples, 1.13%)</title><rect x="166.2" y="403.0" width="13.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="169.2" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (99 samples, 1.12%)</title><rect x="166.3" y="387.0" width="13.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="169.3" y="398.0"></text>
</g>
<g>
<title>__fdget (9 samples, 0.10%)</title><rect x="166.5" y="371.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="169.5" y="382.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.10%)</title><rect x="166.5" y="355.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="169.5" y="366.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.10%)</title><rect x="166.5" y="339.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="169.5" y="350.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.03%)</title><rect x="167.8" y="371.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="170.8" y="382.0"></text>
</g>
<g>
<title>vfs_read (85 samples, 0.96%)</title><rect x="168.2" y="371.0" width="11.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="171.2" y="382.0"></text>
</g>
<g>
<title>__vfs_read (58 samples, 0.66%)</title><rect x="169.1" y="355.0" width="7.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="172.1" y="366.0"></text>
</g>
<g>
<title>iov_iter_init (3 samples, 0.03%)</title><rect x="169.1" y="339.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="172.1" y="350.0"></text>
</g>
<g>
<title>new_sync_read (54 samples, 0.61%)</title><rect x="169.5" y="339.0" width="7.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="172.5" y="350.0"></text>
</g>
<g>
<title>shmem_file_read_iter (51 samples, 0.58%)</title><rect x="169.8" y="323.0" width="6.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="172.8" y="334.0"></text>
</g>
<g>
<title>copy_page_to_iter (6 samples, 0.07%)</title><rect x="171.0" y="307.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="174.0" y="318.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.05%)</title><rect x="171.3" y="291.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="174.3" y="302.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.02%)</title><rect x="171.8" y="307.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="174.8" y="318.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (32 samples, 0.36%)</title><rect x="172.1" y="307.0" width="4.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="175.1" y="318.0"></text>
</g>
<g>
<title>find_lock_entry (27 samples, 0.31%)</title><rect x="172.6" y="291.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="175.6" y="302.0"></text>
</g>
<g>
<title>find_get_entry (20 samples, 0.23%)</title><rect x="173.3" y="275.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="176.3" y="286.0"></text>
</g>
<g>
<title>xas_load (8 samples, 0.09%)</title><rect x="174.5" y="259.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="177.5" y="270.0"></text>
</g>
<g>
<title>xas_start (3 samples, 0.03%)</title><rect x="175.5" y="259.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="178.5" y="270.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.03%)</title><rect x="176.9" y="355.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="179.9" y="366.0"></text>
</g>
<g>
<title>rw_verify_area (17 samples, 0.19%)</title><rect x="177.3" y="355.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="180.3" y="366.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="177.5" y="339.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="180.5" y="350.0"></text>
</g>
<g>
<title>security_file_permission (13 samples, 0.15%)</title><rect x="177.8" y="339.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="180.8" y="350.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.05%)</title><rect x="178.2" y="323.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="181.2" y="334.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.05%)</title><rect x="178.2" y="307.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="181.2" y="318.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.02%)</title><rect x="178.7" y="323.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="181.7" y="334.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.05%)</title><rect x="179.0" y="323.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="182.0" y="334.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.02%)</title><rect x="179.9" y="451.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="182.9" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.03%)</title><rect x="180.2" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="183.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (7 samples, 0.08%)</title><rect x="180.6" y="499.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="183.6" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.03%)</title><rect x="180.7" y="483.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="183.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (2 samples, 0.02%)</title><rect x="181.1" y="483.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="184.1" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (6 samples, 0.07%)</title><rect x="181.5" y="515.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="184.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (5 samples, 0.06%)</title><rect x="181.7" y="499.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="184.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (8 samples, 0.09%)</title><rect x="182.4" y="515.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="185.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (134 samples, 1.52%)</title><rect x="183.4" y="563.0" width="17.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="186.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6 samples, 0.07%)</title><rect x="183.6" y="547.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="186.6" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="183.8" y="531.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="186.8" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="183.8" y="515.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="186.8" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="184.0" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="187.0" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.02%)</title><rect x="184.1" y="483.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="187.1" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (126 samples, 1.43%)</title><rect x="184.5" y="547.0" width="16.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="187.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (125 samples, 1.42%)</title><rect x="184.6" y="531.0" width="16.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="187.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (6 samples, 0.07%)</title><rect x="184.6" y="515.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="187.6" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (6 samples, 0.07%)</title><rect x="184.6" y="499.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="187.6" y="510.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.05%)</title><rect x="184.8" y="483.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="187.8" y="494.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.05%)</title><rect x="184.8" y="467.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="187.8" y="478.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.05%)</title><rect x="184.8" y="451.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.8" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (112 samples, 1.27%)</title><rect x="185.4" y="515.0" width="15.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="188.4" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (4 samples, 0.05%)</title><rect x="185.6" y="499.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="188.6" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.05%)</title><rect x="185.6" y="483.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="188.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.02%)</title><rect x="185.8" y="467.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="188.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.02%)</title><rect x="185.8" y="451.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="188.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.02%)</title><rect x="185.8" y="435.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="188.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (2 samples, 0.02%)</title><rect x="185.8" y="419.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="188.8" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (105 samples, 1.19%)</title><rect x="186.1" y="499.0" width="14.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="189.1" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (105 samples, 1.19%)</title><rect x="186.1" y="483.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.1" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (105 samples, 1.19%)</title><rect x="186.1" y="467.0" width="14.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="189.1" y="478.0"></text>
</g>
<g>
<title>__libc_pread64 (95 samples, 1.08%)</title><rect x="186.9" y="451.0" width="12.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="189.9" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (77 samples, 0.87%)</title><rect x="189.3" y="435.0" width="10.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="192.3" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (76 samples, 0.86%)</title><rect x="189.4" y="419.0" width="10.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="192.4" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (53 samples, 0.60%)</title><rect x="192.4" y="403.0" width="7.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="195.4" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (53 samples, 0.60%)</title><rect x="192.4" y="387.0" width="7.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="195.4" y="398.0"></text>
</g>
<g>
<title>__fdget (11 samples, 0.12%)</title><rect x="192.5" y="371.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="195.5" y="382.0"></text>
</g>
<g>
<title>__fget_light (11 samples, 0.12%)</title><rect x="192.5" y="355.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="195.5" y="366.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.12%)</title><rect x="192.5" y="339.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="195.5" y="350.0"></text>
</g>
<g>
<title>vfs_read (41 samples, 0.46%)</title><rect x="194.0" y="371.0" width="5.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="197.0" y="382.0"></text>
</g>
<g>
<title>__vfs_read (26 samples, 0.29%)</title><rect x="194.8" y="355.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="197.8" y="366.0"></text>
</g>
<g>
<title>new_sync_read (26 samples, 0.29%)</title><rect x="194.8" y="339.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="197.8" y="350.0"></text>
</g>
<g>
<title>shmem_file_read_iter (23 samples, 0.26%)</title><rect x="195.2" y="323.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="198.2" y="334.0"></text>
</g>
<g>
<title>copy_page_to_iter (5 samples, 0.06%)</title><rect x="196.1" y="307.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="199.1" y="318.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (11 samples, 0.12%)</title><rect x="196.8" y="307.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="199.8" y="318.0"></text>
</g>
<g>
<title>find_lock_entry (9 samples, 0.10%)</title><rect x="197.0" y="291.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="200.0" y="302.0"></text>
</g>
<g>
<title>find_get_entry (6 samples, 0.07%)</title><rect x="197.0" y="275.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="200.0" y="286.0"></text>
</g>
<g>
<title>xas_start (3 samples, 0.03%)</title><rect x="197.4" y="259.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="200.4" y="270.0"></text>
</g>
<g>
<title>page_mapping (2 samples, 0.02%)</title><rect x="197.8" y="275.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="200.8" y="286.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="198.2" y="355.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="201.2" y="366.0"></text>
</g>
<g>
<title>rw_verify_area (7 samples, 0.08%)</title><rect x="198.5" y="355.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="201.5" y="366.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.06%)</title><rect x="198.8" y="339.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="201.8" y="350.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="198.9" y="323.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="201.9" y="334.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.02%)</title><rect x="198.9" y="307.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="201.9" y="318.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.03%)</title><rect x="199.6" y="451.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="202.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.02%)</title><rect x="200.1" y="499.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="203.1" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (7 samples, 0.08%)</title><rect x="200.4" y="515.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="203.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.02%)</title><rect x="201.1" y="499.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="204.1" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (357 samples, 4.04%)</title><rect x="201.3" y="563.0" width="47.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="204.3" y="574.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (356 samples, 4.03%)</title><rect x="201.5" y="547.0" width="47.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="204.5" y="558.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (11 samples, 0.12%)</title><rect x="201.7" y="531.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="204.7" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (11 samples, 0.12%)</title><rect x="201.7" y="515.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="204.7" y="526.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (10 samples, 0.11%)</title><rect x="201.7" y="499.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.7" y="510.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (10 samples, 0.11%)</title><rect x="201.7" y="483.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="204.7" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (10 samples, 0.11%)</title><rect x="201.7" y="467.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="204.7" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (307 samples, 3.48%)</title><rect x="203.2" y="531.0" width="41.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="206.2" y="542.0">sun..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (19 samples, 0.22%)</title><rect x="203.5" y="515.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.5" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (19 samples, 0.22%)</title><rect x="203.5" y="499.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="206.5" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (2 samples, 0.02%)</title><rect x="203.7" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="206.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (14 samples, 0.16%)</title><rect x="204.1" y="483.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="207.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (13 samples, 0.15%)</title><rect x="204.3" y="467.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="207.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (11 samples, 0.12%)</title><rect x="204.5" y="451.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="207.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (11 samples, 0.12%)</title><rect x="204.5" y="435.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="207.5" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (275 samples, 3.11%)</title><rect x="206.0" y="515.0" width="36.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="209.0" y="526.0">sun..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.address (2 samples, 0.02%)</title><rect x="206.1" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="209.1" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (271 samples, 3.07%)</title><rect x="206.5" y="499.0" width="36.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="209.5" y="510.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (270 samples, 3.06%)</title><rect x="206.7" y="483.0" width="36.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="209.7" y="494.0">sun..</text>
</g>
<g>
<title>__libc_pread64 (256 samples, 2.90%)</title><rect x="207.9" y="467.0" width="34.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="210.9" y="478.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (175 samples, 1.98%)</title><rect x="218.7" y="451.0" width="23.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="221.7" y="462.0">e..</text>
</g>
<g>
<title>__x64_sys_pread64 (6 samples, 0.07%)</title><rect x="218.7" y="435.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="221.7" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (168 samples, 1.90%)</title><rect x="219.6" y="435.0" width="22.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="222.6" y="446.0">d..</text>
</g>
<g>
<title>__x64_sys_pread64 (132 samples, 1.49%)</title><rect x="224.4" y="419.0" width="17.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="227.4" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (132 samples, 1.49%)</title><rect x="224.4" y="403.0" width="17.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="227.4" y="414.0"></text>
</g>
<g>
<title>__fdget (11 samples, 0.12%)</title><rect x="224.7" y="387.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="227.7" y="398.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.11%)</title><rect x="224.8" y="371.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="227.8" y="382.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.11%)</title><rect x="224.8" y="355.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="227.8" y="366.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.02%)</title><rect x="226.2" y="387.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="229.2" y="398.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.03%)</title><rect x="226.7" y="387.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="229.7" y="398.0"></text>
</g>
<g>
<title>vfs_read (110 samples, 1.25%)</title><rect x="227.4" y="387.0" width="14.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="230.4" y="398.0"></text>
</g>
<g>
<title>__vfs_read (78 samples, 0.88%)</title><rect x="227.9" y="371.0" width="10.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="230.9" y="382.0"></text>
</g>
<g>
<title>new_sync_read (75 samples, 0.85%)</title><rect x="227.9" y="355.0" width="10.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="230.9" y="366.0"></text>
</g>
<g>
<title>shmem_file_read_iter (63 samples, 0.71%)</title><rect x="228.6" y="339.0" width="8.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="231.6" y="350.0"></text>
</g>
<g>
<title>copy_page_to_iter (16 samples, 0.18%)</title><rect x="229.5" y="323.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="232.5" y="334.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (7 samples, 0.08%)</title><rect x="230.7" y="307.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="233.7" y="318.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (39 samples, 0.44%)</title><rect x="231.7" y="323.0" width="5.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="234.7" y="334.0"></text>
</g>
<g>
<title>find_lock_entry (31 samples, 0.35%)</title><rect x="232.7" y="307.0" width="4.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="235.7" y="318.0"></text>
</g>
<g>
<title>find_get_entry (21 samples, 0.24%)</title><rect x="233.3" y="291.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="236.3" y="302.0"></text>
</g>
<g>
<title>xas_load (7 samples, 0.08%)</title><rect x="234.6" y="275.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="237.6" y="286.0"></text>
</g>
<g>
<title>xas_start (4 samples, 0.05%)</title><rect x="235.5" y="275.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="238.5" y="286.0"></text>
</g>
<g>
<title>page_mapping (4 samples, 0.05%)</title><rect x="236.1" y="291.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="239.1" y="302.0"></text>
</g>
<g>
<title>unlock_page (5 samples, 0.06%)</title><rect x="237.3" y="339.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="240.3" y="350.0"></text>
</g>
<g>
<title>shmem_file_read_iter (3 samples, 0.03%)</title><rect x="237.9" y="355.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="240.9" y="366.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.06%)</title><rect x="238.3" y="371.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="241.3" y="382.0"></text>
</g>
<g>
<title>rw_verify_area (22 samples, 0.25%)</title><rect x="239.0" y="371.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="242.0" y="382.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="239.1" y="355.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="242.1" y="366.0"></text>
</g>
<g>
<title>security_file_permission (19 samples, 0.22%)</title><rect x="239.4" y="355.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="242.4" y="366.0"></text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.05%)</title><rect x="239.7" y="339.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="242.7" y="350.0"></text>
</g>
<g>
<title>apparmor_file_permission (7 samples, 0.08%)</title><rect x="240.2" y="339.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="243.2" y="350.0"></text>
</g>
<g>
<title>common_file_perm (6 samples, 0.07%)</title><rect x="240.3" y="323.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="243.3" y="334.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.02%)</title><rect x="241.1" y="339.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="244.1" y="350.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.05%)</title><rect x="241.4" y="339.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="244.4" y="350.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.02%)</title><rect x="242.1" y="467.0" width="0.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="245.1" y="478.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.02%)</title><rect x="242.5" y="467.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="245.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (11 samples, 0.12%)</title><rect x="242.7" y="515.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="245.7" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.02%)</title><rect x="243.9" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="246.9" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (36 samples, 0.41%)</title><rect x="244.2" y="531.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="247.2" y="542.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.03%)</title><rect x="247.1" y="515.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="250.1" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (9 samples, 0.10%)</title><rect x="247.7" y="515.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="250.7" y="526.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$116/1794098734.compare (17 samples, 0.19%)</title><rect x="249.0" y="627.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="252.0" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (15 samples, 0.17%)</title><rect x="249.3" y="611.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.3" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$114/52043408.compare (15 samples, 0.17%)</title><rect x="249.3" y="595.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="252.3" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (14 samples, 0.16%)</title><rect x="249.4" y="579.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="252.4" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.08%)</title><rect x="249.6" y="563.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="252.6" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.07%)</title><rect x="249.7" y="547.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="252.7" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.02%)</title><rect x="249.7" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="252.7" y="542.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.02%)</title><rect x="249.7" y="515.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="252.7" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.02%)</title><rect x="250.1" y="531.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="253.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$113/942999045.apply (6 samples, 0.07%)</title><rect x="250.5" y="563.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="253.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (5 samples, 0.06%)</title><rect x="250.6" y="547.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="253.6" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.06%)</title><rect x="250.6" y="531.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="253.6" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (5 samples, 0.06%)</title><rect x="250.6" y="515.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="253.6" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="250.6" y="499.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="253.6" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="250.8" y="483.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="253.8" y="494.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (6,435 samples, 72.86%)</title><rect x="251.3" y="755.0" width="859.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="254.3" y="766.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (24 samples, 0.27%)</title><rect x="251.7" y="739.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="254.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (24 samples, 0.27%)</title><rect x="251.7" y="723.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="254.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (16 samples, 0.18%)</title><rect x="252.1" y="707.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="255.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (12 samples, 0.14%)</title><rect x="252.6" y="691.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="255.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.03%)</title><rect x="253.2" y="675.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.2" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (2 samples, 0.02%)</title><rect x="253.3" y="659.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (5 samples, 0.06%)</title><rect x="253.6" y="675.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (2 samples, 0.02%)</title><rect x="254.2" y="707.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="257.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (3 samples, 0.03%)</title><rect x="254.5" y="707.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="257.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.07%)</title><rect x="254.9" y="739.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="257.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (3 samples, 0.03%)</title><rect x="254.9" y="723.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="257.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (3 samples, 0.03%)</title><rect x="254.9" y="707.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="257.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$ValueIterator.&lt;init&gt; (3 samples, 0.03%)</title><rect x="255.3" y="723.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="258.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$126/1538391044.accept (6,402 samples, 72.49%)</title><rect x="255.7" y="739.0" width="855.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="258.7" y="750.0">ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$126/1538391044.accept</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.lambda$cellIterator$4 (6,401 samples, 72.48%)</title><rect x="255.8" y="723.0" width="855.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="258.8" y="734.0">ru/mail/polis/dao/valaubr/LsmDAO.lambda$cellIterator$4</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.iterator (6,399 samples, 72.45%)</title><rect x="256.1" y="707.0" width="854.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="259.1" y="718.0">ru/mail/polis/dao/valaubr/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.&lt;init&gt; (6,395 samples, 72.41%)</title><rect x="256.5" y="691.0" width="854.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="259.5" y="702.0">ru/mail/polis/dao/valaubr/SSTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getPosition (6,395 samples, 72.41%)</title><rect x="256.5" y="675.0" width="854.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="259.5" y="686.0">ru/mail/polis/dao/valaubr/SSTable.getPosition</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (46 samples, 0.52%)</title><rect x="257.0" y="659.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="260.0" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (10 samples, 0.11%)</title><rect x="257.8" y="643.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="260.8" y="654.0"></text>
</g>
<g>
<title>vectorizedMismatch (7 samples, 0.08%)</title><rect x="258.2" y="627.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="261.2" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (24 samples, 0.27%)</title><rect x="259.3" y="643.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="262.3" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (2 samples, 0.02%)</title><rect x="261.7" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="264.7" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.05%)</title><rect x="262.0" y="627.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="265.0" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.02%)</title><rect x="262.1" y="611.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="265.1" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.06%)</title><rect x="262.5" y="643.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="265.5" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.02%)</title><rect x="262.5" y="627.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="265.5" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (3 samples, 0.03%)</title><rect x="262.8" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="265.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (6,345 samples, 71.84%)</title><rect x="263.2" y="659.0" width="847.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="266.2" y="670.0">ru/mail/polis/dao/valaubr/SSTable.getKey</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (19 samples, 0.22%)</title><rect x="263.3" y="643.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="266.3" y="654.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.06%)</title><rect x="263.7" y="627.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="266.7" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.06%)</title><rect x="263.7" y="611.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="266.7" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.05%)</title><rect x="263.8" y="595.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="266.8" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.05%)</title><rect x="263.8" y="579.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="266.8" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.05%)</title><rect x="263.8" y="563.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="266.8" y="574.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.02%)</title><rect x="264.0" y="547.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="267.0" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (11 samples, 0.12%)</title><rect x="264.4" y="627.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="267.4" y="638.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.03%)</title><rect x="264.4" y="611.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="267.4" y="622.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.03%)</title><rect x="264.4" y="595.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="267.4" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.03%)</title><rect x="264.4" y="579.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="267.4" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.03%)</title><rect x="264.4" y="563.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="267.4" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.02%)</title><rect x="264.5" y="547.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="267.5" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.09%)</title><rect x="264.8" y="611.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="267.8" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.09%)</title><rect x="264.8" y="595.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="267.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (2,342 samples, 26.52%)</title><rect x="265.9" y="643.0" width="312.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="268.9" y="654.0">ru/mail/polis/dao/valaubr/SSTable.getOffset</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (118 samples, 1.34%)</title><rect x="267.2" y="627.0" width="15.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="270.2" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (114 samples, 1.29%)</title><rect x="267.7" y="611.0" width="15.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="270.7" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (97 samples, 1.10%)</title><rect x="270.0" y="595.0" width="13.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="273.0" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (60 samples, 0.68%)</title><rect x="274.3" y="579.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="277.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (37 samples, 0.42%)</title><rect x="275.2" y="563.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="278.2" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (30 samples, 0.34%)</title><rect x="276.1" y="547.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="279.1" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (20 samples, 0.23%)</title><rect x="277.5" y="531.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="280.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (11 samples, 0.12%)</title><rect x="278.7" y="515.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="281.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (16 samples, 0.18%)</title><rect x="280.1" y="563.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="283.1" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (12 samples, 0.14%)</title><rect x="280.7" y="547.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="283.7" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.03%)</title><rect x="281.5" y="531.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="284.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="281.9" y="531.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.06%)</title><rect x="282.3" y="579.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="285.3" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (10 samples, 0.11%)</title><rect x="283.0" y="627.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="286.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (3 samples, 0.03%)</title><rect x="283.9" y="611.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="286.9" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2,204 samples, 24.95%)</title><rect x="284.3" y="627.0" width="294.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="287.3" y="638.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2,198 samples, 24.89%)</title><rect x="285.1" y="611.0" width="293.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="288.1" y="622.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (100 samples, 1.13%)</title><rect x="286.2" y="595.0" width="13.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="289.2" y="606.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (99 samples, 1.12%)</title><rect x="286.3" y="579.0" width="13.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="289.3" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.03%)</title><rect x="287.6" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="290.6" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (83 samples, 0.94%)</title><rect x="288.0" y="563.0" width="11.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="291.0" y="574.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (75 samples, 0.85%)</title><rect x="289.1" y="547.0" width="10.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="292.1" y="558.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (75 samples, 0.85%)</title><rect x="289.1" y="531.0" width="10.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="292.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.03%)</title><rect x="299.1" y="563.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1,969 samples, 22.29%)</title><rect x="299.5" y="595.0" width="263.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="302.5" y="606.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (111 samples, 1.26%)</title><rect x="305.3" y="579.0" width="14.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="308.3" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (108 samples, 1.22%)</title><rect x="305.7" y="563.0" width="14.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="308.7" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (3 samples, 0.03%)</title><rect x="309.8" y="547.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="312.8" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.03%)</title><rect x="310.2" y="547.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="313.2" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (3 samples, 0.03%)</title><rect x="310.2" y="531.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="313.2" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (3 samples, 0.03%)</title><rect x="310.6" y="547.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="313.6" y="558.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (15 samples, 0.17%)</title><rect x="311.0" y="547.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="314.0" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (15 samples, 0.17%)</title><rect x="311.0" y="531.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="314.0" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (15 samples, 0.17%)</title><rect x="311.0" y="515.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="314.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (53 samples, 0.60%)</title><rect x="313.0" y="547.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="316.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (49 samples, 0.55%)</title><rect x="313.6" y="531.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="316.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (32 samples, 0.36%)</title><rect x="315.6" y="515.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="318.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (28 samples, 0.32%)</title><rect x="315.7" y="499.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="318.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (3 samples, 0.03%)</title><rect x="319.4" y="499.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="322.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkSize (2 samples, 0.02%)</title><rect x="319.8" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="322.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1,779 samples, 20.14%)</title><rect x="320.2" y="579.0" width="237.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="323.2" y="590.0">sun/nio/ch/IOUtil.readIntoNativ..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.address (3 samples, 0.03%)</title><rect x="321.6" y="563.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="324.6" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.10%)</title><rect x="322.0" y="563.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="325.0" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (7 samples, 0.08%)</title><rect x="322.2" y="547.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="325.2" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.08%)</title><rect x="322.2" y="531.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="325.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1,757 samples, 19.89%)</title><rect x="323.2" y="563.0" width="234.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="326.2" y="574.0">sun/nio/ch/FileDispatcherImpl.p..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1,757 samples, 19.89%)</title><rect x="323.2" y="547.0" width="234.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="326.2" y="558.0">sun/nio/ch/FileDispatcherImpl.p..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (13 samples, 0.15%)</title><rect x="330.0" y="531.0" width="1.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="333.0" y="542.0"></text>
</g>
<g>
<title>__libc_pread64 (1,653 samples, 18.72%)</title><rect x="331.7" y="531.0" width="220.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="334.7" y="542.0">__libc_pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,141 samples, 12.92%)</title><rect x="400.1" y="515.0" width="152.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="403.1" y="526.0">entry_SYSCALL_64_af..</text>
</g>
<g>
<title>__x64_sys_pread64 (26 samples, 0.29%)</title><rect x="400.1" y="499.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="403.1" y="510.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.02%)</title><rect x="403.6" y="499.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="406.6" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (1,113 samples, 12.60%)</title><rect x="403.9" y="499.0" width="148.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="406.9" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (808 samples, 9.15%)</title><rect x="444.1" y="483.0" width="107.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="447.1" y="494.0">__x64_sys_pre..</text>
</g>
<g>
<title>__fdget (6 samples, 0.07%)</title><rect x="444.1" y="467.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="447.1" y="478.0"></text>
</g>
<g>
<title>ksys_pread64 (802 samples, 9.08%)</title><rect x="444.9" y="467.0" width="107.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="447.9" y="478.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (47 samples, 0.53%)</title><rect x="446.9" y="451.0" width="6.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="449.9" y="462.0"></text>
</g>
<g>
<title>__fget_light (46 samples, 0.52%)</title><rect x="447.0" y="435.0" width="6.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="450.0" y="446.0"></text>
</g>
<g>
<title>__fget (46 samples, 0.52%)</title><rect x="447.0" y="419.0" width="6.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="450.0" y="430.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.09%)</title><rect x="453.2" y="451.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="456.2" y="462.0"></text>
</g>
<g>
<title>__fsnotify_parent (3 samples, 0.03%)</title><rect x="454.2" y="451.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="457.2" y="462.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.03%)</title><rect x="454.6" y="451.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="457.6" y="462.0"></text>
</g>
<g>
<title>fput_many (25 samples, 0.28%)</title><rect x="455.2" y="451.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="458.2" y="462.0"></text>
</g>
<g>
<title>vfs_read (699 samples, 7.91%)</title><rect x="458.6" y="451.0" width="93.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="461.6" y="462.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (9 samples, 0.10%)</title><rect x="462.8" y="435.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="465.8" y="446.0"></text>
</g>
<g>
<title>__vfs_read (471 samples, 5.33%)</title><rect x="464.0" y="435.0" width="62.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="467.0" y="446.0">__vfs_..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.03%)</title><rect x="464.3" y="419.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="467.3" y="430.0"></text>
</g>
<g>
<title>iov_iter_init (4 samples, 0.05%)</title><rect x="464.7" y="419.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="467.7" y="430.0"></text>
</g>
<g>
<title>new_sync_read (445 samples, 5.04%)</title><rect x="465.2" y="419.0" width="59.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="468.2" y="430.0">new_sy..</text>
</g>
<g>
<title>shmem_file_read_iter (400 samples, 4.53%)</title><rect x="468.5" y="403.0" width="53.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="471.5" y="414.0">shmem..</text>
</g>
<g>
<title>_cond_resched (5 samples, 0.06%)</title><rect x="475.9" y="387.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="478.9" y="398.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.02%)</title><rect x="476.5" y="387.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="479.5" y="398.0"></text>
</g>
<g>
<title>copy_page_to_iter (77 samples, 0.87%)</title><rect x="476.8" y="387.0" width="10.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="479.8" y="398.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (48 samples, 0.54%)</title><rect x="479.9" y="371.0" width="6.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="482.9" y="382.0"></text>
</g>
<g>
<title>rcu_all_qs (5 samples, 0.06%)</title><rect x="486.4" y="371.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="489.4" y="382.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.02%)</title><rect x="487.1" y="387.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="490.1" y="398.0"></text>
</g>
<g>
<title>find_lock_entry (5 samples, 0.06%)</title><rect x="487.4" y="387.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="490.4" y="398.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (232 samples, 2.63%)</title><rect x="488.0" y="387.0" width="31.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="491.0" y="398.0">sh..</text>
</g>
<g>
<title>find_get_entry (2 samples, 0.02%)</title><rect x="492.8" y="371.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="495.8" y="382.0"></text>
</g>
<g>
<title>find_lock_entry (190 samples, 2.15%)</title><rect x="493.1" y="371.0" width="25.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="496.1" y="382.0">f..</text>
</g>
<g>
<title>find_get_entry (139 samples, 1.57%)</title><rect x="496.7" y="355.0" width="18.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="499.7" y="366.0"></text>
</g>
<g>
<title>PageHuge (3 samples, 0.03%)</title><rect x="504.1" y="339.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="507.1" y="350.0"></text>
</g>
<g>
<title>xas_load (42 samples, 0.48%)</title><rect x="504.5" y="339.0" width="5.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="507.5" y="350.0"></text>
</g>
<g>
<title>xas_start (39 samples, 0.44%)</title><rect x="510.1" y="339.0" width="5.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="513.1" y="350.0"></text>
</g>
<g>
<title>page_mapping (20 samples, 0.23%)</title><rect x="515.3" y="355.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="518.3" y="366.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.02%)</title><rect x="518.0" y="355.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="521.0" y="366.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.02%)</title><rect x="518.2" y="355.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="521.2" y="366.0"></text>
</g>
<g>
<title>page_mapping (4 samples, 0.05%)</title><rect x="518.5" y="371.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="521.5" y="382.0"></text>
</g>
<g>
<title>touch_atime (18 samples, 0.20%)</title><rect x="519.0" y="387.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="522.0" y="398.0"></text>
</g>
<g>
<title>atime_needs_update (11 samples, 0.12%)</title><rect x="520.0" y="371.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="523.0" y="382.0"></text>
</g>
<g>
<title>unlock_page (4 samples, 0.05%)</title><rect x="521.4" y="387.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="524.4" y="398.0"></text>
</g>
<g>
<title>wake_up_page_bit (4 samples, 0.05%)</title><rect x="521.4" y="371.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="524.4" y="382.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.05%)</title><rect x="521.4" y="355.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="524.4" y="366.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (3 samples, 0.03%)</title><rect x="522.0" y="403.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="525.0" y="414.0"></text>
</g>
<g>
<title>unlock_page (16 samples, 0.18%)</title><rect x="522.5" y="403.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="525.5" y="414.0"></text>
</g>
<g>
<title>shmem_file_read_iter (17 samples, 0.19%)</title><rect x="524.6" y="419.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="527.6" y="430.0"></text>
</g>
<g>
<title>fsnotify (24 samples, 0.27%)</title><rect x="526.9" y="435.0" width="3.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="529.9" y="446.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.02%)</title><rect x="530.1" y="435.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="533.1" y="446.0"></text>
</g>
<g>
<title>rw_verify_area (161 samples, 1.82%)</title><rect x="530.4" y="435.0" width="21.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="533.4" y="446.0">r..</text>
</g>
<g>
<title>apparmor_file_permission (27 samples, 0.31%)</title><rect x="532.0" y="419.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="535.0" y="430.0"></text>
</g>
<g>
<title>security_file_permission (121 samples, 1.37%)</title><rect x="535.7" y="419.0" width="16.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="538.7" y="430.0"></text>
</g>
<g>
<title>__fsnotify_parent (27 samples, 0.31%)</title><rect x="538.0" y="403.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="541.0" y="414.0"></text>
</g>
<g>
<title>apparmor_file_permission (32 samples, 0.36%)</title><rect x="541.6" y="403.0" width="4.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="544.6" y="414.0"></text>
</g>
<g>
<title>common_file_perm (30 samples, 0.34%)</title><rect x="541.9" y="387.0" width="4.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="544.9" y="398.0"></text>
</g>
<g>
<title>aa_file_perm (7 samples, 0.08%)</title><rect x="545.0" y="371.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="548.0" y="382.0"></text>
</g>
<g>
<title>common_file_perm (14 samples, 0.16%)</title><rect x="545.9" y="403.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="548.9" y="414.0"></text>
</g>
<g>
<title>fsnotify (31 samples, 0.35%)</title><rect x="547.8" y="403.0" width="4.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="550.8" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (4 samples, 0.05%)</title><rect x="552.0" y="483.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="555.0" y="494.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (17 samples, 0.19%)</title><rect x="552.6" y="531.0" width="2.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="555.6" y="542.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (14 samples, 0.16%)</title><rect x="554.8" y="531.0" width="1.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="557.8" y="542.0"></text>
</g>
<g>
<title>fdval (9 samples, 0.10%)</title><rect x="556.7" y="531.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="559.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (35 samples, 0.40%)</title><rect x="557.9" y="579.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="560.9" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (12 samples, 0.14%)</title><rect x="560.1" y="563.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="563.1" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (7 samples, 0.08%)</title><rect x="560.5" y="547.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="563.5" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.02%)</title><rect x="561.4" y="547.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="564.4" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (7 samples, 0.08%)</title><rect x="561.7" y="563.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.7" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.02%)</title><rect x="562.3" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="565.3" y="558.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.02%)</title><rect x="562.3" y="531.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="565.3" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.02%)</title><rect x="562.3" y="515.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="565.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (119 samples, 1.35%)</title><rect x="562.6" y="595.0" width="15.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="565.6" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.02%)</title><rect x="573.5" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="576.5" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (35 samples, 0.40%)</title><rect x="573.8" y="579.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="576.8" y="590.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (3 samples, 0.03%)</title><rect x="577.2" y="563.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="580.2" y="574.0"></text>
</g>
<g>
<title>pthread_self (7 samples, 0.08%)</title><rect x="577.6" y="563.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="580.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.02%)</title><rect x="578.5" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="581.5" y="606.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="578.5" y="579.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="581.5" y="590.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.02%)</title><rect x="578.5" y="563.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="581.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3,983 samples, 45.10%)</title><rect x="578.8" y="643.0" width="532.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="581.8" y="654.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3,981 samples, 45.07%)</title><rect x="579.0" y="627.0" width="531.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="582.0" y="638.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (144 samples, 1.63%)</title><rect x="581.0" y="611.0" width="19.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="584.0" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (144 samples, 1.63%)</title><rect x="581.0" y="595.0" width="19.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="584.0" y="606.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (5 samples, 0.06%)</title><rect x="582.5" y="579.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="585.5" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (118 samples, 1.34%)</title><rect x="583.2" y="579.0" width="15.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="586.2" y="590.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (113 samples, 1.28%)</title><rect x="583.8" y="563.0" width="15.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="586.8" y="574.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (112 samples, 1.27%)</title><rect x="584.0" y="547.0" width="14.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="587.0" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (10 samples, 0.11%)</title><rect x="598.9" y="579.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="601.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3,546 samples, 40.15%)</title><rect x="600.3" y="611.0" width="473.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.3" y="622.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (177 samples, 2.00%)</title><rect x="611.6" y="595.0" width="23.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="614.6" y="606.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (168 samples, 1.90%)</title><rect x="612.3" y="579.0" width="22.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="615.3" y="590.0">j..</text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (11 samples, 0.12%)</title><rect x="619.8" y="563.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="622.8" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.02%)</title><rect x="621.2" y="563.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="624.2" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (2 samples, 0.02%)</title><rect x="621.2" y="547.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="624.2" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (9 samples, 0.10%)</title><rect x="621.5" y="563.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="624.5" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (33 samples, 0.37%)</title><rect x="622.7" y="563.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="625.7" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (30 samples, 0.34%)</title><rect x="623.1" y="547.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="626.1" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (30 samples, 0.34%)</title><rect x="623.1" y="531.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="626.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (57 samples, 0.65%)</title><rect x="627.1" y="563.0" width="7.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="630.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (51 samples, 0.58%)</title><rect x="627.9" y="547.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="630.9" y="558.0"></text>
</g>
<g>
<title>_complete_monitor_locking_Java (2 samples, 0.02%)</title><rect x="629.0" y="531.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="632.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (38 samples, 0.43%)</title><rect x="629.3" y="531.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="632.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (31 samples, 0.35%)</title><rect x="629.7" y="515.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="632.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (4 samples, 0.05%)</title><rect x="633.8" y="515.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="636.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkSize (3 samples, 0.03%)</title><rect x="634.3" y="531.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="637.3" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (4 samples, 0.05%)</title><rect x="634.7" y="579.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="637.7" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (2 samples, 0.02%)</title><rect x="635.3" y="595.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="638.3" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (2 samples, 0.02%)</title><rect x="635.3" y="579.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="638.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (2 samples, 0.02%)</title><rect x="635.3" y="563.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="638.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3,212 samples, 36.37%)</title><rect x="635.5" y="595.0" width="429.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="638.5" y="606.0">sun/nio/ch/IOUtil.readIntoNativeBuffer</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (6 samples, 0.07%)</title><rect x="637.0" y="579.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.0" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.03%)</title><rect x="637.4" y="563.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.03%)</title><rect x="637.4" y="547.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="640.4" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3,195 samples, 36.18%)</title><rect x="637.8" y="579.0" width="426.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.8" y="590.0">sun/nio/ch/FileDispatcherImpl.pread</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3,194 samples, 36.16%)</title><rect x="637.9" y="563.0" width="426.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="640.9" y="574.0">sun/nio/ch/FileDispatcherImpl.pread0</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (20 samples, 0.23%)</title><rect x="649.2" y="547.0" width="2.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="652.2" y="558.0"></text>
</g>
<g>
<title>fdval (3 samples, 0.03%)</title><rect x="651.4" y="531.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="654.4" y="542.0"></text>
</g>
<g>
<title>__libc_pread64 (3,016 samples, 34.15%)</title><rect x="651.8" y="547.0" width="403.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="654.8" y="558.0">__libc_pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2,121 samples, 24.01%)</title><rect x="771.4" y="531.0" width="283.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="774.4" y="542.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_pread64 (45 samples, 0.51%)</title><rect x="771.4" y="515.0" width="6.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="774.4" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (2,075 samples, 23.49%)</title><rect x="777.6" y="515.0" width="277.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="780.6" y="526.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (1,547 samples, 17.52%)</title><rect x="847.4" y="499.0" width="206.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="850.4" y="510.0">__x64_sys_pread64</text>
</g>
<g>
<title>fput (4 samples, 0.05%)</title><rect x="847.6" y="483.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="850.6" y="494.0"></text>
</g>
<g>
<title>ksys_pread64 (1,542 samples, 17.46%)</title><rect x="848.1" y="483.0" width="206.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="851.1" y="494.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (118 samples, 1.34%)</title><rect x="852.0" y="467.0" width="15.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="855.0" y="478.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.06%)</title><rect x="852.0" y="451.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="855.0" y="462.0"></text>
</g>
<g>
<title>__fget_light (113 samples, 1.28%)</title><rect x="852.6" y="451.0" width="15.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="855.6" y="462.0"></text>
</g>
<g>
<title>__fget (111 samples, 1.26%)</title><rect x="852.9" y="435.0" width="14.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="855.9" y="446.0"></text>
</g>
<g>
<title>__fget_light (22 samples, 0.25%)</title><rect x="867.7" y="467.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="870.7" y="478.0"></text>
</g>
<g>
<title>__fsnotify_parent (6 samples, 0.07%)</title><rect x="870.7" y="467.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="873.7" y="478.0"></text>
</g>
<g>
<title>__vfs_read (9 samples, 0.10%)</title><rect x="871.5" y="467.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="874.5" y="478.0"></text>
</g>
<g>
<title>fput_many (31 samples, 0.35%)</title><rect x="872.7" y="467.0" width="4.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="875.7" y="478.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.03%)</title><rect x="877.0" y="467.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="880.0" y="478.0"></text>
</g>
<g>
<title>vfs_read (1,323 samples, 14.98%)</title><rect x="877.4" y="467.0" width="176.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="880.4" y="478.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (18 samples, 0.20%)</title><rect x="884.8" y="451.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="887.8" y="462.0"></text>
</g>
<g>
<title>__vfs_read (932 samples, 10.55%)</title><rect x="887.3" y="451.0" width="124.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="890.3" y="462.0">__vfs_read</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (8 samples, 0.09%)</title><rect x="888.5" y="435.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="891.5" y="446.0"></text>
</g>
<g>
<title>iov_iter_init (15 samples, 0.17%)</title><rect x="889.5" y="435.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="892.5" y="446.0"></text>
</g>
<g>
<title>new_sync_read (861 samples, 9.75%)</title><rect x="891.5" y="435.0" width="115.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="894.5" y="446.0">new_sync_read</text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.05%)</title><rect x="898.6" y="419.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="901.6" y="430.0"></text>
</g>
<g>
<title>shmem_file_read_iter (751 samples, 8.50%)</title><rect x="899.3" y="419.0" width="100.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="902.3" y="430.0">shmem_file_r..</text>
</g>
<g>
<title>_cond_resched (3 samples, 0.03%)</title><rect x="914.8" y="403.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="917.8" y="414.0"></text>
</g>
<g>
<title>atime_needs_update (6 samples, 0.07%)</title><rect x="915.2" y="403.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="918.2" y="414.0"></text>
</g>
<g>
<title>copy_page_to_iter (176 samples, 1.99%)</title><rect x="916.0" y="403.0" width="23.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="919.0" y="414.0">c..</text>
</g>
<g>
<title>_cond_resched (3 samples, 0.03%)</title><rect x="924.0" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="927.0" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.03%)</title><rect x="924.4" y="387.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="927.4" y="398.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (102 samples, 1.15%)</title><rect x="924.8" y="387.0" width="13.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="927.8" y="398.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.02%)</title><rect x="938.4" y="387.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="941.4" y="398.0"></text>
</g>
<g>
<title>rcu_all_qs (6 samples, 0.07%)</title><rect x="938.7" y="387.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="941.7" y="398.0"></text>
</g>
<g>
<title>copyout (6 samples, 0.07%)</title><rect x="939.5" y="403.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="942.5" y="414.0"></text>
</g>
<g>
<title>find_lock_entry (4 samples, 0.05%)</title><rect x="940.3" y="403.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="943.3" y="414.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (395 samples, 4.47%)</title><rect x="940.8" y="403.0" width="52.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="943.8" y="414.0">shmem..</text>
</g>
<g>
<title>_cond_resched (8 samples, 0.09%)</title><rect x="951.2" y="387.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="954.2" y="398.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.02%)</title><rect x="952.3" y="387.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="955.3" y="398.0"></text>
</g>
<g>
<title>find_lock_entry (300 samples, 3.40%)</title><rect x="952.6" y="387.0" width="40.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="955.6" y="398.0">fin..</text>
</g>
<g>
<title>PageHuge (3 samples, 0.03%)</title><rect x="956.1" y="371.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="959.1" y="382.0"></text>
</g>
<g>
<title>__lock_page (3 samples, 0.03%)</title><rect x="956.5" y="371.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="959.5" y="382.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.02%)</title><rect x="956.9" y="371.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="959.9" y="382.0"></text>
</g>
<g>
<title>find_get_entry (233 samples, 2.64%)</title><rect x="957.1" y="371.0" width="31.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="960.1" y="382.0">fi..</text>
</g>
<g>
<title>PageHuge (3 samples, 0.03%)</title><rect x="973.8" y="355.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="976.8" y="366.0"></text>
</g>
<g>
<title>xas_load (64 samples, 0.72%)</title><rect x="974.2" y="355.0" width="8.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="977.2" y="366.0"></text>
</g>
<g>
<title>xas_start (41 samples, 0.46%)</title><rect x="982.8" y="355.0" width="5.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="985.8" y="366.0"></text>
</g>
<g>
<title>page_mapping (26 samples, 0.29%)</title><rect x="988.4" y="371.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="991.4" y="382.0"></text>
</g>
<g>
<title>xas_load (5 samples, 0.06%)</title><rect x="992.0" y="371.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="995.0" y="382.0"></text>
</g>
<g>
<title>page_mapping (7 samples, 0.08%)</title><rect x="992.7" y="387.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="995.7" y="398.0"></text>
</g>
<g>
<title>touch_atime (37 samples, 0.42%)</title><rect x="993.6" y="403.0" width="4.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="996.6" y="414.0"></text>
</g>
<g>
<title>atime_needs_update (16 samples, 0.18%)</title><rect x="996.4" y="387.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="999.4" y="398.0"></text>
</g>
<g>
<title>unlock_page (8 samples, 0.09%)</title><rect x="998.5" y="403.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1001.5" y="414.0"></text>
</g>
<g>
<title>wake_up_page_bit (8 samples, 0.09%)</title><rect x="998.5" y="387.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1001.5" y="398.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.09%)</title><rect x="998.5" y="371.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1001.5" y="382.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (4 samples, 0.05%)</title><rect x="999.6" y="419.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1002.6" y="430.0"></text>
</g>
<g>
<title>touch_atime (4 samples, 0.05%)</title><rect x="1000.1" y="419.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1003.1" y="430.0"></text>
</g>
<g>
<title>unlock_page (44 samples, 0.50%)</title><rect x="1000.7" y="419.0" width="5.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1003.7" y="430.0"></text>
</g>
<g>
<title>shmem_file_read_iter (39 samples, 0.44%)</title><rect x="1006.6" y="435.0" width="5.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1009.6" y="446.0"></text>
</g>
<g>
<title>fsnotify (55 samples, 0.62%)</title><rect x="1011.8" y="451.0" width="7.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1014.8" y="462.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.06%)</title><rect x="1019.1" y="451.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1022.1" y="462.0"></text>
</g>
<g>
<title>rw_verify_area (253 samples, 2.86%)</title><rect x="1019.8" y="451.0" width="33.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1022.8" y="462.0">rw..</text>
</g>
<g>
<title>__fsnotify_parent (5 samples, 0.06%)</title><rect x="1021.1" y="435.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1024.1" y="446.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.03%)</title><rect x="1021.8" y="435.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1024.8" y="446.0"></text>
</g>
<g>
<title>apparmor_file_permission (36 samples, 0.41%)</title><rect x="1022.2" y="435.0" width="4.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1025.2" y="446.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="1027.0" y="435.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1030.0" y="446.0"></text>
</g>
<g>
<title>security_file_permission (197 samples, 2.23%)</title><rect x="1027.3" y="435.0" width="26.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1030.3" y="446.0">s..</text>
</g>
<g>
<title>__fsnotify_parent (40 samples, 0.45%)</title><rect x="1032.1" y="419.0" width="5.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1035.1" y="430.0"></text>
</g>
<g>
<title>apparmor_file_permission (58 samples, 0.66%)</title><rect x="1037.4" y="419.0" width="7.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1040.4" y="430.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.02%)</title><rect x="1038.1" y="403.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1041.1" y="414.0"></text>
</g>
<g>
<title>common_file_perm (51 samples, 0.58%)</title><rect x="1038.4" y="403.0" width="6.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1041.4" y="414.0"></text>
</g>
<g>
<title>aa_file_perm (9 samples, 0.10%)</title><rect x="1044.0" y="387.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1047.0" y="398.0"></text>
</g>
<g>
<title>common_file_perm (36 samples, 0.41%)</title><rect x="1045.2" y="419.0" width="4.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1048.2" y="430.0"></text>
</g>
<g>
<title>fsnotify (27 samples, 0.31%)</title><rect x="1050.0" y="419.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1053.0" y="430.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.05%)</title><rect x="1053.6" y="451.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1056.6" y="462.0"></text>
</g>
<g>
<title>ksys_pread64 (5 samples, 0.06%)</title><rect x="1054.1" y="499.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1057.1" y="510.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (32 samples, 0.36%)</title><rect x="1054.8" y="547.0" width="4.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1057.8" y="558.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (30 samples, 0.34%)</title><rect x="1059.1" y="547.0" width="4.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1062.1" y="558.0"></text>
</g>
<g>
<title>fdval (12 samples, 0.14%)</title><rect x="1063.1" y="547.0" width="1.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1066.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (70 samples, 0.79%)</title><rect x="1064.7" y="595.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1067.7" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (29 samples, 0.33%)</title><rect x="1068.2" y="579.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1071.2" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (11 samples, 0.12%)</title><rect x="1070.2" y="563.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1073.2" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.03%)</title><rect x="1071.6" y="563.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1074.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (15 samples, 0.17%)</title><rect x="1072.0" y="579.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1075.0" y="590.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.03%)</title><rect x="1073.6" y="563.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1076.6" y="574.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.03%)</title><rect x="1073.6" y="547.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1076.6" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.03%)</title><rect x="1073.6" y="531.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1076.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (268 samples, 3.03%)</title><rect x="1074.0" y="611.0" width="35.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1077.0" y="622.0">sun..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.07%)</title><rect x="1096.9" y="595.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1099.9" y="606.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.05%)</title><rect x="1097.1" y="579.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1100.1" y="590.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.05%)</title><rect x="1097.1" y="563.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1100.1" y="574.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (3 samples, 0.03%)</title><rect x="1097.3" y="547.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1100.3" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (12 samples, 0.14%)</title><rect x="1097.8" y="595.0" width="1.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1100.8" y="606.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (7 samples, 0.08%)</title><rect x="1099.4" y="595.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1102.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.08%)</title><rect x="1100.4" y="595.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1103.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (61 samples, 0.69%)</title><rect x="1101.3" y="595.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1104.3" y="606.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (4 samples, 0.05%)</title><rect x="1107.8" y="579.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1110.8" y="590.0"></text>
</g>
<g>
<title>pthread_self (8 samples, 0.09%)</title><rect x="1108.4" y="579.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1111.4" y="590.0"></text>
</g>
<g>
<title>unsafe_arraycopy (3 samples, 0.03%)</title><rect x="1109.4" y="595.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1112.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (8 samples, 0.09%)</title><rect x="1109.8" y="611.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1112.8" y="622.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.08%)</title><rect x="1110.0" y="595.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1113.0" y="606.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.08%)</title><rect x="1110.0" y="579.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1113.0" y="590.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.06%)</title><rect x="1110.2" y="563.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1113.2" y="574.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.02%)</title><rect x="1110.5" y="547.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1113.5" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.06%)</title><rect x="1111.2" y="755.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1114.2" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.05%)</title><rect x="1111.8" y="755.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1114.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (161 samples, 1.82%)</title><rect x="1112.6" y="755.0" width="21.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1115.6" y="766.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (159 samples, 1.80%)</title><rect x="1112.9" y="739.0" width="21.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1115.9" y="750.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (159 samples, 1.80%)</title><rect x="1112.9" y="723.0" width="21.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1115.9" y="734.0">c..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (8 samples, 0.09%)</title><rect x="1112.9" y="707.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1115.9" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (8 samples, 0.09%)</title><rect x="1112.9" y="691.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1115.9" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (8 samples, 0.09%)</title><rect x="1112.9" y="675.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1115.9" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.07%)</title><rect x="1113.2" y="659.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1116.2" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.06%)</title><rect x="1113.3" y="643.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1116.3" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$116/1794098734.compare (4 samples, 0.05%)</title><rect x="1113.4" y="627.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1116.4" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.05%)</title><rect x="1113.4" y="611.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1116.4" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$114/52043408.compare (4 samples, 0.05%)</title><rect x="1113.4" y="595.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1116.4" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.05%)</title><rect x="1113.4" y="579.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1116.4" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.02%)</title><rect x="1113.6" y="563.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1116.6" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.02%)</title><rect x="1113.6" y="547.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1116.6" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (151 samples, 1.71%)</title><rect x="1114.0" y="707.0" width="20.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1117.0" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (151 samples, 1.71%)</title><rect x="1114.0" y="691.0" width="20.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1117.0" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (150 samples, 1.70%)</title><rect x="1114.1" y="675.0" width="20.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1117.1" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (150 samples, 1.70%)</title><rect x="1114.1" y="659.0" width="20.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1117.1" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (150 samples, 1.70%)</title><rect x="1114.1" y="643.0" width="20.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1117.1" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (150 samples, 1.70%)</title><rect x="1114.1" y="627.0" width="20.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1117.1" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (146 samples, 1.65%)</title><rect x="1114.2" y="611.0" width="19.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1117.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (145 samples, 1.64%)</title><rect x="1114.4" y="595.0" width="19.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1117.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (145 samples, 1.64%)</title><rect x="1114.4" y="579.0" width="19.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1117.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getCell (145 samples, 1.64%)</title><rect x="1114.4" y="563.0" width="19.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1117.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (61 samples, 0.69%)</title><rect x="1114.5" y="547.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1117.5" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.02%)</title><rect x="1114.5" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1117.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (20 samples, 0.23%)</title><rect x="1114.8" y="531.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1117.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (20 samples, 0.23%)</title><rect x="1114.8" y="515.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1117.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (20 samples, 0.23%)</title><rect x="1114.8" y="499.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1117.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (17 samples, 0.19%)</title><rect x="1115.0" y="483.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1118.0" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (14 samples, 0.16%)</title><rect x="1115.2" y="467.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1118.2" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (14 samples, 0.16%)</title><rect x="1115.2" y="451.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1118.2" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (14 samples, 0.16%)</title><rect x="1115.2" y="435.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1118.2" y="446.0"></text>
</g>
<g>
<title>__libc_pread64 (13 samples, 0.15%)</title><rect x="1115.2" y="419.0" width="1.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1118.2" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.10%)</title><rect x="1115.7" y="403.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1118.7" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.10%)</title><rect x="1115.7" y="387.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1118.7" y="398.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (7 samples, 0.08%)</title><rect x="1116.0" y="371.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1119.0" y="382.0"></text>
</g>
<g>
<title>ksys_pread64 (7 samples, 0.08%)</title><rect x="1116.0" y="355.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1119.0" y="366.0"></text>
</g>
<g>
<title>vfs_read (6 samples, 0.07%)</title><rect x="1116.1" y="339.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1119.1" y="350.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.02%)</title><rect x="1116.2" y="323.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1119.2" y="334.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="1116.5" y="323.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1119.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.02%)</title><rect x="1117.1" y="467.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1120.1" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (39 samples, 0.44%)</title><rect x="1117.5" y="531.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1120.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (39 samples, 0.44%)</title><rect x="1117.5" y="515.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1120.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (34 samples, 0.38%)</title><rect x="1117.5" y="499.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1120.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (32 samples, 0.36%)</title><rect x="1117.6" y="483.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1120.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (32 samples, 0.36%)</title><rect x="1117.6" y="467.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1120.6" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (32 samples, 0.36%)</title><rect x="1117.6" y="451.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1120.6" y="462.0"></text>
</g>
<g>
<title>__libc_pread64 (29 samples, 0.33%)</title><rect x="1117.7" y="435.0" width="3.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1120.7" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.24%)</title><rect x="1118.8" y="419.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1121.8" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.24%)</title><rect x="1118.8" y="403.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1121.8" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (15 samples, 0.17%)</title><rect x="1119.6" y="387.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1122.6" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (15 samples, 0.17%)</title><rect x="1119.6" y="371.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1122.6" y="382.0"></text>
</g>
<g>
<title>vfs_read (15 samples, 0.17%)</title><rect x="1119.6" y="355.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1122.6" y="366.0"></text>
</g>
<g>
<title>__vfs_read (9 samples, 0.10%)</title><rect x="1120.0" y="339.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1123.0" y="350.0"></text>
</g>
<g>
<title>new_sync_read (8 samples, 0.09%)</title><rect x="1120.0" y="323.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1123.0" y="334.0"></text>
</g>
<g>
<title>shmem_file_read_iter (7 samples, 0.08%)</title><rect x="1120.0" y="307.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1123.0" y="318.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (4 samples, 0.05%)</title><rect x="1120.1" y="291.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1123.1" y="302.0"></text>
</g>
<g>
<title>find_lock_entry (3 samples, 0.03%)</title><rect x="1120.3" y="275.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1123.3" y="286.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.02%)</title><rect x="1120.4" y="259.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1123.4" y="270.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.02%)</title><rect x="1120.7" y="291.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1123.7" y="302.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.02%)</title><rect x="1120.7" y="275.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1123.7" y="286.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="1121.2" y="339.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1124.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.05%)</title><rect x="1122.0" y="499.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1125.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.05%)</title><rect x="1122.0" y="483.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1125.0" y="494.0"></text>
</g>
<g>
<title>pthread_self (2 samples, 0.02%)</title><rect x="1122.3" y="467.0" width="0.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1125.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (23 samples, 0.26%)</title><rect x="1122.7" y="547.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1125.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (22 samples, 0.25%)</title><rect x="1122.8" y="531.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1125.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (21 samples, 0.24%)</title><rect x="1122.9" y="515.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1125.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (19 samples, 0.22%)</title><rect x="1123.1" y="499.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1126.1" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="1123.3" y="483.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1126.3" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.02%)</title><rect x="1123.3" y="467.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1126.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.02%)</title><rect x="1123.3" y="451.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1126.3" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (15 samples, 0.17%)</title><rect x="1123.6" y="483.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1126.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (15 samples, 0.17%)</title><rect x="1123.6" y="467.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1126.6" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (15 samples, 0.17%)</title><rect x="1123.6" y="451.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1126.6" y="462.0"></text>
</g>
<g>
<title>__libc_pread64 (15 samples, 0.17%)</title><rect x="1123.6" y="435.0" width="2.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1126.6" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.11%)</title><rect x="1124.3" y="419.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1127.3" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.11%)</title><rect x="1124.3" y="403.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1127.3" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (7 samples, 0.08%)</title><rect x="1124.7" y="387.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1127.7" y="398.0"></text>
</g>
<g>
<title>ksys_pread64 (7 samples, 0.08%)</title><rect x="1124.7" y="371.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1127.7" y="382.0"></text>
</g>
<g>
<title>vfs_read (7 samples, 0.08%)</title><rect x="1124.7" y="355.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1127.7" y="366.0"></text>
</g>
<g>
<title>__vfs_read (6 samples, 0.07%)</title><rect x="1124.7" y="339.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1127.7" y="350.0"></text>
</g>
<g>
<title>new_sync_read (6 samples, 0.07%)</title><rect x="1124.7" y="323.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1127.7" y="334.0"></text>
</g>
<g>
<title>shmem_file_read_iter (4 samples, 0.05%)</title><rect x="1124.8" y="307.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1127.8" y="318.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (3 samples, 0.03%)</title><rect x="1124.9" y="291.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1127.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (60 samples, 0.68%)</title><rect x="1125.7" y="547.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1128.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (60 samples, 0.68%)</title><rect x="1125.7" y="531.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1128.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (54 samples, 0.61%)</title><rect x="1125.9" y="515.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1128.9" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.02%)</title><rect x="1126.3" y="499.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1129.3" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.02%)</title><rect x="1126.3" y="483.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1129.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (47 samples, 0.53%)</title><rect x="1126.5" y="499.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1129.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (47 samples, 0.53%)</title><rect x="1126.5" y="483.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1129.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (47 samples, 0.53%)</title><rect x="1126.5" y="467.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1129.5" y="478.0"></text>
</g>
<g>
<title>__libc_pread64 (42 samples, 0.48%)</title><rect x="1127.2" y="451.0" width="5.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1130.2" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.37%)</title><rect x="1128.4" y="435.0" width="4.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1131.4" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 0.36%)</title><rect x="1128.5" y="419.0" width="4.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1131.5" y="430.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (22 samples, 0.25%)</title><rect x="1129.9" y="403.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1132.9" y="414.0"></text>
</g>
<g>
<title>ksys_pread64 (22 samples, 0.25%)</title><rect x="1129.9" y="387.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1132.9" y="398.0"></text>
</g>
<g>
<title>vfs_read (20 samples, 0.23%)</title><rect x="1130.1" y="371.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1133.1" y="382.0"></text>
</g>
<g>
<title>__vfs_read (15 samples, 0.17%)</title><rect x="1130.1" y="355.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1133.1" y="366.0"></text>
</g>
<g>
<title>new_sync_read (12 samples, 0.14%)</title><rect x="1130.4" y="339.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1133.4" y="350.0"></text>
</g>
<g>
<title>shmem_file_read_iter (8 samples, 0.09%)</title><rect x="1130.8" y="323.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1133.8" y="334.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (3 samples, 0.03%)</title><rect x="1131.3" y="307.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1134.3" y="318.0"></text>
</g>
<g>
<title>find_lock_entry (3 samples, 0.03%)</title><rect x="1131.3" y="291.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1134.3" y="302.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.03%)</title><rect x="1131.3" y="275.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1134.3" y="286.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.02%)</title><rect x="1131.3" y="259.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1134.3" y="270.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.05%)</title><rect x="1132.3" y="355.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1135.3" y="366.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.05%)</title><rect x="1132.3" y="339.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1135.3" y="350.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="1132.3" y="323.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1135.3" y="334.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.02%)</title><rect x="1132.3" y="307.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1135.3" y="318.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="1132.5" y="323.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1135.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.02%)</title><rect x="1132.8" y="499.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1135.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.06%)</title><rect x="1133.1" y="515.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1136.1" y="526.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$116/1794098734.compare (3 samples, 0.03%)</title><rect x="1133.8" y="611.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1136.8" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2 samples, 0.02%)</title><rect x="1133.9" y="595.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1136.9" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$114/52043408.compare (2 samples, 0.02%)</title><rect x="1133.9" y="579.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1136.9" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2 samples, 0.02%)</title><rect x="1133.9" y="563.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1136.9" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.02%)</title><rect x="1133.9" y="547.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1136.9" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.02%)</title><rect x="1133.9" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1136.9" y="542.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.02%)</title><rect x="1133.9" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1136.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.iterator (84 samples, 0.95%)</title><rect x="1134.2" y="755.0" width="11.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1137.2" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (27 samples, 0.31%)</title><rect x="1134.2" y="739.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1137.2" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (27 samples, 0.31%)</title><rect x="1134.2" y="723.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1137.2" y="734.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.05%)</title><rect x="1134.3" y="707.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1137.3" y="718.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (18 samples, 0.20%)</title><rect x="1135.2" y="707.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1138.2" y="718.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (18 samples, 0.20%)</title><rect x="1135.2" y="691.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1138.2" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (15 samples, 0.17%)</title><rect x="1135.4" y="675.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1138.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (4 samples, 0.05%)</title><rect x="1135.4" y="659.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1138.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/Sink.begin (3 samples, 0.03%)</title><rect x="1135.5" y="643.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1138.5" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (4 samples, 0.05%)</title><rect x="1136.0" y="659.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1139.0" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$112/1312109180.getAsBoolean (4 samples, 0.05%)</title><rect x="1136.0" y="643.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1139.0" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.05%)</title><rect x="1136.0" y="627.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1139.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.05%)</title><rect x="1136.0" y="611.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1139.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.03%)</title><rect x="1136.0" y="595.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1139.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (3 samples, 0.03%)</title><rect x="1136.0" y="579.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1139.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (3 samples, 0.03%)</title><rect x="1136.0" y="563.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1139.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (6 samples, 0.07%)</title><rect x="1136.6" y="659.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1139.6" y="670.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1137.0" y="643.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1140.0" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2 samples, 0.02%)</title><rect x="1137.4" y="675.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1140.4" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1137.8" y="739.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1140.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (2 samples, 0.02%)</title><rect x="1138.0" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1141.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.02%)</title><rect x="1138.3" y="739.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1141.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.02%)</title><rect x="1138.3" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1141.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.02%)</title><rect x="1138.3" y="707.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1141.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.03%)</title><rect x="1138.6" y="739.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1141.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1138.6" y="723.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1141.6" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.03%)</title><rect x="1138.6" y="707.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1141.6" y="718.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="1138.7" y="691.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1141.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.iterator (48 samples, 0.54%)</title><rect x="1139.0" y="739.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1142.0" y="750.0"></text>
</g>
<g>
<title>java/util/Collection.stream (41 samples, 0.46%)</title><rect x="1139.0" y="723.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1142.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (39 samples, 0.44%)</title><rect x="1139.0" y="707.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1142.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (39 samples, 0.44%)</title><rect x="1139.0" y="691.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1142.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (39 samples, 0.44%)</title><rect x="1139.0" y="675.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1142.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (2 samples, 0.02%)</title><rect x="1139.4" y="659.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1142.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (2 samples, 0.02%)</title><rect x="1139.4" y="643.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1142.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.02%)</title><rect x="1139.4" y="627.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1142.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (34 samples, 0.38%)</title><rect x="1139.6" y="659.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1142.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (34 samples, 0.38%)</title><rect x="1139.6" y="643.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1142.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.05%)</title><rect x="1139.9" y="627.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1142.9" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.05%)</title><rect x="1139.9" y="611.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1142.9" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.05%)</title><rect x="1139.9" y="595.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1142.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (28 samples, 0.32%)</title><rect x="1140.4" y="627.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1143.4" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.02%)</title><rect x="1141.8" y="611.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1144.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (16 samples, 0.18%)</title><rect x="1142.0" y="611.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1145.0" y="622.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (5 samples, 0.06%)</title><rect x="1142.0" y="595.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1145.0" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.12%)</title><rect x="1142.7" y="595.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1145.7" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.11%)</title><rect x="1142.8" y="579.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1145.8" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.02%)</title><rect x="1143.1" y="563.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1146.1" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (2 samples, 0.02%)</title><rect x="1143.4" y="563.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1146.4" y="574.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.05%)</title><rect x="1143.6" y="563.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1146.6" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.03%)</title><rect x="1143.8" y="547.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1146.8" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.02%)</title><rect x="1143.9" y="531.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1146.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.02%)</title><rect x="1144.2" y="707.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1147.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (6 samples, 0.07%)</title><rect x="1144.4" y="723.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1147.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.&lt;init&gt; (6 samples, 0.07%)</title><rect x="1144.4" y="707.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1147.4" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractSet.&lt;init&gt; (6 samples, 0.07%)</title><rect x="1144.4" y="691.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1147.4" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (6 samples, 0.07%)</title><rect x="1144.4" y="675.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1147.4" y="686.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (6 samples, 0.07%)</title><rect x="1144.4" y="659.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1147.4" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.02%)</title><rect x="1144.4" y="643.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1147.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1144.7" y="643.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1147.7" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (36 samples, 0.41%)</title><rect x="1145.5" y="835.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1148.5" y="846.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (36 samples, 0.41%)</title><rect x="1145.5" y="819.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1148.5" y="830.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$92/110049049.run (36 samples, 0.41%)</title><rect x="1145.5" y="803.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1148.5" y="814.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (36 samples, 0.41%)</title><rect x="1145.5" y="787.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1148.5" y="798.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (36 samples, 0.41%)</title><rect x="1145.5" y="771.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1148.5" y="782.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (36 samples, 0.41%)</title><rect x="1145.5" y="755.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1148.5" y="766.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (2 samples, 0.02%)</title><rect x="1145.8" y="739.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1148.8" y="750.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.read (2 samples, 0.02%)</title><rect x="1145.8" y="723.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1148.8" y="734.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.fill (2 samples, 0.02%)</title><rect x="1145.8" y="707.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1148.8" y="718.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.read (2 samples, 0.02%)</title><rect x="1145.8" y="691.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1148.8" y="702.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.read (2 samples, 0.02%)</title><rect x="1145.8" y="675.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1148.8" y="686.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.socketRead (2 samples, 0.02%)</title><rect x="1145.8" y="659.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1148.8" y="670.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.socketRead0 (2 samples, 0.02%)</title><rect x="1145.8" y="643.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1148.8" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (31 samples, 0.35%)</title><rect x="1146.2" y="739.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1149.2" y="750.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (29 samples, 0.33%)</title><rect x="1146.2" y="723.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1149.2" y="734.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (29 samples, 0.33%)</title><rect x="1146.2" y="707.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1149.2" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (29 samples, 0.33%)</title><rect x="1146.2" y="691.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1149.2" y="702.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (29 samples, 0.33%)</title><rect x="1146.2" y="675.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1149.2" y="686.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (16 samples, 0.18%)</title><rect x="1146.2" y="659.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1149.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (16 samples, 0.18%)</title><rect x="1146.2" y="643.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1149.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor40.invoke (14 samples, 0.16%)</title><rect x="1146.4" y="627.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1149.4" y="638.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (14 samples, 0.16%)</title><rect x="1146.4" y="611.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1149.4" y="622.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (11 samples, 0.12%)</title><rect x="1146.4" y="595.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1149.4" y="606.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (11 samples, 0.12%)</title><rect x="1146.4" y="579.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1149.4" y="590.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (11 samples, 0.12%)</title><rect x="1146.4" y="563.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1149.4" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (11 samples, 0.12%)</title><rect x="1146.4" y="547.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1149.4" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (11 samples, 0.12%)</title><rect x="1146.4" y="531.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1149.4" y="542.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (11 samples, 0.12%)</title><rect x="1146.4" y="515.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1149.4" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (11 samples, 0.12%)</title><rect x="1146.4" y="499.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1149.4" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (11 samples, 0.12%)</title><rect x="1146.4" y="483.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1149.4" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (10 samples, 0.11%)</title><rect x="1146.6" y="467.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1149.6" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (10 samples, 0.11%)</title><rect x="1146.6" y="451.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1149.6" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (10 samples, 0.11%)</title><rect x="1146.6" y="435.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1149.6" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (10 samples, 0.11%)</title><rect x="1146.6" y="419.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1149.6" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (10 samples, 0.11%)</title><rect x="1146.6" y="403.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1149.6" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (7 samples, 0.08%)</title><rect x="1146.6" y="387.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1149.6" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (7 samples, 0.08%)</title><rect x="1146.6" y="371.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1149.6" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (7 samples, 0.08%)</title><rect x="1146.6" y="355.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1149.6" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (7 samples, 0.08%)</title><rect x="1146.6" y="339.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1149.6" y="350.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (5 samples, 0.06%)</title><rect x="1146.7" y="323.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1149.7" y="334.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1146.7" y="307.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1149.7" y="318.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeType.getType (2 samples, 0.02%)</title><rect x="1146.8" y="291.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1149.8" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.02%)</title><rect x="1146.8" y="275.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1149.8" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.02%)</title><rect x="1146.8" y="259.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1149.8" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.02%)</title><rect x="1146.8" y="243.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1149.8" y="254.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (2 samples, 0.02%)</title><rect x="1147.1" y="307.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1150.1" y="318.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (3 samples, 0.03%)</title><rect x="1147.5" y="387.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1150.5" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.03%)</title><rect x="1147.5" y="371.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1150.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.03%)</title><rect x="1147.5" y="355.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1150.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (3 samples, 0.03%)</title><rect x="1147.5" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1150.5" y="350.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (3 samples, 0.03%)</title><rect x="1147.5" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1150.5" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.03%)</title><rect x="1147.5" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1150.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (3 samples, 0.03%)</title><rect x="1147.5" y="291.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1150.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (3 samples, 0.03%)</title><rect x="1147.5" y="275.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1150.5" y="286.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (3 samples, 0.03%)</title><rect x="1147.5" y="259.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1150.5" y="270.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (3 samples, 0.03%)</title><rect x="1147.5" y="243.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1150.5" y="254.0"></text>
</g>
<g>
<title>jmm_GetThreadInfo (2 samples, 0.02%)</title><rect x="1147.6" y="227.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1150.6" y="238.0"></text>
</g>
<g>
<title>do_thread_dump(ThreadDumpResult*, typeArrayHandle, int, int, bool, bool, Thread*) (2 samples, 0.02%)</title><rect x="1147.6" y="211.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1150.6" y="222.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (2 samples, 0.02%)</title><rect x="1148.0" y="595.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1151.0" y="606.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (9 samples, 0.10%)</title><rect x="1148.3" y="659.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1151.3" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (9 samples, 0.10%)</title><rect x="1148.3" y="643.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1151.3" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (9 samples, 0.10%)</title><rect x="1148.3" y="627.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1151.3" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (9 samples, 0.10%)</title><rect x="1148.3" y="611.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1151.3" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (9 samples, 0.10%)</title><rect x="1148.3" y="595.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1151.3" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (8 samples, 0.09%)</title><rect x="1148.4" y="579.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1151.4" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (8 samples, 0.09%)</title><rect x="1148.4" y="563.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1151.4" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (8 samples, 0.09%)</title><rect x="1148.4" y="547.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1151.4" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (8 samples, 0.09%)</title><rect x="1148.4" y="531.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1151.4" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (8 samples, 0.09%)</title><rect x="1148.4" y="515.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1151.4" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (8 samples, 0.09%)</title><rect x="1148.4" y="499.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1151.4" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (8 samples, 0.09%)</title><rect x="1148.4" y="483.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1151.4" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (8 samples, 0.09%)</title><rect x="1148.4" y="467.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1151.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (8 samples, 0.09%)</title><rect x="1148.4" y="451.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1151.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (8 samples, 0.09%)</title><rect x="1148.4" y="435.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1151.4" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (8 samples, 0.09%)</title><rect x="1148.4" y="419.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1151.4" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (8 samples, 0.09%)</title><rect x="1148.4" y="403.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1151.4" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (7 samples, 0.08%)</title><rect x="1148.6" y="387.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1151.6" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.lookup (2 samples, 0.02%)</title><rect x="1149.0" y="371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1152.0" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (2 samples, 0.02%)</title><rect x="1149.3" y="371.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1152.3" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.02%)</title><rect x="1149.3" y="355.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1152.3" y="366.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (2 samples, 0.02%)</title><rect x="1149.3" y="339.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1152.3" y="350.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (2 samples, 0.02%)</title><rect x="1149.3" y="323.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1152.3" y="334.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (2 samples, 0.02%)</title><rect x="1149.3" y="307.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1152.3" y="318.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.02%)</title><rect x="1149.3" y="291.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1152.3" y="302.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (3 samples, 0.03%)</title><rect x="1149.5" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1152.5" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 0.03%)</title><rect x="1149.5" y="643.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1152.5" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (3 samples, 0.03%)</title><rect x="1149.5" y="627.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1152.5" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (3 samples, 0.03%)</title><rect x="1149.5" y="611.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1152.5" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (3 samples, 0.03%)</title><rect x="1149.5" y="595.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1152.5" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (2 samples, 0.02%)</title><rect x="1149.5" y="579.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1152.5" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (2 samples, 0.02%)</title><rect x="1149.5" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1152.5" y="574.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.setContextClassLoader (2 samples, 0.02%)</title><rect x="1150.1" y="723.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1153.1" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.02%)</title><rect x="1150.1" y="707.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1153.1" y="718.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (2 samples, 0.02%)</title><rect x="1150.1" y="691.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1153.1" y="702.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.02%)</title><rect x="1150.1" y="675.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.1" y="686.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (257 samples, 2.91%)</title><rect x="1150.3" y="883.0" width="34.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1153.3" y="894.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (51 samples, 0.58%)</title><rect x="1150.3" y="867.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1153.3" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (50 samples, 0.57%)</title><rect x="1150.5" y="851.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1153.5" y="862.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.02%)</title><rect x="1150.7" y="835.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1153.7" y="846.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.03%)</title><rect x="1151.0" y="835.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1154.0" y="846.0"></text>
</g>
<g>
<title>epoll_wait (43 samples, 0.49%)</title><rect x="1151.4" y="835.0" width="5.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1154.4" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.37%)</title><rect x="1152.7" y="819.0" width="4.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1155.7" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 0.37%)</title><rect x="1152.7" y="803.0" width="4.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1155.7" y="814.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (30 samples, 0.34%)</title><rect x="1153.1" y="787.0" width="4.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1156.1" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (30 samples, 0.34%)</title><rect x="1153.1" y="771.0" width="4.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1156.1" y="782.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.03%)</title><rect x="1153.3" y="755.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1156.3" y="766.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="1153.3" y="739.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1156.3" y="750.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.03%)</title><rect x="1153.3" y="723.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1156.3" y="734.0"></text>
</g>
<g>
<title>ep_poll (24 samples, 0.27%)</title><rect x="1153.7" y="755.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1156.7" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (21 samples, 0.24%)</title><rect x="1153.9" y="739.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1156.9" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (14 samples, 0.16%)</title><rect x="1154.5" y="723.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1157.5" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (7 samples, 0.08%)</title><rect x="1155.1" y="707.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1158.1" y="718.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.05%)</title><rect x="1155.5" y="691.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1158.5" y="702.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.03%)</title><rect x="1155.7" y="675.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1158.7" y="686.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.02%)</title><rect x="1156.1" y="707.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1159.1" y="718.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.03%)</title><rect x="1156.3" y="723.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1159.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (206 samples, 2.33%)</title><rect x="1157.1" y="867.0" width="27.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1160.1" y="878.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (202 samples, 2.29%)</title><rect x="1157.4" y="851.0" width="27.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1160.4" y="862.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (157 samples, 1.78%)</title><rect x="1157.4" y="835.0" width="21.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1160.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (113 samples, 1.28%)</title><rect x="1158.1" y="819.0" width="15.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1161.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (113 samples, 1.28%)</title><rect x="1158.1" y="803.0" width="15.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1161.1" y="814.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (108 samples, 1.22%)</title><rect x="1158.1" y="787.0" width="14.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1161.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (19 samples, 0.22%)</title><rect x="1158.1" y="771.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1161.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (19 samples, 0.22%)</title><rect x="1158.1" y="755.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1161.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="1159.1" y="739.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1162.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.02%)</title><rect x="1159.1" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1162.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (6 samples, 0.07%)</title><rect x="1159.8" y="739.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1162.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="1160.1" y="723.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1163.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="1160.1" y="707.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1163.1" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.05%)</title><rect x="1160.1" y="691.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1163.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.get (89 samples, 1.01%)</title><rect x="1160.6" y="771.0" width="11.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1163.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (89 samples, 1.01%)</title><rect x="1160.6" y="755.0" width="11.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1163.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (86 samples, 0.97%)</title><rect x="1161.0" y="739.0" width="11.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1164.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (4 samples, 0.05%)</title><rect x="1162.2" y="723.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1165.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.02%)</title><rect x="1162.5" y="707.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1165.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (73 samples, 0.83%)</title><rect x="1162.7" y="723.0" width="9.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1165.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (73 samples, 0.83%)</title><rect x="1162.7" y="707.0" width="9.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1165.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (73 samples, 0.83%)</title><rect x="1162.7" y="691.0" width="9.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1165.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (72 samples, 0.82%)</title><rect x="1162.9" y="675.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1165.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (72 samples, 0.82%)</title><rect x="1162.9" y="659.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1165.9" y="670.0"></text>
</g>
<g>
<title>Unsafe_Unpark (10 samples, 0.11%)</title><rect x="1163.1" y="643.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1166.1" y="654.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.02%)</title><rect x="1163.8" y="627.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1166.8" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.03%)</title><rect x="1164.1" y="627.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1167.1" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (56 samples, 0.63%)</title><rect x="1164.6" y="643.0" width="7.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1167.6" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (47 samples, 0.53%)</title><rect x="1165.8" y="627.0" width="6.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1168.8" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (47 samples, 0.53%)</title><rect x="1165.8" y="611.0" width="6.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1168.8" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (46 samples, 0.52%)</title><rect x="1166.0" y="595.0" width="6.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1169.0" y="606.0"></text>
</g>
<g>
<title>do_futex (46 samples, 0.52%)</title><rect x="1166.0" y="579.0" width="6.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1169.0" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.02%)</title><rect x="1166.0" y="563.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1169.0" y="574.0"></text>
</g>
<g>
<title>futex_wake (42 samples, 0.48%)</title><rect x="1166.2" y="563.0" width="5.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1169.2" y="574.0"></text>
</g>
<g>
<title>wake_up_q (39 samples, 0.44%)</title><rect x="1166.6" y="547.0" width="5.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1169.6" y="558.0"></text>
</g>
<g>
<title>try_to_wake_up (39 samples, 0.44%)</title><rect x="1166.6" y="531.0" width="5.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1169.6" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (39 samples, 0.44%)</title><rect x="1166.6" y="515.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1169.6" y="526.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.02%)</title><rect x="1171.8" y="563.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1174.8" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="1172.1" y="643.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1175.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.02%)</title><rect x="1172.5" y="787.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1175.5" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.02%)</title><rect x="1172.5" y="771.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1175.5" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.02%)</title><rect x="1172.5" y="755.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1175.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.03%)</title><rect x="1172.8" y="787.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1175.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.03%)</title><rect x="1172.8" y="771.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1175.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.03%)</title><rect x="1172.8" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1175.8" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="1172.9" y="739.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1175.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (21 samples, 0.24%)</title><rect x="1173.2" y="819.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1176.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (7 samples, 0.08%)</title><rect x="1173.4" y="803.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1176.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="1174.0" y="787.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1177.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.03%)</title><rect x="1174.0" y="771.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1177.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.02%)</title><rect x="1174.1" y="755.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1177.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.12%)</title><rect x="1174.4" y="803.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1177.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.12%)</title><rect x="1174.4" y="787.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1177.4" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.05%)</title><rect x="1175.2" y="771.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1178.2" y="782.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.05%)</title><rect x="1175.2" y="755.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1178.2" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.05%)</title><rect x="1175.2" y="739.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.2" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.03%)</title><rect x="1175.2" y="723.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1178.2" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.02%)</title><rect x="1175.2" y="707.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1178.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (10 samples, 0.11%)</title><rect x="1176.0" y="819.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1179.0" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (8 samples, 0.09%)</title><rect x="1176.1" y="803.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1179.1" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (8 samples, 0.09%)</title><rect x="1176.1" y="787.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1179.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.03%)</title><rect x="1176.5" y="771.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1179.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.02%)</title><rect x="1177.3" y="819.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1180.3" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.07%)</title><rect x="1177.6" y="819.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1180.6" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.07%)</title><rect x="1177.6" y="803.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1180.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1178.1" y="787.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1181.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1178.1" y="771.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1181.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.02%)</title><rect x="1178.1" y="755.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1181.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (45 samples, 0.51%)</title><rect x="1178.4" y="835.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1181.4" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (45 samples, 0.51%)</title><rect x="1178.4" y="819.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1181.4" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (14 samples, 0.16%)</title><rect x="1178.6" y="803.0" width="1.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1181.6" y="814.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.03%)</title><rect x="1178.9" y="787.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1181.9" y="798.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.02%)</title><rect x="1179.3" y="787.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1182.3" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.07%)</title><rect x="1179.7" y="787.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1182.7" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.02%)</title><rect x="1180.2" y="771.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1183.2" y="782.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.02%)</title><rect x="1180.5" y="803.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1183.5" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.02%)</title><rect x="1180.8" y="803.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1183.8" y="814.0"></text>
</g>
<g>
<title>recv (25 samples, 0.28%)</title><rect x="1181.0" y="803.0" width="3.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1184.0" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.27%)</title><rect x="1181.2" y="787.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1184.2" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.26%)</title><rect x="1181.3" y="771.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1184.3" y="782.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (18 samples, 0.20%)</title><rect x="1182.0" y="755.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1185.0" y="766.0"></text>
</g>
<g>
<title>__sys_recvfrom (17 samples, 0.19%)</title><rect x="1182.0" y="739.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1185.0" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (16 samples, 0.18%)</title><rect x="1182.1" y="723.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1185.1" y="734.0"></text>
</g>
<g>
<title>inet6_recvmsg (16 samples, 0.18%)</title><rect x="1182.1" y="707.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1185.1" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (13 samples, 0.15%)</title><rect x="1182.5" y="691.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1185.5" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.02%)</title><rect x="1182.9" y="675.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1185.9" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.06%)</title><rect x="1183.2" y="675.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1186.2" y="686.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5 samples, 0.06%)</title><rect x="1183.2" y="659.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1186.2" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.05%)</title><rect x="1183.3" y="643.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1186.3" y="654.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.03%)</title><rect x="1183.5" y="627.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1186.5" y="638.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.03%)</title><rect x="1183.5" y="611.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1186.5" y="622.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.02%)</title><rect x="1183.9" y="675.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1186.9" y="686.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.02%)</title><rect x="1184.4" y="851.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.4" y="862.0"></text>
</g>
<g>
<title>start_thread (40 samples, 0.45%)</title><rect x="1184.7" y="883.0" width="5.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1187.7" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (40 samples, 0.45%)</title><rect x="1184.7" y="867.0" width="5.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1187.7" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (40 samples, 0.45%)</title><rect x="1184.7" y="851.0" width="5.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.7" y="862.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (2 samples, 0.02%)</title><rect x="1184.7" y="835.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.7" y="846.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (2 samples, 0.02%)</title><rect x="1184.7" y="819.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.7" y="830.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (2 samples, 0.02%)</title><rect x="1184.7" y="803.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.7" y="814.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (2 samples, 0.02%)</title><rect x="1184.7" y="787.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.7" y="798.0"></text>
</g>
<g>
<title>GangWorker::loop() (7 samples, 0.08%)</title><rect x="1184.9" y="835.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.9" y="846.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (5 samples, 0.06%)</title><rect x="1184.9" y="819.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.9" y="830.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (4 samples, 0.05%)</title><rect x="1185.1" y="803.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.1" y="814.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (2 samples, 0.02%)</title><rect x="1185.6" y="819.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.6" y="830.0"></text>
</g>
<g>
<title>JavaThread::run() (22 samples, 0.25%)</title><rect x="1185.9" y="835.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.9" y="846.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (20 samples, 0.23%)</title><rect x="1185.9" y="819.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.9" y="830.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (20 samples, 0.23%)</title><rect x="1185.9" y="803.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.9" y="814.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (20 samples, 0.23%)</title><rect x="1185.9" y="787.0" width="2.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.9" y="798.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (20 samples, 0.23%)</title><rect x="1185.9" y="771.0" width="2.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.9" y="782.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (13 samples, 0.15%)</title><rect x="1185.9" y="755.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.9" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (10 samples, 0.11%)</title><rect x="1186.3" y="739.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.3" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.02%)</title><rect x="1186.3" y="723.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.3" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (2 samples, 0.02%)</title><rect x="1186.5" y="723.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.5" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.02%)</title><rect x="1186.9" y="723.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.9" y="734.0"></text>
</g>
<g>
<title>Compile::Optimize() (5 samples, 0.06%)</title><rect x="1187.6" y="755.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.6" y="766.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (3 samples, 0.03%)</title><rect x="1187.6" y="739.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.6" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.03%)</title><rect x="1187.6" y="723.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.6" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.03%)</title><rect x="1187.6" y="707.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.6" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (2 samples, 0.02%)</title><rect x="1188.0" y="739.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.0" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1188.3" y="755.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.3" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1188.3" y="739.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.3" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1188.3" y="723.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.3" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1188.3" y="707.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.3" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1188.3" y="691.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.3" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1188.3" y="675.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.3" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1188.3" y="659.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.3" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1188.3" y="643.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.3" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1188.3" y="627.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.3" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1188.3" y="611.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.3" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1188.3" y="595.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.3" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1188.3" y="579.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.3" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1188.3" y="563.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.3" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1188.3" y="547.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.3" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1188.3" y="531.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.3" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1188.3" y="515.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.3" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1188.3" y="499.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.3" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1188.3" y="483.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.3" y="494.0"></text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (2 samples, 0.02%)</title><rect x="1188.5" y="819.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.5" y="830.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (2 samples, 0.02%)</title><rect x="1188.5" y="803.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.5" y="814.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (2 samples, 0.02%)</title><rect x="1188.5" y="787.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.5" y="798.0"></text>
</g>
<g>
<title>VMThread::run() (6 samples, 0.07%)</title><rect x="1188.9" y="835.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.9" y="846.0"></text>
</g>
<g>
<title>VMThread::loop() (6 samples, 0.07%)</title><rect x="1188.9" y="819.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.9" y="830.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (4 samples, 0.05%)</title><rect x="1189.1" y="803.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.1" y="814.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (4 samples, 0.05%)</title><rect x="1189.1" y="787.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.1" y="798.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.02%)</title><rect x="1189.1" y="771.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.1" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.02%)</title><rect x="1189.1" y="755.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.1" y="766.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (2 samples, 0.02%)</title><rect x="1189.1" y="739.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.1" y="750.0"></text>
</g>
<g>
<title>VM_ThreadDump::doit() (2 samples, 0.02%)</title><rect x="1189.3" y="771.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.3" y="782.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.02%)</title><rect x="1189.7" y="835.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.7" y="846.0"></text>
</g>
</g>
</svg>
