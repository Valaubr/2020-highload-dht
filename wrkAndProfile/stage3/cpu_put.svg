<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1045"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1045"> </text>
<g id="frames">
<g>
<title>all (1,084 samples, 100.00%)</title><rect x="10.0" y="1011.0" width="1180.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="13.0" y="1022.0">all</text>
</g>
<g>
<title>[C1 CompilerThre tid=60302] (1 samples, 0.09%)</title><rect x="10.0" y="995.0" width="1.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.09%)</title><rect x="10.0" y="979.0" width="1.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.09%)</title><rect x="10.0" y="963.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.09%)</title><rect x="10.0" y="947.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>JavaThread::run() (1 samples, 0.09%)</title><rect x="10.0" y="931.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (1 samples, 0.09%)</title><rect x="10.0" y="915.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (1 samples, 0.09%)</title><rect x="10.0" y="899.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.09%)</title><rect x="10.0" y="883.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (1 samples, 0.09%)</title><rect x="10.0" y="867.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>Compilation::compile_method() (1 samples, 0.09%)</title><rect x="10.0" y="851.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (1 samples, 0.09%)</title><rect x="10.0" y="835.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (1 samples, 0.09%)</title><rect x="10.0" y="819.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (1 samples, 0.09%)</title><rect x="10.0" y="803.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>LIR_Assembler::process_debug_info(LIR_Op*) (1 samples, 0.09%)</title><rect x="10.0" y="787.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>LIR_Assembler::record_non_safepoint_debug_info() (1 samples, 0.09%)</title><rect x="10.0" y="771.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.09%)</title><rect x="10.0" y="755.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.09%)</title><rect x="10.0" y="739.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>[C2 CompilerThre tid=60301] (94 samples, 8.67%)</title><rect x="11.1" y="995.0" width="102.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="14.1" y="1006.0">[C2 Compiler..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.09%)</title><rect x="11.1" y="979.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="14.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="12.2" y="979.0" width="2.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="15.2" y="990.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.09%)</title><rect x="12.2" y="963.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="15.2" y="974.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="13.3" y="963.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="16.3" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="13.3" y="947.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="16.3" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="13.3" y="931.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="16.3" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.09%)</title><rect x="13.3" y="915.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="16.3" y="926.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="13.3" y="899.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="16.3" y="910.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.09%)</title><rect x="13.3" y="883.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="16.3" y="894.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.09%)</title><rect x="13.3" y="867.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="16.3" y="878.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (1 samples, 0.09%)</title><rect x="13.3" y="851.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="16.3" y="862.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.09%)</title><rect x="13.3" y="835.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="16.3" y="846.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.09%)</title><rect x="13.3" y="819.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="16.3" y="830.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.09%)</title><rect x="14.4" y="979.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="17.4" y="990.0"></text>
</g>
<g>
<title>start_thread (90 samples, 8.30%)</title><rect x="15.4" y="979.0" width="98.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="18.4" y="990.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (90 samples, 8.30%)</title><rect x="15.4" y="963.0" width="98.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="18.4" y="974.0">thread_nati..</text>
</g>
<g>
<title>Thread::call_run() (90 samples, 8.30%)</title><rect x="15.4" y="947.0" width="98.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="18.4" y="958.0">Thread::cal..</text>
</g>
<g>
<title>JavaThread::run() (90 samples, 8.30%)</title><rect x="15.4" y="931.0" width="98.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="18.4" y="942.0">JavaThread:..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (90 samples, 8.30%)</title><rect x="15.4" y="915.0" width="98.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="18.4" y="926.0">CompileBrok..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (90 samples, 8.30%)</title><rect x="15.4" y="899.0" width="98.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="18.4" y="910.0">CompileBrok..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (90 samples, 8.30%)</title><rect x="15.4" y="883.0" width="98.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="18.4" y="894.0">C2Compiler:..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (90 samples, 8.30%)</title><rect x="15.4" y="867.0" width="98.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="18.4" y="878.0">Compile::Co..</text>
</g>
<g>
<title>Compile::Code_Gen() (59 samples, 5.44%)</title><rect x="15.4" y="851.0" width="64.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="18.4" y="862.0">Compile..</text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.09%)</title><rect x="15.4" y="835.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="18.4" y="846.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (1 samples, 0.09%)</title><rect x="15.4" y="819.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="18.4" y="830.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (4 samples, 0.37%)</title><rect x="16.5" y="835.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="19.5" y="846.0"></text>
</g>
<g>
<title>Compile::FillExceptionTables(unsigned int, unsigned int*, unsigned int*, Label*) (1 samples, 0.09%)</title><rect x="16.5" y="819.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="19.5" y="830.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (3 samples, 0.28%)</title><rect x="17.6" y="819.0" width="3.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="20.6" y="830.0"></text>
</g>
<g>
<title>Compile::FillLocArray(int, MachSafePointNode*, Node*, GrowableArray&lt;ScopeValue*&gt;*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.09%)</title><rect x="17.6" y="803.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="20.6" y="814.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.09%)</title><rect x="17.6" y="787.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="20.6" y="798.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.09%)</title><rect x="17.6" y="771.0" width="1.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="20.6" y="782.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.09%)</title><rect x="18.7" y="803.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="21.7" y="814.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.09%)</title><rect x="18.7" y="787.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="21.7" y="798.0"></text>
</g>
<g>
<title>DebugInformationRecorder::dump_object_pool(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.09%)</title><rect x="19.8" y="803.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="22.8" y="814.0"></text>
</g>
<g>
<title>ObjectValue::write_on(DebugInfoWriteStream*) (1 samples, 0.09%)</title><rect x="19.8" y="787.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="22.8" y="798.0"></text>
</g>
<g>
<title>LocationValue::write_on(DebugInfoWriteStream*) (1 samples, 0.09%)</title><rect x="19.8" y="771.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="22.8" y="782.0"></text>
</g>
<g>
<title>Matcher::match() (4 samples, 0.37%)</title><rect x="20.9" y="835.0" width="4.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="23.9" y="846.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (4 samples, 0.37%)</title><rect x="20.9" y="819.0" width="4.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="23.9" y="830.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 0.09%)</title><rect x="20.9" y="803.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="23.9" y="814.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.18%)</title><rect x="22.0" y="803.0" width="2.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="25.0" y="814.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (1 samples, 0.09%)</title><rect x="22.0" y="787.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="25.0" y="798.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (1 samples, 0.09%)</title><rect x="22.0" y="771.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="25.0" y="782.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.09%)</title><rect x="22.0" y="755.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="25.0" y="766.0"></text>
</g>
<g>
<title>State::_sub_Op_AddP(Node const*) (1 samples, 0.09%)</title><rect x="22.0" y="739.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="25.0" y="750.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.09%)</title><rect x="23.1" y="787.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="26.1" y="798.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.09%)</title><rect x="24.2" y="803.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="27.2" y="814.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (1 samples, 0.09%)</title><rect x="25.2" y="835.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="28.2" y="846.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (1 samples, 0.09%)</title><rect x="25.2" y="819.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="28.2" y="830.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (6 samples, 0.55%)</title><rect x="26.3" y="835.0" width="6.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="29.3" y="846.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (6 samples, 0.55%)</title><rect x="26.3" y="819.0" width="6.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="29.3" y="830.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.09%)</title><rect x="26.3" y="803.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="29.3" y="814.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.09%)</title><rect x="27.4" y="803.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="30.4" y="814.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.09%)</title><rect x="28.5" y="803.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="31.5" y="814.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.09%)</title><rect x="28.5" y="787.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="31.5" y="798.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (1 samples, 0.09%)</title><rect x="29.6" y="803.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="32.6" y="814.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.18%)</title><rect x="30.7" y="803.0" width="2.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="33.7" y="814.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.09%)</title><rect x="31.8" y="787.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="34.8" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (42 samples, 3.87%)</title><rect x="32.9" y="835.0" width="45.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="35.9" y="846.0">Phas..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.09%)</title><rect x="32.9" y="819.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="35.9" y="830.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.09%)</title><rect x="32.9" y="803.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="35.9" y="814.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="32.9" y="787.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="35.9" y="798.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="32.9" y="771.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="35.9" y="782.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.09%)</title><rect x="32.9" y="755.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="35.9" y="766.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="32.9" y="739.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="35.9" y="750.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="32.9" y="723.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="35.9" y="734.0"></text>
</g>
<g>
<title>do_anonymous_page (1 samples, 0.09%)</title><rect x="32.9" y="707.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="35.9" y="718.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.09%)</title><rect x="32.9" y="691.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="35.9" y="702.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.09%)</title><rect x="32.9" y="675.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="35.9" y="686.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.09%)</title><rect x="32.9" y="659.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="35.9" y="670.0"></text>
</g>
<g>
<title>clear_page_erms (1 samples, 0.09%)</title><rect x="32.9" y="643.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="35.9" y="654.0"></text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 0.09%)</title><rect x="33.9" y="819.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="36.9" y="830.0"></text>
</g>
<g>
<title>MachCallJavaNode::in_RegMask(unsigned int) const (1 samples, 0.09%)</title><rect x="35.0" y="819.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="38.0" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (3 samples, 0.28%)</title><rect x="36.1" y="819.0" width="3.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="39.1" y="830.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.09%)</title><rect x="37.2" y="803.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="40.2" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (1 samples, 0.09%)</title><rect x="38.3" y="803.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="41.3" y="814.0"></text>
</g>
<g>
<title>RegMask::find_first_set(int) const (1 samples, 0.09%)</title><rect x="38.3" y="787.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="41.3" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (3 samples, 0.28%)</title><rect x="39.4" y="819.0" width="3.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="42.4" y="830.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (3 samples, 0.28%)</title><rect x="39.4" y="803.0" width="3.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="42.4" y="814.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.09%)</title><rect x="41.6" y="787.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="44.6" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (4 samples, 0.37%)</title><rect x="42.7" y="819.0" width="4.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="45.7" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (1 samples, 0.09%)</title><rect x="45.9" y="803.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="48.9" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::get_spillcopy_wide(MachSpillCopyNode::SpillType, Node*, Node*, unsigned int) (1 samples, 0.09%)</title><rect x="45.9" y="787.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="48.9" y="798.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (1 samples, 0.09%)</title><rect x="45.9" y="771.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="48.9" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (12 samples, 1.11%)</title><rect x="47.0" y="819.0" width="13.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="50.0" y="830.0"></text>
</g>
<g>
<title>MachNode::Opcode() const (1 samples, 0.09%)</title><rect x="48.1" y="803.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="51.1" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (7 samples, 0.65%)</title><rect x="49.2" y="803.0" width="7.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="52.2" y="814.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.09%)</title><rect x="52.5" y="787.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="55.5" y="798.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="52.5" y="771.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="55.5" y="782.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.28%)</title><rect x="53.5" y="787.0" width="3.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="56.5" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (3 samples, 0.28%)</title><rect x="56.8" y="803.0" width="3.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="59.8" y="814.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (3 samples, 0.28%)</title><rect x="56.8" y="787.0" width="3.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="59.8" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (4 samples, 0.37%)</title><rect x="60.1" y="819.0" width="4.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="63.1" y="830.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.18%)</title><rect x="62.3" y="803.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="65.3" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (1 samples, 0.09%)</title><rect x="64.4" y="819.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="67.4" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (4 samples, 0.37%)</title><rect x="65.5" y="819.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="68.5" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (3 samples, 0.28%)</title><rect x="65.5" y="803.0" width="3.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="68.5" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::use_prior_register(Node*, unsigned int, Node*, Block*, Node_List&amp;, Node_List&amp;) (1 samples, 0.09%)</title><rect x="68.8" y="803.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="71.8" y="814.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.09%)</title><rect x="68.8" y="787.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="71.8" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (1 samples, 0.09%)</title><rect x="69.9" y="819.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="72.9" y="830.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (1 samples, 0.09%)</title><rect x="69.9" y="803.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="72.9" y="814.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.09%)</title><rect x="71.0" y="819.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="74.0" y="830.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.09%)</title><rect x="71.0" y="803.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="74.0" y="814.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.09%)</title><rect x="72.0" y="819.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="75.0" y="830.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (5 samples, 0.46%)</title><rect x="73.1" y="819.0" width="5.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="76.1" y="830.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.09%)</title><rect x="76.4" y="803.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="79.4" y="814.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="76.4" y="787.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="79.4" y="798.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.09%)</title><rect x="77.5" y="803.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="80.5" y="814.0"></text>
</g>
<g>
<title>PhasePeephole::do_transform() (1 samples, 0.09%)</title><rect x="78.6" y="835.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="81.6" y="846.0"></text>
</g>
<g>
<title>Compile::Optimize() (23 samples, 2.12%)</title><rect x="79.7" y="851.0" width="25.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="82.7" y="862.0">C..</text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (7 samples, 0.65%)</title><rect x="79.7" y="835.0" width="7.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="82.7" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (7 samples, 0.65%)</title><rect x="79.7" y="819.0" width="7.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="82.7" y="830.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.09%)</title><rect x="79.7" y="803.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="82.7" y="814.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.09%)</title><rect x="79.7" y="787.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="82.7" y="798.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.09%)</title><rect x="79.7" y="771.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="82.7" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.79] (1 samples, 0.09%)</title><rect x="79.7" y="755.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="82.7" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_follow_branches(Node*, IdealLoopTree*, float, PathFrequency&amp;, Node_Stack&amp;, VectorSet&amp;, Node_List&amp;) (1 samples, 0.09%)</title><rect x="79.7" y="739.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="82.7" y="750.0"></text>
</g>
<g>
<title>PathFrequency::to(Node*) (1 samples, 0.09%)</title><rect x="79.7" y="723.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="82.7" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.28%)</title><rect x="80.8" y="803.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="83.8" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (2 samples, 0.18%)</title><rect x="81.8" y="787.0" width="2.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="84.8" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.09%)</title><rect x="84.0" y="803.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="87.0" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.09%)</title><rect x="85.1" y="803.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="88.1" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.09%)</title><rect x="85.1" y="787.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="88.1" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (1 samples, 0.09%)</title><rect x="85.1" y="771.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="88.1" y="782.0"></text>
</g>
<g>
<title>RegionNode::pinned() const (1 samples, 0.09%)</title><rect x="86.2" y="803.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="89.2" y="814.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.258] (1 samples, 0.09%)</title><rect x="87.3" y="835.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="90.3" y="846.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.09%)</title><rect x="88.4" y="835.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="91.4" y="846.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.09%)</title><rect x="88.4" y="819.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="91.4" y="830.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (1 samples, 0.09%)</title><rect x="88.4" y="803.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="91.4" y="814.0"></text>
</g>
<g>
<title>ConnectionGraph::add_java_object_edges(JavaObjectNode*, bool) [clone .constprop.271] (1 samples, 0.09%)</title><rect x="88.4" y="787.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="91.4" y="798.0"></text>
</g>
<g>
<title>ConnectionGraph::add_field_uses_to_worklist(FieldNode*) (1 samples, 0.09%)</title><rect x="88.4" y="771.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="91.4" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (9 samples, 0.83%)</title><rect x="89.5" y="835.0" width="9.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="92.5" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.09%)</title><rect x="89.5" y="819.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="92.5" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.28%)</title><rect x="90.6" y="819.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="93.6" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.09%)</title><rect x="92.7" y="803.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="95.7" y="814.0"></text>
</g>
<g>
<title>Node::unique_ctrl_out() const (1 samples, 0.09%)</title><rect x="92.7" y="787.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="95.7" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (2 samples, 0.18%)</title><rect x="93.8" y="819.0" width="2.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="96.8" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (1 samples, 0.09%)</title><rect x="94.9" y="803.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="97.9" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::sort(IdealLoopTree*, IdealLoopTree*) (1 samples, 0.09%)</title><rect x="94.9" y="787.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="97.9" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (2 samples, 0.18%)</title><rect x="96.0" y="819.0" width="2.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="99.0" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_split_if(Node*) (2 samples, 0.18%)</title><rect x="96.0" y="803.0" width="2.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="99.0" y="814.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.09%)</title><rect x="97.1" y="787.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="100.1" y="798.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.09%)</title><rect x="97.1" y="771.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="100.1" y="782.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.09%)</title><rect x="97.1" y="755.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="100.1" y="766.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.09%)</title><rect x="98.2" y="819.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="101.2" y="830.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.09%)</title><rect x="98.2" y="803.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="101.2" y="814.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.37%)</title><rect x="99.3" y="835.0" width="4.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="102.3" y="846.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (4 samples, 0.37%)</title><rect x="99.3" y="819.0" width="4.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="102.3" y="830.0"></text>
</g>
<g>
<title>ConstraintCastNode::Value(PhaseGVN*) const (1 samples, 0.09%)</title><rect x="99.3" y="803.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="102.3" y="814.0"></text>
</g>
<g>
<title>TypeOopPtr::filter_helper(Type const*, bool) const (1 samples, 0.09%)</title><rect x="99.3" y="787.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="102.3" y="798.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.09%)</title><rect x="99.3" y="771.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="102.3" y="782.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.09%)</title><rect x="99.3" y="755.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="102.3" y="766.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="100.4" y="803.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="103.4" y="814.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.09%)</title><rect x="101.4" y="803.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="104.4" y="814.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="102.5" y="803.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="105.5" y="814.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.09%)</title><rect x="102.5" y="787.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="105.5" y="798.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.09%)</title><rect x="102.5" y="771.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="105.5" y="782.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.09%)</title><rect x="102.5" y="755.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="105.5" y="766.0"></text>
</g>
<g>
<title>PhaseMacroExpand::eliminate_macro_nodes() (1 samples, 0.09%)</title><rect x="103.6" y="835.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="106.6" y="846.0"></text>
</g>
<g>
<title>PhaseMacroExpand::scalar_replacement(AllocateNode*, GrowableArray&lt;SafePointNode*&gt;&amp;) (1 samples, 0.09%)</title><rect x="103.6" y="819.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="106.6" y="830.0"></text>
</g>
<g>
<title>PhaseMacroExpand::value_from_mem(Node*, Node*, BasicType, Type const*, TypeOopPtr const*, AllocateNode*) (1 samples, 0.09%)</title><rect x="103.6" y="803.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="106.6" y="814.0"></text>
</g>
<g>
<title>PhaseMacroExpand::value_from_mem_phi(Node*, BasicType, Type const*, TypeOopPtr const*, AllocateNode*, Node_Stack*, int) (1 samples, 0.09%)</title><rect x="103.6" y="787.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="106.6" y="798.0"></text>
</g>
<g>
<title>PhaseMacroExpand::value_from_mem_phi(Node*, BasicType, Type const*, TypeOopPtr const*, AllocateNode*, Node_Stack*, int) (1 samples, 0.09%)</title><rect x="103.6" y="771.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="106.6" y="782.0"></text>
</g>
<g>
<title>PhaseMacroExpand::value_from_mem_phi(Node*, BasicType, Type const*, TypeOopPtr const*, AllocateNode*, Node_Stack*, int) (1 samples, 0.09%)</title><rect x="103.6" y="755.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="106.6" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.65%)</title><rect x="104.7" y="851.0" width="7.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="107.7" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.65%)</title><rect x="104.7" y="835.0" width="7.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="107.7" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.65%)</title><rect x="104.7" y="819.0" width="7.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="107.7" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.65%)</title><rect x="104.7" y="803.0" width="7.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="107.7" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.65%)</title><rect x="104.7" y="787.0" width="7.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="107.7" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.65%)</title><rect x="104.7" y="771.0" width="7.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="107.7" y="782.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.09%)</title><rect x="104.7" y="755.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="107.7" y="766.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.09%)</title><rect x="104.7" y="739.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="107.7" y="750.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.09%)</title><rect x="104.7" y="723.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="107.7" y="734.0"></text>
</g>
<g>
<title>ciTypeFlow::ciTypeFlow(ciEnv*, ciMethod*, int) (1 samples, 0.09%)</title><rect x="104.7" y="707.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="107.7" y="718.0"></text>
</g>
<g>
<title>ciMethod::get_method_blocks() (1 samples, 0.09%)</title><rect x="104.7" y="691.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="107.7" y="702.0"></text>
</g>
<g>
<title>ciMethodBlocks::ciMethodBlocks(Arena*, ciMethod*) (1 samples, 0.09%)</title><rect x="104.7" y="675.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="107.7" y="686.0"></text>
</g>
<g>
<title>ciMethodBlocks::do_analysis() (1 samples, 0.09%)</title><rect x="104.7" y="659.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="107.7" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.55%)</title><rect x="105.8" y="755.0" width="6.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="108.8" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.55%)</title><rect x="105.8" y="739.0" width="6.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="108.8" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.55%)</title><rect x="105.8" y="723.0" width="6.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="108.8" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.55%)</title><rect x="105.8" y="707.0" width="6.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="108.8" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.55%)</title><rect x="105.8" y="691.0" width="6.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="108.8" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.55%)</title><rect x="105.8" y="675.0" width="6.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="108.8" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.55%)</title><rect x="105.8" y="659.0" width="6.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="108.8" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.55%)</title><rect x="105.8" y="643.0" width="6.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="108.8" y="654.0"></text>
</g>
<g>
<title>Parse::build_exits() (1 samples, 0.09%)</title><rect x="105.8" y="627.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="108.8" y="638.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.09%)</title><rect x="105.8" y="611.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="108.8" y="622.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.09%)</title><rect x="105.8" y="595.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="108.8" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.37%)</title><rect x="106.9" y="627.0" width="4.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="109.9" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.37%)</title><rect x="106.9" y="611.0" width="4.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="109.9" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.37%)</title><rect x="106.9" y="595.0" width="4.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="109.9" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.37%)</title><rect x="106.9" y="579.0" width="4.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="109.9" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.37%)</title><rect x="106.9" y="563.0" width="4.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="109.9" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.28%)</title><rect x="106.9" y="547.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="109.9" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.28%)</title><rect x="106.9" y="531.0" width="3.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="109.9" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.28%)</title><rect x="106.9" y="515.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="109.9" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.28%)</title><rect x="106.9" y="499.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="109.9" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.28%)</title><rect x="106.9" y="483.0" width="3.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="109.9" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.28%)</title><rect x="106.9" y="467.0" width="3.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="109.9" y="478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.28%)</title><rect x="106.9" y="451.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="109.9" y="462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.18%)</title><rect x="106.9" y="435.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="109.9" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.18%)</title><rect x="106.9" y="419.0" width="2.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="109.9" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.18%)</title><rect x="106.9" y="403.0" width="2.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="109.9" y="414.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.18%)</title><rect x="106.9" y="387.0" width="2.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="109.9" y="398.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.18%)</title><rect x="106.9" y="371.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="109.9" y="382.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.18%)</title><rect x="106.9" y="355.0" width="2.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="109.9" y="366.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.18%)</title><rect x="106.9" y="339.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="109.9" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.18%)</title><rect x="106.9" y="323.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="109.9" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.18%)</title><rect x="106.9" y="307.0" width="2.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="109.9" y="318.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.18%)</title><rect x="106.9" y="291.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="109.9" y="302.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.09%)</title><rect x="106.9" y="275.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="109.9" y="286.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.09%)</title><rect x="106.9" y="259.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="109.9" y="270.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.09%)</title><rect x="106.9" y="243.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="109.9" y="254.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.09%)</title><rect x="106.9" y="227.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="109.9" y="238.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.09%)</title><rect x="106.9" y="211.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="109.9" y="222.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.09%)</title><rect x="106.9" y="195.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="109.9" y="206.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.09%)</title><rect x="106.9" y="179.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="109.9" y="190.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.09%)</title><rect x="106.9" y="163.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="109.9" y="174.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.09%)</title><rect x="106.9" y="147.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="109.9" y="158.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.09%)</title><rect x="106.9" y="131.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="109.9" y="142.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="106.9" y="115.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="109.9" y="126.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="106.9" y="99.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="109.9" y="110.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.09%)</title><rect x="106.9" y="83.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="109.9" y="94.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.09%)</title><rect x="106.9" y="67.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="109.9" y="78.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="106.9" y="51.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="109.9" y="62.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.09%)</title><rect x="106.9" y="35.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="109.9" y="46.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="108.0" y="275.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="111.0" y="286.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="108.0" y="259.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="111.0" y="270.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="108.0" y="243.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="111.0" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="108.0" y="227.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="111.0" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="108.0" y="211.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="111.0" y="222.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="108.0" y="195.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="111.0" y="206.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="108.0" y="179.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="111.0" y="190.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="108.0" y="163.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="111.0" y="174.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="108.0" y="147.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="111.0" y="158.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="108.0" y="131.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="111.0" y="142.0"></text>
</g>
<g>
<title>SafePointNode::next_exception() const (1 samples, 0.09%)</title><rect x="108.0" y="115.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="111.0" y="126.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.09%)</title><rect x="109.1" y="435.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="112.1" y="446.0"></text>
</g>
<g>
<title>Compile::too_many_traps(ciMethod*, int, Deoptimization::DeoptReason) (1 samples, 0.09%)</title><rect x="109.1" y="419.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="112.1" y="430.0"></text>
</g>
<g>
<title>SafePointNode::set_next_exception(SafePointNode*) (1 samples, 0.09%)</title><rect x="110.1" y="547.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="113.1" y="558.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.84] (1 samples, 0.09%)</title><rect x="111.2" y="627.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="114.2" y="638.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.09%)</title><rect x="111.2" y="611.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="114.2" y="622.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.09%)</title><rect x="112.3" y="851.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="115.3" y="862.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.09%)</title><rect x="112.3" y="835.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="115.3" y="846.0"></text>
</g>
<g>
<title>[G1 Young RemSet tid=60296] (2 samples, 0.18%)</title><rect x="113.4" y="995.0" width="2.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="116.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="113.4" y="979.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="116.4" y="990.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="113.4" y="963.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="116.4" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="113.4" y="947.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="116.4" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="113.4" y="931.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="116.4" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.09%)</title><rect x="113.4" y="915.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="116.4" y="926.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="113.4" y="899.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="116.4" y="910.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.09%)</title><rect x="113.4" y="883.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="116.4" y="894.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.09%)</title><rect x="114.5" y="979.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="117.5" y="990.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.09%)</title><rect x="114.5" y="963.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="117.5" y="974.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.09%)</title><rect x="114.5" y="947.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="117.5" y="958.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 0.09%)</title><rect x="114.5" y="931.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="117.5" y="942.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (1 samples, 0.09%)</title><rect x="114.5" y="915.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="117.5" y="926.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (1 samples, 0.09%)</title><rect x="114.5" y="899.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="117.5" y="910.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (1 samples, 0.09%)</title><rect x="114.5" y="883.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="117.5" y="894.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (1 samples, 0.09%)</title><rect x="114.5" y="867.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="117.5" y="878.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.09%)</title><rect x="114.5" y="851.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="117.5" y="862.0"></text>
</g>
<g>
<title>G1Analytics::predict_object_copy_time_ms(unsigned long, bool) const (1 samples, 0.09%)</title><rect x="114.5" y="835.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="117.5" y="846.0"></text>
</g>
<g>
<title>[GC Thread#0 tid=60289] (5 samples, 0.46%)</title><rect x="115.6" y="995.0" width="5.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="118.6" y="1006.0"></text>
</g>
<g>
<title>start_thread (5 samples, 0.46%)</title><rect x="115.6" y="979.0" width="5.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="118.6" y="990.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 0.46%)</title><rect x="115.6" y="963.0" width="5.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="118.6" y="974.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 0.46%)</title><rect x="115.6" y="947.0" width="5.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="118.6" y="958.0"></text>
</g>
<g>
<title>GangWorker::loop() (5 samples, 0.46%)</title><rect x="115.6" y="931.0" width="5.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="118.6" y="942.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (5 samples, 0.46%)</title><rect x="115.6" y="915.0" width="5.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="118.6" y="926.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.28%)</title><rect x="115.6" y="899.0" width="3.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="118.6" y="910.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (2 samples, 0.18%)</title><rect x="115.6" y="883.0" width="2.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="118.6" y="894.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.18%)</title><rect x="115.6" y="867.0" width="2.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="118.6" y="878.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.09%)</title><rect x="117.8" y="883.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="120.8" y="894.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.18%)</title><rect x="118.9" y="899.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="121.9" y="910.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.18%)</title><rect x="118.9" y="883.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="121.9" y="894.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.18%)</title><rect x="118.9" y="867.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="121.9" y="878.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (2 samples, 0.18%)</title><rect x="118.9" y="851.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="121.9" y="862.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.18%)</title><rect x="118.9" y="835.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="121.9" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.18%)</title><rect x="118.9" y="819.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="121.9" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.09%)</title><rect x="119.9" y="803.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="122.9" y="814.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.09%)</title><rect x="119.9" y="787.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="122.9" y="798.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="119.9" y="771.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="122.9" y="782.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="119.9" y="755.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="122.9" y="766.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.09%)</title><rect x="119.9" y="739.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="122.9" y="750.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="119.9" y="723.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="122.9" y="734.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="119.9" y="707.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="122.9" y="718.0"></text>
</g>
<g>
<title>do_anonymous_page (1 samples, 0.09%)</title><rect x="119.9" y="691.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="122.9" y="702.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.09%)</title><rect x="119.9" y="675.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="122.9" y="686.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.09%)</title><rect x="119.9" y="659.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="122.9" y="670.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.09%)</title><rect x="119.9" y="643.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="122.9" y="654.0"></text>
</g>
<g>
<title>clear_page_erms (1 samples, 0.09%)</title><rect x="119.9" y="627.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="122.9" y="638.0"></text>
</g>
<g>
<title>[GC Thread#1 tid=60388] (6 samples, 0.55%)</title><rect x="121.0" y="995.0" width="6.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="124.0" y="1006.0"></text>
</g>
<g>
<title>start_thread (6 samples, 0.55%)</title><rect x="121.0" y="979.0" width="6.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="124.0" y="990.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 0.55%)</title><rect x="121.0" y="963.0" width="6.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="124.0" y="974.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 0.55%)</title><rect x="121.0" y="947.0" width="6.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="124.0" y="958.0"></text>
</g>
<g>
<title>GangWorker::loop() (6 samples, 0.55%)</title><rect x="121.0" y="931.0" width="6.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="124.0" y="942.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (6 samples, 0.55%)</title><rect x="121.0" y="915.0" width="6.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="124.0" y="926.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (4 samples, 0.37%)</title><rect x="121.0" y="899.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="124.0" y="910.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (4 samples, 0.37%)</title><rect x="121.0" y="883.0" width="4.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="124.0" y="894.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.18%)</title><rect x="123.2" y="867.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="126.2" y="878.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.09%)</title><rect x="125.4" y="899.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="128.4" y="910.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.09%)</title><rect x="125.4" y="883.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="128.4" y="894.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.09%)</title><rect x="125.4" y="867.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="128.4" y="878.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (1 samples, 0.09%)</title><rect x="125.4" y="851.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="128.4" y="862.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.09%)</title><rect x="125.4" y="835.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="128.4" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.09%)</title><rect x="125.4" y="819.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="128.4" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.09%)</title><rect x="125.4" y="803.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="128.4" y="814.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.09%)</title><rect x="126.5" y="899.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="129.5" y="910.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.09%)</title><rect x="126.5" y="883.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="129.5" y="894.0"></text>
</g>
<g>
<title>[GC Thread#2 tid=60389] (6 samples, 0.55%)</title><rect x="127.6" y="995.0" width="6.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="130.6" y="1006.0"></text>
</g>
<g>
<title>start_thread (6 samples, 0.55%)</title><rect x="127.6" y="979.0" width="6.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="130.6" y="990.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 0.55%)</title><rect x="127.6" y="963.0" width="6.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="130.6" y="974.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 0.55%)</title><rect x="127.6" y="947.0" width="6.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="130.6" y="958.0"></text>
</g>
<g>
<title>GangWorker::loop() (6 samples, 0.55%)</title><rect x="127.6" y="931.0" width="6.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="130.6" y="942.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (1 samples, 0.09%)</title><rect x="127.6" y="915.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="130.6" y="926.0"></text>
</g>
<g>
<title>HeapRegionRemSet::clear_locked(bool) (1 samples, 0.09%)</title><rect x="127.6" y="899.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="130.6" y="910.0"></text>
</g>
<g>
<title>G1FromCardCache::clear(unsigned int) (1 samples, 0.09%)</title><rect x="127.6" y="883.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="130.6" y="894.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (4 samples, 0.37%)</title><rect x="128.7" y="915.0" width="4.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="131.7" y="926.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.18%)</title><rect x="128.7" y="899.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="131.7" y="910.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (2 samples, 0.18%)</title><rect x="128.7" y="883.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="131.7" y="894.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.18%)</title><rect x="130.8" y="899.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="133.8" y="910.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.18%)</title><rect x="130.8" y="883.0" width="2.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="133.8" y="894.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.18%)</title><rect x="130.8" y="867.0" width="2.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="133.8" y="878.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (2 samples, 0.18%)</title><rect x="130.8" y="851.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="133.8" y="862.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.18%)</title><rect x="130.8" y="835.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="133.8" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.18%)</title><rect x="130.8" y="819.0" width="2.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="133.8" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.18%)</title><rect x="130.8" y="803.0" width="2.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="133.8" y="814.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.09%)</title><rect x="131.9" y="787.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="134.9" y="798.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.09%)</title><rect x="131.9" y="771.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="134.9" y="782.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="131.9" y="755.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="134.9" y="766.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.09%)</title><rect x="131.9" y="739.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="134.9" y="750.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="131.9" y="723.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="134.9" y="734.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="131.9" y="707.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="134.9" y="718.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.09%)</title><rect x="133.0" y="915.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="136.0" y="926.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.09%)</title><rect x="133.0" y="899.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="136.0" y="910.0"></text>
</g>
<g>
<title>[GC Thread#3 tid=60390] (6 samples, 0.55%)</title><rect x="134.1" y="995.0" width="6.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="137.1" y="1006.0"></text>
</g>
<g>
<title>start_thread (6 samples, 0.55%)</title><rect x="134.1" y="979.0" width="6.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="137.1" y="990.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 0.55%)</title><rect x="134.1" y="963.0" width="6.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="137.1" y="974.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 0.55%)</title><rect x="134.1" y="947.0" width="6.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="137.1" y="958.0"></text>
</g>
<g>
<title>GangWorker::loop() (6 samples, 0.55%)</title><rect x="134.1" y="931.0" width="6.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="137.1" y="942.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (6 samples, 0.55%)</title><rect x="134.1" y="915.0" width="6.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="137.1" y="926.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.46%)</title><rect x="134.1" y="899.0" width="5.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="137.1" y="910.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (5 samples, 0.46%)</title><rect x="134.1" y="883.0" width="5.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="137.1" y="894.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.37%)</title><rect x="135.2" y="867.0" width="4.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="138.2" y="878.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (1 samples, 0.09%)</title><rect x="137.4" y="851.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="140.4" y="862.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.09%)</title><rect x="138.5" y="851.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="141.5" y="862.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.09%)</title><rect x="139.5" y="899.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="142.5" y="910.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.09%)</title><rect x="139.5" y="883.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="142.5" y="894.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.09%)</title><rect x="139.5" y="867.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="142.5" y="878.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (1 samples, 0.09%)</title><rect x="139.5" y="851.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="142.5" y="862.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.09%)</title><rect x="139.5" y="835.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="142.5" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.09%)</title><rect x="139.5" y="819.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="142.5" y="830.0"></text>
</g>
<g>
<title>[JMX server connection timeout 27 tid=60398] (2 samples, 0.18%)</title><rect x="140.6" y="995.0" width="2.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="143.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.18%)</title><rect x="140.6" y="979.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="143.6" y="990.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (2 samples, 0.18%)</title><rect x="140.6" y="963.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="143.6" y="974.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (1 samples, 0.09%)</title><rect x="141.7" y="947.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="144.7" y="958.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/util/ClassLogger.trace (1 samples, 0.09%)</title><rect x="141.7" y="931.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.7" y="942.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.log (1 samples, 0.09%)</title><rect x="141.7" y="915.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="144.7" y="926.0"></text>
</g>
<g>
<title>java/util/logging/Logger.log (1 samples, 0.09%)</title><rect x="141.7" y="899.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="144.7" y="910.0"></text>
</g>
<g>
<title>java/util/logging/Logger.isLoggable (1 samples, 0.09%)</title><rect x="141.7" y="883.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="144.7" y="894.0"></text>
</g>
<g>
<title>java/util/logging/Level.intValue (1 samples, 0.09%)</title><rect x="141.7" y="867.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="144.7" y="878.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=60315] (70 samples, 6.46%)</title><rect x="142.8" y="995.0" width="76.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="145.8" y="1006.0">[NIO Sel..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (70 samples, 6.46%)</title><rect x="142.8" y="979.0" width="76.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="145.8" y="990.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (21 samples, 1.94%)</title><rect x="143.9" y="963.0" width="22.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="146.9" y="974.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.09%)</title><rect x="143.9" y="947.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.9" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.09%)</title><rect x="143.9" y="931.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="146.9" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (20 samples, 1.85%)</title><rect x="145.0" y="947.0" width="21.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.0" y="958.0">o..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.09%)</title><rect x="145.0" y="931.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="148.0" y="942.0"></text>
</g>
<g>
<title>epoll_wait (19 samples, 1.75%)</title><rect x="146.1" y="931.0" width="20.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="149.1" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 1.38%)</title><rect x="150.4" y="915.0" width="16.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="153.4" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 1.38%)</title><rect x="150.4" y="899.0" width="16.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="153.4" y="910.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (14 samples, 1.29%)</title><rect x="151.5" y="883.0" width="15.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="154.5" y="894.0"></text>
</g>
<g>
<title>do_epoll_wait (14 samples, 1.29%)</title><rect x="151.5" y="867.0" width="15.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="154.5" y="878.0"></text>
</g>
<g>
<title>ep_poll (14 samples, 1.29%)</title><rect x="151.5" y="851.0" width="15.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="154.5" y="862.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (8 samples, 0.74%)</title><rect x="152.6" y="835.0" width="8.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="155.6" y="846.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 0.65%)</title><rect x="152.6" y="819.0" width="7.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="155.6" y="830.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.09%)</title><rect x="152.6" y="803.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="155.6" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (6 samples, 0.55%)</title><rect x="153.7" y="803.0" width="6.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="156.7" y="814.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.46%)</title><rect x="154.8" y="787.0" width="5.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="157.8" y="798.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.18%)</title><rect x="157.0" y="771.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="160.0" y="782.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.09%)</title><rect x="159.1" y="771.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="162.1" y="782.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.09%)</title><rect x="160.2" y="819.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="163.2" y="830.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.09%)</title><rect x="161.3" y="835.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="164.3" y="846.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.09%)</title><rect x="162.4" y="835.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="165.4" y="846.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (3 samples, 0.28%)</title><rect x="163.5" y="835.0" width="3.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="166.5" y="846.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.09%)</title><rect x="163.5" y="819.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="166.5" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.18%)</title><rect x="164.6" y="819.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="167.6" y="830.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.09%)</title><rect x="165.7" y="803.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="168.7" y="814.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.09%)</title><rect x="165.7" y="787.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="168.7" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (48 samples, 4.43%)</title><rect x="166.8" y="963.0" width="52.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="169.8" y="974.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (48 samples, 4.43%)</title><rect x="166.8" y="947.0" width="52.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="169.8" y="958.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (36 samples, 3.32%)</title><rect x="166.8" y="931.0" width="39.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="169.8" y="942.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (23 samples, 2.12%)</title><rect x="168.9" y="915.0" width="25.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="171.9" y="926.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (23 samples, 2.12%)</title><rect x="168.9" y="899.0" width="25.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="171.9" y="910.0">o..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (21 samples, 1.94%)</title><rect x="168.9" y="883.0" width="22.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="171.9" y="894.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.28%)</title><rect x="168.9" y="867.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="171.9" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.28%)</title><rect x="168.9" y="851.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="171.9" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.18%)</title><rect x="168.9" y="835.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="171.9" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.18%)</title><rect x="168.9" y="819.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="171.9" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="170.0" y="803.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="173.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.09%)</title><rect x="171.1" y="835.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="174.1" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.put (18 samples, 1.66%)</title><rect x="172.2" y="867.0" width="19.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.2" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.09%)</title><rect x="173.3" y="851.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="176.3" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.09%)</title><rect x="173.3" y="835.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="176.3" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$105/1788683425.get$Lambda (1 samples, 0.09%)</title><rect x="173.3" y="819.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="176.3" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$105/1788683425.&lt;init&gt; (1 samples, 0.09%)</title><rect x="173.3" y="803.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="176.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.09%)</title><rect x="173.3" y="787.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="176.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 1.38%)</title><rect x="174.4" y="851.0" width="16.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="177.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (14 samples, 1.29%)</title><rect x="175.5" y="835.0" width="15.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.18%)</title><rect x="175.5" y="819.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="178.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.09%)</title><rect x="176.5" y="803.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="179.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.09%)</title><rect x="176.5" y="787.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="179.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.09%)</title><rect x="176.5" y="771.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="179.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 1.11%)</title><rect x="177.6" y="819.0" width="13.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="180.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 1.11%)</title><rect x="177.6" y="803.0" width="13.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="180.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 1.11%)</title><rect x="177.6" y="787.0" width="13.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="180.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 1.11%)</title><rect x="177.6" y="771.0" width="13.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="180.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 1.11%)</title><rect x="177.6" y="755.0" width="13.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="180.6" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.09%)</title><rect x="177.6" y="739.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="180.6" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.09%)</title><rect x="177.6" y="723.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="180.6" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.83%)</title><rect x="178.7" y="739.0" width="9.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="181.7" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.74%)</title><rect x="179.8" y="723.0" width="8.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="182.8" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.74%)</title><rect x="179.8" y="707.0" width="8.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="182.8" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.74%)</title><rect x="179.8" y="691.0" width="8.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="182.8" y="702.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.74%)</title><rect x="179.8" y="675.0" width="8.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="182.8" y="686.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.65%)</title><rect x="179.8" y="659.0" width="7.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="182.8" y="670.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.09%)</title><rect x="179.8" y="643.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="182.8" y="654.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.09%)</title><rect x="180.9" y="643.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="183.9" y="654.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.46%)</title><rect x="182.0" y="643.0" width="5.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="185.0" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.46%)</title><rect x="182.0" y="627.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="185.0" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.46%)</title><rect x="182.0" y="611.0" width="5.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="185.0" y="622.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.09%)</title><rect x="187.4" y="659.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="190.4" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.18%)</title><rect x="188.5" y="739.0" width="2.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="191.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.09%)</title><rect x="190.7" y="851.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.09%)</title><rect x="191.8" y="883.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="194.8" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.09%)</title><rect x="192.9" y="883.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.9" y="894.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.09%)</title><rect x="192.9" y="867.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="195.9" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.09%)</title><rect x="192.9" y="851.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="195.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.55%)</title><rect x="194.0" y="915.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="197.0" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.37%)</title><rect x="194.0" y="899.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="197.0" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.09%)</title><rect x="197.2" y="883.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="200.2" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.09%)</title><rect x="197.2" y="867.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="200.2" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="198.3" y="899.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="201.3" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="198.3" y="883.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="201.3" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.09%)</title><rect x="199.4" y="899.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="202.4" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.09%)</title><rect x="200.5" y="915.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="203.5" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="200.5" y="899.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="203.5" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.18%)</title><rect x="201.6" y="915.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="204.6" y="926.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.09%)</title><rect x="201.6" y="899.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="204.6" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="202.7" y="899.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="205.7" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.18%)</title><rect x="203.8" y="915.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="206.8" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.18%)</title><rect x="203.8" y="899.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="206.8" y="910.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.18%)</title><rect x="203.8" y="883.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="206.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="203.8" y="867.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="206.8" y="878.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.09%)</title><rect x="203.8" y="851.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="206.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (1 samples, 0.09%)</title><rect x="204.9" y="867.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="207.9" y="878.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (1 samples, 0.09%)</title><rect x="204.9" y="851.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="207.9" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (12 samples, 1.11%)</title><rect x="205.9" y="931.0" width="13.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="208.9" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (12 samples, 1.11%)</title><rect x="205.9" y="915.0" width="13.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="208.9" y="926.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.28%)</title><rect x="205.9" y="899.0" width="3.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="208.9" y="910.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.09%)</title><rect x="205.9" y="883.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="208.9" y="894.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.09%)</title><rect x="207.0" y="883.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="210.0" y="894.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.09%)</title><rect x="208.1" y="883.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="211.1" y="894.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.09%)</title><rect x="208.1" y="867.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="211.1" y="878.0"></text>
</g>
<g>
<title>recv (9 samples, 0.83%)</title><rect x="209.2" y="899.0" width="9.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="212.2" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.55%)</title><rect x="212.5" y="883.0" width="6.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="215.5" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.55%)</title><rect x="212.5" y="867.0" width="6.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="215.5" y="878.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (6 samples, 0.55%)</title><rect x="212.5" y="851.0" width="6.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="215.5" y="862.0"></text>
</g>
<g>
<title>__sys_recvfrom (6 samples, 0.55%)</title><rect x="212.5" y="835.0" width="6.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="215.5" y="846.0"></text>
</g>
<g>
<title>sock_recvmsg (5 samples, 0.46%)</title><rect x="212.5" y="819.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="215.5" y="830.0"></text>
</g>
<g>
<title>inet6_recvmsg (5 samples, 0.46%)</title><rect x="212.5" y="803.0" width="5.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="215.5" y="814.0"></text>
</g>
<g>
<title>tcp_recvmsg (5 samples, 0.46%)</title><rect x="212.5" y="787.0" width="5.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="215.5" y="798.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.18%)</title><rect x="213.6" y="771.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="216.6" y="782.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.18%)</title><rect x="213.6" y="755.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="216.6" y="766.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.18%)</title><rect x="215.7" y="771.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="218.7" y="782.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.18%)</title><rect x="215.7" y="755.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="218.7" y="766.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.09%)</title><rect x="217.9" y="819.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="220.9" y="830.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.09%)</title><rect x="217.9" y="803.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="220.9" y="814.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.09%)</title><rect x="217.9" y="787.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="220.9" y="798.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.09%)</title><rect x="217.9" y="771.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="220.9" y="782.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=60316] (144 samples, 13.28%)</title><rect x="219.0" y="995.0" width="156.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="222.0" y="1006.0">[NIO Selector #1 tid..</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.18%)</title><rect x="219.0" y="979.0" width="2.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="222.0" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.18%)</title><rect x="219.0" y="963.0" width="2.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="222.0" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="220.1" y="947.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="223.1" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="220.1" y="931.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="223.1" y="942.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (142 samples, 13.10%)</title><rect x="221.2" y="979.0" width="154.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="224.2" y="990.0">one/nio/server/Selec..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.09%)</title><rect x="222.3" y="963.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="225.3" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.09%)</title><rect x="222.3" y="947.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="225.3" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (30 samples, 2.77%)</title><rect x="223.4" y="963.0" width="32.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="226.4" y="974.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (29 samples, 2.68%)</title><rect x="224.4" y="947.0" width="31.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="227.4" y="958.0">on..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.09%)</title><rect x="224.4" y="931.0" width="1.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="227.4" y="942.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.09%)</title><rect x="225.5" y="931.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="228.5" y="942.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.18%)</title><rect x="226.6" y="931.0" width="2.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="229.6" y="942.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.09%)</title><rect x="227.7" y="915.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="230.7" y="926.0"></text>
</g>
<g>
<title>epoll_wait (25 samples, 2.31%)</title><rect x="228.8" y="931.0" width="27.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="231.8" y="942.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 2.03%)</title><rect x="232.1" y="915.0" width="23.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="235.1" y="926.0">e..</text>
</g>
<g>
<title>do_syscall_64 (22 samples, 2.03%)</title><rect x="232.1" y="899.0" width="23.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="235.1" y="910.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (17 samples, 1.57%)</title><rect x="236.4" y="883.0" width="18.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="239.4" y="894.0"></text>
</g>
<g>
<title>do_epoll_wait (17 samples, 1.57%)</title><rect x="236.4" y="867.0" width="18.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="239.4" y="878.0"></text>
</g>
<g>
<title>ep_poll (17 samples, 1.57%)</title><rect x="236.4" y="851.0" width="18.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="239.4" y="862.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (11 samples, 1.01%)</title><rect x="240.8" y="835.0" width="11.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="243.8" y="846.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.09%)</title><rect x="244.0" y="819.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="247.0" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (6 samples, 0.55%)</title><rect x="245.1" y="819.0" width="6.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="248.1" y="830.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (5 samples, 0.46%)</title><rect x="246.2" y="803.0" width="5.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="249.2" y="814.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.28%)</title><rect x="248.4" y="787.0" width="3.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="251.4" y="798.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.09%)</title><rect x="250.6" y="771.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="253.6" y="782.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.09%)</title><rect x="251.7" y="819.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="254.7" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.18%)</title><rect x="252.7" y="835.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="255.7" y="846.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.18%)</title><rect x="252.7" y="819.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="255.7" y="830.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.09%)</title><rect x="254.9" y="883.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="257.9" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (110 samples, 10.15%)</title><rect x="256.0" y="963.0" width="119.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="259.0" y="974.0">one/nio/net/Ses..</text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.09%)</title><rect x="256.0" y="947.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="259.0" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (109 samples, 10.06%)</title><rect x="257.1" y="947.0" width="118.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="260.1" y="958.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (79 samples, 7.29%)</title><rect x="257.1" y="931.0" width="86.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="260.1" y="942.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (2 samples, 0.18%)</title><rect x="258.2" y="915.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="261.2" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (53 samples, 4.89%)</title><rect x="260.4" y="915.0" width="57.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.4" y="926.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (53 samples, 4.89%)</title><rect x="260.4" y="899.0" width="57.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="263.4" y="910.0">one/ni..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (49 samples, 4.52%)</title><rect x="260.4" y="883.0" width="53.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="263.4" y="894.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (6 samples, 0.55%)</title><rect x="260.4" y="867.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="263.4" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.55%)</title><rect x="260.4" y="851.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="263.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.09%)</title><rect x="261.5" y="835.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="264.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.09%)</title><rect x="261.5" y="819.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="264.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.09%)</title><rect x="261.5" y="803.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="264.5" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.37%)</title><rect x="262.5" y="835.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="265.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.28%)</title><rect x="263.6" y="819.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="266.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.28%)</title><rect x="263.6" y="803.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="266.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.28%)</title><rect x="263.6" y="787.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="266.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.put (43 samples, 3.97%)</title><rect x="266.9" y="867.0" width="46.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="269.9" y="878.0">ru/m..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.09%)</title><rect x="270.2" y="851.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="273.2" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.09%)</title><rect x="270.2" y="835.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="273.2" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$105/1788683425.get$Lambda (1 samples, 0.09%)</title><rect x="270.2" y="819.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="273.2" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$105/1788683425.&lt;init&gt; (1 samples, 0.09%)</title><rect x="270.2" y="803.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="273.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (39 samples, 3.60%)</title><rect x="271.3" y="851.0" width="42.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="274.3" y="862.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (37 samples, 3.41%)</title><rect x="272.3" y="835.0" width="40.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="275.3" y="846.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.28%)</title><rect x="272.3" y="819.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="275.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.28%)</title><rect x="272.3" y="803.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="275.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.09%)</title><rect x="272.3" y="787.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="275.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.09%)</title><rect x="272.3" y="771.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.09%)</title><rect x="272.3" y="755.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="275.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.09%)</title><rect x="272.3" y="739.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="275.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="272.3" y="723.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="275.3" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.09%)</title><rect x="272.3" y="707.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="275.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.18%)</title><rect x="273.4" y="787.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="276.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.18%)</title><rect x="273.4" y="771.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="276.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.18%)</title><rect x="273.4" y="755.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="276.4" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.18%)</title><rect x="273.4" y="739.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="276.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.18%)</title><rect x="273.4" y="723.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="276.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (34 samples, 3.14%)</title><rect x="275.6" y="819.0" width="37.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="278.6" y="830.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.09%)</title><rect x="275.6" y="803.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="278.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (33 samples, 3.04%)</title><rect x="276.7" y="803.0" width="35.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="279.7" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (33 samples, 3.04%)</title><rect x="276.7" y="787.0" width="35.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="279.7" y="798.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (33 samples, 3.04%)</title><rect x="276.7" y="771.0" width="35.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="279.7" y="782.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (33 samples, 3.04%)</title><rect x="276.7" y="755.0" width="35.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="279.7" y="766.0">jdk..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.09%)</title><rect x="276.7" y="739.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="279.7" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.18%)</title><rect x="277.8" y="739.0" width="2.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="280.8" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.46%)</title><rect x="280.0" y="739.0" width="5.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="283.0" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.09%)</title><rect x="281.1" y="723.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="284.1" y="734.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.09%)</title><rect x="282.1" y="723.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="285.1" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.18%)</title><rect x="283.2" y="723.0" width="2.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="286.2" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (24 samples, 2.21%)</title><rect x="285.4" y="739.0" width="26.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="288.4" y="750.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 2.03%)</title><rect x="287.6" y="723.0" width="23.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="290.6" y="734.0">e..</text>
</g>
<g>
<title>do_syscall_64 (22 samples, 2.03%)</title><rect x="287.6" y="707.0" width="23.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="290.6" y="718.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (20 samples, 1.85%)</title><rect x="289.8" y="691.0" width="21.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="292.8" y="702.0">_..</text>
</g>
<g>
<title>do_futex (19 samples, 1.75%)</title><rect x="290.8" y="675.0" width="20.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="293.8" y="686.0"></text>
</g>
<g>
<title>futex_wake (18 samples, 1.66%)</title><rect x="291.9" y="659.0" width="19.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="294.9" y="670.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.09%)</title><rect x="293.0" y="643.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="296.0" y="654.0"></text>
</g>
<g>
<title>wake_up_q (16 samples, 1.48%)</title><rect x="294.1" y="643.0" width="17.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="297.1" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (16 samples, 1.48%)</title><rect x="294.1" y="627.0" width="17.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="297.1" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (16 samples, 1.48%)</title><rect x="294.1" y="611.0" width="17.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="297.1" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="311.5" y="739.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="314.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="312.6" y="835.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="315.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.37%)</title><rect x="313.7" y="883.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="316.7" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.28%)</title><rect x="314.8" y="867.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="317.8" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.18%)</title><rect x="314.8" y="851.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="317.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.09%)</title><rect x="315.9" y="835.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="318.9" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.09%)</title><rect x="317.0" y="851.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="320.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.09%)</title><rect x="317.0" y="835.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="320.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (12 samples, 1.11%)</title><rect x="318.1" y="915.0" width="13.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="321.1" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.46%)</title><rect x="318.1" y="899.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="321.1" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.28%)</title><rect x="320.2" y="883.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="323.2" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.18%)</title><rect x="320.2" y="867.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="323.2" y="878.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (2 samples, 0.18%)</title><rect x="320.2" y="851.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="323.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="322.4" y="867.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="325.4" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.37%)</title><rect x="323.5" y="899.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="326.5" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.37%)</title><rect x="323.5" y="883.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="326.5" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.28%)</title><rect x="327.9" y="899.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="330.9" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.18%)</title><rect x="331.1" y="915.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.1" y="926.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.18%)</title><rect x="331.1" y="899.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="334.1" y="910.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.18%)</title><rect x="331.1" y="883.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="334.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.18%)</title><rect x="331.1" y="867.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="334.1" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.18%)</title><rect x="331.1" y="851.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="334.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.09%)</title><rect x="333.3" y="915.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="336.3" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.74%)</title><rect x="334.4" y="915.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="337.4" y="926.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.65%)</title><rect x="334.4" y="899.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="337.4" y="910.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.09%)</title><rect x="336.6" y="883.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="339.6" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.18%)</title><rect x="337.7" y="883.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="340.7" y="894.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.18%)</title><rect x="337.7" y="867.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="340.7" y="878.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.18%)</title><rect x="337.7" y="851.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="340.7" y="862.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.18%)</title><rect x="337.7" y="835.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="340.7" y="846.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (2 samples, 0.18%)</title><rect x="337.7" y="819.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="340.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.18%)</title><rect x="337.7" y="803.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="340.7" y="814.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.18%)</title><rect x="339.8" y="883.0" width="2.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="342.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.09%)</title><rect x="342.0" y="899.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="345.0" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.09%)</title><rect x="342.0" y="883.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="345.0" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="342.0" y="867.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="345.0" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (30 samples, 2.77%)</title><rect x="343.1" y="931.0" width="32.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="346.1" y="942.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (30 samples, 2.77%)</title><rect x="343.1" y="915.0" width="32.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="346.1" y="926.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.46%)</title><rect x="345.3" y="899.0" width="5.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="348.3" y="910.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.09%)</title><rect x="345.3" y="883.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="348.3" y="894.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.09%)</title><rect x="346.4" y="883.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="349.4" y="894.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.28%)</title><rect x="347.5" y="883.0" width="3.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="350.5" y="894.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.18%)</title><rect x="348.5" y="867.0" width="2.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="351.5" y="878.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.09%)</title><rect x="349.6" y="851.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="352.6" y="862.0"></text>
</g>
<g>
<title>recv (23 samples, 2.12%)</title><rect x="350.7" y="899.0" width="25.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="353.7" y="910.0">r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 1.75%)</title><rect x="355.1" y="883.0" width="20.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="358.1" y="894.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.09%)</title><rect x="355.1" y="867.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="358.1" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 1.66%)</title><rect x="356.2" y="867.0" width="19.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="359.2" y="878.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (16 samples, 1.48%)</title><rect x="358.3" y="851.0" width="17.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="361.3" y="862.0"></text>
</g>
<g>
<title>__sys_recvfrom (15 samples, 1.38%)</title><rect x="358.3" y="835.0" width="16.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="361.3" y="846.0"></text>
</g>
<g>
<title>sock_recvmsg (11 samples, 1.01%)</title><rect x="360.5" y="819.0" width="12.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="363.5" y="830.0"></text>
</g>
<g>
<title>inet6_recvmsg (9 samples, 0.83%)</title><rect x="361.6" y="803.0" width="9.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="364.6" y="814.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.09%)</title><rect x="361.6" y="787.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="364.6" y="798.0"></text>
</g>
<g>
<title>tcp_recvmsg (8 samples, 0.74%)</title><rect x="362.7" y="787.0" width="8.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="365.7" y="798.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.28%)</title><rect x="362.7" y="771.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="365.7" y="782.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.28%)</title><rect x="362.7" y="755.0" width="3.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="365.7" y="766.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.18%)</title><rect x="363.8" y="739.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="366.8" y="750.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.09%)</title><rect x="363.8" y="723.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="366.8" y="734.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.09%)</title><rect x="363.8" y="707.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="366.8" y="718.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.09%)</title><rect x="364.9" y="723.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="367.9" y="734.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.09%)</title><rect x="364.9" y="707.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="367.9" y="718.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.18%)</title><rect x="366.0" y="771.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="369.0" y="782.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.09%)</title><rect x="367.0" y="755.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="370.0" y="766.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.28%)</title><rect x="368.1" y="771.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="371.1" y="782.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.09%)</title><rect x="369.2" y="755.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="372.2" y="766.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.09%)</title><rect x="370.3" y="755.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="373.3" y="766.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.09%)</title><rect x="370.3" y="739.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="373.3" y="750.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.09%)</title><rect x="371.4" y="803.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="374.4" y="814.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.09%)</title><rect x="371.4" y="787.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="374.4" y="798.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.09%)</title><rect x="371.4" y="771.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="374.4" y="782.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.18%)</title><rect x="372.5" y="819.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="375.5" y="830.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.18%)</title><rect x="372.5" y="803.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="375.5" y="814.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.18%)</title><rect x="372.5" y="787.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="375.5" y="798.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.18%)</title><rect x="372.5" y="771.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="375.5" y="782.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.09%)</title><rect x="374.7" y="835.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="377.7" y="846.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=60317] (85 samples, 7.84%)</title><rect x="375.8" y="995.0" width="92.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="378.8" y="1006.0">[NIO Select..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (85 samples, 7.84%)</title><rect x="375.8" y="979.0" width="92.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="378.8" y="990.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (23 samples, 2.12%)</title><rect x="375.8" y="963.0" width="25.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="378.8" y="974.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (21 samples, 1.94%)</title><rect x="377.9" y="947.0" width="22.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="380.9" y="958.0">o..</text>
</g>
<g>
<title>clock_gettime (2 samples, 0.18%)</title><rect x="377.9" y="931.0" width="2.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="380.9" y="942.0"></text>
</g>
<g>
<title>epoll_wait (19 samples, 1.75%)</title><rect x="380.1" y="931.0" width="20.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="383.1" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 1.57%)</title><rect x="382.3" y="915.0" width="18.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="385.3" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 1.57%)</title><rect x="382.3" y="899.0" width="18.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="385.3" y="910.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (16 samples, 1.48%)</title><rect x="383.4" y="883.0" width="17.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="386.4" y="894.0"></text>
</g>
<g>
<title>do_epoll_wait (16 samples, 1.48%)</title><rect x="383.4" y="867.0" width="17.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="386.4" y="878.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.09%)</title><rect x="383.4" y="851.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="386.4" y="862.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.09%)</title><rect x="383.4" y="835.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="386.4" y="846.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.09%)</title><rect x="383.4" y="819.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="386.4" y="830.0"></text>
</g>
<g>
<title>ep_poll (14 samples, 1.29%)</title><rect x="384.5" y="851.0" width="15.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="387.5" y="862.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (8 samples, 0.74%)</title><rect x="387.7" y="835.0" width="8.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="390.7" y="846.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 0.65%)</title><rect x="388.8" y="819.0" width="7.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="391.8" y="830.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.09%)</title><rect x="391.0" y="803.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="394.0" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (3 samples, 0.28%)</title><rect x="392.1" y="803.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="395.1" y="814.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.18%)</title><rect x="392.1" y="787.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="395.1" y="798.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.09%)</title><rect x="393.2" y="771.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="396.2" y="782.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.09%)</title><rect x="394.3" y="787.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="397.3" y="798.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.09%)</title><rect x="395.4" y="803.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="398.4" y="814.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.09%)</title><rect x="396.4" y="835.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="399.4" y="846.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.18%)</title><rect x="397.5" y="835.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="400.5" y="846.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.18%)</title><rect x="397.5" y="819.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="400.5" y="830.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.18%)</title><rect x="397.5" y="803.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="400.5" y="814.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.09%)</title><rect x="398.6" y="787.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="401.6" y="798.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.09%)</title><rect x="398.6" y="771.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="401.6" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (1 samples, 0.09%)</title><rect x="399.7" y="851.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="402.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (62 samples, 5.72%)</title><rect x="400.8" y="963.0" width="67.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="403.8" y="974.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (61 samples, 5.63%)</title><rect x="400.8" y="947.0" width="66.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="403.8" y="958.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (47 samples, 4.34%)</title><rect x="401.9" y="931.0" width="51.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="404.9" y="942.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (33 samples, 3.04%)</title><rect x="401.9" y="915.0" width="35.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="404.9" y="926.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (33 samples, 3.04%)</title><rect x="401.9" y="899.0" width="35.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="404.9" y="910.0">one..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (29 samples, 2.68%)</title><rect x="401.9" y="883.0" width="31.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="404.9" y="894.0">Re..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.09%)</title><rect x="401.9" y="867.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="404.9" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.09%)</title><rect x="401.9" y="851.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="404.9" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.09%)</title><rect x="401.9" y="835.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="404.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.put (28 samples, 2.58%)</title><rect x="403.0" y="867.0" width="30.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="406.0" y="878.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.18%)</title><rect x="403.0" y="851.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="406.0" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.18%)</title><rect x="403.0" y="835.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="406.0" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$105/1788683425.get$Lambda (2 samples, 0.18%)</title><rect x="403.0" y="819.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="406.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$105/1788683425.&lt;init&gt; (2 samples, 0.18%)</title><rect x="403.0" y="803.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="406.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.09%)</title><rect x="404.1" y="787.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="407.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (26 samples, 2.40%)</title><rect x="405.1" y="851.0" width="28.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="408.1" y="862.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (26 samples, 2.40%)</title><rect x="405.1" y="835.0" width="28.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="408.1" y="846.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.18%)</title><rect x="405.1" y="819.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="408.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.09%)</title><rect x="406.2" y="803.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="409.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.09%)</title><rect x="406.2" y="787.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="409.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.09%)</title><rect x="406.2" y="771.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="409.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (24 samples, 2.21%)</title><rect x="407.3" y="819.0" width="26.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="410.3" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (24 samples, 2.21%)</title><rect x="407.3" y="803.0" width="26.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="410.3" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (24 samples, 2.21%)</title><rect x="407.3" y="787.0" width="26.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="410.3" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (24 samples, 2.21%)</title><rect x="407.3" y="771.0" width="26.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="410.3" y="782.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (24 samples, 2.21%)</title><rect x="407.3" y="755.0" width="26.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="410.3" y="766.0">j..</text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.09%)</title><rect x="407.3" y="739.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="410.3" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.28%)</title><rect x="408.4" y="739.0" width="3.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="411.4" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.09%)</title><rect x="409.5" y="723.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="412.5" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="410.6" y="723.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="413.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="411.7" y="739.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="414.7" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.09%)</title><rect x="411.7" y="723.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="414.7" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (19 samples, 1.75%)</title><rect x="412.8" y="739.0" width="20.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="415.8" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 1.38%)</title><rect x="417.1" y="723.0" width="16.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="420.1" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 1.38%)</title><rect x="417.1" y="707.0" width="16.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="420.1" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 1.38%)</title><rect x="417.1" y="691.0" width="16.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="420.1" y="702.0"></text>
</g>
<g>
<title>do_futex (15 samples, 1.38%)</title><rect x="417.1" y="675.0" width="16.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="420.1" y="686.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 1.29%)</title><rect x="418.2" y="659.0" width="15.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="421.2" y="670.0"></text>
</g>
<g>
<title>wake_up_q (14 samples, 1.29%)</title><rect x="418.2" y="643.0" width="15.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="421.2" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.09%)</title><rect x="418.2" y="627.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="421.2" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 1.20%)</title><rect x="419.3" y="627.0" width="14.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="422.3" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 1.20%)</title><rect x="419.3" y="611.0" width="14.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="422.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.18%)</title><rect x="433.5" y="883.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="436.5" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.18%)</title><rect x="433.5" y="867.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="436.5" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.09%)</title><rect x="434.5" y="851.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="437.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.09%)</title><rect x="434.5" y="835.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="437.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.18%)</title><rect x="435.6" y="883.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="438.6" y="894.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.18%)</title><rect x="435.6" y="867.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="438.6" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.18%)</title><rect x="435.6" y="851.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="438.6" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.65%)</title><rect x="437.8" y="915.0" width="7.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="440.8" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.37%)</title><rect x="437.8" y="899.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="440.8" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.18%)</title><rect x="442.2" y="899.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="445.2" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.18%)</title><rect x="442.2" y="883.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="445.2" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.09%)</title><rect x="444.3" y="899.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="447.3" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.09%)</title><rect x="445.4" y="915.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="448.4" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (1 samples, 0.09%)</title><rect x="445.4" y="899.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="448.4" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 0.18%)</title><rect x="446.5" y="915.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="449.5" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="447.6" y="899.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="450.6" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.18%)</title><rect x="448.7" y="915.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="451.7" y="926.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.09%)</title><rect x="448.7" y="899.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="451.7" y="910.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.09%)</title><rect x="448.7" y="883.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="451.7" y="894.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.09%)</title><rect x="449.8" y="899.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="452.8" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.09%)</title><rect x="449.8" y="883.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="452.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="449.8" y="867.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="452.8" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.18%)</title><rect x="450.9" y="915.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="453.9" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="452.0" y="899.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="455.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (13 samples, 1.20%)</title><rect x="453.0" y="931.0" width="14.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="456.0" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (13 samples, 1.20%)</title><rect x="453.0" y="915.0" width="14.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="456.0" y="926.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.28%)</title><rect x="455.2" y="899.0" width="3.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="458.2" y="910.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.09%)</title><rect x="455.2" y="883.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="458.2" y="894.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.18%)</title><rect x="456.3" y="883.0" width="2.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="459.3" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.18%)</title><rect x="456.3" y="867.0" width="2.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="459.3" y="878.0"></text>
</g>
<g>
<title>recv (8 samples, 0.74%)</title><rect x="458.5" y="899.0" width="8.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="461.5" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.74%)</title><rect x="458.5" y="883.0" width="8.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="461.5" y="894.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.09%)</title><rect x="458.5" y="867.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="461.5" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.65%)</title><rect x="459.6" y="867.0" width="7.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="462.6" y="878.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (7 samples, 0.65%)</title><rect x="459.6" y="851.0" width="7.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="462.6" y="862.0"></text>
</g>
<g>
<title>__sys_recvfrom (6 samples, 0.55%)</title><rect x="459.6" y="835.0" width="6.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="462.6" y="846.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.09%)</title><rect x="459.6" y="819.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="462.6" y="830.0"></text>
</g>
<g>
<title>sock_recvmsg (5 samples, 0.46%)</title><rect x="460.7" y="819.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="463.7" y="830.0"></text>
</g>
<g>
<title>inet6_recvmsg (5 samples, 0.46%)</title><rect x="460.7" y="803.0" width="5.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="463.7" y="814.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.09%)</title><rect x="460.7" y="787.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="463.7" y="798.0"></text>
</g>
<g>
<title>tcp_recvmsg (4 samples, 0.37%)</title><rect x="461.8" y="787.0" width="4.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="464.8" y="798.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.09%)</title><rect x="461.8" y="771.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="464.8" y="782.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.09%)</title><rect x="461.8" y="755.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="464.8" y="766.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.09%)</title><rect x="461.8" y="739.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="464.8" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.09%)</title><rect x="462.8" y="771.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="465.8" y="782.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.09%)</title><rect x="463.9" y="771.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="466.9" y="782.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.09%)</title><rect x="465.0" y="771.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="468.0" y="782.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.09%)</title><rect x="465.0" y="755.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="468.0" y="766.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.09%)</title><rect x="466.1" y="835.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="469.1" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.09%)</title><rect x="467.2" y="947.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="470.2" y="958.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.09%)</title><rect x="467.2" y="931.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="470.2" y="942.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.09%)</title><rect x="467.2" y="915.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="470.2" y="926.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=60318] (47 samples, 4.34%)</title><rect x="468.3" y="995.0" width="51.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="471.3" y="1006.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (47 samples, 4.34%)</title><rect x="468.3" y="979.0" width="51.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="471.3" y="990.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.09%)</title><rect x="468.3" y="963.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="471.3" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.09%)</title><rect x="468.3" y="947.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="471.3" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (10 samples, 0.92%)</title><rect x="469.4" y="963.0" width="10.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="472.4" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (10 samples, 0.92%)</title><rect x="469.4" y="947.0" width="10.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="472.4" y="958.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.09%)</title><rect x="470.5" y="931.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="473.5" y="942.0"></text>
</g>
<g>
<title>epoll_wait (8 samples, 0.74%)</title><rect x="471.5" y="931.0" width="8.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="474.5" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.55%)</title><rect x="473.7" y="915.0" width="6.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="476.7" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.55%)</title><rect x="473.7" y="899.0" width="6.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="476.7" y="910.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (5 samples, 0.46%)</title><rect x="474.8" y="883.0" width="5.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="477.8" y="894.0"></text>
</g>
<g>
<title>do_epoll_wait (5 samples, 0.46%)</title><rect x="474.8" y="867.0" width="5.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="477.8" y="878.0"></text>
</g>
<g>
<title>ep_poll (4 samples, 0.37%)</title><rect x="474.8" y="851.0" width="4.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="477.8" y="862.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (2 samples, 0.18%)</title><rect x="475.9" y="835.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="478.9" y="846.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.18%)</title><rect x="475.9" y="819.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="478.9" y="830.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (1 samples, 0.09%)</title><rect x="475.9" y="803.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="478.9" y="814.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.09%)</title><rect x="475.9" y="787.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="478.9" y="798.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.09%)</title><rect x="475.9" y="771.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="478.9" y="782.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.09%)</title><rect x="477.0" y="803.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="480.0" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.09%)</title><rect x="478.1" y="835.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="481.1" y="846.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.09%)</title><rect x="478.1" y="819.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="481.1" y="830.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.09%)</title><rect x="478.1" y="803.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="481.1" y="814.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.09%)</title><rect x="478.1" y="787.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="481.1" y="798.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.09%)</title><rect x="479.2" y="851.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="482.2" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (36 samples, 3.32%)</title><rect x="480.3" y="963.0" width="39.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="483.3" y="974.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (34 samples, 3.14%)</title><rect x="481.3" y="947.0" width="37.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="484.3" y="958.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (27 samples, 2.49%)</title><rect x="481.3" y="931.0" width="29.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="484.3" y="942.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (23 samples, 2.12%)</title><rect x="482.4" y="915.0" width="25.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.4" y="926.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (23 samples, 2.12%)</title><rect x="482.4" y="899.0" width="25.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="485.4" y="910.0">o..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (22 samples, 2.03%)</title><rect x="482.4" y="883.0" width="24.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="485.4" y="894.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.09%)</title><rect x="482.4" y="867.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.4" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.09%)</title><rect x="482.4" y="851.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="485.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.09%)</title><rect x="482.4" y="835.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="485.4" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.put (21 samples, 1.94%)</title><rect x="483.5" y="867.0" width="22.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="486.5" y="878.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (21 samples, 1.94%)</title><rect x="483.5" y="851.0" width="22.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="486.5" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (21 samples, 1.94%)</title><rect x="483.5" y="835.0" width="22.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="486.5" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.18%)</title><rect x="483.5" y="819.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (19 samples, 1.75%)</title><rect x="485.7" y="819.0" width="20.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="488.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (19 samples, 1.75%)</title><rect x="485.7" y="803.0" width="20.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="488.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (19 samples, 1.75%)</title><rect x="485.7" y="787.0" width="20.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="488.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 1.75%)</title><rect x="485.7" y="771.0" width="20.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="488.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (19 samples, 1.75%)</title><rect x="485.7" y="755.0" width="20.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="488.7" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.37%)</title><rect x="485.7" y="739.0" width="4.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="488.7" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.09%)</title><rect x="486.8" y="723.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="489.8" y="734.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.09%)</title><rect x="487.9" y="723.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="490.9" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="489.0" y="723.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="492.0" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (15 samples, 1.38%)</title><rect x="490.1" y="739.0" width="16.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="493.1" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 1.20%)</title><rect x="492.2" y="723.0" width="14.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="495.2" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 1.20%)</title><rect x="492.2" y="707.0" width="14.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="495.2" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 1.11%)</title><rect x="493.3" y="691.0" width="13.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="496.3" y="702.0"></text>
</g>
<g>
<title>do_futex (12 samples, 1.11%)</title><rect x="493.3" y="675.0" width="13.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="496.3" y="686.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 1.11%)</title><rect x="493.3" y="659.0" width="13.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="496.3" y="670.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 1.11%)</title><rect x="493.3" y="643.0" width="13.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="496.3" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 1.11%)</title><rect x="493.3" y="627.0" width="13.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="496.3" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 1.11%)</title><rect x="493.3" y="611.0" width="13.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="496.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.09%)</title><rect x="506.4" y="883.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="509.4" y="894.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.09%)</title><rect x="506.4" y="867.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="509.4" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.09%)</title><rect x="506.4" y="851.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="509.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.18%)</title><rect x="507.5" y="915.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="510.5" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="507.5" y="899.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="510.5" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="507.5" y="883.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="510.5" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.09%)</title><rect x="508.6" y="899.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="511.6" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.09%)</title><rect x="509.6" y="915.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="512.6" y="926.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.09%)</title><rect x="509.6" y="899.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="512.6" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.09%)</title><rect x="509.6" y="883.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="512.6" y="894.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.09%)</title><rect x="509.6" y="867.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="512.6" y="878.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.09%)</title><rect x="509.6" y="851.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="512.6" y="862.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.09%)</title><rect x="509.6" y="835.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="512.6" y="846.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.09%)</title><rect x="509.6" y="819.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="512.6" y="830.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.09%)</title><rect x="509.6" y="803.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="512.6" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (7 samples, 0.65%)</title><rect x="510.7" y="931.0" width="7.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="513.7" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 0.65%)</title><rect x="510.7" y="915.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="513.7" y="926.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.18%)</title><rect x="512.9" y="899.0" width="2.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="515.9" y="910.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.09%)</title><rect x="514.0" y="883.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="517.0" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.09%)</title><rect x="514.0" y="867.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="517.0" y="878.0"></text>
</g>
<g>
<title>recv (3 samples, 0.28%)</title><rect x="515.1" y="899.0" width="3.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="518.1" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.18%)</title><rect x="516.2" y="883.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="519.2" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.18%)</title><rect x="516.2" y="867.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="519.2" y="878.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.18%)</title><rect x="516.2" y="851.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="519.2" y="862.0"></text>
</g>
<g>
<title>__sys_recvfrom (2 samples, 0.18%)</title><rect x="516.2" y="835.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="519.2" y="846.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.18%)</title><rect x="516.2" y="819.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="519.2" y="830.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.18%)</title><rect x="516.2" y="803.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="519.2" y="814.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.18%)</title><rect x="516.2" y="787.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="519.2" y="798.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.18%)</title><rect x="516.2" y="771.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="519.2" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.09%)</title><rect x="518.4" y="947.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="521.4" y="958.0"></text>
</g>
<g>
<title>[RMI TCP Connection(3)-127.0.0.1 tid=60396] (41 samples, 3.78%)</title><rect x="519.4" y="995.0" width="44.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="522.4" y="1006.0">[RMI..</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.18%)</title><rect x="519.4" y="979.0" width="2.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="522.4" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.18%)</title><rect x="519.4" y="963.0" width="2.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="522.4" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.18%)</title><rect x="519.4" y="947.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="522.4" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.18%)</title><rect x="519.4" y="931.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="522.4" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.18%)</title><rect x="519.4" y="915.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="522.4" y="926.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.18%)</title><rect x="519.4" y="899.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="522.4" y="910.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.18%)</title><rect x="519.4" y="883.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="522.4" y="894.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.18%)</title><rect x="519.4" y="867.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="522.4" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.18%)</title><rect x="519.4" y="851.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="522.4" y="862.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.18%)</title><rect x="519.4" y="835.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="522.4" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.run (39 samples, 3.60%)</title><rect x="521.6" y="979.0" width="42.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="524.6" y="990.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (39 samples, 3.60%)</title><rect x="521.6" y="963.0" width="42.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="524.6" y="974.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (39 samples, 3.60%)</title><rect x="521.6" y="947.0" width="42.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="524.6" y="958.0">java..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (39 samples, 3.60%)</title><rect x="521.6" y="931.0" width="42.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.6" y="942.0">sun/..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (39 samples, 3.60%)</title><rect x="521.6" y="915.0" width="42.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="524.6" y="926.0">java..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$92/1130878433.run (39 samples, 3.60%)</title><rect x="521.6" y="899.0" width="42.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="524.6" y="910.0">sun/..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (39 samples, 3.60%)</title><rect x="521.6" y="883.0" width="42.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="524.6" y="894.0">sun/..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (39 samples, 3.60%)</title><rect x="521.6" y="867.0" width="42.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="524.6" y="878.0">sun/..</text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (39 samples, 3.60%)</title><rect x="521.6" y="851.0" width="42.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="524.6" y="862.0">sun/..</text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (38 samples, 3.51%)</title><rect x="522.7" y="835.0" width="41.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="525.7" y="846.0">sun..</text>
</g>
<g>
<title>java/rmi/server/ObjID.read (1 samples, 0.09%)</title><rect x="523.8" y="819.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="526.8" y="830.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readLong (1 samples, 0.09%)</title><rect x="523.8" y="803.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="526.8" y="814.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream$BlockDataInputStream.readLong (1 samples, 0.09%)</title><rect x="523.8" y="787.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="526.8" y="798.0"></text>
</g>
<g>
<title>java/io/DataInputStream.readLong (1 samples, 0.09%)</title><rect x="523.8" y="771.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="526.8" y="782.0"></text>
</g>
<g>
<title>java/io/DataInputStream.readFully (1 samples, 0.09%)</title><rect x="523.8" y="755.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="526.8" y="766.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (34 samples, 3.14%)</title><rect x="524.9" y="819.0" width="37.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="527.9" y="830.0">jav..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (34 samples, 3.14%)</title><rect x="524.9" y="803.0" width="37.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="527.9" y="814.0">sun..</text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (34 samples, 3.14%)</title><rect x="524.9" y="787.0" width="37.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="527.9" y="798.0">sun..</text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (34 samples, 3.14%)</title><rect x="524.9" y="771.0" width="37.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="527.9" y="782.0">sun..</text>
</g>
<g>
<title>java/lang/reflect/Method.getParameterTypes (2 samples, 0.18%)</title><rect x="526.0" y="755.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="529.0" y="766.0"></text>
</g>
<g>
<title>java/lang/Object.clone (2 samples, 0.18%)</title><rect x="526.0" y="739.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="529.0" y="750.0"></text>
</g>
<g>
<title>JVM_Clone (2 samples, 0.18%)</title><rect x="526.0" y="723.0" width="2.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="529.0" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.09%)</title><rect x="527.1" y="707.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="530.1" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.09%)</title><rect x="527.1" y="691.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="530.1" y="702.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.09%)</title><rect x="527.1" y="675.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="530.1" y="686.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (18 samples, 1.66%)</title><rect x="528.2" y="755.0" width="19.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="531.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (18 samples, 1.66%)</title><rect x="528.2" y="739.0" width="19.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="531.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (1 samples, 0.09%)</title><rect x="528.2" y="723.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="531.2" y="734.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttribute (1 samples, 0.09%)</title><rect x="528.2" y="707.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="531.2" y="718.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (1 samples, 0.09%)</title><rect x="528.2" y="691.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="531.2" y="702.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (1 samples, 0.09%)</title><rect x="528.2" y="675.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="531.2" y="686.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (1 samples, 0.09%)</title><rect x="528.2" y="659.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="531.2" y="670.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttribute (1 samples, 0.09%)</title><rect x="528.2" y="643.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="531.2" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttribute (1 samples, 0.09%)</title><rect x="528.2" y="627.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="531.2" y="638.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.getAttribute (1 samples, 0.09%)</title><rect x="528.2" y="611.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="531.2" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.getAttribute (1 samples, 0.09%)</title><rect x="528.2" y="595.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="531.2" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.getAttribute (1 samples, 0.09%)</title><rect x="528.2" y="579.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="531.2" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (1 samples, 0.09%)</title><rect x="528.2" y="563.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="531.2" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.09%)</title><rect x="528.2" y="547.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="531.2" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.09%)</title><rect x="528.2" y="531.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="531.2" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.09%)</title><rect x="528.2" y="515.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="531.2" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.09%)</title><rect x="528.2" y="499.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="531.2" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.methodName (1 samples, 0.09%)</title><rect x="528.2" y="483.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="531.2" y="494.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.09%)</title><rect x="528.2" y="467.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="531.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor37.invoke (1 samples, 0.09%)</title><rect x="529.2" y="723.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.2" y="734.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttributes (1 samples, 0.09%)</title><rect x="529.2" y="707.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="532.2" y="718.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (1 samples, 0.09%)</title><rect x="529.2" y="691.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="532.2" y="702.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (1 samples, 0.09%)</title><rect x="529.2" y="675.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="532.2" y="686.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (1 samples, 0.09%)</title><rect x="529.2" y="659.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="532.2" y="670.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.getAttributes (1 samples, 0.09%)</title><rect x="529.2" y="643.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="532.2" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getAttributes (1 samples, 0.09%)</title><rect x="529.2" y="627.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="532.2" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.getMBean (1 samples, 0.09%)</title><rect x="529.2" y="611.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="532.2" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieve (1 samples, 0.09%)</title><rect x="529.2" y="595.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="532.2" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/Repository.retrieveNamedObject (1 samples, 0.09%)</title><rect x="529.2" y="579.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="532.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.intern (1 samples, 0.09%)</title><rect x="529.2" y="563.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="532.2" y="574.0"></text>
</g>
<g>
<title>JVM_InternString (1 samples, 0.09%)</title><rect x="529.2" y="547.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="532.2" y="558.0"></text>
</g>
<g>
<title>StringTable::intern(oopDesc*, Thread*) (1 samples, 0.09%)</title><rect x="529.2" y="531.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="532.2" y="542.0"></text>
</g>
<g>
<title>StringTable::intern(Handle, unsigned short*, int, Thread*) (1 samples, 0.09%)</title><rect x="529.2" y="515.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="532.2" y="526.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1187956ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1187956ul&gt;::oop_access_barrier(void*) (1 samples, 0.09%)</title><rect x="529.2" y="499.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="532.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor40.invoke (16 samples, 1.48%)</title><rect x="530.3" y="723.0" width="17.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="533.3" y="734.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (16 samples, 1.48%)</title><rect x="530.3" y="707.0" width="17.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="533.3" y="718.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (11 samples, 1.01%)</title><rect x="530.3" y="691.0" width="12.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="533.3" y="702.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.rspOutgoing (1 samples, 0.09%)</title><rect x="530.3" y="675.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="533.3" y="686.0"></text>
</g>
<g>
<title>java/lang/Object.notify (1 samples, 0.09%)</title><rect x="530.3" y="659.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="533.3" y="670.0"></text>
</g>
<g>
<title>JVM_MonitorNotify (1 samples, 0.09%)</title><rect x="530.3" y="643.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="533.3" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::notify(Handle, Thread*) (1 samples, 0.09%)</title><rect x="530.3" y="627.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="533.3" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::notify(Thread*) (1 samples, 0.09%)</title><rect x="530.3" y="611.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="533.3" y="622.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (10 samples, 0.92%)</title><rect x="531.4" y="675.0" width="10.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="534.4" y="686.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (10 samples, 0.92%)</title><rect x="531.4" y="659.0" width="10.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="534.4" y="670.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (10 samples, 0.92%)</title><rect x="531.4" y="643.0" width="10.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="534.4" y="654.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (10 samples, 0.92%)</title><rect x="531.4" y="627.0" width="10.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="534.4" y="638.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (10 samples, 0.92%)</title><rect x="531.4" y="611.0" width="10.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="534.4" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (10 samples, 0.92%)</title><rect x="531.4" y="595.0" width="10.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="534.4" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (10 samples, 0.92%)</title><rect x="531.4" y="579.0" width="10.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="534.4" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (10 samples, 0.92%)</title><rect x="531.4" y="563.0" width="10.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="534.4" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (10 samples, 0.92%)</title><rect x="531.4" y="547.0" width="10.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="534.4" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (10 samples, 0.92%)</title><rect x="531.4" y="531.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="534.4" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (10 samples, 0.92%)</title><rect x="531.4" y="515.0" width="10.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="534.4" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (10 samples, 0.92%)</title><rect x="531.4" y="499.0" width="10.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="534.4" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (8 samples, 0.74%)</title><rect x="531.4" y="483.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="534.4" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (8 samples, 0.74%)</title><rect x="531.4" y="467.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="534.4" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (8 samples, 0.74%)</title><rect x="531.4" y="451.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="534.4" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (8 samples, 0.74%)</title><rect x="531.4" y="435.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="534.4" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.09%)</title><rect x="532.5" y="419.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="535.5" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (1 samples, 0.09%)</title><rect x="532.5" y="403.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="535.5" y="414.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.09%)</title><rect x="532.5" y="387.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="535.5" y="398.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (1 samples, 0.09%)</title><rect x="532.5" y="371.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="535.5" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.equals (1 samples, 0.09%)</title><rect x="532.5" y="355.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="535.5" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractSet.equals (1 samples, 0.09%)</title><rect x="532.5" y="339.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="535.5" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.containsAll (1 samples, 0.09%)</title><rect x="532.5" y="323.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="535.5" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.09%)</title><rect x="532.5" y="307.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="535.5" y="318.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (5 samples, 0.46%)</title><rect x="533.6" y="419.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="536.6" y="430.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (2 samples, 0.18%)</title><rect x="533.6" y="403.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="536.6" y="414.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.equals (1 samples, 0.09%)</title><rect x="533.6" y="387.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="536.6" y="398.0"></text>
</g>
<g>
<title>java/util/AbstractSet.equals (1 samples, 0.09%)</title><rect x="533.6" y="371.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="536.6" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.containsAll (1 samples, 0.09%)</title><rect x="533.6" y="355.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="536.6" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.contains (1 samples, 0.09%)</title><rect x="533.6" y="339.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="536.6" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.09%)</title><rect x="533.6" y="323.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="536.6" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.09%)</title><rect x="533.6" y="307.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="536.6" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.09%)</title><rect x="533.6" y="291.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="536.6" y="302.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.09%)</title><rect x="533.6" y="275.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="536.6" y="286.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.09%)</title><rect x="533.6" y="259.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="536.6" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.09%)</title><rect x="533.6" y="243.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="536.6" y="254.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeType.getType (1 samples, 0.09%)</title><rect x="534.7" y="387.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="537.7" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.09%)</title><rect x="534.7" y="371.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="537.7" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.09%)</title><rect x="534.7" y="355.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="537.7" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.09%)</title><rect x="534.7" y="339.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="537.7" y="350.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (3 samples, 0.28%)</title><rect x="535.8" y="403.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="538.8" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (2 samples, 0.18%)</title><rect x="535.8" y="387.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="538.8" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.09%)</title><rect x="536.9" y="371.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="539.9" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.09%)</title><rect x="536.9" y="355.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="539.9" y="366.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.09%)</title><rect x="536.9" y="339.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="539.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.09%)</title><rect x="536.9" y="323.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="539.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.09%)</title><rect x="536.9" y="307.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="539.9" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.09%)</title><rect x="538.0" y="387.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="541.0" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.09%)</title><rect x="538.0" y="371.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="541.0" y="382.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.09%)</title><rect x="538.0" y="355.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="541.0" y="366.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.09%)</title><rect x="538.0" y="339.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="541.0" y="350.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (1 samples, 0.09%)</title><rect x="539.0" y="419.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="542.0" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.09%)</title><rect x="539.0" y="403.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="542.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.09%)</title><rect x="539.0" y="387.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="542.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (1 samples, 0.09%)</title><rect x="539.0" y="371.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="542.0" y="382.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (1 samples, 0.09%)</title><rect x="539.0" y="355.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="542.0" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.09%)</title><rect x="539.0" y="339.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="542.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.09%)</title><rect x="539.0" y="323.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="542.0" y="334.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (2 samples, 0.18%)</title><rect x="540.1" y="483.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="543.1" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.18%)</title><rect x="540.1" y="467.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="543.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.18%)</title><rect x="540.1" y="451.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="543.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (2 samples, 0.18%)</title><rect x="540.1" y="435.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="543.1" y="446.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (2 samples, 0.18%)</title><rect x="540.1" y="419.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="543.1" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.18%)</title><rect x="540.1" y="403.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.18%)</title><rect x="540.1" y="387.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="543.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (2 samples, 0.18%)</title><rect x="540.1" y="371.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="543.1" y="382.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (2 samples, 0.18%)</title><rect x="540.1" y="355.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.1" y="366.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (2 samples, 0.18%)</title><rect x="540.1" y="339.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="543.1" y="350.0"></text>
</g>
<g>
<title>jmm_GetThreadInfo (1 samples, 0.09%)</title><rect x="540.1" y="323.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="543.1" y="334.0"></text>
</g>
<g>
<title>Management::create_thread_info_instance(ThreadSnapshot*, Thread*) (1 samples, 0.09%)</title><rect x="540.1" y="307.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="543.1" y="318.0"></text>
</g>
<g>
<title>initialize_ThreadInfo_constructor_arguments(JavaCallArguments*, ThreadSnapshot*, Thread*) (1 samples, 0.09%)</title><rect x="540.1" y="291.0" width="1.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="543.1" y="302.0"></text>
</g>
<g>
<title>ThreadStackTrace::allocate_fill_stack_trace_element_array(Thread*) (1 samples, 0.09%)</title><rect x="540.1" y="275.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="543.1" y="286.0"></text>
</g>
<g>
<title>java_lang_StackTraceElement::create(methodHandle const&amp;, int, Thread*) (1 samples, 0.09%)</title><rect x="540.1" y="259.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="543.1" y="270.0"></text>
</g>
<g>
<title>java_lang_StackTraceElement::fill_in(Handle, InstanceKlass*, methodHandle const&amp;, int, int, Symbol*, Thread*) (1 samples, 0.09%)</title><rect x="540.1" y="243.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="543.1" y="254.0"></text>
</g>
<g>
<title>StringTable::intern(Symbol*, Thread*) (1 samples, 0.09%)</title><rect x="540.1" y="227.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="543.1" y="238.0"></text>
</g>
<g>
<title>StringTable::intern(Handle, unsigned short*, int, Thread*) (1 samples, 0.09%)</title><rect x="540.1" y="211.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="543.1" y="222.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1187956ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1187956ul&gt;::oop_access_barrier(void*) (1 samples, 0.09%)</title><rect x="540.1" y="195.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="543.1" y="206.0"></text>
</g>
<g>
<title>objArrayOopDesc::obj_at_put(int, oopDesc*) (1 samples, 0.09%)</title><rect x="541.2" y="323.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="544.2" y="334.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getClassLoaderFor (1 samples, 0.09%)</title><rect x="542.3" y="691.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="545.3" y="702.0"></text>
</g>
<g>
<title>javax/management/MBeanPermission.&lt;init&gt; (1 samples, 0.09%)</title><rect x="542.3" y="675.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="545.3" y="686.0"></text>
</g>
<g>
<title>javax/management/MBeanPermission.parseName (1 samples, 0.09%)</title><rect x="542.3" y="659.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="545.3" y="670.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (4 samples, 0.37%)</title><rect x="543.4" y="691.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="546.4" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.09%)</title><rect x="543.4" y="675.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="546.4" y="686.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (1 samples, 0.09%)</title><rect x="543.4" y="659.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="546.4" y="670.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$7.run (1 samples, 0.09%)</title><rect x="543.4" y="643.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="546.4" y="654.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader.&lt;init&gt; (1 samples, 0.09%)</title><rect x="543.4" y="627.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="546.4" y="638.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$CombinedClassLoader$ClassLoaderWrapper.&lt;init&gt; (1 samples, 0.09%)</title><rect x="543.4" y="611.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="546.4" y="622.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (1 samples, 0.09%)</title><rect x="543.4" y="595.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="546.4" y="606.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.&lt;init&gt; (1 samples, 0.09%)</title><rect x="543.4" y="579.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="546.4" y="590.0"></text>
</g>
<g>
<title>java/lang/ClassLoader$ParallelLoaders.isRegistered (1 samples, 0.09%)</title><rect x="543.4" y="563.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="546.4" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$SetFromMap.contains (1 samples, 0.09%)</title><rect x="543.4" y="547.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="546.4" y="558.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.containsKey (1 samples, 0.09%)</title><rect x="543.4" y="531.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="546.4" y="542.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getEntry (1 samples, 0.09%)</title><rect x="543.4" y="515.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="546.4" y="526.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.eq (1 samples, 0.09%)</title><rect x="543.4" y="499.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="546.4" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (3 samples, 0.28%)</title><rect x="544.5" y="675.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="547.5" y="686.0"></text>
</g>
<g>
<title>java/rmi/MarshalledObject.get (2 samples, 0.18%)</title><rect x="544.5" y="659.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="547.5" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.18%)</title><rect x="544.5" y="643.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="547.5" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (2 samples, 0.18%)</title><rect x="544.5" y="627.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="547.5" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (2 samples, 0.18%)</title><rect x="544.5" y="611.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="547.5" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (2 samples, 0.18%)</title><rect x="544.5" y="595.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="547.5" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.09%)</title><rect x="544.5" y="579.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="547.5" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.09%)</title><rect x="544.5" y="563.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="547.5" y="574.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.resolveClass (1 samples, 0.09%)</title><rect x="544.5" y="547.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="547.5" y="558.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.latestUserDefinedLoader (1 samples, 0.09%)</title><rect x="544.5" y="531.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="547.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.latestUserDefinedLoader (1 samples, 0.09%)</title><rect x="544.5" y="515.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="547.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.latestUserDefinedLoader0 (1 samples, 0.09%)</title><rect x="544.5" y="499.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="547.5" y="510.0"></text>
</g>
<g>
<title>JVM_LatestUserDefinedLoader (1 samples, 0.09%)</title><rect x="544.5" y="483.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="547.5" y="494.0"></text>
</g>
<g>
<title>vframeStreamCommon::skip_reflection_related_frames() (1 samples, 0.09%)</title><rect x="544.5" y="467.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="547.5" y="478.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.09%)</title><rect x="544.5" y="451.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="547.5" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.09%)</title><rect x="545.6" y="579.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="548.6" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (1 samples, 0.09%)</title><rect x="545.6" y="563.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="548.6" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.09%)</title><rect x="545.6" y="547.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="548.6" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.09%)</title><rect x="545.6" y="531.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="548.6" y="542.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.resolveClass (1 samples, 0.09%)</title><rect x="545.6" y="515.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="548.6" y="526.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.latestUserDefinedLoader (1 samples, 0.09%)</title><rect x="545.6" y="499.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="548.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.latestUserDefinedLoader (1 samples, 0.09%)</title><rect x="545.6" y="483.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="548.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.latestUserDefinedLoader0 (1 samples, 0.09%)</title><rect x="545.6" y="467.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="548.6" y="478.0"></text>
</g>
<g>
<title>JVM_LatestUserDefinedLoader (1 samples, 0.09%)</title><rect x="545.6" y="451.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="548.6" y="462.0"></text>
</g>
<g>
<title>vframeStreamCommon::skip_reflection_related_frames() (1 samples, 0.09%)</title><rect x="545.6" y="435.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="548.6" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.09%)</title><rect x="546.7" y="659.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="549.7" y="670.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.09%)</title><rect x="546.7" y="643.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="549.7" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.09%)</title><rect x="546.7" y="627.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="549.7" y="638.0"></text>
</g>
<g>
<title>method_matches(Method const*, Symbol const*, bool, bool, bool) (1 samples, 0.09%)</title><rect x="546.7" y="611.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="549.7" y="622.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (5 samples, 0.46%)</title><rect x="547.7" y="755.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="550.7" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (5 samples, 0.46%)</title><rect x="547.7" y="739.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="550.7" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (5 samples, 0.46%)</title><rect x="547.7" y="723.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.7" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (4 samples, 0.37%)</title><rect x="547.7" y="707.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="550.7" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.37%)</title><rect x="547.7" y="691.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.7" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (4 samples, 0.37%)</title><rect x="547.7" y="675.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="550.7" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (4 samples, 0.37%)</title><rect x="547.7" y="659.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="550.7" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (4 samples, 0.37%)</title><rect x="547.7" y="643.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="550.7" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (4 samples, 0.37%)</title><rect x="547.7" y="627.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="550.7" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (4 samples, 0.37%)</title><rect x="547.7" y="611.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.7" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (4 samples, 0.37%)</title><rect x="547.7" y="595.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="550.7" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (1 samples, 0.09%)</title><rect x="547.7" y="579.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="550.7" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.09%)</title><rect x="547.7" y="563.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="550.7" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.09%)</title><rect x="547.7" y="547.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="550.7" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (1 samples, 0.09%)</title><rect x="547.7" y="531.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="550.7" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (1 samples, 0.09%)</title><rect x="547.7" y="515.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="550.7" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.09%)</title><rect x="547.7" y="499.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.09%)</title><rect x="547.7" y="483.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="550.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (1 samples, 0.09%)</title><rect x="547.7" y="467.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="550.7" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (1 samples, 0.09%)</title><rect x="547.7" y="451.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="550.7" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (1 samples, 0.09%)</title><rect x="547.7" y="435.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="550.7" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (1 samples, 0.09%)</title><rect x="547.7" y="419.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="550.7" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (1 samples, 0.09%)</title><rect x="547.7" y="403.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="550.7" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.assign (1 samples, 0.09%)</title><rect x="547.7" y="387.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="550.7" y="398.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.insert (1 samples, 0.09%)</title><rect x="547.7" y="371.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="550.7" y="382.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (3 samples, 0.28%)</title><rect x="548.8" y="579.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="551.8" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (3 samples, 0.28%)</title><rect x="548.8" y="563.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="551.8" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.09%)</title><rect x="548.8" y="547.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="551.8" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (1 samples, 0.09%)</title><rect x="548.8" y="531.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="551.8" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="548.8" y="515.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="551.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.18%)</title><rect x="549.9" y="547.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="552.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (2 samples, 0.18%)</title><rect x="549.9" y="531.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="552.9" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (2 samples, 0.18%)</title><rect x="549.9" y="515.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="552.9" y="526.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (2 samples, 0.18%)</title><rect x="549.9" y="499.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="552.9" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (2 samples, 0.18%)</title><rect x="549.9" y="483.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="552.9" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.lookup (1 samples, 0.09%)</title><rect x="551.0" y="467.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="554.0" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.hash (1 samples, 0.09%)</title><rect x="551.0" y="451.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="554.0" y="462.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (1 samples, 0.09%)</title><rect x="551.0" y="435.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="554.0" y="446.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.09%)</title><rect x="551.0" y="419.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="554.0" y="430.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.217] (1 samples, 0.09%)</title><rect x="551.0" y="403.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="554.0" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.09%)</title><rect x="552.1" y="707.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="555.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.09%)</title><rect x="552.1" y="691.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="555.1" y="702.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (6 samples, 0.55%)</title><rect x="553.2" y="755.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="556.2" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (6 samples, 0.55%)</title><rect x="553.2" y="739.0" width="6.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="556.2" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (6 samples, 0.55%)</title><rect x="553.2" y="723.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.2" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (6 samples, 0.55%)</title><rect x="553.2" y="707.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="556.2" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readArray (3 samples, 0.28%)</title><rect x="553.2" y="691.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="556.2" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.09%)</title><rect x="555.4" y="675.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="558.4" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.09%)</title><rect x="555.4" y="659.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="558.4" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.initNonProxy (1 samples, 0.09%)</title><rect x="555.4" y="643.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="558.4" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.lookup (1 samples, 0.09%)</title><rect x="555.4" y="627.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="558.4" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.processQueue (1 samples, 0.09%)</title><rect x="555.4" y="611.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="558.4" y="622.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (1 samples, 0.09%)</title><rect x="555.4" y="595.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="558.4" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (3 samples, 0.28%)</title><rect x="556.5" y="691.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="559.5" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readClassDesc (1 samples, 0.09%)</title><rect x="556.5" y="675.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="559.5" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readNonProxyDesc (1 samples, 0.09%)</title><rect x="556.5" y="659.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="559.5" y="670.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.resolveClass (1 samples, 0.09%)</title><rect x="556.5" y="643.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="559.5" y="654.0"></text>
</g>
<g>
<title>java/rmi/server/RMIClassLoader.loadClass (1 samples, 0.09%)</title><rect x="556.5" y="627.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="559.5" y="638.0"></text>
</g>
<g>
<title>java/rmi/server/RMIClassLoader$2.loadClass (1 samples, 0.09%)</title><rect x="556.5" y="611.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="559.5" y="622.0"></text>
</g>
<g>
<title>sun/rmi/server/LoaderHandler.loadClass (1 samples, 0.09%)</title><rect x="556.5" y="595.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="559.5" y="606.0"></text>
</g>
<g>
<title>sun/rmi/server/LoaderHandler.loadClass (1 samples, 0.09%)</title><rect x="556.5" y="579.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="559.5" y="590.0"></text>
</g>
<g>
<title>java/lang/Class.forName (1 samples, 0.09%)</title><rect x="556.5" y="563.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="559.5" y="574.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (1 samples, 0.09%)</title><rect x="556.5" y="547.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="559.5" y="558.0"></text>
</g>
<g>
<title>Java_java_lang_Class_forName0 (1 samples, 0.09%)</title><rect x="556.5" y="531.0" width="1.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="559.5" y="542.0"></text>
</g>
<g>
<title>jni_GetStringUTFLength (1 samples, 0.09%)</title><rect x="556.5" y="515.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="559.5" y="526.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;565366ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 565366ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.09%)</title><rect x="556.5" y="499.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="559.5" y="510.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (2 samples, 0.18%)</title><rect x="557.5" y="675.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="560.5" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (2 samples, 0.18%)</title><rect x="557.5" y="659.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="560.5" y="670.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.18%)</title><rect x="557.5" y="643.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="560.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (2 samples, 0.18%)</title><rect x="557.5" y="627.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="560.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor2.invoke (2 samples, 0.18%)</title><rect x="557.5" y="611.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="560.5" y="622.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (1 samples, 0.09%)</title><rect x="558.6" y="595.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="561.6" y="606.0"></text>
</g>
<g>
<title>javax/management/ObjectName.construct (1 samples, 0.09%)</title><rect x="558.6" y="579.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="561.6" y="590.0"></text>
</g>
<g>
<title>javax/management/ObjectName.setCanonicalName (1 samples, 0.09%)</title><rect x="558.6" y="563.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="561.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.intern (1 samples, 0.09%)</title><rect x="558.6" y="547.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="561.6" y="558.0"></text>
</g>
<g>
<title>JVM_InternString (1 samples, 0.09%)</title><rect x="558.6" y="531.0" width="1.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="561.6" y="542.0"></text>
</g>
<g>
<title>StringTable::intern(oopDesc*, Thread*) (1 samples, 0.09%)</title><rect x="558.6" y="515.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="561.6" y="526.0"></text>
</g>
<g>
<title>StringTable::intern(Handle, unsigned short*, int, Thread*) (1 samples, 0.09%)</title><rect x="558.6" y="499.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="561.6" y="510.0"></text>
</g>
<g>
<title>StringTable::do_lookup(unsigned short*, int, unsigned long) (1 samples, 0.09%)</title><rect x="558.6" y="483.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="561.6" y="494.0"></text>
</g>
<g>
<title>java_lang_String::equals(oopDesc*, unsigned short*, int) (1 samples, 0.09%)</title><rect x="558.6" y="467.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="561.6" y="478.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (2 samples, 0.18%)</title><rect x="559.7" y="755.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.7" y="766.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.writeID (1 samples, 0.09%)</title><rect x="559.7" y="739.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="562.7" y="750.0"></text>
</g>
<g>
<title>java/rmi/server/UID.write (1 samples, 0.09%)</title><rect x="559.7" y="723.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="562.7" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeInt (1 samples, 0.09%)</title><rect x="559.7" y="707.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="562.7" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (1 samples, 0.09%)</title><rect x="560.8" y="739.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="563.8" y="750.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (1 samples, 0.09%)</title><rect x="560.8" y="723.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="563.8" y="734.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (1 samples, 0.09%)</title><rect x="560.8" y="707.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="563.8" y="718.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (1 samples, 0.09%)</title><rect x="560.8" y="691.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="563.8" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (1 samples, 0.09%)</title><rect x="560.8" y="675.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="563.8" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.&lt;init&gt; (1 samples, 0.09%)</title><rect x="560.8" y="659.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.8" y="670.0"></text>
</g>
<g>
<title>sun/rmi/transport/ObjectTable.getTarget (1 samples, 0.09%)</title><rect x="561.9" y="819.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="564.9" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.09%)</title><rect x="561.9" y="803.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="564.9" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.09%)</title><rect x="561.9" y="787.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="564.9" y="798.0"></text>
</g>
<g>
<title>sun/rmi/transport/ObjectEndpoint.equals (1 samples, 0.09%)</title><rect x="561.9" y="771.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="564.9" y="782.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.setContextClassLoader (1 samples, 0.09%)</title><rect x="563.0" y="819.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="566.0" y="830.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.09%)</title><rect x="563.0" y="803.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="566.0" y="814.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.09%)</title><rect x="563.0" y="787.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="566.0" y="798.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.09%)</title><rect x="563.0" y="771.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="566.0" y="782.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.09%)</title><rect x="563.0" y="755.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="566.0" y="766.0"></text>
</g>
<g>
<title>[RMI TCP Connection(4)-127.0.0.1 tid=60964] (3 samples, 0.28%)</title><rect x="564.1" y="995.0" width="3.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="567.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 0.28%)</title><rect x="564.1" y="979.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="567.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 0.28%)</title><rect x="564.1" y="963.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 0.28%)</title><rect x="564.1" y="947.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.1" y="958.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (3 samples, 0.28%)</title><rect x="564.1" y="931.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="567.1" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.28%)</title><rect x="564.1" y="915.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="567.1" y="926.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$92/1130878433.run (3 samples, 0.28%)</title><rect x="564.1" y="899.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.1" y="910.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (3 samples, 0.28%)</title><rect x="564.1" y="883.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="567.1" y="894.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (3 samples, 0.28%)</title><rect x="564.1" y="867.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="567.1" y="878.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (3 samples, 0.28%)</title><rect x="564.1" y="851.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.1" y="862.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (3 samples, 0.28%)</title><rect x="564.1" y="835.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="567.1" y="846.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (3 samples, 0.28%)</title><rect x="564.1" y="819.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="567.1" y="830.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (3 samples, 0.28%)</title><rect x="564.1" y="803.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="567.1" y="814.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (3 samples, 0.28%)</title><rect x="564.1" y="787.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.1" y="798.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (3 samples, 0.28%)</title><rect x="564.1" y="771.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.1" y="782.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.09%)</title><rect x="564.1" y="755.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="567.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.09%)</title><rect x="564.1" y="739.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor33.invoke (1 samples, 0.09%)</title><rect x="564.1" y="723.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.1" y="734.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.getAttribute (1 samples, 0.09%)</title><rect x="564.1" y="707.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.1" y="718.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (1 samples, 0.09%)</title><rect x="564.1" y="691.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="567.1" y="702.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.rspOutgoing (1 samples, 0.09%)</title><rect x="564.1" y="675.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="567.1" y="686.0"></text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin.logtime (1 samples, 0.09%)</title><rect x="564.1" y="659.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1658533399.linkToTargetMethod (1 samples, 0.09%)</title><rect x="564.1" y="643.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="567.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/574519372.invoke (1 samples, 0.09%)</title><rect x="564.1" y="627.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="567.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.09%)</title><rect x="564.1" y="611.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.09%)</title><rect x="564.1" y="595.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.1" y="606.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (1 samples, 0.09%)</title><rect x="565.2" y="755.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.2" y="766.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.09%)</title><rect x="565.2" y="739.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.2" y="750.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (1 samples, 0.09%)</title><rect x="565.2" y="723.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="568.2" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (1 samples, 0.09%)</title><rect x="565.2" y="707.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="568.2" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (1 samples, 0.09%)</title><rect x="565.2" y="691.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="568.2" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readSerialData (1 samples, 0.09%)</title><rect x="565.2" y="675.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="568.2" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeReadObject (1 samples, 0.09%)</title><rect x="565.2" y="659.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="568.2" y="670.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.09%)</title><rect x="565.2" y="643.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.09%)</title><rect x="565.2" y="627.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor2.invoke (1 samples, 0.09%)</title><rect x="565.2" y="611.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="568.2" y="622.0"></text>
</g>
<g>
<title>javax/management/ObjectName.readObject (1 samples, 0.09%)</title><rect x="565.2" y="595.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.2" y="606.0"></text>
</g>
<g>
<title>javax/management/ObjectName.construct (1 samples, 0.09%)</title><rect x="565.2" y="579.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="568.2" y="590.0"></text>
</g>
<g>
<title>javax/management/ObjectName.setCanonicalName (1 samples, 0.09%)</title><rect x="565.2" y="563.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.2" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (1 samples, 0.09%)</title><rect x="565.2" y="547.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="568.2" y="558.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (1 samples, 0.09%)</title><rect x="566.3" y="755.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="569.3" y="766.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (1 samples, 0.09%)</title><rect x="566.3" y="739.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="569.3" y="750.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (1 samples, 0.09%)</title><rect x="566.3" y="723.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="569.3" y="734.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (1 samples, 0.09%)</title><rect x="566.3" y="707.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="569.3" y="718.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (1 samples, 0.09%)</title><rect x="566.3" y="691.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="569.3" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (1 samples, 0.09%)</title><rect x="566.3" y="675.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="569.3" y="686.0"></text>
</g>
<g>
<title>[Sweeper thread tid=60303] (1 samples, 0.09%)</title><rect x="567.3" y="995.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="570.3" y="1006.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.09%)</title><rect x="567.3" y="979.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="570.3" y="990.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.09%)</title><rect x="567.3" y="963.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="570.3" y="974.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.09%)</title><rect x="567.3" y="947.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="570.3" y="958.0"></text>
</g>
<g>
<title>JavaThread::run() (1 samples, 0.09%)</title><rect x="567.3" y="931.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="570.3" y="942.0"></text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (1 samples, 0.09%)</title><rect x="567.3" y="915.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="570.3" y="926.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (1 samples, 0.09%)</title><rect x="567.3" y="899.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="570.3" y="910.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (1 samples, 0.09%)</title><rect x="567.3" y="883.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="570.3" y="894.0"></text>
</g>
<g>
<title>NMethodSweeper::process_compiled_method(CompiledMethod*) (1 samples, 0.09%)</title><rect x="567.3" y="867.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="570.3" y="878.0"></text>
</g>
<g>
<title>CompiledMethod::cleanup_inline_caches_impl(bool, bool, bool) (1 samples, 0.09%)</title><rect x="567.3" y="851.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="570.3" y="862.0"></text>
</g>
<g>
<title>NativeCall::destination() const (1 samples, 0.09%)</title><rect x="567.3" y="835.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="570.3" y="846.0"></text>
</g>
<g>
<title>[VM Periodic Tas tid=60305] (5 samples, 0.46%)</title><rect x="568.4" y="995.0" width="5.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="571.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="568.4" y="979.0" width="2.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="571.4" y="990.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.09%)</title><rect x="568.4" y="963.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="571.4" y="974.0"></text>
</g>
<g>
<title>madvise (1 samples, 0.09%)</title><rect x="569.5" y="963.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="572.5" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="569.5" y="947.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="572.5" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="569.5" y="931.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="572.5" y="942.0"></text>
</g>
<g>
<title>__x64_sys_madvise (1 samples, 0.09%)</title><rect x="569.5" y="915.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="572.5" y="926.0"></text>
</g>
<g>
<title>__do_sys_madvise (1 samples, 0.09%)</title><rect x="569.5" y="899.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="572.5" y="910.0"></text>
</g>
<g>
<title>zap_page_range (1 samples, 0.09%)</title><rect x="569.5" y="883.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="572.5" y="894.0"></text>
</g>
<g>
<title>unmap_single_vma (1 samples, 0.09%)</title><rect x="569.5" y="867.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="572.5" y="878.0"></text>
</g>
<g>
<title>unmap_page_range (1 samples, 0.09%)</title><rect x="569.5" y="851.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="572.5" y="862.0"></text>
</g>
<g>
<title>zap_pte_range.isra.0 (1 samples, 0.09%)</title><rect x="569.5" y="835.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="572.5" y="846.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.28%)</title><rect x="570.6" y="979.0" width="3.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="573.6" y="990.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.28%)</title><rect x="570.6" y="963.0" width="3.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="573.6" y="974.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.28%)</title><rect x="570.6" y="947.0" width="3.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="573.6" y="958.0"></text>
</g>
<g>
<title>WatcherThread::run() (3 samples, 0.28%)</title><rect x="570.6" y="931.0" width="3.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="573.6" y="942.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (1 samples, 0.09%)</title><rect x="570.6" y="915.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="573.6" y="926.0"></text>
</g>
<g>
<title>StatSamplerTask::task() (1 samples, 0.09%)</title><rect x="570.6" y="899.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="573.6" y="910.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.18%)</title><rect x="571.7" y="915.0" width="2.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="574.7" y="926.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.09%)</title><rect x="571.7" y="899.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="574.7" y="910.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.09%)</title><rect x="572.8" y="899.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="575.8" y="910.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.09%)</title><rect x="572.8" y="883.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="575.8" y="894.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="572.8" y="867.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="575.8" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="572.8" y="851.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="575.8" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="572.8" y="835.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="575.8" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.09%)</title><rect x="572.8" y="819.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="575.8" y="830.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="572.8" y="803.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="575.8" y="814.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="572.8" y="787.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="575.8" y="798.0"></text>
</g>
<g>
<title>[VM Thread tid=60297] (3 samples, 0.28%)</title><rect x="573.9" y="995.0" width="3.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="576.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="573.9" y="979.0" width="1.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="576.9" y="990.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="573.9" y="963.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="576.9" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="573.9" y="947.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="576.9" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="573.9" y="931.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="576.9" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.09%)</title><rect x="573.9" y="915.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="576.9" y="926.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="573.9" y="899.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="576.9" y="910.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.09%)</title><rect x="573.9" y="883.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="576.9" y="894.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.18%)</title><rect x="575.0" y="979.0" width="2.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="578.0" y="990.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.18%)</title><rect x="575.0" y="963.0" width="2.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="578.0" y="974.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.18%)</title><rect x="575.0" y="947.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="578.0" y="958.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.18%)</title><rect x="575.0" y="931.0" width="2.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="578.0" y="942.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.18%)</title><rect x="575.0" y="915.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="578.0" y="926.0"></text>
</g>
<g>
<title>EventMark::EventMark(char const*, ...) (1 samples, 0.09%)</title><rect x="575.0" y="899.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="578.0" y="910.0"></text>
</g>
<g>
<title>Events::log(Thread*, char const*, ...) (1 samples, 0.09%)</title><rect x="575.0" y="883.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="578.0" y="894.0"></text>
</g>
<g>
<title>os::elapsedTime() (1 samples, 0.09%)</title><rect x="575.0" y="867.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="578.0" y="878.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (1 samples, 0.09%)</title><rect x="576.1" y="899.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="579.1" y="910.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.09%)</title><rect x="576.1" y="883.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="579.1" y="894.0"></text>
</g>
<g>
<title>VM_ThreadDump::doit() (1 samples, 0.09%)</title><rect x="576.1" y="867.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="579.1" y="878.0"></text>
</g>
<g>
<title>ThreadStackTrace::dump_stack_at_safepoint(int) (1 samples, 0.09%)</title><rect x="576.1" y="851.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="579.1" y="862.0"></text>
</g>
<g>
<title>compiledVFrame::sender() const (1 samples, 0.09%)</title><rect x="576.1" y="835.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="579.1" y="846.0"></text>
</g>
<g>
<title>vframe::sender() const (1 samples, 0.09%)</title><rect x="576.1" y="819.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="579.1" y="830.0"></text>
</g>
<g>
<title>frame::real_sender(RegisterMap*) const (1 samples, 0.09%)</title><rect x="576.1" y="803.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="579.1" y="814.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.09%)</title><rect x="576.1" y="787.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="579.1" y="798.0"></text>
</g>
<g>
<title>[pool-1-thread-1 tid=60307] (56 samples, 5.17%)</title><rect x="577.1" y="995.0" width="61.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="580.1" y="1006.0">[pool-..</text>
</g>
<g>
<title>java/lang/Thread.run (56 samples, 5.17%)</title><rect x="577.1" y="979.0" width="61.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="580.1" y="990.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (56 samples, 5.17%)</title><rect x="577.1" y="963.0" width="61.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="580.1" y="974.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (56 samples, 5.17%)</title><rect x="577.1" y="947.0" width="61.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="580.1" y="958.0">java/u..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$13/863125040.run (56 samples, 5.17%)</title><rect x="577.1" y="931.0" width="61.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="580.1" y="942.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.flushingHelper (56 samples, 5.17%)</title><rect x="577.1" y="915.0" width="61.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="580.1" y="926.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.flush (56 samples, 5.17%)</title><rect x="577.1" y="899.0" width="61.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="580.1" y="910.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.serialize (56 samples, 5.17%)</title><rect x="577.1" y="883.0" width="61.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="580.1" y="894.0">ru/mai..</text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (2 samples, 0.18%)</title><rect x="577.1" y="867.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="580.1" y="878.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (2 samples, 0.18%)</title><rect x="577.1" y="851.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="580.1" y="862.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (2 samples, 0.18%)</title><rect x="577.1" y="835.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="580.1" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (2 samples, 0.18%)</title><rect x="577.1" y="819.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="580.1" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$111/1312109180.getAsBoolean (2 samples, 0.18%)</title><rect x="577.1" y="803.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="580.1" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (2 samples, 0.18%)</title><rect x="577.1" y="787.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="580.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (2 samples, 0.18%)</title><rect x="577.1" y="771.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="580.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.18%)</title><rect x="577.1" y="755.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="580.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (2 samples, 0.18%)</title><rect x="577.1" y="739.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="580.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (2 samples, 0.18%)</title><rect x="577.1" y="723.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="580.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (2 samples, 0.18%)</title><rect x="577.1" y="707.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="580.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (54 samples, 4.98%)</title><rect x="579.3" y="867.0" width="58.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="582.3" y="878.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (53 samples, 4.89%)</title><rect x="580.4" y="851.0" width="57.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="583.4" y="862.0">sun/ni..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.18%)</title><rect x="580.4" y="835.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="583.4" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.09%)</title><rect x="581.5" y="819.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="584.5" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (44 samples, 4.06%)</title><rect x="582.6" y="835.0" width="47.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="585.6" y="846.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (44 samples, 4.06%)</title><rect x="582.6" y="819.0" width="47.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="585.6" y="830.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (44 samples, 4.06%)</title><rect x="582.6" y="803.0" width="47.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="585.6" y="814.0">sun/..</text>
</g>
<g>
<title>__libc_write (40 samples, 3.69%)</title><rect x="585.8" y="787.0" width="43.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="588.8" y="798.0">__li..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 2.77%)</title><rect x="596.7" y="771.0" width="32.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="599.7" y="782.0">en..</text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.09%)</title><rect x="596.7" y="755.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="599.7" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 2.68%)</title><rect x="597.8" y="755.0" width="31.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="600.8" y="766.0">do..</text>
</g>
<g>
<title>__x64_sys_write (24 samples, 2.21%)</title><rect x="603.3" y="739.0" width="26.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="606.3" y="750.0">_..</text>
</g>
<g>
<title>ksys_write (24 samples, 2.21%)</title><rect x="603.3" y="723.0" width="26.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="606.3" y="734.0">k..</text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.09%)</title><rect x="603.3" y="707.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="606.3" y="718.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.09%)</title><rect x="603.3" y="691.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="606.3" y="702.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.09%)</title><rect x="603.3" y="675.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="606.3" y="686.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.09%)</title><rect x="604.4" y="707.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="607.4" y="718.0"></text>
</g>
<g>
<title>vfs_write (22 samples, 2.03%)</title><rect x="605.4" y="707.0" width="24.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="608.4" y="718.0">v..</text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.09%)</title><rect x="605.4" y="691.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="608.4" y="702.0"></text>
</g>
<g>
<title>__vfs_write (18 samples, 1.66%)</title><rect x="606.5" y="691.0" width="19.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="609.5" y="702.0"></text>
</g>
<g>
<title>new_sync_write (18 samples, 1.66%)</title><rect x="606.5" y="675.0" width="19.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="609.5" y="686.0"></text>
</g>
<g>
<title>generic_file_write_iter (16 samples, 1.48%)</title><rect x="608.7" y="659.0" width="17.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="611.7" y="670.0"></text>
</g>
<g>
<title>__generic_file_write_iter (15 samples, 1.38%)</title><rect x="608.7" y="643.0" width="16.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="611.7" y="654.0"></text>
</g>
<g>
<title>generic_perform_write (13 samples, 1.20%)</title><rect x="609.8" y="627.0" width="14.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="612.8" y="638.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (1 samples, 0.09%)</title><rect x="610.9" y="611.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="613.9" y="622.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.09%)</title><rect x="612.0" y="611.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="615.0" y="622.0"></text>
</g>
<g>
<title>shmem_write_begin (8 samples, 0.74%)</title><rect x="613.1" y="611.0" width="8.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="616.1" y="622.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (8 samples, 0.74%)</title><rect x="613.1" y="595.0" width="8.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="616.1" y="606.0"></text>
</g>
<g>
<title>find_lock_entry (4 samples, 0.37%)</title><rect x="614.2" y="579.0" width="4.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="617.2" y="590.0"></text>
</g>
<g>
<title>find_get_entry (4 samples, 0.37%)</title><rect x="614.2" y="563.0" width="4.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="617.2" y="574.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.18%)</title><rect x="616.3" y="547.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="619.3" y="558.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.18%)</title><rect x="618.5" y="579.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="621.5" y="590.0"></text>
</g>
<g>
<title>shmem_alloc_and_acct_page (1 samples, 0.09%)</title><rect x="620.7" y="579.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="623.7" y="590.0"></text>
</g>
<g>
<title>shmem_alloc_page (1 samples, 0.09%)</title><rect x="620.7" y="563.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="623.7" y="574.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.09%)</title><rect x="620.7" y="547.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="623.7" y="558.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.09%)</title><rect x="620.7" y="531.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="623.7" y="542.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.09%)</title><rect x="620.7" y="515.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="623.7" y="526.0"></text>
</g>
<g>
<title>clear_page_erms (1 samples, 0.09%)</title><rect x="620.7" y="499.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="623.7" y="510.0"></text>
</g>
<g>
<title>shmem_write_end (1 samples, 0.09%)</title><rect x="621.8" y="611.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="624.8" y="622.0"></text>
</g>
<g>
<title>__set_page_dirty_no_writeback (1 samples, 0.09%)</title><rect x="621.8" y="595.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="624.8" y="606.0"></text>
</g>
<g>
<title>unlock_page (1 samples, 0.09%)</title><rect x="622.9" y="611.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="625.9" y="622.0"></text>
</g>
<g>
<title>shmem_write_end (1 samples, 0.09%)</title><rect x="623.9" y="627.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="626.9" y="638.0"></text>
</g>
<g>
<title>down_write (1 samples, 0.09%)</title><rect x="625.0" y="643.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="628.0" y="654.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.09%)</title><rect x="626.1" y="691.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="629.1" y="702.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.18%)</title><rect x="627.2" y="691.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="630.2" y="702.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.18%)</title><rect x="627.2" y="675.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="630.2" y="686.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.09%)</title><rect x="627.2" y="659.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="630.2" y="670.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.09%)</title><rect x="627.2" y="643.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="630.2" y="654.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.09%)</title><rect x="628.3" y="659.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="631.3" y="670.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.09%)</title><rect x="629.4" y="787.0" width="1.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="632.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.55%)</title><rect x="630.5" y="835.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="633.5" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.18%)</title><rect x="630.5" y="819.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="633.5" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.09%)</title><rect x="631.6" y="803.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="634.6" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.37%)</title><rect x="632.7" y="819.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="635.7" y="830.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.18%)</title><rect x="634.8" y="803.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="637.8" y="814.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.18%)</title><rect x="634.8" y="787.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="637.8" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.18%)</title><rect x="634.8" y="771.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="637.8" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.18%)</title><rect x="634.8" y="755.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="637.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.09%)</title><rect x="637.0" y="835.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="640.0" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.09%)</title><rect x="637.0" y="819.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="640.0" y="830.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.09%)</title><rect x="637.0" y="803.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="640.0" y="814.0"></text>
</g>
<g>
<title>[pool-3-thread-1 tid=60619] (126 samples, 11.62%)</title><rect x="638.1" y="995.0" width="137.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="641.1" y="1006.0">[pool-3-thread-1 ..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.09%)</title><rect x="638.1" y="979.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="641.1" y="990.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.09%)</title><rect x="638.1" y="963.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="641.1" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.09%)</title><rect x="638.1" y="947.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="641.1" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.09%)</title><rect x="638.1" y="931.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="641.1" y="942.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="638.1" y="915.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="641.1" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="638.1" y="899.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="641.1" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="638.1" y="883.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="641.1" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.09%)</title><rect x="638.1" y="867.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="641.1" y="878.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="638.1" y="851.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="641.1" y="862.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="638.1" y="835.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="641.1" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.run (125 samples, 11.53%)</title><rect x="639.2" y="979.0" width="136.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="642.2" y="990.0">java/lang/Thread...</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (125 samples, 11.53%)</title><rect x="639.2" y="963.0" width="136.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.2" y="974.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (125 samples, 11.53%)</title><rect x="639.2" y="947.0" width="136.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.2" y="958.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.09%)</title><rect x="639.2" y="931.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.09%)</title><rect x="639.2" y="915.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="642.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.09%)</title><rect x="639.2" y="899.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="642.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.09%)</title><rect x="639.2" y="883.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.2" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.09%)</title><rect x="639.2" y="867.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="642.2" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.09%)</title><rect x="639.2" y="851.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="642.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (37 samples, 3.41%)</title><rect x="640.3" y="931.0" width="40.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="643.3" y="942.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (37 samples, 3.41%)</title><rect x="640.3" y="915.0" width="40.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.3" y="926.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (28 samples, 2.58%)</title><rect x="641.4" y="899.0" width="30.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="644.4" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.28%)</title><rect x="641.4" y="883.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="644.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.28%)</title><rect x="641.4" y="867.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="644.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.28%)</title><rect x="641.4" y="851.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="644.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.28%)</title><rect x="641.4" y="835.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="644.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.28%)</title><rect x="641.4" y="819.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="644.4" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.28%)</title><rect x="641.4" y="803.0" width="3.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="644.4" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.28%)</title><rect x="641.4" y="787.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="644.4" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.28%)</title><rect x="641.4" y="771.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="644.4" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.28%)</title><rect x="641.4" y="755.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="644.4" y="766.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.28%)</title><rect x="641.4" y="739.0" width="3.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="644.4" y="750.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.28%)</title><rect x="641.4" y="723.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="644.4" y="734.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.18%)</title><rect x="642.5" y="707.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="645.5" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.18%)</title><rect x="642.5" y="691.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="645.5" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.18%)</title><rect x="642.5" y="675.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="645.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (25 samples, 2.31%)</title><rect x="644.6" y="883.0" width="27.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="647.6" y="894.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (25 samples, 2.31%)</title><rect x="644.6" y="867.0" width="27.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="647.6" y="878.0">j..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.09%)</title><rect x="644.6" y="851.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="647.6" y="862.0"></text>
</g>
<g>
<title>Unsafe_Park (13 samples, 1.20%)</title><rect x="645.7" y="851.0" width="14.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="648.7" y="862.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.28%)</title><rect x="645.7" y="835.0" width="3.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="648.7" y="846.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.09%)</title><rect x="647.9" y="819.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="650.9" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (10 samples, 0.92%)</title><rect x="649.0" y="835.0" width="10.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="652.0" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.28%)</title><rect x="656.6" y="819.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="659.6" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.28%)</title><rect x="656.6" y="803.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="659.6" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.09%)</title><rect x="658.8" y="787.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="661.8" y="798.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="658.8" y="771.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="661.8" y="782.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="658.8" y="755.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="661.8" y="766.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.09%)</title><rect x="658.8" y="739.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="661.8" y="750.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 1.01%)</title><rect x="659.9" y="851.0" width="11.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="662.9" y="862.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.09%)</title><rect x="659.9" y="835.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="662.9" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_wait (9 samples, 0.83%)</title><rect x="661.0" y="835.0" width="9.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="664.0" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.28%)</title><rect x="667.5" y="819.0" width="3.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="670.5" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.28%)</title><rect x="667.5" y="803.0" width="3.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="670.5" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.09%)</title><rect x="670.8" y="835.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="673.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.28%)</title><rect x="671.8" y="899.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="674.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.28%)</title><rect x="671.8" y="883.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="674.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.28%)</title><rect x="671.8" y="867.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="674.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.18%)</title><rect x="672.9" y="851.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="675.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.46%)</title><rect x="675.1" y="899.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="678.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.46%)</title><rect x="675.1" y="883.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="678.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.46%)</title><rect x="675.1" y="867.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="678.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.46%)</title><rect x="675.1" y="851.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="678.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.46%)</title><rect x="675.1" y="835.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="678.1" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.09%)</title><rect x="675.1" y="819.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="678.1" y="830.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.09%)</title><rect x="676.2" y="819.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="679.2" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.28%)</title><rect x="677.3" y="819.0" width="3.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="680.3" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.28%)</title><rect x="677.3" y="803.0" width="3.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="680.3" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.28%)</title><rect x="677.3" y="787.0" width="3.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="680.3" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.18%)</title><rect x="678.4" y="771.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="681.4" y="782.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.18%)</title><rect x="678.4" y="755.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="681.4" y="766.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.18%)</title><rect x="678.4" y="739.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="681.4" y="750.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.18%)</title><rect x="678.4" y="723.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="681.4" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.18%)</title><rect x="678.4" y="707.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="681.4" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.18%)</title><rect x="678.4" y="691.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="681.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.09%)</title><rect x="680.6" y="931.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="683.6" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$105/1788683425.run (86 samples, 7.93%)</title><rect x="681.6" y="931.0" width="93.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="684.6" y="942.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.lambda$put$1 (86 samples, 7.93%)</title><rect x="681.6" y="915.0" width="93.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="684.6" y="926.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (73 samples, 6.73%)</title><rect x="681.6" y="899.0" width="79.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="684.6" y="910.0">one/nio/h..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.28%)</title><rect x="683.8" y="883.0" width="3.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="686.8" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.28%)</title><rect x="683.8" y="867.0" width="3.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="686.8" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.18%)</title><rect x="684.9" y="851.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="687.9" y="862.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.09%)</title><rect x="684.9" y="835.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="687.9" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.09%)</title><rect x="686.0" y="835.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="689.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.09%)</title><rect x="687.1" y="883.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="690.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.09%)</title><rect x="687.1" y="867.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="690.1" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.09%)</title><rect x="687.1" y="851.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="690.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (66 samples, 6.09%)</title><rect x="688.2" y="883.0" width="71.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.2" y="894.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.write (66 samples, 6.09%)</title><rect x="688.2" y="867.0" width="71.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="691.2" y="878.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.write (66 samples, 6.09%)</title><rect x="688.2" y="851.0" width="71.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.2" y="862.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (66 samples, 6.09%)</title><rect x="688.2" y="835.0" width="71.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.2" y="846.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (66 samples, 6.09%)</title><rect x="688.2" y="819.0" width="71.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.2" y="830.0">one/nio/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (7 samples, 0.65%)</title><rect x="689.3" y="803.0" width="7.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="692.3" y="814.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.09%)</title><rect x="693.6" y="787.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="696.6" y="798.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.09%)</title><rect x="694.7" y="787.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="697.7" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.09%)</title><rect x="695.8" y="787.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="698.8" y="798.0"></text>
</g>
<g>
<title>__send (58 samples, 5.35%)</title><rect x="696.9" y="803.0" width="63.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="699.9" y="814.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (56 samples, 5.17%)</title><rect x="699.1" y="787.0" width="60.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="702.1" y="798.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (56 samples, 5.17%)</title><rect x="699.1" y="771.0" width="60.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="702.1" y="782.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_sendto (54 samples, 4.98%)</title><rect x="701.2" y="755.0" width="58.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="704.2" y="766.0">__x64_..</text>
</g>
<g>
<title>__sys_sendto (54 samples, 4.98%)</title><rect x="701.2" y="739.0" width="58.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="704.2" y="750.0">__sys_..</text>
</g>
<g>
<title>sock_sendmsg (53 samples, 4.89%)</title><rect x="702.3" y="723.0" width="57.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="705.3" y="734.0">sock_s..</text>
</g>
<g>
<title>inet6_sendmsg (53 samples, 4.89%)</title><rect x="702.3" y="707.0" width="57.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="705.3" y="718.0">inet6_..</text>
</g>
<g>
<title>tcp_sendmsg (52 samples, 4.80%)</title><rect x="703.4" y="691.0" width="56.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="706.4" y="702.0">tcp_se..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.09%)</title><rect x="703.4" y="675.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="706.4" y="686.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.09%)</title><rect x="704.5" y="675.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="707.5" y="686.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (50 samples, 4.61%)</title><rect x="705.6" y="675.0" width="54.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="708.6" y="686.0">tcp_s..</text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.65%)</title><rect x="706.7" y="659.0" width="7.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="709.7" y="670.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.55%)</title><rect x="707.8" y="643.0" width="6.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="710.8" y="654.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.18%)</title><rect x="707.8" y="627.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="710.8" y="638.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.18%)</title><rect x="707.8" y="611.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="710.8" y="622.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.18%)</title><rect x="709.9" y="627.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="712.9" y="638.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.09%)</title><rect x="712.1" y="627.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="715.1" y="638.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.09%)</title><rect x="713.2" y="627.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="716.2" y="638.0"></text>
</g>
<g>
<title>tcp_push (41 samples, 3.78%)</title><rect x="714.3" y="659.0" width="44.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="717.3" y="670.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (41 samples, 3.78%)</title><rect x="714.3" y="643.0" width="44.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="717.3" y="654.0">__tc..</text>
</g>
<g>
<title>tcp_write_xmit (41 samples, 3.78%)</title><rect x="714.3" y="627.0" width="44.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="717.3" y="638.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (36 samples, 3.32%)</title><rect x="715.4" y="611.0" width="39.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="718.4" y="622.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (33 samples, 3.04%)</title><rect x="718.7" y="595.0" width="35.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="721.7" y="606.0">ip_..</text>
</g>
<g>
<title>__ip_queue_xmit (32 samples, 2.95%)</title><rect x="718.7" y="579.0" width="34.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="721.7" y="590.0">__..</text>
</g>
<g>
<title>ip_local_out (32 samples, 2.95%)</title><rect x="718.7" y="563.0" width="34.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="721.7" y="574.0">ip..</text>
</g>
<g>
<title>ip_output (32 samples, 2.95%)</title><rect x="718.7" y="547.0" width="34.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="721.7" y="558.0">ip..</text>
</g>
<g>
<title>ip_finish_output (32 samples, 2.95%)</title><rect x="718.7" y="531.0" width="34.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="721.7" y="542.0">ip..</text>
</g>
<g>
<title>__ip_finish_output (32 samples, 2.95%)</title><rect x="718.7" y="515.0" width="34.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="721.7" y="526.0">__..</text>
</g>
<g>
<title>ip_finish_output2 (32 samples, 2.95%)</title><rect x="718.7" y="499.0" width="34.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="721.7" y="510.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (26 samples, 2.40%)</title><rect x="718.7" y="483.0" width="28.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="721.7" y="494.0">__..</text>
</g>
<g>
<title>do_softirq.part.0 (26 samples, 2.40%)</title><rect x="718.7" y="467.0" width="28.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="721.7" y="478.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (26 samples, 2.40%)</title><rect x="718.7" y="451.0" width="28.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="721.7" y="462.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (26 samples, 2.40%)</title><rect x="718.7" y="435.0" width="28.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="721.7" y="446.0">__..</text>
</g>
<g>
<title>net_rx_action (25 samples, 2.31%)</title><rect x="719.7" y="419.0" width="27.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="722.7" y="430.0">n..</text>
</g>
<g>
<title>process_backlog (25 samples, 2.31%)</title><rect x="719.7" y="403.0" width="27.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="722.7" y="414.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (22 samples, 2.03%)</title><rect x="721.9" y="387.0" width="24.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="724.9" y="398.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (22 samples, 2.03%)</title><rect x="721.9" y="371.0" width="24.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="724.9" y="382.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.09%)</title><rect x="724.1" y="355.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="727.1" y="366.0"></text>
</g>
<g>
<title>ip_rcv (19 samples, 1.75%)</title><rect x="725.2" y="355.0" width="20.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="728.2" y="366.0"></text>
</g>
<g>
<title>ip_rcv_finish (19 samples, 1.75%)</title><rect x="725.2" y="339.0" width="20.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="728.2" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver (19 samples, 1.75%)</title><rect x="725.2" y="323.0" width="20.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="728.2" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (19 samples, 1.75%)</title><rect x="725.2" y="307.0" width="20.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="728.2" y="318.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (19 samples, 1.75%)</title><rect x="725.2" y="291.0" width="20.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="728.2" y="302.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.09%)</title><rect x="726.3" y="275.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="729.3" y="286.0"></text>
</g>
<g>
<title>tcp_v4_rcv (17 samples, 1.57%)</title><rect x="727.4" y="275.0" width="18.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="730.4" y="286.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (17 samples, 1.57%)</title><rect x="727.4" y="259.0" width="18.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="730.4" y="270.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.09%)</title><rect x="727.4" y="243.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="730.4" y="254.0"></text>
</g>
<g>
<title>tcp_rcv_established (16 samples, 1.48%)</title><rect x="728.5" y="243.0" width="17.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="731.5" y="254.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.09%)</title><rect x="728.5" y="227.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="731.5" y="238.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.09%)</title><rect x="728.5" y="211.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="731.5" y="222.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.09%)</title><rect x="728.5" y="195.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="731.5" y="206.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.09%)</title><rect x="728.5" y="179.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="731.5" y="190.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.09%)</title><rect x="728.5" y="163.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="731.5" y="174.0"></text>
</g>
<g>
<title>tcp_ack (11 samples, 1.01%)</title><rect x="729.5" y="227.0" width="12.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="732.5" y="238.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.09%)</title><rect x="731.7" y="211.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="734.7" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.74%)</title><rect x="732.8" y="211.0" width="8.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="735.8" y="222.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.28%)</title><rect x="736.1" y="195.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="739.1" y="206.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.09%)</title><rect x="736.1" y="179.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="739.1" y="190.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.09%)</title><rect x="736.1" y="163.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="739.1" y="174.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.09%)</title><rect x="737.2" y="179.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="740.2" y="190.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.09%)</title><rect x="737.2" y="163.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="740.2" y="174.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.09%)</title><rect x="738.2" y="179.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="741.2" y="190.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.09%)</title><rect x="739.3" y="195.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="742.3" y="206.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.09%)</title><rect x="740.4" y="195.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="743.4" y="206.0"></text>
</g>
<g>
<title>tcp_data_ready (4 samples, 0.37%)</title><rect x="741.5" y="227.0" width="4.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="744.5" y="238.0"></text>
</g>
<g>
<title>sock_def_readable (4 samples, 0.37%)</title><rect x="741.5" y="211.0" width="4.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="744.5" y="222.0"></text>
</g>
<g>
<title>__wake_up_sync_key (4 samples, 0.37%)</title><rect x="741.5" y="195.0" width="4.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="744.5" y="206.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.37%)</title><rect x="741.5" y="179.0" width="4.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="744.5" y="190.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.37%)</title><rect x="741.5" y="163.0" width="4.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="744.5" y="174.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.09%)</title><rect x="745.9" y="387.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="748.9" y="398.0"></text>
</g>
<g>
<title>dev_queue_xmit (6 samples, 0.55%)</title><rect x="747.0" y="483.0" width="6.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="750.0" y="494.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.37%)</title><rect x="747.0" y="467.0" width="4.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="750.0" y="478.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.09%)</title><rect x="750.2" y="451.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="753.2" y="462.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.09%)</title><rect x="750.2" y="435.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="753.2" y="446.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.09%)</title><rect x="750.2" y="419.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="753.2" y="430.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.09%)</title><rect x="750.2" y="403.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="753.2" y="414.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.09%)</title><rect x="750.2" y="387.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="753.2" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.09%)</title><rect x="751.3" y="467.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="754.3" y="478.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.09%)</title><rect x="752.4" y="467.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="755.4" y="478.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.09%)</title><rect x="753.5" y="579.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="756.5" y="590.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.09%)</title><rect x="754.6" y="611.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="757.6" y="622.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.09%)</title><rect x="755.7" y="611.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="758.7" y="622.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.18%)</title><rect x="756.8" y="611.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="759.8" y="622.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.18%)</title><rect x="756.8" y="595.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="759.8" y="606.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.18%)</title><rect x="756.8" y="579.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="759.8" y="590.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.18%)</title><rect x="756.8" y="563.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="759.8" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.09%)</title><rect x="757.8" y="547.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="760.8" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.09%)</title><rect x="758.9" y="659.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="761.9" y="670.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.09%)</title><rect x="758.9" y="643.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="761.9" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.09%)</title><rect x="760.0" y="883.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="763.0" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.upsert (13 samples, 1.20%)</title><rect x="761.1" y="899.0" width="14.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="764.1" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.upsert (13 samples, 1.20%)</title><rect x="761.1" y="883.0" width="14.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="764.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 0.18%)</title><rect x="761.1" y="867.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="764.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (2 samples, 0.18%)</title><rect x="761.1" y="851.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="764.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (2 samples, 0.18%)</title><rect x="761.1" y="835.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="764.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.18%)</title><rect x="761.1" y="819.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="764.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (1 samples, 0.09%)</title><rect x="761.1" y="803.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="764.1" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="761.1" y="787.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="764.1" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="762.2" y="803.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="765.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.upsert (10 samples, 0.92%)</title><rect x="763.3" y="867.0" width="10.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="766.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (10 samples, 0.92%)</title><rect x="763.3" y="851.0" width="10.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="766.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (10 samples, 0.92%)</title><rect x="763.3" y="835.0" width="10.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="766.3" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.09%)</title><rect x="763.3" y="819.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="766.3" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.09%)</title><rect x="763.3" y="803.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="766.3" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.09%)</title><rect x="764.4" y="819.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="767.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (2 samples, 0.18%)</title><rect x="765.5" y="819.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="768.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.55%)</title><rect x="767.6" y="819.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="770.6" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.46%)</title><rect x="768.7" y="803.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="771.7" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.37%)</title><rect x="769.8" y="787.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="772.8" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.18%)</title><rect x="770.9" y="771.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="773.9" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.09%)</title><rect x="772.0" y="755.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.0" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.09%)</title><rect x="773.1" y="771.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.1" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.09%)</title><rect x="773.1" y="755.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="776.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.putIntoFlushQueue (1 samples, 0.09%)</title><rect x="774.2" y="867.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="777.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (1 samples, 0.09%)</title><rect x="774.2" y="851.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.09%)</title><rect x="774.2" y="835.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="777.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.09%)</title><rect x="774.2" y="819.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="777.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.09%)</title><rect x="774.2" y="803.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="777.2" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.09%)</title><rect x="774.2" y="787.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="777.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.09%)</title><rect x="774.2" y="771.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="777.2" y="782.0"></text>
</g>
<g>
<title>[pool-3-thread-2 tid=60616] (127 samples, 11.72%)</title><rect x="775.3" y="995.0" width="138.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="778.3" y="1006.0">[pool-3-thread-2 ..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.28%)</title><rect x="775.3" y="979.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="778.3" y="990.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.28%)</title><rect x="775.3" y="963.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="778.3" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (3 samples, 0.28%)</title><rect x="775.3" y="947.0" width="3.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="778.3" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (3 samples, 0.28%)</title><rect x="775.3" y="931.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="778.3" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.18%)</title><rect x="775.3" y="915.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="778.3" y="926.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="777.4" y="915.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="780.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="778.5" y="979.0" width="1.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="781.5" y="990.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="778.5" y="963.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="781.5" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="778.5" y="947.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="781.5" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="778.5" y="931.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="781.5" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.09%)</title><rect x="778.5" y="915.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="781.5" y="926.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="778.5" y="899.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="781.5" y="910.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.09%)</title><rect x="778.5" y="883.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="781.5" y="894.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.09%)</title><rect x="778.5" y="867.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="781.5" y="878.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (1 samples, 0.09%)</title><rect x="778.5" y="851.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="781.5" y="862.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.09%)</title><rect x="778.5" y="835.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="781.5" y="846.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.09%)</title><rect x="778.5" y="819.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="781.5" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.run (123 samples, 11.35%)</title><rect x="779.6" y="979.0" width="133.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="782.6" y="990.0">java/lang/Thread...</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (123 samples, 11.35%)</title><rect x="779.6" y="963.0" width="133.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="782.6" y="974.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (123 samples, 11.35%)</title><rect x="779.6" y="947.0" width="133.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="782.6" y="958.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.09%)</title><rect x="779.6" y="931.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="782.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.09%)</title><rect x="779.6" y="915.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="782.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.09%)</title><rect x="779.6" y="899.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="782.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.09%)</title><rect x="779.6" y="883.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.6" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.09%)</title><rect x="779.6" y="867.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="782.6" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.09%)</title><rect x="779.6" y="851.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="782.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (35 samples, 3.23%)</title><rect x="780.7" y="931.0" width="38.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="783.7" y="942.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (34 samples, 3.14%)</title><rect x="781.8" y="915.0" width="37.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="784.8" y="926.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (23 samples, 2.12%)</title><rect x="781.8" y="899.0" width="25.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="784.8" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.09%)</title><rect x="781.8" y="883.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="784.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.09%)</title><rect x="781.8" y="867.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="784.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.18%)</title><rect x="782.9" y="883.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="785.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.18%)</title><rect x="782.9" y="867.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="785.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.18%)</title><rect x="782.9" y="851.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="785.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.18%)</title><rect x="782.9" y="835.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="785.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.18%)</title><rect x="782.9" y="819.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="785.9" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.18%)</title><rect x="782.9" y="803.0" width="2.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="785.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (20 samples, 1.85%)</title><rect x="785.1" y="883.0" width="21.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="788.1" y="894.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (20 samples, 1.85%)</title><rect x="785.1" y="867.0" width="21.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="788.1" y="878.0">j..</text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.65%)</title><rect x="785.1" y="851.0" width="7.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="788.1" y="862.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.18%)</title><rect x="786.1" y="835.0" width="2.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="789.1" y="846.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (4 samples, 0.37%)</title><rect x="788.3" y="835.0" width="4.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="791.3" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.18%)</title><rect x="790.5" y="819.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="793.5" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.09%)</title><rect x="790.5" y="803.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="793.5" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="791.6" y="803.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="794.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 1.20%)</title><rect x="792.7" y="851.0" width="14.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="795.7" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_wait (13 samples, 1.20%)</title><rect x="792.7" y="835.0" width="14.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="795.7" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.46%)</title><rect x="801.4" y="819.0" width="5.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="804.4" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.09%)</title><rect x="801.4" y="803.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="804.4" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.37%)</title><rect x="802.5" y="803.0" width="4.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="805.5" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.37%)</title><rect x="802.5" y="787.0" width="4.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="805.5" y="798.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.37%)</title><rect x="802.5" y="771.0" width="4.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="805.5" y="782.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.28%)</title><rect x="803.6" y="755.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="806.6" y="766.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.09%)</title><rect x="805.7" y="739.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="808.7" y="750.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.09%)</title><rect x="805.7" y="723.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="808.7" y="734.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.09%)</title><rect x="805.7" y="707.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="808.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.28%)</title><rect x="806.8" y="899.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="809.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.28%)</title><rect x="806.8" y="883.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="809.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.28%)</title><rect x="806.8" y="867.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="809.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.18%)</title><rect x="807.9" y="851.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="810.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.18%)</title><rect x="807.9" y="835.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="810.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (1 samples, 0.09%)</title><rect x="809.0" y="819.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="812.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.65%)</title><rect x="810.1" y="899.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="813.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.65%)</title><rect x="810.1" y="883.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="813.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.65%)</title><rect x="810.1" y="867.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="813.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.65%)</title><rect x="810.1" y="851.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="813.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.65%)</title><rect x="810.1" y="835.0" width="7.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="813.1" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.09%)</title><rect x="810.1" y="819.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="813.1" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.09%)</title><rect x="811.2" y="819.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="814.2" y="830.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.09%)</title><rect x="812.3" y="819.0" width="1.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="815.3" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.37%)</title><rect x="813.4" y="819.0" width="4.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="816.4" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.28%)</title><rect x="814.4" y="803.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="817.4" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.28%)</title><rect x="814.4" y="787.0" width="3.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="817.4" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.28%)</title><rect x="814.4" y="771.0" width="3.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="817.4" y="782.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.28%)</title><rect x="814.4" y="755.0" width="3.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="817.4" y="766.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.28%)</title><rect x="814.4" y="739.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="817.4" y="750.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.28%)</title><rect x="814.4" y="723.0" width="3.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="817.4" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.28%)</title><rect x="814.4" y="707.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="817.4" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.28%)</title><rect x="814.4" y="691.0" width="3.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="817.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="817.7" y="899.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="820.7" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$105/1788683425.run (87 samples, 8.03%)</title><rect x="818.8" y="931.0" width="94.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="821.8" y="942.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.lambda$put$1 (86 samples, 7.93%)</title><rect x="819.9" y="915.0" width="93.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="822.9" y="926.0">ru/mail/pol..</text>
</g>
<g>
<title>java/lang/String.strip (1 samples, 0.09%)</title><rect x="819.9" y="899.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="822.9" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.strip (1 samples, 0.09%)</title><rect x="819.9" y="883.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="822.9" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.lastIndexOfNonWhitespace (1 samples, 0.09%)</title><rect x="819.9" y="867.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="822.9" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.09%)</title><rect x="821.0" y="899.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="824.0" y="910.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.09%)</title><rect x="821.0" y="883.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="824.0" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (70 samples, 6.46%)</title><rect x="822.1" y="899.0" width="76.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="825.1" y="910.0">one/nio/..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.09%)</title><rect x="823.2" y="883.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="826.2" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.09%)</title><rect x="823.2" y="867.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="826.2" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.09%)</title><rect x="823.2" y="851.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="826.2" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.09%)</title><rect x="823.2" y="835.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="826.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.09%)</title><rect x="824.2" y="883.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="827.2" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.09%)</title><rect x="824.2" y="867.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="827.2" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.09%)</title><rect x="824.2" y="851.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="827.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.09%)</title><rect x="824.2" y="835.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="827.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (64 samples, 5.90%)</title><rect x="825.3" y="883.0" width="69.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="828.3" y="894.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.18%)</title><rect x="825.3" y="867.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="828.3" y="878.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.18%)</title><rect x="825.3" y="851.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="828.3" y="862.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.09%)</title><rect x="825.3" y="835.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="828.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.09%)</title><rect x="826.4" y="835.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="829.4" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.09%)</title><rect x="826.4" y="819.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="829.4" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.09%)</title><rect x="826.4" y="803.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="829.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.09%)</title><rect x="826.4" y="787.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="829.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.09%)</title><rect x="826.4" y="771.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="829.4" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (62 samples, 5.72%)</title><rect x="827.5" y="867.0" width="67.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.5" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.write (62 samples, 5.72%)</title><rect x="827.5" y="851.0" width="67.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="830.5" y="862.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (62 samples, 5.72%)</title><rect x="827.5" y="835.0" width="67.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="830.5" y="846.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (62 samples, 5.72%)</title><rect x="827.5" y="819.0" width="67.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="830.5" y="830.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.37%)</title><rect x="827.5" y="803.0" width="4.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="830.5" y="814.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.09%)</title><rect x="828.6" y="787.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="831.6" y="798.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.18%)</title><rect x="829.7" y="787.0" width="2.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="832.7" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.09%)</title><rect x="829.7" y="771.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="832.7" y="782.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.09%)</title><rect x="830.8" y="771.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="833.8" y="782.0"></text>
</g>
<g>
<title>__send (57 samples, 5.26%)</title><rect x="831.9" y="803.0" width="62.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="834.9" y="814.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (55 samples, 5.07%)</title><rect x="834.0" y="787.0" width="59.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="837.0" y="798.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (55 samples, 5.07%)</title><rect x="834.0" y="771.0" width="59.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="837.0" y="782.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_sendto (55 samples, 5.07%)</title><rect x="834.0" y="755.0" width="59.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="837.0" y="766.0">__x64_..</text>
</g>
<g>
<title>__sys_sendto (55 samples, 5.07%)</title><rect x="834.0" y="739.0" width="59.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="837.0" y="750.0">__sys_..</text>
</g>
<g>
<title>sock_sendmsg (53 samples, 4.89%)</title><rect x="834.0" y="723.0" width="57.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="837.0" y="734.0">sock_s..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.18%)</title><rect x="834.0" y="707.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="837.0" y="718.0"></text>
</g>
<g>
<title>inet6_sendmsg (51 samples, 4.70%)</title><rect x="836.2" y="707.0" width="55.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="839.2" y="718.0">inet6..</text>
</g>
<g>
<title>release_sock (1 samples, 0.09%)</title><rect x="836.2" y="691.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="839.2" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg (50 samples, 4.61%)</title><rect x="837.3" y="691.0" width="54.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="840.3" y="702.0">tcp_s..</text>
</g>
<g>
<title>tcp_sendmsg_locked (50 samples, 4.61%)</title><rect x="837.3" y="675.0" width="54.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="840.3" y="686.0">tcp_s..</text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.09%)</title><rect x="838.4" y="659.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="841.4" y="670.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.09%)</title><rect x="838.4" y="643.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="841.4" y="654.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.09%)</title><rect x="838.4" y="627.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="841.4" y="638.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.09%)</title><rect x="838.4" y="611.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="841.4" y="622.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.18%)</title><rect x="839.5" y="659.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="842.5" y="670.0"></text>
</g>
<g>
<title>tcp_push (46 samples, 4.24%)</title><rect x="841.7" y="659.0" width="50.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="844.7" y="670.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (46 samples, 4.24%)</title><rect x="841.7" y="643.0" width="50.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="844.7" y="654.0">__tcp..</text>
</g>
<g>
<title>tcp_write_xmit (45 samples, 4.15%)</title><rect x="842.7" y="627.0" width="49.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="845.7" y="638.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (39 samples, 3.60%)</title><rect x="844.9" y="611.0" width="42.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="847.9" y="622.0">__tc..</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.09%)</title><rect x="846.0" y="595.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="849.0" y="606.0"></text>
</g>
<g>
<title>ip_queue_xmit (36 samples, 3.32%)</title><rect x="847.1" y="595.0" width="39.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="850.1" y="606.0">ip_..</text>
</g>
<g>
<title>__ip_queue_xmit (35 samples, 3.23%)</title><rect x="847.1" y="579.0" width="38.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="850.1" y="590.0">__i..</text>
</g>
<g>
<title>ip_local_out (34 samples, 3.14%)</title><rect x="847.1" y="563.0" width="37.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="850.1" y="574.0">ip_..</text>
</g>
<g>
<title>ip_output (34 samples, 3.14%)</title><rect x="847.1" y="547.0" width="37.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="850.1" y="558.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (34 samples, 3.14%)</title><rect x="847.1" y="531.0" width="37.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="850.1" y="542.0">ip_..</text>
</g>
<g>
<title>__ip_finish_output (34 samples, 3.14%)</title><rect x="847.1" y="515.0" width="37.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="850.1" y="526.0">__i..</text>
</g>
<g>
<title>ip_finish_output2 (34 samples, 3.14%)</title><rect x="847.1" y="499.0" width="37.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="850.1" y="510.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (30 samples, 2.77%)</title><rect x="848.2" y="483.0" width="32.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="851.2" y="494.0">__..</text>
</g>
<g>
<title>do_softirq.part.0 (30 samples, 2.77%)</title><rect x="848.2" y="467.0" width="32.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="851.2" y="478.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (28 samples, 2.58%)</title><rect x="850.4" y="451.0" width="30.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="853.4" y="462.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (28 samples, 2.58%)</title><rect x="850.4" y="435.0" width="30.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="853.4" y="446.0">__..</text>
</g>
<g>
<title>net_rx_action (28 samples, 2.58%)</title><rect x="850.4" y="419.0" width="30.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="853.4" y="430.0">ne..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.09%)</title><rect x="851.5" y="403.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="854.5" y="414.0"></text>
</g>
<g>
<title>process_backlog (26 samples, 2.40%)</title><rect x="852.5" y="403.0" width="28.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="855.5" y="414.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (26 samples, 2.40%)</title><rect x="852.5" y="387.0" width="28.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="855.5" y="398.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (26 samples, 2.40%)</title><rect x="852.5" y="371.0" width="28.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="855.5" y="382.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.28%)</title><rect x="852.5" y="355.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="855.5" y="366.0"></text>
</g>
<g>
<title>ip_rcv (23 samples, 2.12%)</title><rect x="855.8" y="355.0" width="25.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="858.8" y="366.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (23 samples, 2.12%)</title><rect x="855.8" y="339.0" width="25.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="858.8" y="350.0">i..</text>
</g>
<g>
<title>ip_local_deliver (23 samples, 2.12%)</title><rect x="855.8" y="323.0" width="25.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="858.8" y="334.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (23 samples, 2.12%)</title><rect x="855.8" y="307.0" width="25.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="858.8" y="318.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (23 samples, 2.12%)</title><rect x="855.8" y="291.0" width="25.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="858.8" y="302.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (23 samples, 2.12%)</title><rect x="855.8" y="275.0" width="25.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="858.8" y="286.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.09%)</title><rect x="856.9" y="259.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="859.9" y="270.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (21 samples, 1.94%)</title><rect x="858.0" y="259.0" width="22.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="861.0" y="270.0">t..</text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.09%)</title><rect x="858.0" y="243.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="861.0" y="254.0"></text>
</g>
<g>
<title>tcp_rcv_established (20 samples, 1.85%)</title><rect x="859.1" y="243.0" width="21.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="862.1" y="254.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.09%)</title><rect x="862.3" y="227.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="865.3" y="238.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.09%)</title><rect x="862.3" y="211.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="865.3" y="222.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.09%)</title><rect x="862.3" y="195.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="865.3" y="206.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.09%)</title><rect x="862.3" y="179.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="865.3" y="190.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.09%)</title><rect x="862.3" y="163.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="865.3" y="174.0"></text>
</g>
<g>
<title>tcp_ack (11 samples, 1.01%)</title><rect x="863.4" y="227.0" width="12.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="866.4" y="238.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.09%)</title><rect x="867.8" y="211.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="870.8" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.46%)</title><rect x="868.9" y="211.0" width="5.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="871.9" y="222.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.46%)</title><rect x="868.9" y="195.0" width="5.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="871.9" y="206.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.28%)</title><rect x="868.9" y="179.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="871.9" y="190.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.18%)</title><rect x="870.0" y="163.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="873.0" y="174.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.18%)</title><rect x="872.1" y="179.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="875.1" y="190.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.18%)</title><rect x="872.1" y="163.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="875.1" y="174.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.09%)</title><rect x="873.2" y="147.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="876.2" y="158.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.09%)</title><rect x="873.2" y="131.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="876.2" y="142.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.09%)</title><rect x="874.3" y="211.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="877.3" y="222.0"></text>
</g>
<g>
<title>tcp_data_ready (2 samples, 0.18%)</title><rect x="875.4" y="227.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="878.4" y="238.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.18%)</title><rect x="875.4" y="211.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="878.4" y="222.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.18%)</title><rect x="875.4" y="195.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="878.4" y="206.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.18%)</title><rect x="875.4" y="179.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="878.4" y="190.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.18%)</title><rect x="875.4" y="163.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="878.4" y="174.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.18%)</title><rect x="877.6" y="227.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="880.6" y="238.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.09%)</title><rect x="879.8" y="227.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="882.8" y="238.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.28%)</title><rect x="880.8" y="483.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="883.8" y="494.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.28%)</title><rect x="880.8" y="467.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="883.8" y="478.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.09%)</title><rect x="883.0" y="451.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="886.0" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.09%)</title><rect x="884.1" y="563.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="887.1" y="574.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.09%)</title><rect x="885.2" y="579.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="888.2" y="590.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.09%)</title><rect x="886.3" y="595.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="889.3" y="606.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.09%)</title><rect x="886.3" y="579.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="889.3" y="590.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.09%)</title><rect x="886.3" y="563.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="889.3" y="574.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.09%)</title><rect x="887.4" y="611.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="890.4" y="622.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.09%)</title><rect x="888.5" y="611.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="891.5" y="622.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.09%)</title><rect x="889.6" y="611.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="892.6" y="622.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.09%)</title><rect x="889.6" y="595.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="892.6" y="606.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.09%)</title><rect x="889.6" y="579.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="892.6" y="590.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.09%)</title><rect x="889.6" y="563.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="892.6" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.09%)</title><rect x="889.6" y="547.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="892.6" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.09%)</title><rect x="890.6" y="611.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="893.6" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.18%)</title><rect x="891.7" y="723.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="894.7" y="734.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.18%)</title><rect x="891.7" y="707.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="894.7" y="718.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.18%)</title><rect x="891.7" y="691.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="894.7" y="702.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.18%)</title><rect x="891.7" y="675.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="894.7" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.09%)</title><rect x="893.9" y="803.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="896.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.18%)</title><rect x="895.0" y="883.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="898.0" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.isHttp11 (1 samples, 0.09%)</title><rect x="897.2" y="883.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="900.2" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.09%)</title><rect x="897.2" y="867.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="900.2" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.upsert (14 samples, 1.29%)</title><rect x="898.3" y="899.0" width="15.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="901.3" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.upsert (14 samples, 1.29%)</title><rect x="898.3" y="883.0" width="15.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="901.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.09%)</title><rect x="898.3" y="867.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="901.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.09%)</title><rect x="898.3" y="851.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="901.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.09%)</title><rect x="898.3" y="835.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="901.3" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.09%)</title><rect x="898.3" y="819.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="901.3" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.09%)</title><rect x="898.3" y="803.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="901.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.upsert (13 samples, 1.20%)</title><rect x="899.4" y="867.0" width="14.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="902.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (13 samples, 1.20%)</title><rect x="899.4" y="851.0" width="14.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="902.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (13 samples, 1.20%)</title><rect x="899.4" y="835.0" width="14.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="902.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (7 samples, 0.65%)</title><rect x="902.6" y="819.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="905.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.09%)</title><rect x="909.2" y="803.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="912.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.28%)</title><rect x="910.2" y="819.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="913.2" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.28%)</title><rect x="910.2" y="803.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="913.2" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.28%)</title><rect x="910.2" y="787.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="913.2" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.28%)</title><rect x="910.2" y="771.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="913.2" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.09%)</title><rect x="912.4" y="755.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="915.4" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.09%)</title><rect x="912.4" y="739.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="915.4" y="750.0"></text>
</g>
<g>
<title>[pool-3-thread-3 tid=60617] (127 samples, 11.72%)</title><rect x="913.5" y="995.0" width="138.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="916.5" y="1006.0">[pool-3-thread-3 ..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.09%)</title><rect x="913.5" y="979.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="916.5" y="990.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.09%)</title><rect x="913.5" y="963.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="916.5" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.09%)</title><rect x="913.5" y="947.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="916.5" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.09%)</title><rect x="913.5" y="931.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="916.5" y="942.0"></text>
</g>
<g>
<title>[no_Java_frame] (2 samples, 0.18%)</title><rect x="914.6" y="979.0" width="2.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="917.6" y="990.0"></text>
</g>
<g>
<title>java/lang/Thread.run (124 samples, 11.44%)</title><rect x="916.8" y="979.0" width="135.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="919.8" y="990.0">java/lang/Thread...</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (124 samples, 11.44%)</title><rect x="916.8" y="963.0" width="135.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="919.8" y="974.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (124 samples, 11.44%)</title><rect x="916.8" y="947.0" width="135.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="919.8" y="958.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (28 samples, 2.58%)</title><rect x="916.8" y="931.0" width="30.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="919.8" y="942.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (27 samples, 2.49%)</title><rect x="916.8" y="915.0" width="29.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="919.8" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (22 samples, 2.03%)</title><rect x="916.8" y="899.0" width="23.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="919.8" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.09%)</title><rect x="916.8" y="883.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="919.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.09%)</title><rect x="916.8" y="867.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="919.8" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.09%)</title><rect x="916.8" y="851.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="919.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.18%)</title><rect x="917.9" y="883.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="920.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.18%)</title><rect x="917.9" y="867.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="920.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.18%)</title><rect x="917.9" y="851.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="920.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.18%)</title><rect x="917.9" y="835.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="920.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.18%)</title><rect x="917.9" y="819.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="920.9" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.09%)</title><rect x="918.9" y="803.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="921.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (19 samples, 1.75%)</title><rect x="920.0" y="883.0" width="20.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="923.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (19 samples, 1.75%)</title><rect x="920.0" y="867.0" width="20.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="923.0" y="878.0"></text>
</g>
<g>
<title>Unsafe_Park (9 samples, 0.83%)</title><rect x="921.1" y="851.0" width="9.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="924.1" y="862.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.09%)</title><rect x="921.1" y="835.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="924.1" y="846.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.18%)</title><rect x="922.2" y="835.0" width="2.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="925.2" y="846.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.09%)</title><rect x="924.4" y="835.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="927.4" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.09%)</title><rect x="925.5" y="835.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="928.5" y="846.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (4 samples, 0.37%)</title><rect x="926.6" y="835.0" width="4.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="929.6" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="929.8" y="819.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="932.8" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="929.8" y="803.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="932.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.83%)</title><rect x="930.9" y="851.0" width="9.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="933.9" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.65%)</title><rect x="930.9" y="835.0" width="7.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="933.9" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.18%)</title><rect x="936.4" y="819.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="939.4" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.18%)</title><rect x="936.4" y="803.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="939.4" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.09%)</title><rect x="937.5" y="787.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="940.5" y="798.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="937.5" y="771.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="940.5" y="782.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.09%)</title><rect x="937.5" y="755.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="940.5" y="766.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.09%)</title><rect x="938.5" y="835.0" width="1.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="941.5" y="846.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.09%)</title><rect x="939.6" y="835.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="942.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.18%)</title><rect x="940.7" y="899.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="943.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.18%)</title><rect x="940.7" y="883.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="943.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.18%)</title><rect x="940.7" y="867.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="943.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.09%)</title><rect x="940.7" y="851.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="943.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.09%)</title><rect x="940.7" y="835.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="943.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (1 samples, 0.09%)</title><rect x="940.7" y="819.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="943.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.09%)</title><rect x="941.8" y="851.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="944.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.28%)</title><rect x="942.9" y="899.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="945.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.28%)</title><rect x="942.9" y="883.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="945.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.28%)</title><rect x="942.9" y="867.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="945.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.28%)</title><rect x="942.9" y="851.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="945.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.28%)</title><rect x="942.9" y="835.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="945.9" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.28%)</title><rect x="942.9" y="819.0" width="3.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="945.9" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.18%)</title><rect x="944.0" y="803.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="947.0" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.18%)</title><rect x="944.0" y="787.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="947.0" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.09%)</title><rect x="945.1" y="771.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="948.1" y="782.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="945.1" y="755.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="948.1" y="766.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="945.1" y="739.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="948.1" y="750.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.09%)</title><rect x="945.1" y="723.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="948.1" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="945.1" y="707.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="948.1" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.09%)</title><rect x="945.1" y="691.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="948.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$105/1788683425.run (1 samples, 0.09%)</title><rect x="946.2" y="915.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="949.2" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$105/1788683425.run (96 samples, 8.86%)</title><rect x="947.3" y="931.0" width="104.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="950.3" y="942.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.lambda$put$1 (95 samples, 8.76%)</title><rect x="948.3" y="915.0" width="103.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="951.3" y="926.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (82 samples, 7.56%)</title><rect x="948.3" y="899.0" width="89.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="951.3" y="910.0">one/nio/ht..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.18%)</title><rect x="948.3" y="883.0" width="2.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="951.3" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.18%)</title><rect x="948.3" y="867.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="951.3" y="878.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.09%)</title><rect x="948.3" y="851.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="951.3" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.09%)</title><rect x="949.4" y="851.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="952.4" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.09%)</title><rect x="949.4" y="835.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="952.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.09%)</title><rect x="950.5" y="883.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="953.5" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.09%)</title><rect x="950.5" y="867.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="953.5" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.09%)</title><rect x="950.5" y="851.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="953.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (78 samples, 7.20%)</title><rect x="951.6" y="883.0" width="84.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="954.6" y="894.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.18%)</title><rect x="951.6" y="867.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="954.6" y="878.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="951.6" y="851.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="954.6" y="862.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.09%)</title><rect x="952.7" y="851.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="955.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (76 samples, 7.01%)</title><rect x="953.8" y="867.0" width="82.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="956.8" y="878.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (76 samples, 7.01%)</title><rect x="953.8" y="851.0" width="82.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="956.8" y="862.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (76 samples, 7.01%)</title><rect x="953.8" y="835.0" width="82.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="956.8" y="846.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (76 samples, 7.01%)</title><rect x="953.8" y="819.0" width="82.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="956.8" y="830.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.37%)</title><rect x="954.9" y="803.0" width="4.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="957.9" y="814.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.09%)</title><rect x="956.0" y="787.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="959.0" y="798.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.09%)</title><rect x="957.0" y="787.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="960.0" y="798.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.09%)</title><rect x="958.1" y="787.0" width="1.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="961.1" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.09%)</title><rect x="958.1" y="771.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="961.1" y="782.0"></text>
</g>
<g>
<title>__send (71 samples, 6.55%)</title><rect x="959.2" y="803.0" width="77.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="962.2" y="814.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (69 samples, 6.37%)</title><rect x="961.4" y="787.0" width="75.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="964.4" y="798.0">entry_SY..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.09%)</title><rect x="961.4" y="771.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="964.4" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (68 samples, 6.27%)</title><rect x="962.5" y="771.0" width="74.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="965.5" y="782.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_sendto (65 samples, 6.00%)</title><rect x="965.8" y="755.0" width="70.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="968.8" y="766.0">__x64_sy..</text>
</g>
<g>
<title>__sys_sendto (65 samples, 6.00%)</title><rect x="965.8" y="739.0" width="70.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="968.8" y="750.0">__sys_se..</text>
</g>
<g>
<title>sock_sendmsg (63 samples, 5.81%)</title><rect x="966.8" y="723.0" width="68.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="969.8" y="734.0">sock_se..</text>
</g>
<g>
<title>inet6_sendmsg (63 samples, 5.81%)</title><rect x="966.8" y="707.0" width="68.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="969.8" y="718.0">inet6_s..</text>
</g>
<g>
<title>tcp_sendmsg (63 samples, 5.81%)</title><rect x="966.8" y="691.0" width="68.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="969.8" y="702.0">tcp_sen..</text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.18%)</title><rect x="966.8" y="675.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="969.8" y="686.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.09%)</title><rect x="969.0" y="675.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="972.0" y="686.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (60 samples, 5.54%)</title><rect x="970.1" y="675.0" width="65.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="973.1" y="686.0">tcp_sen..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.09%)</title><rect x="972.3" y="659.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="975.3" y="670.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (9 samples, 0.83%)</title><rect x="973.4" y="659.0" width="9.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="976.4" y="670.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.83%)</title><rect x="973.4" y="643.0" width="9.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="976.4" y="654.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.09%)</title><rect x="973.4" y="627.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="976.4" y="638.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (4 samples, 0.37%)</title><rect x="974.5" y="627.0" width="4.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="977.5" y="638.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.37%)</title><rect x="974.5" y="611.0" width="4.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="977.5" y="622.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.09%)</title><rect x="977.7" y="595.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="980.7" y="606.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.09%)</title><rect x="978.8" y="627.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="981.8" y="638.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.28%)</title><rect x="979.9" y="627.0" width="3.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="982.9" y="638.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.28%)</title><rect x="979.9" y="611.0" width="3.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="982.9" y="622.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.18%)</title><rect x="983.2" y="659.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="986.2" y="670.0"></text>
</g>
<g>
<title>tcp_push (45 samples, 4.15%)</title><rect x="985.4" y="659.0" width="48.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="988.4" y="670.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (45 samples, 4.15%)</title><rect x="985.4" y="643.0" width="48.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="988.4" y="654.0">__tc..</text>
</g>
<g>
<title>tcp_write_xmit (45 samples, 4.15%)</title><rect x="985.4" y="627.0" width="48.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="988.4" y="638.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (39 samples, 3.60%)</title><rect x="989.7" y="611.0" width="42.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="992.7" y="622.0">__tc..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.09%)</title><rect x="991.9" y="595.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="994.9" y="606.0"></text>
</g>
<g>
<title>ip_queue_xmit (34 samples, 3.14%)</title><rect x="993.0" y="595.0" width="37.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="996.0" y="606.0">ip_..</text>
</g>
<g>
<title>__ip_queue_xmit (34 samples, 3.14%)</title><rect x="993.0" y="579.0" width="37.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="996.0" y="590.0">__i..</text>
</g>
<g>
<title>ip_local_out (33 samples, 3.04%)</title><rect x="994.1" y="563.0" width="35.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="997.1" y="574.0">ip_..</text>
</g>
<g>
<title>ip_output (33 samples, 3.04%)</title><rect x="994.1" y="547.0" width="35.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="997.1" y="558.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (33 samples, 3.04%)</title><rect x="994.1" y="531.0" width="35.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="997.1" y="542.0">ip_..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.09%)</title><rect x="994.1" y="515.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="997.1" y="526.0"></text>
</g>
<g>
<title>__ip_finish_output (32 samples, 2.95%)</title><rect x="995.1" y="515.0" width="34.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="998.1" y="526.0">__..</text>
</g>
<g>
<title>ip_finish_output2 (32 samples, 2.95%)</title><rect x="995.1" y="499.0" width="34.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="998.1" y="510.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (29 samples, 2.68%)</title><rect x="996.2" y="483.0" width="31.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="999.2" y="494.0">__..</text>
</g>
<g>
<title>do_softirq.part.0 (29 samples, 2.68%)</title><rect x="996.2" y="467.0" width="31.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="999.2" y="478.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (29 samples, 2.68%)</title><rect x="996.2" y="451.0" width="31.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="999.2" y="462.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (29 samples, 2.68%)</title><rect x="996.2" y="435.0" width="31.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="999.2" y="446.0">__..</text>
</g>
<g>
<title>net_rx_action (28 samples, 2.58%)</title><rect x="997.3" y="419.0" width="30.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1000.3" y="430.0">ne..</text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.18%)</title><rect x="998.4" y="403.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1001.4" y="414.0"></text>
</g>
<g>
<title>process_backlog (25 samples, 2.31%)</title><rect x="1000.6" y="403.0" width="27.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1003.6" y="414.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (25 samples, 2.31%)</title><rect x="1000.6" y="387.0" width="27.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1003.6" y="398.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (24 samples, 2.21%)</title><rect x="1001.7" y="371.0" width="26.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1004.7" y="382.0">_..</text>
</g>
<g>
<title>ip_rcv (24 samples, 2.21%)</title><rect x="1001.7" y="355.0" width="26.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1004.7" y="366.0">i..</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.09%)</title><rect x="1001.7" y="339.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1004.7" y="350.0"></text>
</g>
<g>
<title>ip_rcv_finish (23 samples, 2.12%)</title><rect x="1002.8" y="339.0" width="25.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1005.8" y="350.0">i..</text>
</g>
<g>
<title>ip_local_deliver (23 samples, 2.12%)</title><rect x="1002.8" y="323.0" width="25.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1005.8" y="334.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (23 samples, 2.12%)</title><rect x="1002.8" y="307.0" width="25.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1005.8" y="318.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (23 samples, 2.12%)</title><rect x="1002.8" y="291.0" width="25.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1005.8" y="302.0">i..</text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.09%)</title><rect x="1002.8" y="275.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1005.8" y="286.0"></text>
</g>
<g>
<title>tcp_v4_rcv (22 samples, 2.03%)</title><rect x="1003.9" y="275.0" width="23.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1006.9" y="286.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.18%)</title><rect x="1003.9" y="259.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1006.9" y="270.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.28%)</title><rect x="1006.0" y="259.0" width="3.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1009.0" y="270.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.09%)</title><rect x="1006.0" y="243.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1009.0" y="254.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (2 samples, 0.18%)</title><rect x="1007.1" y="243.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1010.1" y="254.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (17 samples, 1.57%)</title><rect x="1009.3" y="259.0" width="18.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1012.3" y="270.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.09%)</title><rect x="1009.3" y="243.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1012.3" y="254.0"></text>
</g>
<g>
<title>tcp_rcv_established (16 samples, 1.48%)</title><rect x="1010.4" y="243.0" width="17.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1013.4" y="254.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.18%)</title><rect x="1012.6" y="227.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1015.6" y="238.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.18%)</title><rect x="1012.6" y="211.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1015.6" y="222.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.18%)</title><rect x="1012.6" y="195.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1015.6" y="206.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.18%)</title><rect x="1012.6" y="179.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1015.6" y="190.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.18%)</title><rect x="1012.6" y="163.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1015.6" y="174.0"></text>
</g>
<g>
<title>tcp_ack (7 samples, 0.65%)</title><rect x="1014.7" y="227.0" width="7.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1017.7" y="238.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.09%)</title><rect x="1016.9" y="211.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1019.9" y="222.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.09%)</title><rect x="1018.0" y="211.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1021.0" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.28%)</title><rect x="1019.1" y="211.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1022.1" y="222.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.09%)</title><rect x="1020.2" y="195.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1023.2" y="206.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.09%)</title><rect x="1020.2" y="179.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1023.2" y="190.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.09%)</title><rect x="1020.2" y="163.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1023.2" y="174.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.09%)</title><rect x="1021.3" y="195.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1024.3" y="206.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.09%)</title><rect x="1022.4" y="227.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1025.4" y="238.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.09%)</title><rect x="1022.4" y="211.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1025.4" y="222.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.09%)</title><rect x="1022.4" y="195.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1025.4" y="206.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.09%)</title><rect x="1022.4" y="179.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1025.4" y="190.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.09%)</title><rect x="1022.4" y="163.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1025.4" y="174.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.09%)</title><rect x="1023.5" y="227.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1026.5" y="238.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.09%)</title><rect x="1024.5" y="227.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1027.5" y="238.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.09%)</title><rect x="1024.5" y="211.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1027.5" y="222.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.09%)</title><rect x="1025.6" y="227.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1028.6" y="238.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.09%)</title><rect x="1026.7" y="227.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1029.7" y="238.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.18%)</title><rect x="1027.8" y="483.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1030.8" y="494.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.18%)</title><rect x="1027.8" y="467.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1030.8" y="478.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.18%)</title><rect x="1027.8" y="451.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1030.8" y="462.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.09%)</title><rect x="1027.8" y="435.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1030.8" y="446.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.09%)</title><rect x="1028.9" y="435.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1031.9" y="446.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.09%)</title><rect x="1028.9" y="419.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1031.9" y="430.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.09%)</title><rect x="1028.9" y="403.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1031.9" y="414.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.09%)</title><rect x="1028.9" y="387.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1031.9" y="398.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.09%)</title><rect x="1030.0" y="595.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1033.0" y="606.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.09%)</title><rect x="1030.0" y="579.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1033.0" y="590.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.09%)</title><rect x="1031.1" y="595.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1034.1" y="606.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.09%)</title><rect x="1032.2" y="611.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1035.2" y="622.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.09%)</title><rect x="1032.2" y="595.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1035.2" y="606.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.09%)</title><rect x="1032.2" y="579.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1035.2" y="590.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.09%)</title><rect x="1032.2" y="563.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1035.2" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.09%)</title><rect x="1032.2" y="547.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1035.2" y="558.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.09%)</title><rect x="1033.2" y="611.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1036.2" y="622.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.09%)</title><rect x="1034.3" y="659.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1037.3" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.09%)</title><rect x="1035.4" y="723.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1038.4" y="734.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.09%)</title><rect x="1035.4" y="707.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1038.4" y="718.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.09%)</title><rect x="1035.4" y="691.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1038.4" y="702.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.09%)</title><rect x="1035.4" y="675.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1038.4" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.09%)</title><rect x="1036.5" y="883.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1039.5" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.09%)</title><rect x="1036.5" y="867.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1039.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.09%)</title><rect x="1036.5" y="851.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1039.5" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.upsert (13 samples, 1.20%)</title><rect x="1037.6" y="899.0" width="14.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1040.6" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.upsert (13 samples, 1.20%)</title><rect x="1037.6" y="883.0" width="14.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1040.6" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.upsert (12 samples, 1.11%)</title><rect x="1037.6" y="867.0" width="13.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1040.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (12 samples, 1.11%)</title><rect x="1037.6" y="851.0" width="13.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1040.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (12 samples, 1.11%)</title><rect x="1037.6" y="835.0" width="13.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1040.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (1 samples, 0.09%)</title><rect x="1038.7" y="819.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1041.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (3 samples, 0.28%)</title><rect x="1039.8" y="819.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1042.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.18%)</title><rect x="1040.9" y="803.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1043.9" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.18%)</title><rect x="1040.9" y="787.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1043.9" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.18%)</title><rect x="1040.9" y="771.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1043.9" y="782.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.18%)</title><rect x="1040.9" y="755.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1043.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.46%)</title><rect x="1043.0" y="819.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1046.0" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.37%)</title><rect x="1044.1" y="803.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1047.1" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.28%)</title><rect x="1045.2" y="787.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1048.2" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.28%)</title><rect x="1045.2" y="771.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1048.2" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.09%)</title><rect x="1047.4" y="755.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1050.4" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.09%)</title><rect x="1047.4" y="739.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1050.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (2 samples, 0.18%)</title><rect x="1048.5" y="819.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1051.5" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.putIntoFlushQueue (1 samples, 0.09%)</title><rect x="1050.7" y="867.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1053.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (1 samples, 0.09%)</title><rect x="1050.7" y="851.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1053.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.09%)</title><rect x="1050.7" y="835.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1053.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.09%)</title><rect x="1050.7" y="819.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1053.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.09%)</title><rect x="1050.7" y="803.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1053.7" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.09%)</title><rect x="1050.7" y="787.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1053.7" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.09%)</title><rect x="1050.7" y="771.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1053.7" y="782.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.09%)</title><rect x="1050.7" y="755.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1053.7" y="766.0"></text>
</g>
<g>
<title>[pool-3-thread-4 tid=60618] (127 samples, 11.72%)</title><rect x="1051.8" y="995.0" width="138.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1054.8" y="1006.0">[pool-3-thread-4 ..</text>
</g>
<g>
<title>java/lang/Thread.run (127 samples, 11.72%)</title><rect x="1051.8" y="979.0" width="138.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1054.8" y="990.0">java/lang/Thread...</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (127 samples, 11.72%)</title><rect x="1051.8" y="963.0" width="138.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1054.8" y="974.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (127 samples, 11.72%)</title><rect x="1051.8" y="947.0" width="138.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1054.8" y="958.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (31 samples, 2.86%)</title><rect x="1051.8" y="931.0" width="33.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1054.8" y="942.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (30 samples, 2.77%)</title><rect x="1052.8" y="915.0" width="32.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1055.8" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (27 samples, 2.49%)</title><rect x="1052.8" y="899.0" width="29.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1055.8" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.28%)</title><rect x="1052.8" y="883.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1055.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.28%)</title><rect x="1052.8" y="867.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1055.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.28%)</title><rect x="1052.8" y="851.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1055.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.28%)</title><rect x="1052.8" y="835.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1055.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.28%)</title><rect x="1052.8" y="819.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1055.8" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.28%)</title><rect x="1052.8" y="803.0" width="3.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1055.8" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.18%)</title><rect x="1053.9" y="787.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1056.9" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.18%)</title><rect x="1053.9" y="771.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1056.9" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.18%)</title><rect x="1053.9" y="755.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1056.9" y="766.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="1055.0" y="739.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1058.0" y="750.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.09%)</title><rect x="1055.0" y="723.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1058.0" y="734.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.09%)</title><rect x="1055.0" y="707.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1058.0" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="1055.0" y="691.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1058.0" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.09%)</title><rect x="1055.0" y="675.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1058.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (24 samples, 2.21%)</title><rect x="1056.1" y="883.0" width="26.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1059.1" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (1 samples, 0.09%)</title><rect x="1056.1" y="867.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1059.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (23 samples, 2.12%)</title><rect x="1057.2" y="867.0" width="25.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1060.2" y="878.0">j..</text>
</g>
<g>
<title>Unsafe_Park (13 samples, 1.20%)</title><rect x="1057.2" y="851.0" width="14.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1060.2" y="862.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.09%)</title><rect x="1059.4" y="835.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1062.4" y="846.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.28%)</title><rect x="1060.5" y="835.0" width="3.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1063.5" y="846.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.09%)</title><rect x="1062.6" y="819.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1065.6" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (1 samples, 0.09%)</title><rect x="1063.7" y="835.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1066.7" y="846.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (4 samples, 0.37%)</title><rect x="1064.8" y="835.0" width="4.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1067.8" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.28%)</title><rect x="1065.9" y="819.0" width="3.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1068.9" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.28%)</title><rect x="1065.9" y="803.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1068.9" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.28%)</title><rect x="1065.9" y="787.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1068.9" y="798.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.28%)</title><rect x="1065.9" y="771.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1068.9" y="782.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.28%)</title><rect x="1065.9" y="755.0" width="3.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1068.9" y="766.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.09%)</title><rect x="1067.0" y="739.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1070.0" y="750.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.09%)</title><rect x="1068.1" y="739.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1071.1" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="1069.2" y="835.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1072.2" y="846.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.09%)</title><rect x="1070.3" y="835.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1073.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.92%)</title><rect x="1071.3" y="851.0" width="10.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1074.3" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_wait (9 samples, 0.83%)</title><rect x="1071.3" y="835.0" width="9.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1074.3" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="1080.1" y="819.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1083.1" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="1080.1" y="803.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1083.1" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.09%)</title><rect x="1080.1" y="787.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1083.1" y="798.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.09%)</title><rect x="1080.1" y="771.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1083.1" y="782.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.09%)</title><rect x="1080.1" y="755.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1083.1" y="766.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.09%)</title><rect x="1080.1" y="739.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1083.1" y="750.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.09%)</title><rect x="1080.1" y="723.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1083.1" y="734.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.09%)</title><rect x="1081.1" y="835.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1084.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.18%)</title><rect x="1082.2" y="899.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1085.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.18%)</title><rect x="1082.2" y="883.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1085.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.18%)</title><rect x="1082.2" y="867.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1085.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.09%)</title><rect x="1082.2" y="851.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1085.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.09%)</title><rect x="1082.2" y="835.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1085.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (1 samples, 0.09%)</title><rect x="1082.2" y="819.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1085.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.09%)</title><rect x="1082.2" y="803.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1085.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.09%)</title><rect x="1083.3" y="851.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1086.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.09%)</title><rect x="1083.3" y="835.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1086.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.09%)</title><rect x="1083.3" y="819.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1086.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.09%)</title><rect x="1083.3" y="803.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1086.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.09%)</title><rect x="1084.4" y="899.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1087.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.09%)</title><rect x="1084.4" y="883.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1087.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.09%)</title><rect x="1084.4" y="867.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1087.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.09%)</title><rect x="1084.4" y="851.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1087.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="1084.4" y="835.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1087.4" y="846.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.09%)</title><rect x="1084.4" y="819.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1087.4" y="830.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="1084.4" y="803.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1087.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$105/1788683425.run (96 samples, 8.86%)</title><rect x="1085.5" y="931.0" width="104.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1088.5" y="942.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.lambda$put$1 (96 samples, 8.86%)</title><rect x="1085.5" y="915.0" width="104.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1088.5" y="926.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.37%)</title><rect x="1085.5" y="899.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1088.5" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.18%)</title><rect x="1086.6" y="883.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1089.6" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.18%)</title><rect x="1086.6" y="867.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1089.6" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.18%)</title><rect x="1086.6" y="851.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1089.6" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (2 samples, 0.18%)</title><rect x="1086.6" y="835.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1089.6" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.putIntoFlushQueue (1 samples, 0.09%)</title><rect x="1088.8" y="883.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1091.8" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (70 samples, 6.46%)</title><rect x="1089.9" y="899.0" width="76.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1092.9" y="910.0">one/nio/..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.09%)</title><rect x="1090.9" y="883.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1093.9" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.09%)</title><rect x="1090.9" y="867.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1093.9" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.09%)</title><rect x="1090.9" y="851.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1093.9" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.09%)</title><rect x="1090.9" y="835.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1093.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.09%)</title><rect x="1092.0" y="883.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1095.0" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.09%)</title><rect x="1092.0" y="867.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1095.0" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.09%)</title><rect x="1092.0" y="851.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1095.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.09%)</title><rect x="1092.0" y="835.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1095.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (64 samples, 5.90%)</title><rect x="1093.1" y="883.0" width="69.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1096.1" y="894.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.55%)</title><rect x="1093.1" y="867.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1096.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.46%)</title><rect x="1094.2" y="851.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1097.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.09%)</title><rect x="1094.2" y="835.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1097.2" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.37%)</title><rect x="1095.3" y="835.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1098.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.37%)</title><rect x="1095.3" y="819.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1098.3" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.37%)</title><rect x="1095.3" y="803.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1098.3" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (58 samples, 5.35%)</title><rect x="1099.6" y="867.0" width="63.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1102.6" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.write (58 samples, 5.35%)</title><rect x="1099.6" y="851.0" width="63.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1102.6" y="862.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (58 samples, 5.35%)</title><rect x="1099.6" y="835.0" width="63.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1102.6" y="846.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (58 samples, 5.35%)</title><rect x="1099.6" y="819.0" width="63.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1102.6" y="830.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.18%)</title><rect x="1101.8" y="803.0" width="2.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1104.8" y="814.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.09%)</title><rect x="1101.8" y="787.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1104.8" y="798.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.09%)</title><rect x="1102.9" y="787.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1105.9" y="798.0"></text>
</g>
<g>
<title>__send (53 samples, 4.89%)</title><rect x="1104.0" y="803.0" width="57.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1107.0" y="814.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (50 samples, 4.61%)</title><rect x="1107.3" y="787.0" width="54.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1110.3" y="798.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (50 samples, 4.61%)</title><rect x="1107.3" y="771.0" width="54.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1110.3" y="782.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_sendto (48 samples, 4.43%)</title><rect x="1109.4" y="755.0" width="52.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1112.4" y="766.0">__x64..</text>
</g>
<g>
<title>__sys_sendto (48 samples, 4.43%)</title><rect x="1109.4" y="739.0" width="52.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1112.4" y="750.0">__sys..</text>
</g>
<g>
<title>sock_sendmsg (46 samples, 4.24%)</title><rect x="1109.4" y="723.0" width="50.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1112.4" y="734.0">sock_..</text>
</g>
<g>
<title>inet6_sendmsg (46 samples, 4.24%)</title><rect x="1109.4" y="707.0" width="50.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1112.4" y="718.0">inet6..</text>
</g>
<g>
<title>tcp_sendmsg (46 samples, 4.24%)</title><rect x="1109.4" y="691.0" width="50.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1112.4" y="702.0">tcp_s..</text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.18%)</title><rect x="1109.4" y="675.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1112.4" y="686.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.09%)</title><rect x="1111.6" y="675.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1114.6" y="686.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (43 samples, 3.97%)</title><rect x="1112.7" y="675.0" width="46.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1115.7" y="686.0">tcp_..</text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.55%)</title><rect x="1114.9" y="659.0" width="6.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1117.9" y="670.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.46%)</title><rect x="1114.9" y="643.0" width="5.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1117.9" y="654.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.18%)</title><rect x="1117.1" y="627.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1120.1" y="638.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.09%)</title><rect x="1117.1" y="611.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1120.1" y="622.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.09%)</title><rect x="1118.2" y="611.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1121.2" y="622.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.09%)</title><rect x="1119.2" y="627.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1122.2" y="638.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.09%)</title><rect x="1120.3" y="643.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1123.3" y="654.0"></text>
</g>
<g>
<title>tcp_push (34 samples, 3.14%)</title><rect x="1121.4" y="659.0" width="37.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1124.4" y="670.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (34 samples, 3.14%)</title><rect x="1121.4" y="643.0" width="37.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1124.4" y="654.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (34 samples, 3.14%)</title><rect x="1121.4" y="627.0" width="37.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1124.4" y="638.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (32 samples, 2.95%)</title><rect x="1121.4" y="611.0" width="34.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1124.4" y="622.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (29 samples, 2.68%)</title><rect x="1123.6" y="595.0" width="31.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1126.6" y="606.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (29 samples, 2.68%)</title><rect x="1123.6" y="579.0" width="31.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1126.6" y="590.0">__..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.09%)</title><rect x="1123.6" y="563.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1126.6" y="574.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.09%)</title><rect x="1123.6" y="547.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1126.6" y="558.0"></text>
</g>
<g>
<title>ip_local_out (28 samples, 2.58%)</title><rect x="1124.7" y="563.0" width="30.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1127.7" y="574.0">ip..</text>
</g>
<g>
<title>ip_output (28 samples, 2.58%)</title><rect x="1124.7" y="547.0" width="30.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1127.7" y="558.0">ip..</text>
</g>
<g>
<title>ip_finish_output (28 samples, 2.58%)</title><rect x="1124.7" y="531.0" width="30.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1127.7" y="542.0">ip..</text>
</g>
<g>
<title>__ip_finish_output (28 samples, 2.58%)</title><rect x="1124.7" y="515.0" width="30.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1127.7" y="526.0">__..</text>
</g>
<g>
<title>ip_finish_output2 (28 samples, 2.58%)</title><rect x="1124.7" y="499.0" width="30.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1127.7" y="510.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (21 samples, 1.94%)</title><rect x="1125.8" y="483.0" width="22.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1128.8" y="494.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (21 samples, 1.94%)</title><rect x="1125.8" y="467.0" width="22.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1128.8" y="478.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (20 samples, 1.85%)</title><rect x="1126.9" y="451.0" width="21.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1129.9" y="462.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (20 samples, 1.85%)</title><rect x="1126.9" y="435.0" width="21.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1129.9" y="446.0">_..</text>
</g>
<g>
<title>net_rx_action (20 samples, 1.85%)</title><rect x="1126.9" y="419.0" width="21.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1129.9" y="430.0">n..</text>
</g>
<g>
<title>process_backlog (19 samples, 1.75%)</title><rect x="1128.0" y="403.0" width="20.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1131.0" y="414.0"></text>
</g>
<g>
<title>__netif_receive_skb (17 samples, 1.57%)</title><rect x="1130.1" y="387.0" width="18.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1133.1" y="398.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (17 samples, 1.57%)</title><rect x="1130.1" y="371.0" width="18.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1133.1" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.18%)</title><rect x="1130.1" y="355.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1133.1" y="366.0"></text>
</g>
<g>
<title>ip_rcv (15 samples, 1.38%)</title><rect x="1132.3" y="355.0" width="16.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1135.3" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.18%)</title><rect x="1132.3" y="339.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1135.3" y="350.0"></text>
</g>
<g>
<title>ip_rcv_finish (13 samples, 1.20%)</title><rect x="1134.5" y="339.0" width="14.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1137.5" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver (13 samples, 1.20%)</title><rect x="1134.5" y="323.0" width="14.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1137.5" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (13 samples, 1.20%)</title><rect x="1134.5" y="307.0" width="14.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1137.5" y="318.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (13 samples, 1.20%)</title><rect x="1134.5" y="291.0" width="14.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1137.5" y="302.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.09%)</title><rect x="1134.5" y="275.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1137.5" y="286.0"></text>
</g>
<g>
<title>tcp_v4_rcv (12 samples, 1.11%)</title><rect x="1135.6" y="275.0" width="13.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1138.6" y="286.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.09%)</title><rect x="1135.6" y="259.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1138.6" y="270.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (11 samples, 1.01%)</title><rect x="1136.7" y="259.0" width="11.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1139.7" y="270.0"></text>
</g>
<g>
<title>tcp_rcv_established (11 samples, 1.01%)</title><rect x="1136.7" y="243.0" width="11.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1139.7" y="254.0"></text>
</g>
<g>
<title>tcp_ack (7 samples, 0.65%)</title><rect x="1137.7" y="227.0" width="7.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1140.7" y="238.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.09%)</title><rect x="1139.9" y="211.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1142.9" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.18%)</title><rect x="1141.0" y="211.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1144.0" y="222.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.18%)</title><rect x="1141.0" y="195.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1144.0" y="206.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.18%)</title><rect x="1141.0" y="179.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1144.0" y="190.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.09%)</title><rect x="1141.0" y="163.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1144.0" y="174.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.09%)</title><rect x="1141.0" y="147.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1144.0" y="158.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.09%)</title><rect x="1141.0" y="131.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1144.0" y="142.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.09%)</title><rect x="1142.1" y="163.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1145.1" y="174.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.09%)</title><rect x="1143.2" y="211.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1146.2" y="222.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.09%)</title><rect x="1144.3" y="211.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1147.3" y="222.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.09%)</title><rect x="1145.4" y="227.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1148.4" y="238.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.09%)</title><rect x="1145.4" y="211.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1148.4" y="222.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.09%)</title><rect x="1145.4" y="195.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1148.4" y="206.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.09%)</title><rect x="1145.4" y="179.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1148.4" y="190.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.09%)</title><rect x="1145.4" y="163.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1148.4" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.09%)</title><rect x="1146.5" y="227.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1149.5" y="238.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.09%)</title><rect x="1146.5" y="211.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1149.5" y="222.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.09%)</title><rect x="1147.5" y="227.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1150.5" y="238.0"></text>
</g>
<g>
<title>dev_queue_xmit (6 samples, 0.55%)</title><rect x="1148.6" y="483.0" width="6.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1151.6" y="494.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.55%)</title><rect x="1148.6" y="467.0" width="6.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1151.6" y="478.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.28%)</title><rect x="1148.6" y="451.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1151.6" y="462.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.09%)</title><rect x="1148.6" y="435.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1151.6" y="446.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.09%)</title><rect x="1148.6" y="419.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1151.6" y="430.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.09%)</title><rect x="1149.7" y="435.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1152.7" y="446.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.09%)</title><rect x="1150.8" y="435.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1153.8" y="446.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.28%)</title><rect x="1151.9" y="451.0" width="3.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1154.9" y="462.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.09%)</title><rect x="1155.2" y="595.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1158.2" y="606.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.09%)</title><rect x="1155.2" y="579.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1158.2" y="590.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.09%)</title><rect x="1156.3" y="611.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1159.3" y="622.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.09%)</title><rect x="1157.3" y="611.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1160.3" y="622.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.09%)</title><rect x="1158.4" y="659.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1161.4" y="670.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.09%)</title><rect x="1158.4" y="643.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1161.4" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.18%)</title><rect x="1159.5" y="723.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1162.5" y="734.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.18%)</title><rect x="1159.5" y="707.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1162.5" y="718.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.18%)</title><rect x="1159.5" y="691.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1162.5" y="702.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.18%)</title><rect x="1159.5" y="675.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1162.5" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.09%)</title><rect x="1161.7" y="803.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1164.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.28%)</title><rect x="1162.8" y="883.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1165.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.28%)</title><rect x="1162.8" y="867.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1165.8" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.28%)</title><rect x="1162.8" y="851.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1165.8" y="862.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.09%)</title><rect x="1165.0" y="835.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1168.0" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.09%)</title><rect x="1165.0" y="819.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1168.0" y="830.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.09%)</title><rect x="1165.0" y="803.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1168.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.upsert (22 samples, 2.03%)</title><rect x="1166.1" y="899.0" width="23.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1169.1" y="910.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.upsert (22 samples, 2.03%)</title><rect x="1166.1" y="883.0" width="23.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1169.1" y="894.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.09%)</title><rect x="1166.1" y="867.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1169.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.09%)</title><rect x="1166.1" y="851.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1169.1" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.upsert (21 samples, 1.94%)</title><rect x="1167.1" y="867.0" width="22.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1170.1" y="878.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (21 samples, 1.94%)</title><rect x="1167.1" y="851.0" width="22.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1170.1" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (21 samples, 1.94%)</title><rect x="1167.1" y="835.0" width="22.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1170.1" y="846.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.46%)</title><rect x="1170.4" y="819.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1173.4" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (5 samples, 0.46%)</title><rect x="1170.4" y="803.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1173.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (6 samples, 0.55%)</title><rect x="1175.8" y="819.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1178.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.18%)</title><rect x="1182.4" y="819.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1185.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.09%)</title><rect x="1182.4" y="803.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1185.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.09%)</title><rect x="1182.4" y="787.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1185.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.09%)</title><rect x="1182.4" y="771.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1185.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.09%)</title><rect x="1183.5" y="803.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1186.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.46%)</title><rect x="1184.6" y="819.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1187.6" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.46%)</title><rect x="1184.6" y="803.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1187.6" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.46%)</title><rect x="1184.6" y="787.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1187.6" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.28%)</title><rect x="1184.6" y="771.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1187.6" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.09%)</title><rect x="1186.7" y="755.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1189.7" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.09%)</title><rect x="1186.7" y="739.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1189.7" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.18%)</title><rect x="1187.8" y="771.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1190.8" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.09%)</title><rect x="1188.9" y="755.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.9" y="766.0"></text>
</g>
</g>
</svg>
