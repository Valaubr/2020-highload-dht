<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="517"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="517"> </text>
<g id="frames">
<g>
<title>all (359,093 samples, 100.00%)</title><rect x="10.0" y="483.0" width="1180.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="494.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (354,389 samples, 98.69%)</title><rect x="10.0" y="467.0" width="1164.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="478.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (354,389 samples, 98.69%)</title><rect x="10.0" y="451.0" width="1164.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="462.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (354,389 samples, 98.69%)</title><rect x="10.0" y="435.0" width="1164.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="446.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (659 samples, 0.18%)</title><rect x="10.0" y="419.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (659 samples, 0.18%)</title><rect x="10.0" y="403.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (249 samples, 0.07%)</title><rect x="10.0" y="387.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (249 samples, 0.07%)</title><rect x="10.0" y="371.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (249 samples, 0.07%)</title><rect x="10.0" y="355.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (249 samples, 0.07%)</title><rect x="10.0" y="339.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (249 samples, 0.07%)</title><rect x="10.0" y="323.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (249 samples, 0.07%)</title><rect x="10.0" y="307.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (410 samples, 0.11%)</title><rect x="10.8" y="387.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (410 samples, 0.11%)</title><rect x="10.8" y="371.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (410 samples, 0.11%)</title><rect x="10.8" y="355.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (410 samples, 0.11%)</title><rect x="10.8" y="339.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (410 samples, 0.11%)</title><rect x="10.8" y="323.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (410 samples, 0.11%)</title><rect x="10.8" y="307.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.8" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (410 samples, 0.11%)</title><rect x="10.8" y="291.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="13.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$118/366139759.run (353,730 samples, 98.51%)</title><rect x="12.2" y="419.0" width="1162.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.2" y="430.0">ru/mail/polis/service/valaubr/HttpService$$Lambda$118/366139759.run</text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.lambda$get$0 (353,730 samples, 98.51%)</title><rect x="12.2" y="403.0" width="1162.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="15.2" y="414.0">ru/mail/polis/service/valaubr/HttpService.lambda$get$0</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (353,730 samples, 98.51%)</title><rect x="12.2" y="387.0" width="1162.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="15.2" y="398.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (10,357 samples, 2.88%)</title><rect x="12.2" y="371.0" width="34.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="15.2" y="382.0">co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (10,357 samples, 2.88%)</title><rect x="12.2" y="355.0" width="34.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="15.2" y="366.0">co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (10,357 samples, 2.88%)</title><rect x="12.2" y="339.0" width="34.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.2" y="350.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (10,357 samples, 2.88%)</title><rect x="12.2" y="323.0" width="34.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.2" y="334.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (10,357 samples, 2.88%)</title><rect x="12.2" y="307.0" width="34.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="15.2" y="318.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10,357 samples, 2.88%)</title><rect x="12.2" y="291.0" width="34.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="15.2" y="302.0">co..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (10,357 samples, 2.88%)</title><rect x="12.2" y="275.0" width="34.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="15.2" y="286.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (10,357 samples, 2.88%)</title><rect x="12.2" y="259.0" width="34.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="15.2" y="270.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (10,357 samples, 2.88%)</title><rect x="12.2" y="243.0" width="34.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.2" y="254.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (10,357 samples, 2.88%)</title><rect x="12.2" y="227.0" width="34.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="15.2" y="238.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10,357 samples, 2.88%)</title><rect x="12.2" y="211.0" width="34.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.2" y="222.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10,357 samples, 2.88%)</title><rect x="12.2" y="195.0" width="34.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.2" y="206.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (10,357 samples, 2.88%)</title><rect x="12.2" y="179.0" width="34.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.2" y="190.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (10,357 samples, 2.88%)</title><rect x="12.2" y="163.0" width="34.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="15.2" y="174.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (10,357 samples, 2.88%)</title><rect x="12.2" y="147.0" width="34.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="15.2" y="158.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getCell (10,357 samples, 2.88%)</title><rect x="12.2" y="131.0" width="34.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.2" y="142.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (4,433 samples, 1.23%)</title><rect x="12.2" y="115.0" width="14.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="15.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (1,752 samples, 0.49%)</title><rect x="12.2" y="99.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,752 samples, 0.49%)</title><rect x="12.2" y="83.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="15.2" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,752 samples, 0.49%)</title><rect x="12.2" y="67.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="15.2" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (114 samples, 0.03%)</title><rect x="12.2" y="51.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="15.2" y="62.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (114 samples, 0.03%)</title><rect x="12.2" y="35.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="15.2" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1,638 samples, 0.46%)</title><rect x="12.5" y="51.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="15.5" y="62.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (1,638 samples, 0.46%)</title><rect x="12.5" y="35.0" width="5.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="15.5" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2,681 samples, 0.75%)</title><rect x="17.9" y="99.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2,681 samples, 0.75%)</title><rect x="17.9" y="83.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="20.9" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (346 samples, 0.10%)</title><rect x="17.9" y="67.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.9" y="78.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (346 samples, 0.10%)</title><rect x="17.9" y="51.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="20.9" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2,335 samples, 0.65%)</title><rect x="19.1" y="67.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.1" y="78.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (2,335 samples, 0.65%)</title><rect x="19.1" y="51.0" width="7.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="22.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (2,119 samples, 0.59%)</title><rect x="26.7" y="115.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="29.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2,119 samples, 0.59%)</title><rect x="26.7" y="99.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="29.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2,119 samples, 0.59%)</title><rect x="26.7" y="83.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="29.7" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2,040 samples, 0.57%)</title><rect x="26.7" y="67.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="29.7" y="78.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (2,040 samples, 0.57%)</title><rect x="26.7" y="51.0" width="6.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="29.7" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (79 samples, 0.02%)</title><rect x="33.4" y="67.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="36.4" y="78.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (79 samples, 0.02%)</title><rect x="33.4" y="51.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="36.4" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3,805 samples, 1.06%)</title><rect x="33.7" y="115.0" width="12.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="36.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3,805 samples, 1.06%)</title><rect x="33.7" y="99.0" width="12.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="36.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (796 samples, 0.22%)</title><rect x="33.7" y="83.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="36.7" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (796 samples, 0.22%)</title><rect x="33.7" y="67.0" width="2.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="36.7" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3,009 samples, 0.84%)</title><rect x="36.3" y="83.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="39.3" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (3,009 samples, 0.84%)</title><rect x="36.3" y="67.0" width="9.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="39.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.iterator (343,373 samples, 95.62%)</title><rect x="46.2" y="371.0" width="1128.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.2" y="382.0">ru/mail/polis/dao/valaubr/LsmDAO.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.cellIterator (343,373 samples, 95.62%)</title><rect x="46.2" y="355.0" width="1128.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.2" y="366.0">ru/mail/polis/dao/valaubr/LsmDAO.cellIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (25,690 samples, 7.15%)</title><rect x="46.2" y="339.0" width="84.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="49.2" y="350.0">com/google..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (25,690 samples, 7.15%)</title><rect x="46.2" y="323.0" width="84.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="49.2" y="334.0">com/google..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (25,690 samples, 7.15%)</title><rect x="46.2" y="307.0" width="84.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="49.2" y="318.0">java/util/..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (25,690 samples, 7.15%)</title><rect x="46.2" y="291.0" width="84.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="49.2" y="302.0">java/util/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (25,690 samples, 7.15%)</title><rect x="46.2" y="275.0" width="84.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.2" y="286.0">java/util/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (25,690 samples, 7.15%)</title><rect x="46.2" y="259.0" width="84.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="49.2" y="270.0">java/util/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (25,690 samples, 7.15%)</title><rect x="46.2" y="243.0" width="84.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.2" y="254.0">com/google..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (25,690 samples, 7.15%)</title><rect x="46.2" y="227.0" width="84.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.2" y="238.0">com/google..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (25,690 samples, 7.15%)</title><rect x="46.2" y="211.0" width="84.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.2" y="222.0">com/google..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (25,690 samples, 7.15%)</title><rect x="46.2" y="195.0" width="84.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="49.2" y="206.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (25,690 samples, 7.15%)</title><rect x="46.2" y="179.0" width="84.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.2" y="190.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getCell (25,690 samples, 7.15%)</title><rect x="46.2" y="163.0" width="84.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.2" y="174.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (10,835 samples, 3.02%)</title><rect x="46.2" y="147.0" width="35.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="49.2" y="158.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (4,058 samples, 1.13%)</title><rect x="46.2" y="131.0" width="13.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="49.2" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4,058 samples, 1.13%)</title><rect x="46.2" y="115.0" width="13.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="49.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4,058 samples, 1.13%)</title><rect x="46.2" y="99.0" width="13.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="49.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (337 samples, 0.09%)</title><rect x="46.2" y="83.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="49.2" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (337 samples, 0.09%)</title><rect x="46.2" y="67.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="49.2" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3,721 samples, 1.04%)</title><rect x="47.3" y="83.0" width="12.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="50.3" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (3,721 samples, 1.04%)</title><rect x="47.3" y="67.0" width="12.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="50.3" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6,777 samples, 1.89%)</title><rect x="59.5" y="131.0" width="22.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.5" y="142.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6,777 samples, 1.89%)</title><rect x="59.5" y="115.0" width="22.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.5" y="126.0">s..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (864 samples, 0.24%)</title><rect x="59.5" y="99.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.5" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (864 samples, 0.24%)</title><rect x="59.5" y="83.0" width="2.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="62.5" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (5,913 samples, 1.65%)</title><rect x="62.4" y="99.0" width="19.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="65.4" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (5,913 samples, 1.65%)</title><rect x="62.4" y="83.0" width="19.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="65.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (4,949 samples, 1.38%)</title><rect x="81.8" y="147.0" width="16.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="84.8" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4,949 samples, 1.38%)</title><rect x="81.8" y="131.0" width="16.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.8" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4,949 samples, 1.38%)</title><rect x="81.8" y="115.0" width="16.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="84.8" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4,619 samples, 1.29%)</title><rect x="81.8" y="99.0" width="15.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="84.8" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (4,619 samples, 1.29%)</title><rect x="81.8" y="83.0" width="15.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="84.8" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (330 samples, 0.09%)</title><rect x="97.0" y="99.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="100.0" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (330 samples, 0.09%)</title><rect x="97.0" y="83.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="100.0" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (9,906 samples, 2.76%)</title><rect x="98.1" y="147.0" width="32.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="101.1" y="158.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (9,906 samples, 2.76%)</title><rect x="98.1" y="131.0" width="32.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.1" y="142.0">su..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2,164 samples, 0.60%)</title><rect x="98.1" y="115.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="101.1" y="126.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (2,164 samples, 0.60%)</title><rect x="98.1" y="99.0" width="7.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="101.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (7,742 samples, 2.16%)</title><rect x="105.2" y="115.0" width="25.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="108.2" y="126.0">s..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (7,742 samples, 2.16%)</title><rect x="105.2" y="99.0" width="25.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="108.2" y="110.0">s..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (311,127 samples, 86.64%)</title><rect x="130.6" y="339.0" width="1022.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="133.6" y="350.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$126/1538391044.accept (311,127 samples, 86.64%)</title><rect x="130.6" y="323.0" width="1022.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.6" y="334.0">ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$126/1538391044.accept</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.lambda$cellIterator$4 (311,127 samples, 86.64%)</title><rect x="130.6" y="307.0" width="1022.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="133.6" y="318.0">ru/mail/polis/dao/valaubr/LsmDAO.lambda$cellIterator$4</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.iterator (311,127 samples, 86.64%)</title><rect x="130.6" y="291.0" width="1022.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.6" y="302.0">ru/mail/polis/dao/valaubr/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.&lt;init&gt; (311,127 samples, 86.64%)</title><rect x="130.6" y="275.0" width="1022.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.6" y="286.0">ru/mail/polis/dao/valaubr/SSTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getPosition (311,127 samples, 86.64%)</title><rect x="130.6" y="259.0" width="1022.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="133.6" y="270.0">ru/mail/polis/dao/valaubr/SSTable.getPosition</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (311,127 samples, 86.64%)</title><rect x="130.6" y="243.0" width="1022.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="133.6" y="254.0">ru/mail/polis/dao/valaubr/SSTable.getKey</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (107,549 samples, 29.95%)</title><rect x="130.6" y="227.0" width="353.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="133.6" y="238.0">ru/mail/polis/dao/valaubr/SSTable.getOffset</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (107,549 samples, 29.95%)</title><rect x="130.6" y="211.0" width="353.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="133.6" y="222.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (107,549 samples, 29.95%)</title><rect x="130.6" y="195.0" width="353.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.6" y="206.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (32,657 samples, 9.09%)</title><rect x="130.6" y="179.0" width="107.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="133.6" y="190.0">sun/nio/ch/Na..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (32,657 samples, 9.09%)</title><rect x="130.6" y="163.0" width="107.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="133.6" y="174.0">sun.nio.ch.Na..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (74,892 samples, 20.86%)</title><rect x="237.9" y="179.0" width="246.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="240.9" y="190.0">sun/nio/ch/NativeThreadSet.remove</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (74,892 samples, 20.86%)</title><rect x="237.9" y="163.0" width="246.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="240.9" y="174.0">sun.nio.ch.NativeThreadSet</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (203,578 samples, 56.69%)</title><rect x="484.0" y="227.0" width="669.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.0" y="238.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (203,578 samples, 56.69%)</title><rect x="484.0" y="211.0" width="669.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.0" y="222.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (32,596 samples, 9.08%)</title><rect x="484.0" y="195.0" width="107.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.0" y="206.0">sun/nio/ch/Na..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (32,596 samples, 9.08%)</title><rect x="484.0" y="179.0" width="107.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="487.0" y="190.0">sun.nio.ch.Na..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (170,982 samples, 47.61%)</title><rect x="591.1" y="195.0" width="561.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="594.1" y="206.0">sun/nio/ch/NativeThreadSet.remove</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (170,982 samples, 47.61%)</title><rect x="591.1" y="179.0" width="561.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="594.1" y="190.0">sun.nio.ch.NativeThreadSet</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6,556 samples, 1.83%)</title><rect x="1153.0" y="339.0" width="21.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1156.0" y="350.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (6,556 samples, 1.83%)</title><rect x="1153.0" y="323.0" width="21.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1156.0" y="334.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6,556 samples, 1.83%)</title><rect x="1153.0" y="307.0" width="21.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1156.0" y="318.0">c..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (6,556 samples, 1.83%)</title><rect x="1153.0" y="291.0" width="21.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1156.0" y="302.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6,556 samples, 1.83%)</title><rect x="1153.0" y="275.0" width="21.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1156.0" y="286.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6,556 samples, 1.83%)</title><rect x="1153.0" y="259.0" width="21.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1156.0" y="270.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6,556 samples, 1.83%)</title><rect x="1153.0" y="243.0" width="21.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1156.0" y="254.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,556 samples, 1.83%)</title><rect x="1153.0" y="227.0" width="21.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1156.0" y="238.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,556 samples, 1.83%)</title><rect x="1153.0" y="211.0" width="21.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1156.0" y="222.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (6,556 samples, 1.83%)</title><rect x="1153.0" y="195.0" width="21.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1156.0" y="206.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (6,556 samples, 1.83%)</title><rect x="1153.0" y="179.0" width="21.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1156.0" y="190.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (6,556 samples, 1.83%)</title><rect x="1153.0" y="163.0" width="21.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1156.0" y="174.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getCell (6,556 samples, 1.83%)</title><rect x="1153.0" y="147.0" width="21.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1156.0" y="158.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (2,844 samples, 0.79%)</title><rect x="1153.0" y="131.0" width="9.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1156.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (1,175 samples, 0.33%)</title><rect x="1153.0" y="115.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1156.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,175 samples, 0.33%)</title><rect x="1153.0" y="99.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1156.0" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,175 samples, 0.33%)</title><rect x="1153.0" y="83.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1156.0" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1,118 samples, 0.31%)</title><rect x="1153.2" y="67.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1156.2" y="78.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (1,118 samples, 0.31%)</title><rect x="1153.2" y="51.0" width="3.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1156.2" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,669 samples, 0.46%)</title><rect x="1156.9" y="115.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1159.9" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,669 samples, 0.46%)</title><rect x="1156.9" y="99.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1159.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (227 samples, 0.06%)</title><rect x="1156.9" y="83.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1159.9" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (227 samples, 0.06%)</title><rect x="1156.9" y="67.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1159.9" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1,442 samples, 0.40%)</title><rect x="1157.6" y="83.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1160.6" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (1,442 samples, 0.40%)</title><rect x="1157.6" y="67.0" width="4.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1160.6" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (1,522 samples, 0.42%)</title><rect x="1162.3" y="131.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1165.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,522 samples, 0.42%)</title><rect x="1162.3" y="115.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1165.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,522 samples, 0.42%)</title><rect x="1162.3" y="99.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1165.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1,491 samples, 0.42%)</title><rect x="1162.3" y="83.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1165.3" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (1,491 samples, 0.42%)</title><rect x="1162.3" y="67.0" width="4.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1165.3" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2,190 samples, 0.61%)</title><rect x="1167.3" y="131.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1170.3" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2,190 samples, 0.61%)</title><rect x="1167.3" y="115.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1170.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (480 samples, 0.13%)</title><rect x="1167.3" y="99.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1170.3" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (480 samples, 0.13%)</title><rect x="1167.3" y="83.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1170.3" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1,710 samples, 0.48%)</title><rect x="1168.9" y="99.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1171.9" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (1,710 samples, 0.48%)</title><rect x="1168.9" y="83.0" width="5.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1171.9" y="94.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (4,704 samples, 1.31%)</title><rect x="1174.5" y="467.0" width="15.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1177.5" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (4,704 samples, 1.31%)</title><rect x="1174.5" y="451.0" width="15.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1177.5" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (4,704 samples, 1.31%)</title><rect x="1174.5" y="435.0" width="15.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1177.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4,704 samples, 1.31%)</title><rect x="1174.5" y="419.0" width="15.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1177.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4,704 samples, 1.31%)</title><rect x="1174.5" y="403.0" width="15.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1177.5" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4,704 samples, 1.31%)</title><rect x="1174.5" y="387.0" width="15.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1177.5" y="398.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (4,704 samples, 1.31%)</title><rect x="1174.5" y="371.0" width="15.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1177.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.get (4,704 samples, 1.31%)</title><rect x="1174.5" y="355.0" width="15.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1177.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4,704 samples, 1.31%)</title><rect x="1174.5" y="339.0" width="15.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1177.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4,704 samples, 1.31%)</title><rect x="1174.5" y="323.0" width="15.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1177.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4,704 samples, 1.31%)</title><rect x="1174.5" y="307.0" width="15.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1177.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4,704 samples, 1.31%)</title><rect x="1174.5" y="291.0" width="15.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1177.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4,704 samples, 1.31%)</title><rect x="1174.5" y="275.0" width="15.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1177.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4,704 samples, 1.31%)</title><rect x="1174.5" y="259.0" width="15.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1177.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4,704 samples, 1.31%)</title><rect x="1174.5" y="243.0" width="15.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1177.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4,704 samples, 1.31%)</title><rect x="1174.5" y="227.0" width="15.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1177.5" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (4,704 samples, 1.31%)</title><rect x="1174.5" y="211.0" width="15.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1177.5" y="222.0"></text>
</g>
</g>
</svg>
