<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="997"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="997"> </text>
<g id="frames">
<g>
<title>all (16,761 samples, 100.00%)</title><rect x="10.0" y="963.0" width="1180.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="13.0" y="974.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (34 samples, 0.20%)</title><rect x="10.2" y="947.0" width="2.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.2" y="958.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (22 samples, 0.13%)</title><rect x="10.4" y="931.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.4" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (22 samples, 0.13%)</title><rect x="10.4" y="915.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.4" y="926.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.03%)</title><rect x="10.6" y="899.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.6" y="910.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (15 samples, 0.09%)</title><rect x="10.9" y="899.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.9" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.02%)</title><rect x="12.0" y="931.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="15.0" y="942.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (5 samples, 0.03%)</title><rect x="12.3" y="931.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="15.3" y="942.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.09%)</title><rect x="12.6" y="947.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="15.6" y="958.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (4 samples, 0.02%)</title><rect x="13.1" y="931.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="16.1" y="942.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (4 samples, 0.02%)</title><rect x="13.4" y="931.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="16.4" y="942.0"></text>
</g>
<g>
<title>[unknown_Java] (15 samples, 0.09%)</title><rect x="13.7" y="947.0" width="1.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="16.7" y="958.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (7 samples, 0.04%)</title><rect x="13.9" y="931.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="16.9" y="942.0"></text>
</g>
<g>
<title>G1CardTable::is_in_young(oopDesc*) const (4 samples, 0.02%)</title><rect x="14.1" y="915.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="17.1" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.run (15,848 samples, 94.55%)</title><rect x="14.7" y="947.0" width="1115.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="17.7" y="958.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (15,846 samples, 94.54%)</title><rect x="14.9" y="931.0" width="1115.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.9" y="942.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (15,845 samples, 94.53%)</title><rect x="14.9" y="915.0" width="1115.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.9" y="926.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/lang/Thread.interrupted (8 samples, 0.05%)</title><rect x="15.7" y="899.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.7" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (8 samples, 0.05%)</title><rect x="15.7" y="883.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="18.7" y="894.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (5 samples, 0.03%)</title><rect x="15.7" y="867.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="18.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (290 samples, 1.73%)</title><rect x="16.5" y="899.0" width="20.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (283 samples, 1.69%)</title><rect x="17.0" y="883.0" width="19.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="20.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (247 samples, 1.47%)</title><rect x="17.3" y="867.0" width="17.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.3" y="878.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (4 samples, 0.02%)</title><rect x="17.5" y="851.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (4 samples, 0.02%)</title><rect x="17.7" y="851.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="20.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (8 samples, 0.05%)</title><rect x="18.0" y="851.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.02%)</title><rect x="18.3" y="835.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (4 samples, 0.02%)</title><rect x="18.3" y="819.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (225 samples, 1.34%)</title><rect x="18.8" y="851.0" width="15.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="21.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (223 samples, 1.33%)</title><rect x="18.9" y="835.0" width="15.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.9" y="846.0"></text>
</g>
<g>
<title>Unsafe_Park (89 samples, 0.53%)</title><rect x="19.4" y="819.0" width="6.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="22.4" y="830.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (4 samples, 0.02%)</title><rect x="19.7" y="803.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="22.7" y="814.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (4 samples, 0.02%)</title><rect x="20.0" y="803.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="23.0" y="814.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (19 samples, 0.11%)</title><rect x="20.4" y="803.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="23.4" y="814.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (4 samples, 0.02%)</title><rect x="21.1" y="787.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="24.1" y="798.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.02%)</title><rect x="21.5" y="787.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="24.5" y="798.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (7 samples, 0.04%)</title><rect x="21.8" y="803.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="24.8" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (38 samples, 0.23%)</title><rect x="22.7" y="803.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="25.7" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.11%)</title><rect x="24.2" y="787.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="27.2" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.10%)</title><rect x="24.2" y="771.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="27.2" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.04%)</title><rect x="24.8" y="755.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="27.8" y="766.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="24.8" y="739.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="27.8" y="750.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.03%)</title><rect x="24.8" y="723.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="27.8" y="734.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.02%)</title><rect x="24.9" y="707.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="27.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (126 samples, 0.75%)</title><rect x="25.7" y="819.0" width="8.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="28.7" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_wait (109 samples, 0.65%)</title><rect x="26.1" y="803.0" width="7.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="29.1" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 0.26%)</title><rect x="30.7" y="787.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="33.7" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (43 samples, 0.26%)</title><rect x="30.7" y="771.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="33.7" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (26 samples, 0.16%)</title><rect x="31.9" y="755.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="34.9" y="766.0"></text>
</g>
<g>
<title>do_futex (23 samples, 0.14%)</title><rect x="32.1" y="739.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="35.1" y="750.0"></text>
</g>
<g>
<title>futex_wait (20 samples, 0.12%)</title><rect x="32.2" y="723.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="35.2" y="734.0"></text>
</g>
<g>
<title>futex_wait_queue_me (11 samples, 0.07%)</title><rect x="32.3" y="707.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="35.3" y="718.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.04%)</title><rect x="32.6" y="691.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="35.6" y="702.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.04%)</title><rect x="32.7" y="675.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="35.7" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.02%)</title><rect x="32.8" y="659.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="35.8" y="670.0"></text>
</g>
<g>
<title>futex_wait_setup (7 samples, 0.04%)</title><rect x="33.1" y="707.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="36.1" y="718.0"></text>
</g>
<g>
<title>get_futex_value_locked (4 samples, 0.02%)</title><rect x="33.3" y="691.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="36.3" y="702.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.04%)</title><rect x="33.7" y="803.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="36.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (5 samples, 0.03%)</title><rect x="34.6" y="867.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="37.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (5 samples, 0.03%)</title><rect x="34.6" y="851.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (27 samples, 0.16%)</title><rect x="35.0" y="867.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="38.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (27 samples, 0.16%)</title><rect x="35.0" y="851.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="38.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (27 samples, 0.16%)</title><rect x="35.0" y="835.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="38.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (27 samples, 0.16%)</title><rect x="35.0" y="819.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="38.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (27 samples, 0.16%)</title><rect x="35.0" y="803.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="38.0" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (24 samples, 0.14%)</title><rect x="35.2" y="787.0" width="1.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="38.2" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.13%)</title><rect x="35.4" y="771.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="38.4" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.13%)</title><rect x="35.4" y="755.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="38.4" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (20 samples, 0.12%)</title><rect x="35.5" y="739.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="38.5" y="750.0"></text>
</g>
<g>
<title>do_futex (20 samples, 0.12%)</title><rect x="35.5" y="723.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="38.5" y="734.0"></text>
</g>
<g>
<title>futex_wake (20 samples, 0.12%)</title><rect x="35.5" y="707.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="38.5" y="718.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 0.10%)</title><rect x="35.7" y="691.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="38.7" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (17 samples, 0.10%)</title><rect x="35.7" y="675.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="38.7" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (17 samples, 0.10%)</title><rect x="35.7" y="659.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="38.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.processWorkerExit (6 samples, 0.04%)</title><rect x="37.0" y="899.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="40.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.04%)</title><rect x="37.0" y="883.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="40.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.04%)</title><rect x="37.0" y="867.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="40.0" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$124/1082880506.run (15,456 samples, 92.21%)</title><rect x="37.5" y="899.0" width="1088.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="40.5" y="910.0">ru/mail/polis/service/valaubr/HttpService$$Lambda$124/1082880506.run</text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.lambda$get$1 (15,456 samples, 92.21%)</title><rect x="37.5" y="883.0" width="1088.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="40.5" y="894.0">ru/mail/polis/service/valaubr/HttpService.lambda$get$1</text>
</g>
<g>
<title>java/lang/String.getBytes (6 samples, 0.04%)</title><rect x="37.6" y="867.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="40.6" y="878.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (6 samples, 0.04%)</title><rect x="37.6" y="851.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="40.6" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (422 samples, 2.52%)</title><rect x="38.2" y="867.0" width="29.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.2" y="878.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (405 samples, 2.42%)</title><rect x="38.2" y="851.0" width="28.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="41.2" y="862.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (17 samples, 0.10%)</title><rect x="38.3" y="835.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="41.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.04%)</title><rect x="39.0" y="819.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="42.0" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.03%)</title><rect x="39.0" y="803.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="42.0" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (387 samples, 2.31%)</title><rect x="39.5" y="835.0" width="27.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="42.5" y="846.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (387 samples, 2.31%)</title><rect x="39.5" y="819.0" width="27.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="42.5" y="830.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (386 samples, 2.30%)</title><rect x="39.6" y="803.0" width="27.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.6" y="814.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (386 samples, 2.30%)</title><rect x="39.6" y="787.0" width="27.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="42.6" y="798.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (19 samples, 0.11%)</title><rect x="39.8" y="771.0" width="1.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="42.8" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (13 samples, 0.08%)</title><rect x="40.1" y="755.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="43.1" y="766.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.03%)</title><rect x="40.7" y="739.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="43.7" y="750.0"></text>
</g>
<g>
<title>__send (364 samples, 2.17%)</title><rect x="41.1" y="771.0" width="25.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="44.1" y="782.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (353 samples, 2.11%)</title><rect x="41.9" y="755.0" width="24.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="44.9" y="766.0">e..</text>
</g>
<g>
<title>do_syscall_64 (351 samples, 2.09%)</title><rect x="42.0" y="739.0" width="24.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="45.0" y="750.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (345 samples, 2.06%)</title><rect x="42.5" y="723.0" width="24.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="45.5" y="734.0">_..</text>
</g>
<g>
<title>__sys_sendto (342 samples, 2.04%)</title><rect x="42.5" y="707.0" width="24.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="45.5" y="718.0">_..</text>
</g>
<g>
<title>sock_sendmsg (339 samples, 2.02%)</title><rect x="42.5" y="691.0" width="23.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="45.5" y="702.0">s..</text>
</g>
<g>
<title>inet6_sendmsg (333 samples, 1.99%)</title><rect x="42.7" y="675.0" width="23.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="45.7" y="686.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (331 samples, 1.97%)</title><rect x="42.8" y="659.0" width="23.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="45.8" y="670.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (323 samples, 1.93%)</title><rect x="43.3" y="643.0" width="22.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="46.3" y="654.0">t..</text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.02%)</title><rect x="44.2" y="627.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="47.2" y="638.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.02%)</title><rect x="44.2" y="611.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="47.2" y="622.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (22 samples, 0.13%)</title><rect x="44.8" y="627.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="47.8" y="638.0"></text>
</g>
<g>
<title>__alloc_skb (21 samples, 0.13%)</title><rect x="44.8" y="611.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="47.8" y="622.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (9 samples, 0.05%)</title><rect x="45.0" y="595.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="48.0" y="606.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (6 samples, 0.04%)</title><rect x="45.1" y="579.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="48.1" y="590.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.04%)</title><rect x="45.6" y="595.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="48.6" y="606.0"></text>
</g>
<g>
<title>tcp_push (274 samples, 1.63%)</title><rect x="46.6" y="627.0" width="19.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="49.6" y="638.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (274 samples, 1.63%)</title><rect x="46.6" y="611.0" width="19.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="49.6" y="622.0"></text>
</g>
<g>
<title>tcp_write_xmit (272 samples, 1.62%)</title><rect x="46.7" y="595.0" width="19.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="49.7" y="606.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (244 samples, 1.46%)</title><rect x="47.2" y="579.0" width="17.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="50.2" y="590.0"></text>
</g>
<g>
<title>ip_queue_xmit (229 samples, 1.37%)</title><rect x="47.5" y="563.0" width="16.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="50.5" y="574.0"></text>
</g>
<g>
<title>__ip_queue_xmit (227 samples, 1.35%)</title><rect x="47.5" y="547.0" width="16.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="50.5" y="558.0"></text>
</g>
<g>
<title>ip_local_out (219 samples, 1.31%)</title><rect x="47.8" y="531.0" width="15.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="50.8" y="542.0"></text>
</g>
<g>
<title>ip_output (217 samples, 1.29%)</title><rect x="47.9" y="515.0" width="15.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="50.9" y="526.0"></text>
</g>
<g>
<title>ip_finish_output (216 samples, 1.29%)</title><rect x="48.0" y="499.0" width="15.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="51.0" y="510.0"></text>
</g>
<g>
<title>__ip_finish_output (212 samples, 1.26%)</title><rect x="48.2" y="483.0" width="15.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="51.2" y="494.0"></text>
</g>
<g>
<title>ip_finish_output2 (211 samples, 1.26%)</title><rect x="48.3" y="467.0" width="14.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="51.3" y="478.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (174 samples, 1.04%)</title><rect x="49.0" y="451.0" width="12.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="52.0" y="462.0"></text>
</g>
<g>
<title>do_softirq.part.0 (174 samples, 1.04%)</title><rect x="49.0" y="435.0" width="12.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="52.0" y="446.0"></text>
</g>
<g>
<title>do_softirq_own_stack (172 samples, 1.03%)</title><rect x="49.1" y="419.0" width="12.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="52.1" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (172 samples, 1.03%)</title><rect x="49.1" y="403.0" width="12.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="52.1" y="414.0"></text>
</g>
<g>
<title>net_rx_action (164 samples, 0.98%)</title><rect x="49.6" y="387.0" width="11.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="52.6" y="398.0"></text>
</g>
<g>
<title>process_backlog (161 samples, 0.96%)</title><rect x="49.8" y="371.0" width="11.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="52.8" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb (158 samples, 0.94%)</title><rect x="50.1" y="355.0" width="11.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="53.1" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (157 samples, 0.94%)</title><rect x="50.1" y="339.0" width="11.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="53.1" y="350.0"></text>
</g>
<g>
<title>ip_rcv (151 samples, 0.90%)</title><rect x="50.4" y="323.0" width="10.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="53.4" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish (147 samples, 0.88%)</title><rect x="50.7" y="307.0" width="10.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="53.7" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver (145 samples, 0.87%)</title><rect x="50.8" y="291.0" width="10.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="53.8" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (143 samples, 0.85%)</title><rect x="50.9" y="275.0" width="10.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="53.9" y="286.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (141 samples, 0.84%)</title><rect x="50.9" y="259.0" width="9.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="53.9" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (137 samples, 0.82%)</title><rect x="51.2" y="243.0" width="9.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="54.2" y="254.0"></text>
</g>
<g>
<title>__inet_lookup_established (7 samples, 0.04%)</title><rect x="51.5" y="227.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="54.5" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (120 samples, 0.72%)</title><rect x="52.2" y="227.0" width="8.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="55.2" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (112 samples, 0.67%)</title><rect x="52.7" y="211.0" width="7.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="55.7" y="222.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (9 samples, 0.05%)</title><rect x="52.9" y="195.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="55.9" y="206.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (8 samples, 0.05%)</title><rect x="53.0" y="179.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="56.0" y="190.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.04%)</title><rect x="53.1" y="163.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="56.1" y="174.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.03%)</title><rect x="53.2" y="147.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="56.2" y="158.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.03%)</title><rect x="53.2" y="131.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="56.2" y="142.0"></text>
</g>
<g>
<title>tcp_ack (32 samples, 0.19%)</title><rect x="53.7" y="195.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="56.7" y="206.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (21 samples, 0.13%)</title><rect x="54.1" y="179.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="57.1" y="190.0"></text>
</g>
<g>
<title>__kfree_skb (11 samples, 0.07%)</title><rect x="54.5" y="163.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="57.5" y="174.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.04%)</title><rect x="54.7" y="147.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="57.7" y="158.0"></text>
</g>
<g>
<title>skb_release_data (7 samples, 0.04%)</title><rect x="54.7" y="131.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="57.7" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (59 samples, 0.35%)</title><rect x="56.0" y="195.0" width="4.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="59.0" y="206.0"></text>
</g>
<g>
<title>sock_def_readable (56 samples, 0.33%)</title><rect x="56.2" y="179.0" width="3.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="59.2" y="190.0"></text>
</g>
<g>
<title>__wake_up_sync_key (54 samples, 0.32%)</title><rect x="56.3" y="163.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="59.3" y="174.0"></text>
</g>
<g>
<title>__wake_up_common_lock (54 samples, 0.32%)</title><rect x="56.3" y="147.0" width="3.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="59.3" y="158.0"></text>
</g>
<g>
<title>__lock_text_start (54 samples, 0.32%)</title><rect x="56.3" y="131.0" width="3.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="59.3" y="142.0"></text>
</g>
<g>
<title>dev_queue_xmit (27 samples, 0.16%)</title><rect x="61.3" y="451.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="64.3" y="462.0"></text>
</g>
<g>
<title>__dev_queue_xmit (24 samples, 0.14%)</title><rect x="61.3" y="435.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="64.3" y="446.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (9 samples, 0.05%)</title><rect x="61.7" y="419.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="64.7" y="430.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.04%)</title><rect x="61.8" y="403.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="64.8" y="414.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.03%)</title><rect x="62.6" y="419.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="65.6" y="430.0"></text>
</g>
<g>
<title>skb_clone (9 samples, 0.05%)</title><rect x="63.6" y="563.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="66.6" y="574.0"></text>
</g>
<g>
<title>__skb_clone (5 samples, 0.03%)</title><rect x="63.9" y="547.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="66.9" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (10 samples, 0.06%)</title><rect x="64.6" y="579.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="67.6" y="590.0"></text>
</g>
<g>
<title>tcp_rearm_rto (8 samples, 0.05%)</title><rect x="64.8" y="563.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="67.8" y="574.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.04%)</title><rect x="64.8" y="547.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="67.8" y="558.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.04%)</title><rect x="64.8" y="531.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="67.8" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.03%)</title><rect x="65.0" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="68.0" y="526.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (5 samples, 0.03%)</title><rect x="65.3" y="579.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="68.3" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (16 samples, 0.10%)</title><rect x="66.7" y="851.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.7" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.03%)</title><rect x="66.7" y="835.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.7" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.03%)</title><rect x="66.7" y="819.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.07%)</title><rect x="67.1" y="835.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="70.1" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.06%)</title><rect x="67.1" y="819.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="70.1" y="830.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.05%)</title><rect x="67.2" y="803.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="70.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (14,246 samples, 84.99%)</title><rect x="67.9" y="867.0" width="1003.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="70.9" y="878.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (282 samples, 1.68%)</title><rect x="67.9" y="851.0" width="19.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="70.9" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (282 samples, 1.68%)</title><rect x="67.9" y="835.0" width="19.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="70.9" y="846.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (282 samples, 1.68%)</title><rect x="67.9" y="819.0" width="19.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="70.9" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (282 samples, 1.68%)</title><rect x="67.9" y="803.0" width="19.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (282 samples, 1.68%)</title><rect x="67.9" y="787.0" width="19.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="70.9" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (278 samples, 1.66%)</title><rect x="68.2" y="771.0" width="19.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="71.2" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (19 samples, 0.11%)</title><rect x="68.2" y="755.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="71.2" y="766.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (18 samples, 0.11%)</title><rect x="68.2" y="739.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="71.2" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (14 samples, 0.08%)</title><rect x="68.5" y="723.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="71.5" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.07%)</title><rect x="68.6" y="707.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="71.6" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.07%)</title><rect x="68.7" y="691.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.7" y="702.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$123/1128211044.compare (9 samples, 0.05%)</title><rect x="68.9" y="675.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.9" y="686.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (9 samples, 0.05%)</title><rect x="68.9" y="659.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="71.9" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$121/245356113.compare (9 samples, 0.05%)</title><rect x="68.9" y="643.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="71.9" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (9 samples, 0.05%)</title><rect x="68.9" y="627.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="71.9" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="68.9" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="71.9" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.02%)</title><rect x="68.9" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$120/2095215314.apply (4 samples, 0.02%)</title><rect x="69.2" y="611.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="72.2" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (259 samples, 1.55%)</title><rect x="69.5" y="755.0" width="18.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="72.5" y="766.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (259 samples, 1.55%)</title><rect x="69.5" y="739.0" width="18.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.5" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (4 samples, 0.02%)</title><rect x="69.5" y="723.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="72.5" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (255 samples, 1.52%)</title><rect x="69.8" y="723.0" width="17.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.8" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (255 samples, 1.52%)</title><rect x="69.8" y="707.0" width="17.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.8" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (254 samples, 1.52%)</title><rect x="69.8" y="691.0" width="17.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.8" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (254 samples, 1.52%)</title><rect x="69.8" y="675.0" width="17.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.8" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (250 samples, 1.49%)</title><rect x="69.8" y="659.0" width="17.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (247 samples, 1.47%)</title><rect x="70.1" y="643.0" width="17.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="73.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (247 samples, 1.47%)</title><rect x="70.1" y="627.0" width="17.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getCell (247 samples, 1.47%)</title><rect x="70.1" y="611.0" width="17.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="73.1" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.03%)</title><rect x="70.1" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (103 samples, 0.61%)</title><rect x="70.4" y="595.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="73.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (40 samples, 0.24%)</title><rect x="70.4" y="579.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="73.4" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (38 samples, 0.23%)</title><rect x="70.5" y="563.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (38 samples, 0.23%)</title><rect x="70.5" y="547.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="73.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (34 samples, 0.20%)</title><rect x="70.8" y="531.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (31 samples, 0.18%)</title><rect x="70.9" y="515.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="73.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (31 samples, 0.18%)</title><rect x="70.9" y="499.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="73.9" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (31 samples, 0.18%)</title><rect x="70.9" y="483.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.9" y="494.0"></text>
</g>
<g>
<title>__libc_pread64 (30 samples, 0.18%)</title><rect x="71.0" y="467.0" width="2.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="74.0" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.13%)</title><rect x="71.6" y="451.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="74.6" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.12%)</title><rect x="71.7" y="435.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="74.7" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (12 samples, 0.07%)</title><rect x="72.2" y="419.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="75.2" y="430.0"></text>
</g>
<g>
<title>ksys_pread64 (12 samples, 0.07%)</title><rect x="72.2" y="403.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="75.2" y="414.0"></text>
</g>
<g>
<title>vfs_read (10 samples, 0.06%)</title><rect x="72.4" y="387.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="75.4" y="398.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.03%)</title><rect x="72.4" y="371.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="75.4" y="382.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.03%)</title><rect x="72.4" y="355.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="75.4" y="366.0"></text>
</g>
<g>
<title>shmem_file_read_iter (4 samples, 0.02%)</title><rect x="72.4" y="339.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="75.4" y="350.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.02%)</title><rect x="72.8" y="371.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="75.8" y="382.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.02%)</title><rect x="72.8" y="355.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="75.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (63 samples, 0.38%)</title><rect x="73.2" y="579.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="76.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (63 samples, 0.38%)</title><rect x="73.2" y="563.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="76.2" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (57 samples, 0.34%)</title><rect x="73.4" y="547.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="76.4" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (51 samples, 0.30%)</title><rect x="73.4" y="531.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="76.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (51 samples, 0.30%)</title><rect x="73.4" y="515.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (51 samples, 0.30%)</title><rect x="73.4" y="499.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.4" y="510.0"></text>
</g>
<g>
<title>__libc_pread64 (47 samples, 0.28%)</title><rect x="73.6" y="483.0" width="3.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="76.6" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.20%)</title><rect x="74.6" y="467.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="77.6" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.20%)</title><rect x="74.6" y="451.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="77.6" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (30 samples, 0.18%)</title><rect x="74.8" y="435.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="77.8" y="446.0"></text>
</g>
<g>
<title>ksys_pread64 (30 samples, 0.18%)</title><rect x="74.8" y="419.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="77.8" y="430.0"></text>
</g>
<g>
<title>vfs_read (25 samples, 0.15%)</title><rect x="75.2" y="403.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="78.2" y="414.0"></text>
</g>
<g>
<title>__vfs_read (17 samples, 0.10%)</title><rect x="75.3" y="387.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="78.3" y="398.0"></text>
</g>
<g>
<title>new_sync_read (14 samples, 0.08%)</title><rect x="75.4" y="371.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="78.4" y="382.0"></text>
</g>
<g>
<title>shmem_file_read_iter (14 samples, 0.08%)</title><rect x="75.4" y="355.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="78.4" y="366.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (9 samples, 0.05%)</title><rect x="75.7" y="339.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="78.7" y="350.0"></text>
</g>
<g>
<title>find_lock_entry (8 samples, 0.05%)</title><rect x="75.8" y="323.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="78.8" y="334.0"></text>
</g>
<g>
<title>find_get_entry (6 samples, 0.04%)</title><rect x="75.8" y="307.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="78.8" y="318.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.03%)</title><rect x="76.6" y="387.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="79.6" y="398.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.03%)</title><rect x="76.6" y="371.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="79.6" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.03%)</title><rect x="77.0" y="531.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="80.0" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.02%)</title><rect x="77.0" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.0" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (4 samples, 0.02%)</title><rect x="77.0" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="80.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (32 samples, 0.19%)</title><rect x="77.7" y="595.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (30 samples, 0.18%)</title><rect x="77.8" y="579.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="80.8" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (30 samples, 0.18%)</title><rect x="77.8" y="563.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="80.8" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (28 samples, 0.17%)</title><rect x="77.9" y="547.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="80.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (23 samples, 0.14%)</title><rect x="78.0" y="531.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="81.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (23 samples, 0.14%)</title><rect x="78.0" y="515.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="81.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (23 samples, 0.14%)</title><rect x="78.0" y="499.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="81.0" y="510.0"></text>
</g>
<g>
<title>__libc_pread64 (22 samples, 0.13%)</title><rect x="78.0" y="483.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="81.0" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.11%)</title><rect x="78.2" y="467.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="81.2" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.10%)</title><rect x="78.4" y="451.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="81.4" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (11 samples, 0.07%)</title><rect x="78.8" y="435.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="81.8" y="446.0"></text>
</g>
<g>
<title>ksys_pread64 (11 samples, 0.07%)</title><rect x="78.8" y="419.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="81.8" y="430.0"></text>
</g>
<g>
<title>vfs_read (10 samples, 0.06%)</title><rect x="78.9" y="403.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="81.9" y="414.0"></text>
</g>
<g>
<title>__vfs_read (7 samples, 0.04%)</title><rect x="78.9" y="387.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="81.9" y="398.0"></text>
</g>
<g>
<title>new_sync_read (7 samples, 0.04%)</title><rect x="78.9" y="371.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="81.9" y="382.0"></text>
</g>
<g>
<title>shmem_file_read_iter (6 samples, 0.04%)</title><rect x="78.9" y="355.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="81.9" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (107 samples, 0.64%)</title><rect x="79.9" y="595.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="82.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (107 samples, 0.64%)</title><rect x="79.9" y="579.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="82.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.03%)</title><rect x="80.1" y="563.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.1" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (5 samples, 0.03%)</title><rect x="80.1" y="547.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="83.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (94 samples, 0.56%)</title><rect x="80.5" y="563.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="83.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (83 samples, 0.50%)</title><rect x="80.5" y="547.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (83 samples, 0.50%)</title><rect x="80.5" y="531.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (83 samples, 0.50%)</title><rect x="80.5" y="515.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.5" y="526.0"></text>
</g>
<g>
<title>__libc_pread64 (69 samples, 0.41%)</title><rect x="81.3" y="499.0" width="4.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="84.3" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 0.26%)</title><rect x="83.1" y="483.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="86.1" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 0.24%)</title><rect x="83.3" y="467.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="86.3" y="478.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (26 samples, 0.16%)</title><rect x="84.3" y="451.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="87.3" y="462.0"></text>
</g>
<g>
<title>ksys_pread64 (26 samples, 0.16%)</title><rect x="84.3" y="435.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="87.3" y="446.0"></text>
</g>
<g>
<title>vfs_read (21 samples, 0.13%)</title><rect x="84.7" y="419.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="87.7" y="430.0"></text>
</g>
<g>
<title>__vfs_read (15 samples, 0.09%)</title><rect x="84.7" y="403.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="87.7" y="414.0"></text>
</g>
<g>
<title>new_sync_read (15 samples, 0.09%)</title><rect x="84.7" y="387.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="87.7" y="398.0"></text>
</g>
<g>
<title>shmem_file_read_iter (13 samples, 0.08%)</title><rect x="84.8" y="371.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="87.8" y="382.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.02%)</title><rect x="84.9" y="355.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="87.9" y="366.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (6 samples, 0.04%)</title><rect x="85.3" y="355.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="88.3" y="366.0"></text>
</g>
<g>
<title>find_lock_entry (5 samples, 0.03%)</title><rect x="85.4" y="339.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="88.4" y="350.0"></text>
</g>
<g>
<title>find_get_entry (4 samples, 0.02%)</title><rect x="85.5" y="323.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="88.5" y="334.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.03%)</title><rect x="85.8" y="403.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="88.8" y="414.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.02%)</title><rect x="85.9" y="387.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="88.9" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.05%)</title><rect x="86.4" y="547.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.4" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (8 samples, 0.05%)</title><rect x="86.4" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="89.4" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (8 samples, 0.05%)</title><rect x="86.4" y="515.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="89.4" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (8 samples, 0.05%)</title><rect x="86.4" y="499.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="89.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.02%)</title><rect x="87.1" y="563.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="90.1" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$123/1128211044.compare (4 samples, 0.02%)</title><rect x="87.4" y="659.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.4" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.02%)</title><rect x="87.4" y="643.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="90.4" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$121/245356113.compare (4 samples, 0.02%)</title><rect x="87.4" y="627.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="90.4" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.02%)</title><rect x="87.4" y="611.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="90.4" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (7 samples, 0.04%)</title><rect x="87.8" y="851.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="90.8" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (5 samples, 0.03%)</title><rect x="87.9" y="835.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="90.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$142/286277100.apply (4 samples, 0.02%)</title><rect x="88.0" y="819.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="91.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.lambda$iterator$3 (4 samples, 0.02%)</title><rect x="88.0" y="803.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="91.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (6 samples, 0.04%)</title><rect x="88.5" y="851.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.5" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (6 samples, 0.04%)</title><rect x="88.5" y="835.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.5" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.03%)</title><rect x="88.6" y="819.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.6" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (5 samples, 0.03%)</title><rect x="88.6" y="803.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.6" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="88.6" y="787.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="91.6" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="88.6" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.6" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="88.6" y="755.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="91.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.iterator (13,948 samples, 83.22%)</title><rect x="88.9" y="851.0" width="982.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="91.9" y="862.0">ru/mail/polis/dao/valaubr/LsmDAO.iterator</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (44 samples, 0.26%)</title><rect x="89.2" y="835.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="92.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (39 samples, 0.23%)</title><rect x="89.3" y="819.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="92.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (39 samples, 0.23%)</title><rect x="89.3" y="803.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="92.3" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (21 samples, 0.13%)</title><rect x="90.4" y="787.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.4" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (11 samples, 0.07%)</title><rect x="91.1" y="771.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="94.1" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (6 samples, 0.04%)</title><rect x="91.4" y="755.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="94.4" y="766.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (4 samples, 0.02%)</title><rect x="91.5" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.5" y="750.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (4 samples, 0.02%)</title><rect x="91.5" y="723.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.5" y="734.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (4 samples, 0.02%)</title><rect x="91.5" y="707.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="94.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.iterator (4 samples, 0.02%)</title><rect x="92.0" y="819.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="95.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.cellIterator (13,898 samples, 82.92%)</title><rect x="92.4" y="835.0" width="978.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="95.4" y="846.0">ru/mail/polis/dao/valaubr/LsmDAO.cellIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,193 samples, 7.12%)</title><rect x="92.5" y="819.0" width="84.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="95.5" y="830.0">com/googl..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,193 samples, 7.12%)</title><rect x="92.5" y="803.0" width="84.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="95.5" y="814.0">com/googl..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (22 samples, 0.13%)</title><rect x="92.9" y="787.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.9" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (19 samples, 0.11%)</title><rect x="93.1" y="771.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="96.1" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (19 samples, 0.11%)</title><rect x="93.1" y="755.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (19 samples, 0.11%)</title><rect x="93.1" y="739.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.1" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (12 samples, 0.07%)</title><rect x="93.3" y="723.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="96.3" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (4 samples, 0.02%)</title><rect x="93.3" y="707.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="96.3" y="718.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (4 samples, 0.02%)</title><rect x="93.3" y="691.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.3" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (4 samples, 0.02%)</title><rect x="93.3" y="675.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.3" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (4 samples, 0.02%)</title><rect x="93.3" y="659.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="96.3" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (4 samples, 0.02%)</title><rect x="94.1" y="723.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="97.1" y="734.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.02%)</title><rect x="94.1" y="707.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.1" y="718.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="94.4" y="787.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="97.4" y="798.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (7 samples, 0.04%)</title><rect x="95.0" y="787.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="98.0" y="798.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (4 samples, 0.02%)</title><rect x="95.2" y="771.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="98.2" y="782.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,149 samples, 6.86%)</title><rect x="95.5" y="787.0" width="80.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="98.5" y="798.0">java/util..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,149 samples, 6.86%)</title><rect x="95.5" y="771.0" width="80.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="98.5" y="782.0">java/util..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,148 samples, 6.85%)</title><rect x="95.5" y="755.0" width="80.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="98.5" y="766.0">java/util..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,146 samples, 6.84%)</title><rect x="95.7" y="739.0" width="80.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="98.7" y="750.0">java/util..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,142 samples, 6.81%)</title><rect x="95.7" y="723.0" width="80.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="98.7" y="734.0">com/googl..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,141 samples, 6.81%)</title><rect x="95.7" y="707.0" width="80.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="98.7" y="718.0">com/googl..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,113 samples, 6.64%)</title><rect x="95.7" y="691.0" width="78.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="98.7" y="702.0">com/googl..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (4 samples, 0.02%)</title><rect x="96.0" y="675.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="99.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (1,106 samples, 6.60%)</title><rect x="96.2" y="675.0" width="77.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="99.2" y="686.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (1,106 samples, 6.60%)</title><rect x="96.2" y="659.0" width="77.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="99.2" y="670.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getCell (1,105 samples, 6.59%)</title><rect x="96.3" y="643.0" width="77.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.3" y="654.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (15 samples, 0.09%)</title><rect x="96.5" y="627.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="99.5" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (11 samples, 0.07%)</title><rect x="96.7" y="611.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="99.7" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.06%)</title><rect x="96.8" y="595.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="99.8" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="96.9" y="579.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.9" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="97.1" y="563.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="100.1" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="97.1" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (470 samples, 2.80%)</title><rect x="97.6" y="627.0" width="33.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.6" y="638.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (166 samples, 0.99%)</title><rect x="97.7" y="611.0" width="11.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.7" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (9 samples, 0.05%)</title><rect x="97.7" y="595.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="100.7" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="97.8" y="579.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.8" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="97.9" y="563.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="100.9" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="97.9" y="547.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="100.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (154 samples, 0.92%)</title><rect x="98.6" y="595.0" width="10.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.6" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (151 samples, 0.90%)</title><rect x="98.8" y="579.0" width="10.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.8" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.03%)</title><rect x="98.9" y="563.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="101.9" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.02%)</title><rect x="99.0" y="547.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.0" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (134 samples, 0.80%)</title><rect x="99.3" y="563.0" width="9.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="102.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (124 samples, 0.74%)</title><rect x="99.5" y="547.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (124 samples, 0.74%)</title><rect x="99.5" y="531.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="102.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (124 samples, 0.74%)</title><rect x="99.5" y="515.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.5" y="526.0"></text>
</g>
<g>
<title>__libc_pread64 (116 samples, 0.69%)</title><rect x="99.8" y="499.0" width="8.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="102.8" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (81 samples, 0.48%)</title><rect x="102.2" y="483.0" width="5.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="105.2" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (79 samples, 0.47%)</title><rect x="102.4" y="467.0" width="5.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="105.4" y="478.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (58 samples, 0.35%)</title><rect x="103.8" y="451.0" width="4.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="106.8" y="462.0"></text>
</g>
<g>
<title>ksys_pread64 (58 samples, 0.35%)</title><rect x="103.8" y="435.0" width="4.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="106.8" y="446.0"></text>
</g>
<g>
<title>vfs_read (49 samples, 0.29%)</title><rect x="104.5" y="419.0" width="3.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="107.5" y="430.0"></text>
</g>
<g>
<title>__vfs_read (34 samples, 0.20%)</title><rect x="104.6" y="403.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="107.6" y="414.0"></text>
</g>
<g>
<title>new_sync_read (30 samples, 0.18%)</title><rect x="104.6" y="387.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="107.6" y="398.0"></text>
</g>
<g>
<title>shmem_file_read_iter (28 samples, 0.17%)</title><rect x="104.7" y="371.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="107.7" y="382.0"></text>
</g>
<g>
<title>copy_page_to_iter (5 samples, 0.03%)</title><rect x="104.9" y="355.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="107.9" y="366.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (18 samples, 0.11%)</title><rect x="105.3" y="355.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="108.3" y="366.0"></text>
</g>
<g>
<title>find_lock_entry (16 samples, 0.10%)</title><rect x="105.5" y="339.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="108.5" y="350.0"></text>
</g>
<g>
<title>find_get_entry (9 samples, 0.05%)</title><rect x="105.6" y="323.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="108.6" y="334.0"></text>
</g>
<g>
<title>shmem_file_read_iter (4 samples, 0.02%)</title><rect x="106.7" y="387.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="109.7" y="398.0"></text>
</g>
<g>
<title>rw_verify_area (12 samples, 0.07%)</title><rect x="107.1" y="403.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="110.1" y="414.0"></text>
</g>
<g>
<title>security_file_permission (10 samples, 0.06%)</title><rect x="107.2" y="387.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="110.2" y="398.0"></text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.02%)</title><rect x="107.2" y="371.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="110.2" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.05%)</title><rect x="108.2" y="547.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="111.2" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (8 samples, 0.05%)</title><rect x="108.2" y="531.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="111.2" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (8 samples, 0.05%)</title><rect x="108.2" y="515.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="111.2" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (8 samples, 0.05%)</title><rect x="108.2" y="499.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="111.2" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (8 samples, 0.05%)</title><rect x="108.8" y="563.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="111.8" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (5 samples, 0.03%)</title><rect x="109.0" y="547.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="112.0" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (302 samples, 1.80%)</title><rect x="109.4" y="611.0" width="21.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.4" y="622.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (302 samples, 1.80%)</title><rect x="109.4" y="595.0" width="21.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="112.4" y="606.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (17 samples, 0.10%)</title><rect x="109.5" y="579.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="112.5" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (17 samples, 0.10%)</title><rect x="109.5" y="563.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="112.5" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.02%)</title><rect x="110.4" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.4" y="558.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.02%)</title><rect x="110.4" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="113.4" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.02%)</title><rect x="110.4" y="515.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="113.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (4 samples, 0.02%)</title><rect x="110.7" y="579.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.7" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (4 samples, 0.02%)</title><rect x="110.7" y="563.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (274 samples, 1.63%)</title><rect x="111.0" y="579.0" width="19.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="114.0" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (6 samples, 0.04%)</title><rect x="111.2" y="563.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="114.2" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="111.2" y="547.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="114.2" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="111.2" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (239 samples, 1.43%)</title><rect x="111.6" y="563.0" width="16.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (238 samples, 1.42%)</title><rect x="111.7" y="547.0" width="16.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (238 samples, 1.42%)</title><rect x="111.7" y="531.0" width="16.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.7" y="542.0"></text>
</g>
<g>
<title>__libc_pread64 (227 samples, 1.35%)</title><rect x="112.2" y="515.0" width="15.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="115.2" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (163 samples, 0.97%)</title><rect x="116.7" y="499.0" width="11.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="119.7" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (161 samples, 0.96%)</title><rect x="116.8" y="483.0" width="11.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="119.8" y="494.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (115 samples, 0.69%)</title><rect x="120.0" y="467.0" width="8.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="123.0" y="478.0"></text>
</g>
<g>
<title>ksys_pread64 (115 samples, 0.69%)</title><rect x="120.0" y="451.0" width="8.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="123.0" y="462.0"></text>
</g>
<g>
<title>__fdget (8 samples, 0.05%)</title><rect x="120.1" y="435.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="123.1" y="446.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.05%)</title><rect x="120.1" y="419.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="123.1" y="430.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.05%)</title><rect x="120.1" y="403.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="123.1" y="414.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.03%)</title><rect x="120.7" y="435.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="123.7" y="446.0"></text>
</g>
<g>
<title>vfs_read (96 samples, 0.57%)</title><rect x="121.4" y="435.0" width="6.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="124.4" y="446.0"></text>
</g>
<g>
<title>__vfs_read (66 samples, 0.39%)</title><rect x="121.8" y="419.0" width="4.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="124.8" y="430.0"></text>
</g>
<g>
<title>new_sync_read (62 samples, 0.37%)</title><rect x="121.9" y="403.0" width="4.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="124.9" y="414.0"></text>
</g>
<g>
<title>shmem_file_read_iter (56 samples, 0.33%)</title><rect x="122.3" y="387.0" width="3.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="125.3" y="398.0"></text>
</g>
<g>
<title>copy_page_to_iter (12 samples, 0.07%)</title><rect x="123.0" y="371.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="126.0" y="382.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (9 samples, 0.05%)</title><rect x="123.1" y="355.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="126.1" y="366.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (32 samples, 0.19%)</title><rect x="123.9" y="371.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="126.9" y="382.0"></text>
</g>
<g>
<title>find_lock_entry (27 samples, 0.16%)</title><rect x="124.3" y="355.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="127.3" y="366.0"></text>
</g>
<g>
<title>find_get_entry (15 samples, 0.09%)</title><rect x="124.8" y="339.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="127.8" y="350.0"></text>
</g>
<g>
<title>xas_load (6 samples, 0.04%)</title><rect x="125.2" y="323.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="128.2" y="334.0"></text>
</g>
<g>
<title>page_mapping (4 samples, 0.02%)</title><rect x="125.9" y="339.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="128.9" y="350.0"></text>
</g>
<g>
<title>rw_verify_area (23 samples, 0.14%)</title><rect x="126.5" y="419.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="129.5" y="430.0"></text>
</g>
<g>
<title>security_file_permission (20 samples, 0.12%)</title><rect x="126.7" y="403.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="129.7" y="414.0"></text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.02%)</title><rect x="127.1" y="387.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="130.1" y="398.0"></text>
</g>
<g>
<title>apparmor_file_permission (5 samples, 0.03%)</title><rect x="127.4" y="387.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="130.4" y="398.0"></text>
</g>
<g>
<title>common_file_perm (5 samples, 0.03%)</title><rect x="127.4" y="371.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="130.4" y="382.0"></text>
</g>
<g>
<title>fsnotify (6 samples, 0.04%)</title><rect x="127.7" y="387.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="130.7" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (26 samples, 0.16%)</title><rect x="128.4" y="563.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="131.4" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (26 samples, 0.16%)</title><rect x="128.4" y="547.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="131.4" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (25 samples, 0.15%)</title><rect x="128.5" y="531.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="131.5" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (24 samples, 0.14%)</title><rect x="128.5" y="515.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="131.5" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (9 samples, 0.05%)</title><rect x="129.0" y="499.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="132.0" y="510.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (9 samples, 0.05%)</title><rect x="129.0" y="483.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.0" y="494.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (8 samples, 0.05%)</title><rect x="129.0" y="467.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.0" y="478.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (8 samples, 0.05%)</title><rect x="129.0" y="451.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="132.0" y="462.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (5 samples, 0.03%)</title><rect x="129.3" y="435.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.3" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (8 samples, 0.05%)</title><rect x="129.6" y="499.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.03%)</title><rect x="130.2" y="579.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.02%)</title><rect x="130.3" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="133.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (193 samples, 1.15%)</title><rect x="130.7" y="627.0" width="13.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="133.7" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (13 samples, 0.08%)</title><rect x="130.7" y="611.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="133.7" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.07%)</title><rect x="130.7" y="595.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.7" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.07%)</title><rect x="130.7" y="579.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="133.7" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (9 samples, 0.05%)</title><rect x="130.9" y="563.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.9" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.04%)</title><rect x="131.1" y="547.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="134.1" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.04%)</title><rect x="131.1" y="531.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.1" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.04%)</title><rect x="131.1" y="515.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.1" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (180 samples, 1.07%)</title><rect x="131.6" y="611.0" width="12.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.6" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (177 samples, 1.06%)</title><rect x="131.8" y="595.0" width="12.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="134.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (6 samples, 0.04%)</title><rect x="131.9" y="579.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="134.9" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (6 samples, 0.04%)</title><rect x="131.9" y="563.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.9" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (162 samples, 0.97%)</title><rect x="132.4" y="579.0" width="11.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="135.4" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (5 samples, 0.03%)</title><rect x="132.4" y="563.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="135.4" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (152 samples, 0.91%)</title><rect x="132.8" y="563.0" width="10.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="135.8" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (152 samples, 0.91%)</title><rect x="132.8" y="547.0" width="10.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="135.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (152 samples, 0.91%)</title><rect x="132.8" y="531.0" width="10.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="135.8" y="542.0"></text>
</g>
<g>
<title>__libc_pread64 (142 samples, 0.85%)</title><rect x="133.3" y="515.0" width="10.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="136.3" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (101 samples, 0.60%)</title><rect x="136.2" y="499.0" width="7.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="139.2" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (99 samples, 0.59%)</title><rect x="136.4" y="483.0" width="6.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="139.4" y="494.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (73 samples, 0.44%)</title><rect x="138.2" y="467.0" width="5.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="141.2" y="478.0"></text>
</g>
<g>
<title>ksys_pread64 (73 samples, 0.44%)</title><rect x="138.2" y="451.0" width="5.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="141.2" y="462.0"></text>
</g>
<g>
<title>__fdget (9 samples, 0.05%)</title><rect x="138.4" y="435.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="141.4" y="446.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.05%)</title><rect x="138.4" y="419.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="141.4" y="430.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.05%)</title><rect x="138.4" y="403.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="141.4" y="414.0"></text>
</g>
<g>
<title>vfs_read (58 samples, 0.35%)</title><rect x="139.3" y="435.0" width="4.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="142.3" y="446.0"></text>
</g>
<g>
<title>__vfs_read (36 samples, 0.21%)</title><rect x="139.6" y="419.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="142.6" y="430.0"></text>
</g>
<g>
<title>new_sync_read (34 samples, 0.20%)</title><rect x="139.7" y="403.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="142.7" y="414.0"></text>
</g>
<g>
<title>shmem_file_read_iter (29 samples, 0.17%)</title><rect x="139.8" y="387.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="142.8" y="398.0"></text>
</g>
<g>
<title>copy_page_to_iter (5 samples, 0.03%)</title><rect x="140.2" y="371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="143.2" y="382.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (18 samples, 0.11%)</title><rect x="140.5" y="371.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="143.5" y="382.0"></text>
</g>
<g>
<title>find_lock_entry (16 samples, 0.10%)</title><rect x="140.6" y="355.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="143.6" y="366.0"></text>
</g>
<g>
<title>find_get_entry (15 samples, 0.09%)</title><rect x="140.7" y="339.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="143.7" y="350.0"></text>
</g>
<g>
<title>xas_start (4 samples, 0.02%)</title><rect x="141.4" y="323.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="144.4" y="334.0"></text>
</g>
<g>
<title>rw_verify_area (17 samples, 0.10%)</title><rect x="142.1" y="419.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="145.1" y="430.0"></text>
</g>
<g>
<title>security_file_permission (13 samples, 0.08%)</title><rect x="142.4" y="403.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="145.4" y="414.0"></text>
</g>
<g>
<title>apparmor_file_permission (5 samples, 0.03%)</title><rect x="142.6" y="387.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="145.6" y="398.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.02%)</title><rect x="142.7" y="371.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="145.7" y="382.0"></text>
</g>
<g>
<title>aa_file_perm (4 samples, 0.02%)</title><rect x="142.7" y="355.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="145.7" y="366.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.03%)</title><rect x="143.0" y="387.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="146.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.02%)</title><rect x="143.5" y="563.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="146.5" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.02%)</title><rect x="143.5" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="146.5" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (4 samples, 0.02%)</title><rect x="143.5" y="531.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="146.5" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (4 samples, 0.02%)</title><rect x="143.5" y="515.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="146.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.03%)</title><rect x="143.8" y="579.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.8" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (424 samples, 2.53%)</title><rect x="144.3" y="627.0" width="29.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="147.3" y="638.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (424 samples, 2.53%)</title><rect x="144.3" y="611.0" width="29.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="147.3" y="622.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (11 samples, 0.07%)</title><rect x="144.3" y="595.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="147.3" y="606.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (11 samples, 0.07%)</title><rect x="144.3" y="579.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="147.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (4 samples, 0.02%)</title><rect x="145.1" y="595.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="148.1" y="606.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (4 samples, 0.02%)</title><rect x="145.1" y="579.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.1" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (395 samples, 2.36%)</title><rect x="145.4" y="595.0" width="27.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.4" y="606.0">s..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (5 samples, 0.03%)</title><rect x="145.5" y="579.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="148.5" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.03%)</title><rect x="145.5" y="563.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="148.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (348 samples, 2.08%)</title><rect x="145.9" y="579.0" width="24.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="148.9" y="590.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (348 samples, 2.08%)</title><rect x="145.9" y="563.0" width="24.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.9" y="574.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (348 samples, 2.08%)</title><rect x="145.9" y="547.0" width="24.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="148.9" y="558.0">s..</text>
</g>
<g>
<title>__libc_pread64 (318 samples, 1.90%)</title><rect x="146.9" y="531.0" width="22.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="149.9" y="542.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (223 samples, 1.33%)</title><rect x="153.6" y="515.0" width="15.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="156.6" y="526.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (6 samples, 0.04%)</title><rect x="153.6" y="499.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="156.6" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (217 samples, 1.29%)</title><rect x="154.0" y="499.0" width="15.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="157.0" y="510.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (163 samples, 0.97%)</title><rect x="157.8" y="483.0" width="11.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="160.8" y="494.0"></text>
</g>
<g>
<title>ksys_pread64 (160 samples, 0.95%)</title><rect x="158.0" y="467.0" width="11.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="161.0" y="478.0"></text>
</g>
<g>
<title>__fdget (9 samples, 0.05%)</title><rect x="158.3" y="451.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="161.3" y="462.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.05%)</title><rect x="158.3" y="435.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="161.3" y="446.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.05%)</title><rect x="158.3" y="419.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="161.3" y="430.0"></text>
</g>
<g>
<title>vfs_read (139 samples, 0.83%)</title><rect x="159.5" y="451.0" width="9.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="162.5" y="462.0"></text>
</g>
<g>
<title>__vfs_read (102 samples, 0.61%)</title><rect x="159.9" y="435.0" width="7.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="162.9" y="446.0"></text>
</g>
<g>
<title>new_sync_read (93 samples, 0.55%)</title><rect x="160.1" y="419.0" width="6.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="163.1" y="430.0"></text>
</g>
<g>
<title>shmem_file_read_iter (79 samples, 0.47%)</title><rect x="160.4" y="403.0" width="5.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="163.4" y="414.0"></text>
</g>
<g>
<title>copy_page_to_iter (12 samples, 0.07%)</title><rect x="161.6" y="387.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="164.6" y="398.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (11 samples, 0.07%)</title><rect x="161.6" y="371.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="164.6" y="382.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (42 samples, 0.25%)</title><rect x="162.6" y="387.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="165.6" y="398.0"></text>
</g>
<g>
<title>find_lock_entry (34 samples, 0.20%)</title><rect x="163.2" y="371.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="166.2" y="382.0"></text>
</g>
<g>
<title>find_get_entry (26 samples, 0.16%)</title><rect x="163.5" y="355.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="166.5" y="366.0"></text>
</g>
<g>
<title>xas_load (7 samples, 0.04%)</title><rect x="164.5" y="339.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="167.5" y="350.0"></text>
</g>
<g>
<title>xas_start (6 samples, 0.04%)</title><rect x="165.0" y="339.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="168.0" y="350.0"></text>
</g>
<g>
<title>touch_atime (5 samples, 0.03%)</title><rect x="165.6" y="387.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="168.6" y="398.0"></text>
</g>
<g>
<title>unlock_page (7 samples, 0.04%)</title><rect x="166.2" y="403.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="169.2" y="414.0"></text>
</g>
<g>
<title>shmem_file_read_iter (6 samples, 0.04%)</title><rect x="166.6" y="419.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="169.6" y="430.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.03%)</title><rect x="167.1" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="170.1" y="446.0"></text>
</g>
<g>
<title>rw_verify_area (26 samples, 0.16%)</title><rect x="167.4" y="435.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="170.4" y="446.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.02%)</title><rect x="167.5" y="419.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="170.5" y="430.0"></text>
</g>
<g>
<title>security_file_permission (21 samples, 0.13%)</title><rect x="167.8" y="419.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="170.8" y="430.0"></text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.02%)</title><rect x="167.8" y="403.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="170.8" y="414.0"></text>
</g>
<g>
<title>apparmor_file_permission (8 samples, 0.05%)</title><rect x="168.1" y="403.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="171.1" y="414.0"></text>
</g>
<g>
<title>common_file_perm (7 samples, 0.04%)</title><rect x="168.2" y="387.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="171.2" y="398.0"></text>
</g>
<g>
<title>common_file_perm (5 samples, 0.03%)</title><rect x="168.7" y="403.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="171.7" y="414.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.04%)</title><rect x="169.3" y="531.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="172.3" y="542.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (8 samples, 0.05%)</title><rect x="169.7" y="531.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="172.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (36 samples, 0.21%)</title><rect x="170.4" y="579.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="173.4" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (36 samples, 0.21%)</title><rect x="170.4" y="563.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="173.4" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (36 samples, 0.21%)</title><rect x="170.4" y="547.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="173.4" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (31 samples, 0.18%)</title><rect x="170.4" y="531.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="173.4" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (8 samples, 0.05%)</title><rect x="171.2" y="515.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="174.2" y="526.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (8 samples, 0.05%)</title><rect x="171.2" y="499.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="174.2" y="510.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (8 samples, 0.05%)</title><rect x="171.2" y="483.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="174.2" y="494.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (7 samples, 0.04%)</title><rect x="171.3" y="467.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="174.3" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (11 samples, 0.07%)</title><rect x="171.8" y="515.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="174.8" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.createMap (4 samples, 0.02%)</title><rect x="172.6" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="175.6" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.&lt;init&gt; (4 samples, 0.02%)</title><rect x="172.6" y="515.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="175.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (4 samples, 0.02%)</title><rect x="172.9" y="579.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="175.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (11 samples, 0.07%)</title><rect x="173.2" y="595.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="176.2" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (5 samples, 0.03%)</title><rect x="173.6" y="579.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="176.6" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$123/1128211044.compare (28 samples, 0.17%)</title><rect x="174.1" y="691.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.1" y="702.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (25 samples, 0.15%)</title><rect x="174.3" y="675.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="177.3" y="686.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$121/245356113.compare (22 samples, 0.13%)</title><rect x="174.5" y="659.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="177.5" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (22 samples, 0.13%)</title><rect x="174.5" y="643.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="177.5" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.05%)</title><rect x="174.7" y="627.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="177.7" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.05%)</title><rect x="174.7" y="611.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="177.7" y="622.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.03%)</title><rect x="174.9" y="595.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="177.9" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.02%)</title><rect x="175.0" y="579.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="178.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$120/2095215314.apply (11 samples, 0.07%)</title><rect x="175.3" y="627.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="178.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell.getKey (10 samples, 0.06%)</title><rect x="175.4" y="611.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="178.4" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (10 samples, 0.06%)</title><rect x="175.4" y="595.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="178.4" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.03%)</title><rect x="175.6" y="579.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="178.6" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.03%)</title><rect x="175.6" y="563.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="178.6" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.03%)</title><rect x="175.6" y="547.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="178.6" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="175.6" y="531.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="178.6" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$123/1128211044.compare (4 samples, 0.02%)</title><rect x="176.1" y="723.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="179.1" y="734.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (12,271 samples, 73.21%)</title><rect x="176.5" y="819.0" width="863.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="179.5" y="830.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (62 samples, 0.37%)</title><rect x="176.6" y="803.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="179.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (62 samples, 0.37%)</title><rect x="176.6" y="787.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="179.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (49 samples, 0.29%)</title><rect x="177.1" y="771.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="180.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (43 samples, 0.26%)</title><rect x="177.6" y="755.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.6" y="766.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.04%)</title><rect x="178.0" y="739.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="181.0" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (4 samples, 0.02%)</title><rect x="178.5" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="181.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (10 samples, 0.06%)</title><rect x="178.8" y="739.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="181.8" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (6 samples, 0.04%)</title><rect x="179.0" y="723.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="182.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (16 samples, 0.10%)</title><rect x="179.5" y="739.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="182.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.02%)</title><rect x="180.3" y="723.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="183.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 0.05%)</title><rect x="180.9" y="803.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="183.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$ValueIterator.&lt;init&gt; (5 samples, 0.03%)</title><rect x="181.1" y="787.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="184.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (5 samples, 0.03%)</title><rect x="181.1" y="771.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="184.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (5 samples, 0.03%)</title><rect x="181.1" y="755.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="184.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$134/108010129.accept (12,200 samples, 72.79%)</title><rect x="181.5" y="803.0" width="858.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="184.5" y="814.0">ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$134/108010129.accept</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.lambda$cellIterator$4 (12,200 samples, 72.79%)</title><rect x="181.5" y="787.0" width="858.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="184.5" y="798.0">ru/mail/polis/dao/valaubr/LsmDAO.lambda$cellIterator$4</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.iterator (12,200 samples, 72.79%)</title><rect x="181.5" y="771.0" width="858.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="184.5" y="782.0">ru/mail/polis/dao/valaubr/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.&lt;init&gt; (12,200 samples, 72.79%)</title><rect x="181.5" y="755.0" width="858.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="184.5" y="766.0">ru/mail/polis/dao/valaubr/SSTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getPosition (12,199 samples, 72.78%)</title><rect x="181.6" y="739.0" width="858.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="184.6" y="750.0">ru/mail/polis/dao/valaubr/SSTable.getPosition</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (133 samples, 0.79%)</title><rect x="181.8" y="723.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="184.8" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (34 samples, 0.20%)</title><rect x="183.6" y="707.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="186.6" y="718.0"></text>
</g>
<g>
<title>vectorizedMismatch (32 samples, 0.19%)</title><rect x="183.8" y="691.0" width="2.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="186.8" y="702.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (64 samples, 0.38%)</title><rect x="186.1" y="707.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="189.1" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (27 samples, 0.16%)</title><rect x="188.7" y="691.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.7" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (21 samples, 0.13%)</title><rect x="188.7" y="675.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.7" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (6 samples, 0.04%)</title><rect x="190.2" y="675.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="193.2" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (7 samples, 0.04%)</title><rect x="190.7" y="707.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (12,063 samples, 71.97%)</title><rect x="191.1" y="723.0" width="849.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="194.1" y="734.0">ru/mail/polis/dao/valaubr/SSTable.getKey</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (138 samples, 0.82%)</title><rect x="193.2" y="707.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="196.2" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (21 samples, 0.13%)</title><rect x="194.4" y="691.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="197.4" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (18 samples, 0.11%)</title><rect x="194.5" y="675.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="197.5" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (16 samples, 0.10%)</title><rect x="194.6" y="659.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="197.6" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (13 samples, 0.08%)</title><rect x="194.6" y="643.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="197.6" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (8 samples, 0.05%)</title><rect x="194.8" y="627.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="197.8" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (100 samples, 0.60%)</title><rect x="195.9" y="691.0" width="7.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="198.9" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (17 samples, 0.10%)</title><rect x="198.0" y="675.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="201.0" y="686.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (16 samples, 0.10%)</title><rect x="198.0" y="659.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="201.0" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (14 samples, 0.08%)</title><rect x="198.1" y="643.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="201.1" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (11 samples, 0.07%)</title><rect x="198.3" y="627.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="201.3" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.03%)</title><rect x="198.6" y="611.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="201.6" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (49 samples, 0.29%)</title><rect x="199.5" y="675.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.5" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (9 samples, 0.05%)</title><rect x="202.3" y="659.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="205.3" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (9 samples, 0.05%)</title><rect x="202.9" y="707.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="205.9" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.flip (9 samples, 0.05%)</title><rect x="202.9" y="691.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="205.9" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (17 samples, 0.10%)</title><rect x="203.5" y="707.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="206.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (4,217 samples, 25.16%)</title><rect x="204.7" y="707.0" width="296.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="207.7" y="718.0">ru/mail/polis/dao/valaubr/SSTable.getOff..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (30 samples, 0.18%)</title><rect x="205.7" y="691.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.7" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (26 samples, 0.16%)</title><rect x="206.0" y="675.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="209.0" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.03%)</title><rect x="206.8" y="659.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="209.8" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.02%)</title><rect x="206.9" y="643.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="209.9" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.02%)</title><rect x="206.9" y="627.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="209.9" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="207.3" y="659.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="210.3" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="207.3" y="643.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="210.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4,172 samples, 24.89%)</title><rect x="207.9" y="691.0" width="293.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="210.9" y="702.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.ensureOpen (20 samples, 0.12%)</title><rect x="208.7" y="675.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.7" y="686.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (15 samples, 0.09%)</title><rect x="209.0" y="659.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="212.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4,141 samples, 24.71%)</title><rect x="210.1" y="675.0" width="291.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="213.1" y="686.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (162 samples, 0.97%)</title><rect x="212.7" y="659.0" width="11.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="215.7" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (153 samples, 0.91%)</title><rect x="213.3" y="643.0" width="10.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="216.3" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (10 samples, 0.06%)</title><rect x="217.2" y="627.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="220.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (6 samples, 0.04%)</title><rect x="217.5" y="611.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="220.5" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (87 samples, 0.52%)</title><rect x="218.0" y="627.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="221.0" y="638.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (79 samples, 0.47%)</title><rect x="218.5" y="611.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="221.5" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (77 samples, 0.46%)</title><rect x="218.6" y="595.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="221.6" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (12 samples, 0.07%)</title><rect x="223.2" y="579.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="226.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3,677 samples, 21.94%)</title><rect x="224.2" y="659.0" width="258.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="227.2" y="670.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (8 samples, 0.05%)</title><rect x="236.3" y="643.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="239.3" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.02%)</title><rect x="236.5" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="239.5" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (8 samples, 0.05%)</title><rect x="237.0" y="643.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="240.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2,965 samples, 17.69%)</title><rect x="237.6" y="643.0" width="208.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="240.6" y="654.0">sun/nio/ch/IOUtil.readIntoN..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2,959 samples, 17.65%)</title><rect x="238.0" y="627.0" width="208.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="241.0" y="638.0">sun/nio/ch/FileDispatcherIm..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2,956 samples, 17.64%)</title><rect x="238.2" y="611.0" width="208.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="241.2" y="622.0">sun/nio/ch/FileDispatcherIm..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (16 samples, 0.10%)</title><rect x="244.4" y="595.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="247.4" y="606.0"></text>
</g>
<g>
<title>__libc_pread64 (2,788 samples, 16.63%)</title><rect x="245.6" y="595.0" width="196.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="248.6" y="606.0">__libc_pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,933 samples, 11.53%)</title><rect x="305.8" y="579.0" width="136.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="308.8" y="590.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>__x64_sys_pread64 (30 samples, 0.18%)</title><rect x="305.8" y="563.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="308.8" y="574.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.02%)</title><rect x="307.9" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="310.9" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (1,899 samples, 11.33%)</title><rect x="308.2" y="563.0" width="133.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="311.2" y="574.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (1,370 samples, 8.17%)</title><rect x="344.5" y="547.0" width="96.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="347.5" y="558.0">__x64_sys_p..</text>
</g>
<g>
<title>fput (4 samples, 0.02%)</title><rect x="344.6" y="531.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="347.6" y="542.0"></text>
</g>
<g>
<title>ksys_pread64 (1,363 samples, 8.13%)</title><rect x="344.9" y="531.0" width="96.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="347.9" y="542.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (100 samples, 0.60%)</title><rect x="346.2" y="515.0" width="7.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="349.2" y="526.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.03%)</title><rect x="346.2" y="499.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="349.2" y="510.0"></text>
</g>
<g>
<title>__fget_light (95 samples, 0.57%)</title><rect x="346.6" y="499.0" width="6.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="349.6" y="510.0"></text>
</g>
<g>
<title>__fget (92 samples, 0.55%)</title><rect x="346.8" y="483.0" width="6.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="349.8" y="494.0"></text>
</g>
<g>
<title>__fget_light (17 samples, 0.10%)</title><rect x="353.3" y="515.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="356.3" y="526.0"></text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.02%)</title><rect x="354.5" y="515.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="357.5" y="526.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.03%)</title><rect x="354.8" y="515.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="357.8" y="526.0"></text>
</g>
<g>
<title>fput_many (21 samples, 0.13%)</title><rect x="355.1" y="515.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="358.1" y="526.0"></text>
</g>
<g>
<title>vfs_read (1,195 samples, 7.13%)</title><rect x="356.7" y="515.0" width="84.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="359.7" y="526.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (21 samples, 0.13%)</title><rect x="360.4" y="499.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="363.4" y="510.0"></text>
</g>
<g>
<title>__vfs_read (816 samples, 4.87%)</title><rect x="361.9" y="499.0" width="57.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="364.9" y="510.0">__vfs_..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (6 samples, 0.04%)</title><rect x="362.3" y="483.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="365.3" y="494.0"></text>
</g>
<g>
<title>iov_iter_init (9 samples, 0.05%)</title><rect x="362.7" y="483.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="365.7" y="494.0"></text>
</g>
<g>
<title>new_sync_read (762 samples, 4.55%)</title><rect x="363.3" y="483.0" width="53.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="366.3" y="494.0">new_s..</text>
</g>
<g>
<title>shmem_file_read_iter (678 samples, 4.05%)</title><rect x="367.1" y="467.0" width="47.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="370.1" y="478.0">shme..</text>
</g>
<g>
<title>atime_needs_update (5 samples, 0.03%)</title><rect x="373.6" y="451.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="376.6" y="462.0"></text>
</g>
<g>
<title>copy_page_to_iter (189 samples, 1.13%)</title><rect x="373.9" y="451.0" width="13.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="376.9" y="462.0"></text>
</g>
<g>
<title>_cond_resched (5 samples, 0.03%)</title><rect x="377.8" y="435.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="380.8" y="446.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (122 samples, 0.73%)</title><rect x="378.3" y="435.0" width="8.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="381.3" y="446.0"></text>
</g>
<g>
<title>rcu_all_qs (4 samples, 0.02%)</title><rect x="386.9" y="435.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="389.9" y="446.0"></text>
</g>
<g>
<title>copyout (13 samples, 0.08%)</title><rect x="387.2" y="451.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="390.2" y="462.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (354 samples, 2.11%)</title><rect x="388.3" y="451.0" width="24.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="391.3" y="462.0">s..</text>
</g>
<g>
<title>find_lock_entry (294 samples, 1.75%)</title><rect x="392.1" y="435.0" width="20.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="395.1" y="446.0"></text>
</g>
<g>
<title>find_get_entry (227 samples, 1.35%)</title><rect x="395.5" y="419.0" width="16.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="398.5" y="430.0"></text>
</g>
<g>
<title>xas_load (70 samples, 0.42%)</title><rect x="403.0" y="403.0" width="4.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="406.0" y="414.0"></text>
</g>
<g>
<title>xas_start (51 samples, 0.30%)</title><rect x="407.9" y="403.0" width="3.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="410.9" y="414.0"></text>
</g>
<g>
<title>page_mapping (11 samples, 0.07%)</title><rect x="411.5" y="419.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="414.5" y="430.0"></text>
</g>
<g>
<title>xas_load (7 samples, 0.04%)</title><rect x="412.3" y="419.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="415.3" y="430.0"></text>
</g>
<g>
<title>page_mapping (5 samples, 0.03%)</title><rect x="412.8" y="435.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="415.8" y="446.0"></text>
</g>
<g>
<title>touch_atime (23 samples, 0.14%)</title><rect x="413.2" y="451.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="416.2" y="462.0"></text>
</g>
<g>
<title>atime_needs_update (11 samples, 0.07%)</title><rect x="414.0" y="435.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="417.0" y="446.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (4 samples, 0.02%)</title><rect x="414.8" y="467.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="417.8" y="478.0"></text>
</g>
<g>
<title>unlock_page (27 samples, 0.16%)</title><rect x="415.1" y="467.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="418.1" y="478.0"></text>
</g>
<g>
<title>shmem_file_read_iter (33 samples, 0.20%)</title><rect x="417.0" y="483.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="420.0" y="494.0"></text>
</g>
<g>
<title>fsnotify (40 samples, 0.24%)</title><rect x="419.3" y="499.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="422.3" y="510.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.02%)</title><rect x="422.1" y="499.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="425.1" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (261 samples, 1.56%)</title><rect x="422.4" y="499.0" width="18.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="425.4" y="510.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (5 samples, 0.03%)</title><rect x="424.0" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="427.0" y="494.0"></text>
</g>
<g>
<title>apparmor_file_permission (35 samples, 0.21%)</title><rect x="424.3" y="483.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="427.3" y="494.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.02%)</title><rect x="426.8" y="483.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="429.8" y="494.0"></text>
</g>
<g>
<title>security_file_permission (195 samples, 1.16%)</title><rect x="427.1" y="483.0" width="13.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="430.1" y="494.0"></text>
</g>
<g>
<title>__fsnotify_parent (40 samples, 0.24%)</title><rect x="429.3" y="467.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="432.3" y="478.0"></text>
</g>
<g>
<title>apparmor_file_permission (58 samples, 0.35%)</title><rect x="432.1" y="467.0" width="4.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="435.1" y="478.0"></text>
</g>
<g>
<title>common_file_perm (57 samples, 0.34%)</title><rect x="432.2" y="451.0" width="4.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="435.2" y="462.0"></text>
</g>
<g>
<title>aa_file_perm (22 samples, 0.13%)</title><rect x="434.7" y="435.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="437.7" y="446.0"></text>
</g>
<g>
<title>common_file_perm (20 samples, 0.12%)</title><rect x="436.2" y="467.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="439.2" y="478.0"></text>
</g>
<g>
<title>fsnotify (45 samples, 0.27%)</title><rect x="437.6" y="467.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="440.6" y="478.0"></text>
</g>
<g>
<title>ksys_pread64 (13 samples, 0.08%)</title><rect x="440.9" y="547.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="443.9" y="558.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (17 samples, 0.10%)</title><rect x="441.8" y="595.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="444.8" y="606.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (30 samples, 0.18%)</title><rect x="443.0" y="595.0" width="2.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="446.0" y="606.0"></text>
</g>
<g>
<title>fdval (16 samples, 0.10%)</title><rect x="445.2" y="595.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="448.2" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (467 samples, 2.79%)</title><rect x="446.3" y="643.0" width="32.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="449.3" y="654.0">su..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (393 samples, 2.34%)</title><rect x="447.2" y="627.0" width="27.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.2" y="638.0">j..</text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (8 samples, 0.05%)</title><rect x="447.5" y="611.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="450.5" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (365 samples, 2.18%)</title><rect x="448.0" y="611.0" width="25.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="451.0" y="622.0">j..</text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (213 samples, 1.27%)</title><rect x="448.2" y="595.0" width="15.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="451.2" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (72 samples, 0.43%)</title><rect x="453.7" y="579.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="456.7" y="590.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (72 samples, 0.43%)</title><rect x="453.7" y="563.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="456.7" y="574.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (72 samples, 0.43%)</title><rect x="453.7" y="547.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="456.7" y="558.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (72 samples, 0.43%)</title><rect x="453.7" y="531.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="456.7" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (62 samples, 0.37%)</title><rect x="458.8" y="579.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.8" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.createMap (150 samples, 0.89%)</title><rect x="463.2" y="595.0" width="10.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="466.2" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.&lt;init&gt; (149 samples, 0.89%)</title><rect x="463.2" y="579.0" width="10.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.2" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (22 samples, 0.13%)</title><rect x="465.6" y="563.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="468.6" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (15 samples, 0.09%)</title><rect x="466.1" y="547.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="469.1" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (16 samples, 0.10%)</title><rect x="467.2" y="563.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="470.2" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOStatus.normalize (77 samples, 0.46%)</title><rect x="468.3" y="563.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="471.3" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (16 samples, 0.10%)</title><rect x="473.7" y="611.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="476.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (61 samples, 0.36%)</title><rect x="474.9" y="627.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="477.9" y="638.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.05%)</title><rect x="476.3" y="611.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="479.3" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (7 samples, 0.04%)</title><rect x="476.3" y="595.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="479.3" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (25 samples, 0.15%)</title><rect x="476.9" y="611.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="479.9" y="622.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (9 samples, 0.05%)</title><rect x="478.0" y="595.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="481.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (7 samples, 0.04%)</title><rect x="478.7" y="611.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="481.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (55 samples, 0.33%)</title><rect x="479.2" y="643.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="482.2" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (43 samples, 0.26%)</title><rect x="479.3" y="627.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="482.3" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (42 samples, 0.25%)</title><rect x="479.4" y="611.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="482.4" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (42 samples, 0.25%)</title><rect x="479.4" y="595.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="482.4" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (36 samples, 0.21%)</title><rect x="479.8" y="579.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="482.8" y="590.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (36 samples, 0.21%)</title><rect x="479.8" y="563.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="482.8" y="574.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (36 samples, 0.21%)</title><rect x="479.8" y="547.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="482.8" y="558.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (18 samples, 0.11%)</title><rect x="481.1" y="531.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="484.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (7 samples, 0.04%)</title><rect x="482.3" y="627.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="485.3" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (4 samples, 0.02%)</title><rect x="482.8" y="627.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="485.8" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (6 samples, 0.04%)</title><rect x="483.1" y="659.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="486.1" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (257 samples, 1.53%)</title><rect x="483.5" y="659.0" width="18.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="486.5" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (16 samples, 0.10%)</title><rect x="490.3" y="643.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="493.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (49 samples, 0.29%)</title><rect x="491.5" y="643.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (12 samples, 0.07%)</title><rect x="494.9" y="643.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="497.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (71 samples, 0.42%)</title><rect x="495.8" y="643.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="498.8" y="654.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (5 samples, 0.03%)</title><rect x="499.6" y="627.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="502.6" y="638.0"></text>
</g>
<g>
<title>pthread_self (11 samples, 0.07%)</title><rect x="500.0" y="627.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="503.0" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (12 samples, 0.07%)</title><rect x="500.8" y="643.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="503.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (48 samples, 0.29%)</title><rect x="501.6" y="707.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="504.6" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (7,605 samples, 45.37%)</title><rect x="505.0" y="707.0" width="535.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="508.0" y="718.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (7,597 samples, 45.33%)</title><rect x="505.6" y="691.0" width="534.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="508.6" y="702.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (10 samples, 0.06%)</title><rect x="508.2" y="675.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="511.2" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (206 samples, 1.23%)</title><rect x="509.0" y="675.0" width="14.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="512.0" y="686.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (168 samples, 1.00%)</title><rect x="511.7" y="659.0" width="11.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="514.7" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (7 samples, 0.04%)</title><rect x="520.3" y="643.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="523.3" y="654.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (38 samples, 0.23%)</title><rect x="520.8" y="643.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="523.8" y="654.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (38 samples, 0.23%)</title><rect x="520.8" y="627.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="523.8" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (38 samples, 0.23%)</title><rect x="520.8" y="611.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="523.8" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (122 samples, 0.73%)</title><rect x="523.5" y="675.0" width="8.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="526.5" y="686.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (114 samples, 0.68%)</title><rect x="524.1" y="659.0" width="8.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="527.1" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (54 samples, 0.32%)</title><rect x="528.3" y="643.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="531.3" y="654.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (50 samples, 0.30%)</title><rect x="528.3" y="627.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="531.3" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (50 samples, 0.30%)</title><rect x="528.3" y="611.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="531.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/SharedSecrets.getJavaLangAccess (4 samples, 0.02%)</title><rect x="531.8" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="534.8" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6,794 samples, 40.53%)</title><rect x="532.3" y="675.0" width="478.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="535.3" y="686.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/ByteBuffer.position (11 samples, 0.07%)</title><rect x="537.0" y="659.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="540.0" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (117 samples, 0.70%)</title><rect x="537.8" y="659.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="540.8" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (18 samples, 0.11%)</title><rect x="539.1" y="643.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="542.1" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (17 samples, 0.10%)</title><rect x="539.1" y="627.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="542.1" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (75 samples, 0.45%)</title><rect x="540.3" y="643.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.3" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.02%)</title><rect x="540.5" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="543.5" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (67 samples, 0.40%)</title><rect x="540.8" y="627.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="543.8" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (28 samples, 0.17%)</title><rect x="543.6" y="611.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="546.6" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (5 samples, 0.03%)</title><rect x="543.6" y="595.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="546.6" y="606.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (4 samples, 0.02%)</title><rect x="543.9" y="595.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="546.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (19 samples, 0.11%)</title><rect x="544.2" y="595.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="547.2" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (6 samples, 0.04%)</title><rect x="545.6" y="643.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="548.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5,983 samples, 35.70%)</title><rect x="546.0" y="659.0" width="421.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="549.0" y="670.0">sun/nio/ch/IOUtil.readIntoNativeBuffer</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5,983 samples, 35.70%)</title><rect x="546.0" y="643.0" width="421.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="549.0" y="654.0">sun/nio/ch/FileDispatcherImpl.pread</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5,980 samples, 35.68%)</title><rect x="546.2" y="627.0" width="421.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="549.2" y="638.0">sun/nio/ch/FileDispatcherImpl.pread0</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (29 samples, 0.17%)</title><rect x="558.8" y="611.0" width="2.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="561.8" y="622.0"></text>
</g>
<g>
<title>__libc_pread64 (5,611 samples, 33.48%)</title><rect x="560.8" y="611.0" width="395.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="563.8" y="622.0">__libc_pread64</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3,789 samples, 22.61%)</title><rect x="689.1" y="595.0" width="266.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="692.1" y="606.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_pread64 (63 samples, 0.38%)</title><rect x="689.1" y="579.0" width="4.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="692.1" y="590.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (50 samples, 0.30%)</title><rect x="693.5" y="579.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="696.5" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (3,676 samples, 21.93%)</title><rect x="697.0" y="579.0" width="258.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="700.0" y="590.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_pread64 (2,677 samples, 15.97%)</title><rect x="766.9" y="563.0" width="188.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="769.9" y="574.0">__x64_sys_pread64</text>
</g>
<g>
<title>__fdget (6 samples, 0.04%)</title><rect x="766.9" y="547.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="769.9" y="558.0"></text>
</g>
<g>
<title>fput (10 samples, 0.06%)</title><rect x="767.3" y="547.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="770.3" y="558.0"></text>
</g>
<g>
<title>ksys_pread64 (2,660 samples, 15.87%)</title><rect x="768.0" y="547.0" width="187.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="771.0" y="558.0">ksys_pread64</text>
</g>
<g>
<title>__fdget (161 samples, 0.96%)</title><rect x="770.7" y="531.0" width="11.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="773.7" y="542.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.04%)</title><rect x="770.8" y="515.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="773.8" y="526.0"></text>
</g>
<g>
<title>__fget_light (154 samples, 0.92%)</title><rect x="771.2" y="515.0" width="10.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="774.2" y="526.0"></text>
</g>
<g>
<title>__fget (153 samples, 0.91%)</title><rect x="771.3" y="499.0" width="10.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="774.3" y="510.0"></text>
</g>
<g>
<title>__fget_light (50 samples, 0.30%)</title><rect x="782.0" y="531.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="785.0" y="542.0"></text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.02%)</title><rect x="785.5" y="531.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="788.5" y="542.0"></text>
</g>
<g>
<title>__vfs_read (20 samples, 0.12%)</title><rect x="785.8" y="531.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="788.8" y="542.0"></text>
</g>
<g>
<title>fput (5 samples, 0.03%)</title><rect x="787.2" y="531.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="790.2" y="542.0"></text>
</g>
<g>
<title>fput_many (53 samples, 0.32%)</title><rect x="787.6" y="531.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="790.6" y="542.0"></text>
</g>
<g>
<title>fsnotify (7 samples, 0.04%)</title><rect x="791.3" y="531.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="794.3" y="542.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.02%)</title><rect x="791.8" y="531.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="794.8" y="542.0"></text>
</g>
<g>
<title>vfs_read (2,318 samples, 13.83%)</title><rect x="792.1" y="531.0" width="163.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="795.1" y="542.0">vfs_read</text>
</g>
<g>
<title>__fsnotify_parent (49 samples, 0.29%)</title><rect x="798.8" y="515.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="801.8" y="526.0"></text>
</g>
<g>
<title>__vfs_read (1,596 samples, 9.52%)</title><rect x="802.3" y="515.0" width="112.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="805.3" y="526.0">__vfs_read</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (8 samples, 0.05%)</title><rect x="802.7" y="499.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="805.7" y="510.0"></text>
</g>
<g>
<title>iov_iter_init (19 samples, 0.11%)</title><rect x="803.2" y="499.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="806.2" y="510.0"></text>
</g>
<g>
<title>new_sync_read (1,505 samples, 8.98%)</title><rect x="804.6" y="499.0" width="105.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="807.6" y="510.0">new_sync_read</text>
</g>
<g>
<title>copy_page_to_iter (10 samples, 0.06%)</title><rect x="813.4" y="483.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="816.4" y="494.0"></text>
</g>
<g>
<title>shmem_file_read_iter (1,306 samples, 7.79%)</title><rect x="814.2" y="483.0" width="91.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="817.2" y="494.0">shmem_file_..</text>
</g>
<g>
<title>_cond_resched (5 samples, 0.03%)</title><rect x="826.7" y="467.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="829.7" y="478.0"></text>
</g>
<g>
<title>atime_needs_update (9 samples, 0.05%)</title><rect x="827.1" y="467.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="830.1" y="478.0"></text>
</g>
<g>
<title>copy_page_to_iter (317 samples, 1.89%)</title><rect x="827.7" y="467.0" width="22.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="830.7" y="478.0">c..</text>
</g>
<g>
<title>_cond_resched (4 samples, 0.02%)</title><rect x="834.0" y="451.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="837.0" y="462.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (207 samples, 1.24%)</title><rect x="834.5" y="451.0" width="14.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="837.5" y="462.0"></text>
</g>
<g>
<title>rcu_all_qs (11 samples, 0.07%)</title><rect x="849.3" y="451.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="852.3" y="462.0"></text>
</g>
<g>
<title>copyout (27 samples, 0.16%)</title><rect x="850.0" y="467.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="853.0" y="478.0"></text>
</g>
<g>
<title>find_lock_entry (5 samples, 0.03%)</title><rect x="851.9" y="467.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="854.9" y="478.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (724 samples, 4.32%)</title><rect x="852.3" y="467.0" width="51.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="855.3" y="478.0">shmem..</text>
</g>
<g>
<title>_cond_resched (5 samples, 0.03%)</title><rect x="860.3" y="451.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="863.3" y="462.0"></text>
</g>
<g>
<title>find_lock_entry (589 samples, 3.51%)</title><rect x="860.7" y="451.0" width="41.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="863.7" y="462.0">fin..</text>
</g>
<g>
<title>PageHuge (7 samples, 0.04%)</title><rect x="865.9" y="435.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="868.9" y="446.0"></text>
</g>
<g>
<title>_cond_resched (11 samples, 0.07%)</title><rect x="866.6" y="435.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="869.6" y="446.0"></text>
</g>
<g>
<title>find_get_entry (423 samples, 2.52%)</title><rect x="867.3" y="435.0" width="29.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="870.3" y="446.0">fi..</text>
</g>
<g>
<title>xas_load (118 samples, 0.70%)</title><rect x="883.0" y="419.0" width="8.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="886.0" y="430.0"></text>
</g>
<g>
<title>xas_start (82 samples, 0.49%)</title><rect x="891.4" y="419.0" width="5.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="894.4" y="430.0"></text>
</g>
<g>
<title>page_mapping (55 samples, 0.33%)</title><rect x="897.1" y="435.0" width="3.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="900.1" y="446.0"></text>
</g>
<g>
<title>rcu_all_qs (4 samples, 0.02%)</title><rect x="901.0" y="435.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="904.0" y="446.0"></text>
</g>
<g>
<title>xas_load (13 samples, 0.08%)</title><rect x="901.3" y="435.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="904.3" y="446.0"></text>
</g>
<g>
<title>page_mapping (15 samples, 0.09%)</title><rect x="902.2" y="451.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="905.2" y="462.0"></text>
</g>
<g>
<title>touch_atime (41 samples, 0.24%)</title><rect x="903.3" y="467.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="906.3" y="478.0"></text>
</g>
<g>
<title>atime_needs_update (23 samples, 0.14%)</title><rect x="904.5" y="451.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="907.5" y="462.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (10 samples, 0.06%)</title><rect x="906.1" y="483.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="909.1" y="494.0"></text>
</g>
<g>
<title>unlock_page (49 samples, 0.29%)</title><rect x="907.1" y="483.0" width="3.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="910.1" y="494.0"></text>
</g>
<g>
<title>shmem_file_read_iter (59 samples, 0.35%)</title><rect x="910.5" y="499.0" width="4.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="913.5" y="510.0"></text>
</g>
<g>
<title>fsnotify (84 samples, 0.50%)</title><rect x="914.7" y="515.0" width="5.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="917.7" y="526.0"></text>
</g>
<g>
<title>new_sync_read (7 samples, 0.04%)</title><rect x="920.6" y="515.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="923.6" y="526.0"></text>
</g>
<g>
<title>rw_verify_area (484 samples, 2.89%)</title><rect x="921.1" y="515.0" width="34.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="924.1" y="526.0">rw..</text>
</g>
<g>
<title>__fsnotify_parent (9 samples, 0.05%)</title><rect x="923.2" y="499.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="926.2" y="510.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (7 samples, 0.04%)</title><rect x="923.9" y="499.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="926.9" y="510.0"></text>
</g>
<g>
<title>apparmor_file_permission (66 samples, 0.39%)</title><rect x="924.4" y="499.0" width="4.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="927.4" y="510.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.02%)</title><rect x="929.0" y="499.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="932.0" y="510.0"></text>
</g>
<g>
<title>security_file_permission (367 samples, 2.19%)</title><rect x="929.3" y="499.0" width="25.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="932.3" y="510.0">s..</text>
</g>
<g>
<title>__fsnotify_parent (73 samples, 0.44%)</title><rect x="933.5" y="483.0" width="5.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="936.5" y="494.0"></text>
</g>
<g>
<title>apparmor_file_permission (92 samples, 0.55%)</title><rect x="938.6" y="483.0" width="6.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="941.6" y="494.0"></text>
</g>
<g>
<title>aa_file_perm (4 samples, 0.02%)</title><rect x="938.7" y="467.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="941.7" y="478.0"></text>
</g>
<g>
<title>common_file_perm (87 samples, 0.52%)</title><rect x="938.9" y="467.0" width="6.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="941.9" y="478.0"></text>
</g>
<g>
<title>aa_file_perm (18 samples, 0.11%)</title><rect x="943.8" y="451.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="946.8" y="462.0"></text>
</g>
<g>
<title>common_file_perm (59 samples, 0.35%)</title><rect x="945.1" y="483.0" width="4.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="948.1" y="494.0"></text>
</g>
<g>
<title>fsnotify (84 samples, 0.50%)</title><rect x="949.2" y="483.0" width="5.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="952.2" y="494.0"></text>
</g>
<g>
<title>ksys_pread64 (7 samples, 0.04%)</title><rect x="955.4" y="563.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="958.4" y="574.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (57 samples, 0.34%)</title><rect x="955.8" y="611.0" width="4.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="958.8" y="622.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (79 samples, 0.47%)</title><rect x="959.9" y="611.0" width="5.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="962.9" y="622.0"></text>
</g>
<g>
<title>convertReturnVal (5 samples, 0.03%)</title><rect x="965.4" y="611.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="968.4" y="622.0"></text>
</g>
<g>
<title>fdval (21 samples, 0.13%)</title><rect x="965.8" y="611.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="968.8" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (483 samples, 2.88%)</title><rect x="967.2" y="659.0" width="34.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="970.2" y="670.0">su..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (430 samples, 2.57%)</title><rect x="967.4" y="643.0" width="30.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="970.4" y="654.0">ja..</text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (8 samples, 0.05%)</title><rect x="967.6" y="627.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="970.6" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (419 samples, 2.50%)</title><rect x="968.2" y="627.0" width="29.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="971.2" y="638.0">ja..</text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (393 samples, 2.34%)</title><rect x="968.5" y="611.0" width="27.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="971.5" y="622.0">j..</text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (96 samples, 0.57%)</title><rect x="981.3" y="595.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="984.3" y="606.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (93 samples, 0.55%)</title><rect x="981.5" y="579.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="984.5" y="590.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (88 samples, 0.53%)</title><rect x="981.8" y="563.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="984.8" y="574.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (85 samples, 0.51%)</title><rect x="982.0" y="547.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="985.0" y="558.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (42 samples, 0.25%)</title><rect x="985.1" y="531.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="988.1" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (25 samples, 0.15%)</title><rect x="985.3" y="515.0" width="1.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="988.3" y="526.0"></text>
</g>
<g>
<title>unsafe_arraycopy (11 samples, 0.07%)</title><rect x="987.2" y="515.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="990.2" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (95 samples, 0.57%)</title><rect x="988.0" y="595.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="991.0" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.nextIndex (5 samples, 0.03%)</title><rect x="994.7" y="595.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="997.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (16 samples, 0.10%)</title><rect x="995.1" y="595.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="998.1" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.createMap (21 samples, 0.13%)</title><rect x="996.2" y="611.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="999.2" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.&lt;init&gt; (21 samples, 0.13%)</title><rect x="996.2" y="595.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="999.2" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (6 samples, 0.04%)</title><rect x="997.7" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1000.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (45 samples, 0.27%)</title><rect x="998.1" y="643.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1001.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (133 samples, 0.79%)</title><rect x="1001.3" y="659.0" width="9.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1004.3" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (86 samples, 0.51%)</title><rect x="1002.3" y="643.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1005.3" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (35 samples, 0.21%)</title><rect x="1005.8" y="627.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1008.8" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (30 samples, 0.18%)</title><rect x="1008.4" y="643.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1011.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (258 samples, 1.54%)</title><rect x="1010.6" y="675.0" width="18.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1013.6" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (150 samples, 0.89%)</title><rect x="1018.2" y="659.0" width="10.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1021.2" y="670.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (5 samples, 0.03%)</title><rect x="1025.3" y="643.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1028.3" y="654.0"></text>
</g>
<g>
<title>pthread_self (44 samples, 0.26%)</title><rect x="1025.7" y="643.0" width="3.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1028.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (165 samples, 0.98%)</title><rect x="1028.8" y="675.0" width="11.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1031.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (313 samples, 1.87%)</title><rect x="1040.7" y="819.0" width="22.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1043.7" y="830.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (313 samples, 1.87%)</title><rect x="1040.7" y="803.0" width="22.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1043.7" y="814.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (313 samples, 1.87%)</title><rect x="1040.7" y="787.0" width="22.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1043.7" y="798.0">c..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (10 samples, 0.06%)</title><rect x="1040.7" y="771.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1043.7" y="782.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (10 samples, 0.06%)</title><rect x="1040.7" y="755.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1043.7" y="766.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (10 samples, 0.06%)</title><rect x="1040.7" y="739.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1043.7" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.06%)</title><rect x="1040.7" y="723.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1043.7" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.05%)</title><rect x="1040.8" y="707.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1043.8" y="718.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$123/1128211044.compare (6 samples, 0.04%)</title><rect x="1041.0" y="691.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1044.0" y="702.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (6 samples, 0.04%)</title><rect x="1041.0" y="675.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1044.0" y="686.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$121/245356113.compare (5 samples, 0.03%)</title><rect x="1041.1" y="659.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1044.1" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (5 samples, 0.03%)</title><rect x="1041.1" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1044.1" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (302 samples, 1.80%)</title><rect x="1041.5" y="771.0" width="21.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1044.5" y="782.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (302 samples, 1.80%)</title><rect x="1041.5" y="755.0" width="21.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1044.5" y="766.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (302 samples, 1.80%)</title><rect x="1041.5" y="739.0" width="21.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1044.5" y="750.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (301 samples, 1.80%)</title><rect x="1041.5" y="723.0" width="21.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1044.5" y="734.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (300 samples, 1.79%)</title><rect x="1041.6" y="707.0" width="21.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1044.6" y="718.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (300 samples, 1.79%)</title><rect x="1041.6" y="691.0" width="21.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1044.6" y="702.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (292 samples, 1.74%)</title><rect x="1041.6" y="675.0" width="20.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1044.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (291 samples, 1.74%)</title><rect x="1041.7" y="659.0" width="20.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1044.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (291 samples, 1.74%)</title><rect x="1041.7" y="643.0" width="20.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1044.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getCell (291 samples, 1.74%)</title><rect x="1041.7" y="627.0" width="20.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1044.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (120 samples, 0.72%)</title><rect x="1042.0" y="611.0" width="8.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1045.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (42 samples, 0.25%)</title><rect x="1042.0" y="595.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1045.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (41 samples, 0.24%)</title><rect x="1042.1" y="579.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1045.1" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (40 samples, 0.24%)</title><rect x="1042.2" y="563.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1045.2" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (37 samples, 0.22%)</title><rect x="1042.3" y="547.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1045.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (32 samples, 0.19%)</title><rect x="1042.3" y="531.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1045.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (32 samples, 0.19%)</title><rect x="1042.3" y="515.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1045.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (32 samples, 0.19%)</title><rect x="1042.3" y="499.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1045.3" y="510.0"></text>
</g>
<g>
<title>__libc_pread64 (30 samples, 0.18%)</title><rect x="1042.4" y="483.0" width="2.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1045.4" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.11%)</title><rect x="1043.1" y="467.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1046.1" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.11%)</title><rect x="1043.2" y="451.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1046.2" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (11 samples, 0.07%)</title><rect x="1043.7" y="435.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1046.7" y="446.0"></text>
</g>
<g>
<title>ksys_pread64 (11 samples, 0.07%)</title><rect x="1043.7" y="419.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1046.7" y="430.0"></text>
</g>
<g>
<title>vfs_read (11 samples, 0.07%)</title><rect x="1043.7" y="403.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1046.7" y="414.0"></text>
</g>
<g>
<title>__vfs_read (7 samples, 0.04%)</title><rect x="1043.8" y="387.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1046.8" y="398.0"></text>
</g>
<g>
<title>new_sync_read (7 samples, 0.04%)</title><rect x="1043.8" y="371.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1046.8" y="382.0"></text>
</g>
<g>
<title>shmem_file_read_iter (6 samples, 0.04%)</title><rect x="1043.9" y="355.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1046.9" y="366.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (4 samples, 0.02%)</title><rect x="1044.1" y="339.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1047.1" y="350.0"></text>
</g>
<g>
<title>find_lock_entry (4 samples, 0.02%)</title><rect x="1044.1" y="323.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1047.1" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.02%)</title><rect x="1044.6" y="531.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1047.6" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.02%)</title><rect x="1044.6" y="515.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1047.6" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (4 samples, 0.02%)</title><rect x="1044.6" y="499.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1047.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (78 samples, 0.47%)</title><rect x="1045.0" y="595.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1048.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (78 samples, 0.47%)</title><rect x="1045.0" y="579.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1048.0" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (71 samples, 0.42%)</title><rect x="1045.2" y="563.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1048.2" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (66 samples, 0.39%)</title><rect x="1045.3" y="547.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1048.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (66 samples, 0.39%)</title><rect x="1045.3" y="531.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1048.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (66 samples, 0.39%)</title><rect x="1045.3" y="515.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1048.3" y="526.0"></text>
</g>
<g>
<title>__libc_pread64 (64 samples, 0.38%)</title><rect x="1045.3" y="499.0" width="4.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1048.3" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 0.26%)</title><rect x="1046.7" y="483.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1049.7" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 0.25%)</title><rect x="1046.9" y="467.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1049.9" y="478.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (26 samples, 0.16%)</title><rect x="1048.0" y="451.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1051.0" y="462.0"></text>
</g>
<g>
<title>ksys_pread64 (26 samples, 0.16%)</title><rect x="1048.0" y="435.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1051.0" y="446.0"></text>
</g>
<g>
<title>vfs_read (21 samples, 0.13%)</title><rect x="1048.4" y="419.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1051.4" y="430.0"></text>
</g>
<g>
<title>__vfs_read (16 samples, 0.10%)</title><rect x="1048.4" y="403.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1051.4" y="414.0"></text>
</g>
<g>
<title>new_sync_read (16 samples, 0.10%)</title><rect x="1048.4" y="387.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1051.4" y="398.0"></text>
</g>
<g>
<title>shmem_file_read_iter (13 samples, 0.08%)</title><rect x="1048.5" y="371.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1051.5" y="382.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (9 samples, 0.05%)</title><rect x="1048.8" y="355.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1051.8" y="366.0"></text>
</g>
<g>
<title>find_lock_entry (6 samples, 0.04%)</title><rect x="1049.0" y="339.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1052.0" y="350.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.03%)</title><rect x="1049.0" y="323.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1052.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (31 samples, 0.18%)</title><rect x="1050.5" y="611.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1053.5" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (30 samples, 0.18%)</title><rect x="1050.5" y="595.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1053.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (30 samples, 0.18%)</title><rect x="1050.5" y="579.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1053.5" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (26 samples, 0.16%)</title><rect x="1050.7" y="563.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1053.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (18 samples, 0.11%)</title><rect x="1050.7" y="547.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1053.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (18 samples, 0.11%)</title><rect x="1050.7" y="531.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1053.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (18 samples, 0.11%)</title><rect x="1050.7" y="515.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1053.7" y="526.0"></text>
</g>
<g>
<title>__libc_pread64 (17 samples, 0.10%)</title><rect x="1050.8" y="499.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1053.8" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.09%)</title><rect x="1051.0" y="483.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1054.0" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.08%)</title><rect x="1051.1" y="467.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1054.1" y="478.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (10 samples, 0.06%)</title><rect x="1051.3" y="451.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1054.3" y="462.0"></text>
</g>
<g>
<title>ksys_pread64 (10 samples, 0.06%)</title><rect x="1051.3" y="435.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1054.3" y="446.0"></text>
</g>
<g>
<title>vfs_read (9 samples, 0.05%)</title><rect x="1051.4" y="419.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1054.4" y="430.0"></text>
</g>
<g>
<title>__vfs_read (6 samples, 0.04%)</title><rect x="1051.4" y="403.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1054.4" y="414.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.02%)</title><rect x="1051.5" y="387.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1054.5" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.04%)</title><rect x="1052.0" y="547.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1055.0" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.04%)</title><rect x="1052.0" y="531.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1055.0" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (6 samples, 0.04%)</title><rect x="1052.1" y="515.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1055.1" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (4 samples, 0.02%)</title><rect x="1052.1" y="499.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1055.1" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (135 samples, 0.81%)</title><rect x="1052.6" y="611.0" width="9.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1055.6" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (135 samples, 0.81%)</title><rect x="1052.6" y="595.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1055.6" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.03%)</title><rect x="1052.8" y="579.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1055.8" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (5 samples, 0.03%)</title><rect x="1052.8" y="563.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1055.8" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (123 samples, 0.73%)</title><rect x="1053.3" y="579.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1056.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (112 samples, 0.67%)</title><rect x="1053.4" y="563.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1056.4" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (112 samples, 0.67%)</title><rect x="1053.4" y="547.0" width="7.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1056.4" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (112 samples, 0.67%)</title><rect x="1053.4" y="531.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1056.4" y="542.0"></text>
</g>
<g>
<title>__libc_pread64 (105 samples, 0.63%)</title><rect x="1053.8" y="515.0" width="7.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1056.8" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (73 samples, 0.44%)</title><rect x="1056.0" y="499.0" width="5.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1059.0" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (71 samples, 0.42%)</title><rect x="1056.2" y="483.0" width="5.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1059.2" y="494.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (48 samples, 0.29%)</title><rect x="1057.7" y="467.0" width="3.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1060.7" y="478.0"></text>
</g>
<g>
<title>ksys_pread64 (48 samples, 0.29%)</title><rect x="1057.7" y="451.0" width="3.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1060.7" y="462.0"></text>
</g>
<g>
<title>vfs_read (45 samples, 0.27%)</title><rect x="1057.9" y="435.0" width="3.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1060.9" y="446.0"></text>
</g>
<g>
<title>__vfs_read (35 samples, 0.21%)</title><rect x="1058.1" y="419.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1061.1" y="430.0"></text>
</g>
<g>
<title>new_sync_read (32 samples, 0.19%)</title><rect x="1058.3" y="403.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1061.3" y="414.0"></text>
</g>
<g>
<title>shmem_file_read_iter (29 samples, 0.17%)</title><rect x="1058.4" y="387.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1061.4" y="398.0"></text>
</g>
<g>
<title>copy_page_to_iter (5 samples, 0.03%)</title><rect x="1058.7" y="371.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1061.7" y="382.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (17 samples, 0.10%)</title><rect x="1059.2" y="371.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1062.2" y="382.0"></text>
</g>
<g>
<title>find_lock_entry (16 samples, 0.10%)</title><rect x="1059.2" y="355.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1062.2" y="366.0"></text>
</g>
<g>
<title>find_get_entry (7 samples, 0.04%)</title><rect x="1059.5" y="339.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1062.5" y="350.0"></text>
</g>
<g>
<title>page_mapping (4 samples, 0.02%)</title><rect x="1060.0" y="339.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1063.0" y="350.0"></text>
</g>
<g>
<title>rw_verify_area (7 samples, 0.04%)</title><rect x="1060.6" y="419.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1063.6" y="430.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.02%)</title><rect x="1060.8" y="403.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1063.8" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (9 samples, 0.05%)</title><rect x="1061.3" y="563.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1064.3" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (9 samples, 0.05%)</title><rect x="1061.3" y="547.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1064.3" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (8 samples, 0.05%)</title><rect x="1061.4" y="531.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.4" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (6 samples, 0.04%)</title><rect x="1061.4" y="515.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1064.4" y="526.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$123/1128211044.compare (8 samples, 0.05%)</title><rect x="1062.2" y="675.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1065.2" y="686.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (8 samples, 0.05%)</title><rect x="1062.2" y="659.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1065.2" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$121/245356113.compare (7 samples, 0.04%)</title><rect x="1062.2" y="643.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1065.2" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (7 samples, 0.04%)</title><rect x="1062.2" y="627.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1065.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/Cell$$Lambda$120/2095215314.apply (4 samples, 0.02%)</title><rect x="1062.4" y="611.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1065.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.iterator (116 samples, 0.69%)</title><rect x="1062.7" y="819.0" width="8.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1065.7" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (30 samples, 0.18%)</title><rect x="1062.7" y="803.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1065.7" y="814.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (30 samples, 0.18%)</title><rect x="1062.7" y="787.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1065.7" y="798.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (24 samples, 0.14%)</title><rect x="1063.1" y="771.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1066.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (22 samples, 0.13%)</title><rect x="1063.3" y="755.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1066.3" y="766.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (18 samples, 0.11%)</title><rect x="1063.3" y="739.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1066.3" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (6 samples, 0.04%)</title><rect x="1063.5" y="723.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1066.5" y="734.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$119/1873832746.getAsBoolean (4 samples, 0.02%)</title><rect x="1063.6" y="707.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1066.6" y="718.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.02%)</title><rect x="1063.6" y="691.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1066.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.02%)</title><rect x="1063.6" y="675.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1066.6" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.init (4 samples, 0.02%)</title><rect x="1063.9" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1066.9" y="734.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.initPartialTraversalState (6 samples, 0.04%)</title><rect x="1064.2" y="723.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1067.2" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.04%)</title><rect x="1064.9" y="803.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1067.9" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.04%)</title><rect x="1064.9" y="787.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1067.9" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.04%)</title><rect x="1064.9" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1067.9" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.03%)</title><rect x="1065.0" y="755.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1068.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (39 samples, 0.23%)</title><rect x="1065.3" y="803.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1068.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (39 samples, 0.23%)</title><rect x="1065.3" y="787.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1068.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (39 samples, 0.23%)</title><rect x="1065.3" y="771.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1068.3" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (19 samples, 0.11%)</title><rect x="1066.7" y="755.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1069.7" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (16 samples, 0.10%)</title><rect x="1066.7" y="739.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1069.7" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1067.4" y="723.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1070.4" y="734.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1067.5" y="707.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1070.5" y="718.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1067.5" y="691.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1070.5" y="702.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1067.5" y="675.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1070.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (10 samples, 0.06%)</title><rect x="1068.1" y="803.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1071.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (10 samples, 0.06%)</title><rect x="1068.1" y="787.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1071.1" y="798.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10 samples, 0.06%)</title><rect x="1068.1" y="771.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1071.1" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (7 samples, 0.04%)</title><rect x="1068.1" y="755.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1071.1" y="766.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (6 samples, 0.04%)</title><rect x="1068.2" y="739.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1071.2" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (6 samples, 0.04%)</title><rect x="1068.2" y="723.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1071.2" y="734.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (5 samples, 0.03%)</title><rect x="1068.3" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1071.3" y="718.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (5 samples, 0.03%)</title><rect x="1068.3" y="691.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1071.3" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$119/1873832746.getAsBoolean (4 samples, 0.02%)</title><rect x="1068.3" y="675.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1071.3" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.02%)</title><rect x="1068.3" y="659.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1071.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.02%)</title><rect x="1068.3" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1071.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.iterator (30 samples, 0.18%)</title><rect x="1068.8" y="803.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1071.8" y="814.0"></text>
</g>
<g>
<title>java/util/Collection.stream (23 samples, 0.14%)</title><rect x="1068.8" y="787.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1071.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.spliterator (22 samples, 0.13%)</title><rect x="1068.8" y="771.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1071.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (21 samples, 0.13%)</title><rect x="1068.9" y="755.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1071.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (21 samples, 0.13%)</title><rect x="1068.9" y="739.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1071.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (18 samples, 0.11%)</title><rect x="1069.1" y="723.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1072.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (18 samples, 0.11%)</title><rect x="1069.1" y="707.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1072.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (17 samples, 0.10%)</title><rect x="1069.2" y="691.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1072.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (16 samples, 0.10%)</title><rect x="1069.3" y="675.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1072.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (16 samples, 0.10%)</title><rect x="1069.3" y="659.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1072.3" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (15 samples, 0.09%)</title><rect x="1069.3" y="643.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1072.3" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.03%)</title><rect x="1069.5" y="627.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1072.5" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.05%)</title><rect x="1069.8" y="627.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1072.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.proxy (772 samples, 4.61%)</title><rect x="1070.9" y="867.0" width="54.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1073.9" y="878.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (552 samples, 3.29%)</title><rect x="1071.1" y="851.0" width="38.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1074.1" y="862.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (549 samples, 3.28%)</title><rect x="1071.3" y="835.0" width="38.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1074.3" y="846.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (154 samples, 0.92%)</title><rect x="1071.5" y="819.0" width="10.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1074.5" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (20 samples, 0.12%)</title><rect x="1072.1" y="803.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1075.1" y="814.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (20 samples, 0.12%)</title><rect x="1072.1" y="787.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1075.1" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (18 samples, 0.11%)</title><rect x="1072.3" y="771.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1075.3" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (14 samples, 0.08%)</title><rect x="1072.5" y="755.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1075.5" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (8 samples, 0.05%)</title><rect x="1072.5" y="739.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1075.5" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (121 samples, 0.72%)</title><rect x="1073.6" y="803.0" width="8.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1076.6" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (14 samples, 0.08%)</title><rect x="1073.8" y="787.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1076.8" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (9 samples, 0.05%)</title><rect x="1074.0" y="771.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1077.0" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (6 samples, 0.04%)</title><rect x="1074.2" y="755.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1077.2" y="766.0"></text>
</g>
<g>
<title>recv (101 samples, 0.60%)</title><rect x="1075.0" y="787.0" width="7.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1078.0" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (92 samples, 0.55%)</title><rect x="1075.7" y="771.0" width="6.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1078.7" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (92 samples, 0.55%)</title><rect x="1075.7" y="755.0" width="6.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1078.7" y="766.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (88 samples, 0.53%)</title><rect x="1075.9" y="739.0" width="6.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1078.9" y="750.0"></text>
</g>
<g>
<title>__sys_recvfrom (88 samples, 0.53%)</title><rect x="1075.9" y="723.0" width="6.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1078.9" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (84 samples, 0.50%)</title><rect x="1076.1" y="707.0" width="5.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1079.1" y="718.0"></text>
</g>
<g>
<title>inet6_recvmsg (77 samples, 0.46%)</title><rect x="1076.3" y="691.0" width="5.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1079.3" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (77 samples, 0.46%)</title><rect x="1076.3" y="675.0" width="5.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1079.3" y="686.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.02%)</title><rect x="1076.7" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1079.7" y="670.0"></text>
</g>
<g>
<title>sk_wait_data (26 samples, 0.16%)</title><rect x="1077.4" y="659.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1080.4" y="670.0"></text>
</g>
<g>
<title>remove_wait_queue (4 samples, 0.02%)</title><rect x="1077.7" y="643.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1080.7" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="1077.7" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1080.7" y="638.0"></text>
</g>
<g>
<title>wait_woken (18 samples, 0.11%)</title><rect x="1078.0" y="643.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1081.0" y="654.0"></text>
</g>
<g>
<title>schedule_timeout (16 samples, 0.10%)</title><rect x="1078.1" y="627.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1081.1" y="638.0"></text>
</g>
<g>
<title>__mod_timer (11 samples, 0.07%)</title><rect x="1078.2" y="611.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1081.2" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.06%)</title><rect x="1078.3" y="595.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1081.3" y="606.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.02%)</title><rect x="1079.0" y="611.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1082.0" y="622.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (13 samples, 0.08%)</title><rect x="1079.3" y="659.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1082.3" y="670.0"></text>
</g>
<g>
<title>__skb_datagram_iter (13 samples, 0.08%)</title><rect x="1079.3" y="643.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1082.3" y="654.0"></text>
</g>
<g>
<title>simple_copy_to_iter (10 samples, 0.06%)</title><rect x="1079.5" y="627.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1082.5" y="638.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.02%)</title><rect x="1079.5" y="611.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1082.5" y="622.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (19 samples, 0.11%)</title><rect x="1080.2" y="659.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1083.2" y="670.0"></text>
</g>
<g>
<title>tcp_send_ack (18 samples, 0.11%)</title><rect x="1080.2" y="643.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1083.2" y="654.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (18 samples, 0.11%)</title><rect x="1080.2" y="627.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1083.2" y="638.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (16 samples, 0.10%)</title><rect x="1080.4" y="611.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1083.4" y="622.0"></text>
</g>
<g>
<title>ip_queue_xmit (16 samples, 0.10%)</title><rect x="1080.4" y="595.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1083.4" y="606.0"></text>
</g>
<g>
<title>__ip_queue_xmit (16 samples, 0.10%)</title><rect x="1080.4" y="579.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1083.4" y="590.0"></text>
</g>
<g>
<title>ip_local_out (16 samples, 0.10%)</title><rect x="1080.4" y="563.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1083.4" y="574.0"></text>
</g>
<g>
<title>ip_output (16 samples, 0.10%)</title><rect x="1080.4" y="547.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1083.4" y="558.0"></text>
</g>
<g>
<title>ip_finish_output (16 samples, 0.10%)</title><rect x="1080.4" y="531.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1083.4" y="542.0"></text>
</g>
<g>
<title>__ip_finish_output (15 samples, 0.09%)</title><rect x="1080.5" y="515.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1083.5" y="526.0"></text>
</g>
<g>
<title>ip_finish_output2 (14 samples, 0.08%)</title><rect x="1080.5" y="499.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1083.5" y="510.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (10 samples, 0.06%)</title><rect x="1080.6" y="483.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1083.6" y="494.0"></text>
</g>
<g>
<title>do_softirq.part.0 (8 samples, 0.05%)</title><rect x="1080.7" y="467.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1083.7" y="478.0"></text>
</g>
<g>
<title>do_softirq_own_stack (8 samples, 0.05%)</title><rect x="1080.7" y="451.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1083.7" y="462.0"></text>
</g>
<g>
<title>__softirqentry_text_start (8 samples, 0.05%)</title><rect x="1080.7" y="435.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1083.7" y="446.0"></text>
</g>
<g>
<title>net_rx_action (8 samples, 0.05%)</title><rect x="1080.7" y="419.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1083.7" y="430.0"></text>
</g>
<g>
<title>process_backlog (7 samples, 0.04%)</title><rect x="1080.8" y="403.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1083.8" y="414.0"></text>
</g>
<g>
<title>__netif_receive_skb (7 samples, 0.04%)</title><rect x="1080.8" y="387.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1083.8" y="398.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (7 samples, 0.04%)</title><rect x="1080.8" y="371.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1083.8" y="382.0"></text>
</g>
<g>
<title>ip_rcv (7 samples, 0.04%)</title><rect x="1080.8" y="355.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1083.8" y="366.0"></text>
</g>
<g>
<title>ip_rcv_finish (7 samples, 0.04%)</title><rect x="1080.8" y="339.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1083.8" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver (7 samples, 0.04%)</title><rect x="1080.8" y="323.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1083.8" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (7 samples, 0.04%)</title><rect x="1080.8" y="307.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1083.8" y="318.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (7 samples, 0.04%)</title><rect x="1080.8" y="291.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1083.8" y="302.0"></text>
</g>
<g>
<title>tcp_v4_rcv (7 samples, 0.04%)</title><rect x="1080.8" y="275.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1083.8" y="286.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (6 samples, 0.04%)</title><rect x="1080.9" y="259.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1083.9" y="270.0"></text>
</g>
<g>
<title>tcp_rcv_established (6 samples, 0.04%)</title><rect x="1080.9" y="243.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1083.9" y="254.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.02%)</title><rect x="1081.7" y="691.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1084.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (26 samples, 0.16%)</title><rect x="1082.4" y="819.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1085.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.04%)</title><rect x="1082.4" y="803.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1085.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.02%)</title><rect x="1082.5" y="787.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1085.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (9 samples, 0.05%)</title><rect x="1082.8" y="803.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1085.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.03%)</title><rect x="1083.1" y="787.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1086.1" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.03%)</title><rect x="1083.1" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1086.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (8 samples, 0.05%)</title><rect x="1083.6" y="803.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1086.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.04%)</title><rect x="1083.6" y="787.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1086.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.04%)</title><rect x="1083.6" y="771.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1086.6" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (23 samples, 0.14%)</title><rect x="1084.2" y="819.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1087.2" y="830.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (14 samples, 0.08%)</title><rect x="1084.7" y="803.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1087.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.04%)</title><rect x="1085.0" y="787.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1088.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.03%)</title><rect x="1085.1" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1088.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (7 samples, 0.04%)</title><rect x="1085.8" y="819.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1088.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.02%)</title><rect x="1085.9" y="803.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1088.9" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (50 samples, 0.30%)</title><rect x="1086.3" y="819.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1089.3" y="830.0"></text>
</g>
<g>
<title>setsockopt (47 samples, 0.28%)</title><rect x="1086.5" y="803.0" width="3.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1089.5" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.20%)</title><rect x="1087.4" y="787.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1090.4" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.20%)</title><rect x="1087.4" y="771.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1090.4" y="782.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (28 samples, 0.17%)</title><rect x="1087.8" y="755.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1090.8" y="766.0"></text>
</g>
<g>
<title>__sys_setsockopt (27 samples, 0.16%)</title><rect x="1087.8" y="739.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1090.8" y="750.0"></text>
</g>
<g>
<title>sock_setsockopt (9 samples, 0.05%)</title><rect x="1088.4" y="723.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1091.4" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (10 samples, 0.06%)</title><rect x="1089.0" y="723.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1092.0" y="734.0"></text>
</g>
<g>
<title>__fdget (10 samples, 0.06%)</title><rect x="1089.0" y="707.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1092.0" y="718.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.06%)</title><rect x="1089.0" y="691.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1092.0" y="702.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.06%)</title><rect x="1089.0" y="675.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1092.0" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (282 samples, 1.68%)</title><rect x="1089.8" y="819.0" width="19.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1092.8" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (16 samples, 0.10%)</title><rect x="1090.0" y="803.0" width="1.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1093.0" y="814.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (9 samples, 0.05%)</title><rect x="1090.5" y="787.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1093.5" y="798.0"></text>
</g>
<g>
<title>__send (260 samples, 1.55%)</title><rect x="1091.2" y="803.0" width="18.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1094.2" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (249 samples, 1.49%)</title><rect x="1092.0" y="787.0" width="17.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1095.0" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (248 samples, 1.48%)</title><rect x="1092.1" y="771.0" width="17.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1095.1" y="782.0"></text>
</g>
<g>
<title>__x64_sys_sendto (243 samples, 1.45%)</title><rect x="1092.4" y="755.0" width="17.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1095.4" y="766.0"></text>
</g>
<g>
<title>__sys_sendto (242 samples, 1.44%)</title><rect x="1092.4" y="739.0" width="17.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1095.4" y="750.0"></text>
</g>
<g>
<title>sock_sendmsg (235 samples, 1.40%)</title><rect x="1092.6" y="723.0" width="16.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1095.6" y="734.0"></text>
</g>
<g>
<title>inet6_sendmsg (233 samples, 1.39%)</title><rect x="1092.7" y="707.0" width="16.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1095.7" y="718.0"></text>
</g>
<g>
<title>tcp_sendmsg (232 samples, 1.38%)</title><rect x="1092.7" y="691.0" width="16.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1095.7" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (222 samples, 1.32%)</title><rect x="1093.3" y="675.0" width="15.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1096.3" y="686.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (16 samples, 0.10%)</title><rect x="1094.0" y="659.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1097.0" y="670.0"></text>
</g>
<g>
<title>__alloc_skb (14 samples, 0.08%)</title><rect x="1094.0" y="643.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1097.0" y="654.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (7 samples, 0.04%)</title><rect x="1094.2" y="627.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1097.2" y="638.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.03%)</title><rect x="1094.2" y="611.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1097.2" y="622.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.02%)</title><rect x="1094.7" y="627.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1097.7" y="638.0"></text>
</g>
<g>
<title>tcp_push (185 samples, 1.10%)</title><rect x="1095.2" y="659.0" width="13.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1098.2" y="670.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (185 samples, 1.10%)</title><rect x="1095.2" y="643.0" width="13.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1098.2" y="654.0"></text>
</g>
<g>
<title>tcp_write_xmit (182 samples, 1.09%)</title><rect x="1095.5" y="627.0" width="12.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1098.5" y="638.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (169 samples, 1.01%)</title><rect x="1095.8" y="611.0" width="11.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1098.8" y="622.0"></text>
</g>
<g>
<title>ip_queue_xmit (160 samples, 0.95%)</title><rect x="1096.4" y="595.0" width="11.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1099.4" y="606.0"></text>
</g>
<g>
<title>__ip_queue_xmit (159 samples, 0.95%)</title><rect x="1096.4" y="579.0" width="11.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1099.4" y="590.0"></text>
</g>
<g>
<title>ip_local_out (158 samples, 0.94%)</title><rect x="1096.4" y="563.0" width="11.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1099.4" y="574.0"></text>
</g>
<g>
<title>ip_output (156 samples, 0.93%)</title><rect x="1096.6" y="547.0" width="11.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1099.6" y="558.0"></text>
</g>
<g>
<title>ip_finish_output (154 samples, 0.92%)</title><rect x="1096.7" y="531.0" width="10.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1099.7" y="542.0"></text>
</g>
<g>
<title>__ip_finish_output (149 samples, 0.89%)</title><rect x="1097.0" y="515.0" width="10.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1100.0" y="526.0"></text>
</g>
<g>
<title>ip_finish_output2 (149 samples, 0.89%)</title><rect x="1097.0" y="499.0" width="10.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1100.0" y="510.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (129 samples, 0.77%)</title><rect x="1097.2" y="483.0" width="9.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1100.2" y="494.0"></text>
</g>
<g>
<title>do_softirq.part.0 (128 samples, 0.76%)</title><rect x="1097.3" y="467.0" width="9.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1100.3" y="478.0"></text>
</g>
<g>
<title>do_softirq_own_stack (127 samples, 0.76%)</title><rect x="1097.4" y="451.0" width="8.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1100.4" y="462.0"></text>
</g>
<g>
<title>__softirqentry_text_start (127 samples, 0.76%)</title><rect x="1097.4" y="435.0" width="8.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1100.4" y="446.0"></text>
</g>
<g>
<title>net_rx_action (126 samples, 0.75%)</title><rect x="1097.4" y="419.0" width="8.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1100.4" y="430.0"></text>
</g>
<g>
<title>process_backlog (121 samples, 0.72%)</title><rect x="1097.8" y="403.0" width="8.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1100.8" y="414.0"></text>
</g>
<g>
<title>__netif_receive_skb (117 samples, 0.70%)</title><rect x="1098.1" y="387.0" width="8.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1101.1" y="398.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (116 samples, 0.69%)</title><rect x="1098.1" y="371.0" width="8.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1101.1" y="382.0"></text>
</g>
<g>
<title>ip_rcv (110 samples, 0.66%)</title><rect x="1098.4" y="355.0" width="7.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1101.4" y="366.0"></text>
</g>
<g>
<title>ip_rcv_finish (107 samples, 0.64%)</title><rect x="1098.5" y="339.0" width="7.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1101.5" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver (106 samples, 0.63%)</title><rect x="1098.6" y="323.0" width="7.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1101.6" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (106 samples, 0.63%)</title><rect x="1098.6" y="307.0" width="7.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1101.6" y="318.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (106 samples, 0.63%)</title><rect x="1098.6" y="291.0" width="7.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1101.6" y="302.0"></text>
</g>
<g>
<title>tcp_v4_rcv (102 samples, 0.61%)</title><rect x="1098.9" y="275.0" width="7.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1101.9" y="286.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (97 samples, 0.58%)</title><rect x="1099.3" y="259.0" width="6.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1102.3" y="270.0"></text>
</g>
<g>
<title>tcp_rcv_established (94 samples, 0.56%)</title><rect x="1099.5" y="243.0" width="6.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1102.5" y="254.0"></text>
</g>
<g>
<title>tcp_ack (20 samples, 0.12%)</title><rect x="1099.9" y="227.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1102.9" y="238.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (10 samples, 0.06%)</title><rect x="1100.3" y="211.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1103.3" y="222.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.03%)</title><rect x="1100.7" y="195.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1103.7" y="206.0"></text>
</g>
<g>
<title>tcp_data_ready (64 samples, 0.38%)</title><rect x="1101.4" y="227.0" width="4.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1104.4" y="238.0"></text>
</g>
<g>
<title>sock_def_readable (64 samples, 0.38%)</title><rect x="1101.4" y="211.0" width="4.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1104.4" y="222.0"></text>
</g>
<g>
<title>__wake_up_sync_key (62 samples, 0.37%)</title><rect x="1101.5" y="195.0" width="4.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1104.5" y="206.0"></text>
</g>
<g>
<title>__wake_up_common_lock (62 samples, 0.37%)</title><rect x="1101.5" y="179.0" width="4.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1104.5" y="190.0"></text>
</g>
<g>
<title>__lock_text_start (62 samples, 0.37%)</title><rect x="1101.5" y="163.0" width="4.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1104.5" y="174.0"></text>
</g>
<g>
<title>dev_queue_xmit (17 samples, 0.10%)</title><rect x="1106.3" y="483.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1109.3" y="494.0"></text>
</g>
<g>
<title>__dev_queue_xmit (17 samples, 0.10%)</title><rect x="1106.3" y="467.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1109.3" y="478.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.04%)</title><rect x="1106.4" y="451.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1109.4" y="462.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.04%)</title><rect x="1106.4" y="435.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1109.4" y="446.0"></text>
</g>
<g>
<title>validate_xmit_skb (6 samples, 0.04%)</title><rect x="1107.0" y="451.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1110.0" y="462.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.02%)</title><rect x="1107.8" y="611.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1110.8" y="622.0"></text>
</g>
<g>
<title>tcp_send_mss (7 samples, 0.04%)</title><rect x="1108.5" y="659.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1111.5" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.02%)</title><rect x="1109.2" y="723.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1112.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (215 samples, 1.28%)</title><rect x="1110.0" y="851.0" width="15.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1113.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (208 samples, 1.24%)</title><rect x="1110.0" y="835.0" width="14.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1113.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12 samples, 0.07%)</title><rect x="1110.0" y="819.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1113.0" y="830.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (8 samples, 0.05%)</title><rect x="1110.3" y="803.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1113.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.02%)</title><rect x="1110.6" y="787.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1113.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.02%)</title><rect x="1110.6" y="771.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1113.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.02%)</title><rect x="1110.6" y="755.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1113.6" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (195 samples, 1.16%)</title><rect x="1110.9" y="819.0" width="13.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1113.9" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (194 samples, 1.16%)</title><rect x="1110.9" y="803.0" width="13.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1113.9" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (193 samples, 1.15%)</title><rect x="1111.0" y="787.0" width="13.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1114.0" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (193 samples, 1.15%)</title><rect x="1111.0" y="771.0" width="13.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1114.0" y="782.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.02%)</title><rect x="1111.2" y="755.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1114.2" y="766.0"></text>
</g>
<g>
<title>__send (187 samples, 1.12%)</title><rect x="1111.4" y="755.0" width="13.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1114.4" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (183 samples, 1.09%)</title><rect x="1111.7" y="739.0" width="12.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1114.7" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (182 samples, 1.09%)</title><rect x="1111.8" y="723.0" width="12.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1114.8" y="734.0"></text>
</g>
<g>
<title>__x64_sys_sendto (175 samples, 1.04%)</title><rect x="1112.3" y="707.0" width="12.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1115.3" y="718.0"></text>
</g>
<g>
<title>__sys_sendto (174 samples, 1.04%)</title><rect x="1112.3" y="691.0" width="12.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1115.3" y="702.0"></text>
</g>
<g>
<title>sock_sendmsg (164 samples, 0.98%)</title><rect x="1112.5" y="675.0" width="11.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1115.5" y="686.0"></text>
</g>
<g>
<title>inet6_sendmsg (161 samples, 0.96%)</title><rect x="1112.6" y="659.0" width="11.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1115.6" y="670.0"></text>
</g>
<g>
<title>tcp_sendmsg (158 samples, 0.94%)</title><rect x="1112.7" y="643.0" width="11.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1115.7" y="654.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (155 samples, 0.92%)</title><rect x="1112.9" y="627.0" width="10.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1115.9" y="638.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (18 samples, 0.11%)</title><rect x="1113.8" y="611.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1116.8" y="622.0"></text>
</g>
<g>
<title>__alloc_skb (15 samples, 0.09%)</title><rect x="1113.9" y="595.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1116.9" y="606.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (7 samples, 0.04%)</title><rect x="1114.1" y="579.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1117.1" y="590.0"></text>
</g>
<g>
<title>ksize (5 samples, 0.03%)</title><rect x="1114.6" y="579.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1117.6" y="590.0"></text>
</g>
<g>
<title>__ksize (5 samples, 0.03%)</title><rect x="1114.6" y="563.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1117.6" y="574.0"></text>
</g>
<g>
<title>tcp_push (119 samples, 0.71%)</title><rect x="1115.2" y="611.0" width="8.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1118.2" y="622.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (119 samples, 0.71%)</title><rect x="1115.2" y="595.0" width="8.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1118.2" y="606.0"></text>
</g>
<g>
<title>tcp_write_xmit (119 samples, 0.71%)</title><rect x="1115.2" y="579.0" width="8.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1118.2" y="590.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (108 samples, 0.64%)</title><rect x="1115.4" y="563.0" width="7.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1118.4" y="574.0"></text>
</g>
<g>
<title>ip_queue_xmit (104 samples, 0.62%)</title><rect x="1115.6" y="547.0" width="7.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1118.6" y="558.0"></text>
</g>
<g>
<title>__ip_queue_xmit (100 samples, 0.60%)</title><rect x="1115.6" y="531.0" width="7.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1118.6" y="542.0"></text>
</g>
<g>
<title>ip_local_out (98 samples, 0.58%)</title><rect x="1115.7" y="515.0" width="6.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1118.7" y="526.0"></text>
</g>
<g>
<title>ip_output (98 samples, 0.58%)</title><rect x="1115.7" y="499.0" width="6.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1118.7" y="510.0"></text>
</g>
<g>
<title>ip_finish_output (97 samples, 0.58%)</title><rect x="1115.7" y="483.0" width="6.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1118.7" y="494.0"></text>
</g>
<g>
<title>__ip_finish_output (93 samples, 0.55%)</title><rect x="1115.9" y="467.0" width="6.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1118.9" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (92 samples, 0.55%)</title><rect x="1116.0" y="451.0" width="6.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1119.0" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (69 samples, 0.41%)</title><rect x="1116.4" y="435.0" width="4.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1119.4" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.0 (69 samples, 0.41%)</title><rect x="1116.4" y="419.0" width="4.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1119.4" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (68 samples, 0.41%)</title><rect x="1116.4" y="403.0" width="4.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1119.4" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (68 samples, 0.41%)</title><rect x="1116.4" y="387.0" width="4.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1119.4" y="398.0"></text>
</g>
<g>
<title>net_rx_action (58 samples, 0.35%)</title><rect x="1117.1" y="371.0" width="4.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1120.1" y="382.0"></text>
</g>
<g>
<title>process_backlog (58 samples, 0.35%)</title><rect x="1117.1" y="355.0" width="4.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1120.1" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb (57 samples, 0.34%)</title><rect x="1117.2" y="339.0" width="4.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1120.2" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (56 samples, 0.33%)</title><rect x="1117.3" y="323.0" width="3.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1120.3" y="334.0"></text>
</g>
<g>
<title>ip_rcv (56 samples, 0.33%)</title><rect x="1117.3" y="307.0" width="3.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1120.3" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish (55 samples, 0.33%)</title><rect x="1117.3" y="291.0" width="3.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1120.3" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (53 samples, 0.32%)</title><rect x="1117.4" y="275.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1120.4" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (52 samples, 0.31%)</title><rect x="1117.5" y="259.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1120.5" y="270.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (52 samples, 0.31%)</title><rect x="1117.5" y="243.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1120.5" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (48 samples, 0.29%)</title><rect x="1117.8" y="227.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1120.8" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (41 samples, 0.24%)</title><rect x="1118.3" y="211.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1121.3" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (38 samples, 0.23%)</title><rect x="1118.5" y="195.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1121.5" y="206.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (8 samples, 0.05%)</title><rect x="1118.8" y="179.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1121.8" y="190.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (7 samples, 0.04%)</title><rect x="1118.8" y="163.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1121.8" y="174.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.04%)</title><rect x="1118.8" y="147.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1121.8" y="158.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.04%)</title><rect x="1118.9" y="131.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1121.9" y="142.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.03%)</title><rect x="1119.0" y="115.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1122.0" y="126.0"></text>
</g>
<g>
<title>tcp_ack (13 samples, 0.08%)</title><rect x="1119.3" y="179.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1122.3" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.05%)</title><rect x="1119.5" y="163.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1122.5" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.04%)</title><rect x="1119.6" y="147.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1122.6" y="158.0"></text>
</g>
<g>
<title>tcp_data_ready (9 samples, 0.05%)</title><rect x="1120.2" y="179.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1123.2" y="190.0"></text>
</g>
<g>
<title>sock_def_readable (9 samples, 0.05%)</title><rect x="1120.2" y="163.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1123.2" y="174.0"></text>
</g>
<g>
<title>__wake_up_sync_key (8 samples, 0.05%)</title><rect x="1120.3" y="147.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1123.3" y="158.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.04%)</title><rect x="1120.3" y="131.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1123.3" y="142.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.04%)</title><rect x="1120.3" y="115.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1123.3" y="126.0"></text>
</g>
<g>
<title>dev_queue_xmit (18 samples, 0.11%)</title><rect x="1121.2" y="435.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1124.2" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (18 samples, 0.11%)</title><rect x="1121.2" y="419.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1124.2" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (12 samples, 0.07%)</title><rect x="1121.3" y="403.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1124.3" y="414.0"></text>
</g>
<g>
<title>loopback_xmit (8 samples, 0.05%)</title><rect x="1121.5" y="387.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1124.5" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.02%)</title><rect x="1122.2" y="403.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1125.2" y="414.0"></text>
</g>
<g>
<title>ip_copy_addrs (4 samples, 0.02%)</title><rect x="1122.6" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1125.6" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.02%)</title><rect x="1123.3" y="563.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1126.3" y="574.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.02%)</title><rect x="1123.3" y="547.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1126.3" y="558.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.02%)</title><rect x="1123.3" y="531.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1126.3" y="542.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.02%)</title><rect x="1123.3" y="515.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1126.3" y="526.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.04%)</title><rect x="1124.0" y="675.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1127.0" y="686.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.04%)</title><rect x="1124.1" y="659.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1127.1" y="670.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.04%)</title><rect x="1124.1" y="643.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1127.1" y="654.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.04%)</title><rect x="1124.1" y="627.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1127.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.04%)</title><rect x="1124.6" y="835.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1127.6" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/topology/ModularTopology.isMe (4 samples, 0.02%)</title><rect x="1125.2" y="867.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1128.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String.equals (4 samples, 0.02%)</title><rect x="1125.2" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1128.2" y="862.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (69 samples, 0.41%)</title><rect x="1125.6" y="899.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1128.6" y="910.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (69 samples, 0.41%)</title><rect x="1125.6" y="883.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1128.6" y="894.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$98/1319750932.run (69 samples, 0.41%)</title><rect x="1125.6" y="867.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1128.6" y="878.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (69 samples, 0.41%)</title><rect x="1125.6" y="851.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1128.6" y="862.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (69 samples, 0.41%)</title><rect x="1125.6" y="835.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1128.6" y="846.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (69 samples, 0.41%)</title><rect x="1125.6" y="819.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1128.6" y="830.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (63 samples, 0.38%)</title><rect x="1125.7" y="803.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1128.7" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (58 samples, 0.35%)</title><rect x="1125.7" y="787.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1128.7" y="798.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (58 samples, 0.35%)</title><rect x="1125.7" y="771.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1128.7" y="782.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (58 samples, 0.35%)</title><rect x="1125.7" y="755.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1128.7" y="766.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (58 samples, 0.35%)</title><rect x="1125.7" y="739.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1128.7" y="750.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (29 samples, 0.17%)</title><rect x="1125.7" y="723.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1128.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (29 samples, 0.17%)</title><rect x="1125.7" y="707.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1128.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor40.invoke (25 samples, 0.15%)</title><rect x="1126.0" y="691.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1129.0" y="702.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (25 samples, 0.15%)</title><rect x="1126.0" y="675.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1129.0" y="686.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (22 samples, 0.13%)</title><rect x="1126.0" y="659.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1129.0" y="670.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (22 samples, 0.13%)</title><rect x="1126.0" y="643.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1129.0" y="654.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (22 samples, 0.13%)</title><rect x="1126.0" y="627.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1129.0" y="638.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (22 samples, 0.13%)</title><rect x="1126.0" y="611.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1129.0" y="622.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (22 samples, 0.13%)</title><rect x="1126.0" y="595.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1129.0" y="606.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (22 samples, 0.13%)</title><rect x="1126.0" y="579.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1129.0" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (22 samples, 0.13%)</title><rect x="1126.0" y="563.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1129.0" y="574.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (22 samples, 0.13%)</title><rect x="1126.0" y="547.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1129.0" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (22 samples, 0.13%)</title><rect x="1126.0" y="531.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1129.0" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (22 samples, 0.13%)</title><rect x="1126.0" y="515.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1129.0" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (22 samples, 0.13%)</title><rect x="1126.0" y="499.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1129.0" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (22 samples, 0.13%)</title><rect x="1126.0" y="483.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1129.0" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (22 samples, 0.13%)</title><rect x="1126.0" y="467.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1129.0" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (15 samples, 0.09%)</title><rect x="1126.0" y="451.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1129.0" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (15 samples, 0.09%)</title><rect x="1126.0" y="435.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1129.0" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (15 samples, 0.09%)</title><rect x="1126.0" y="419.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1129.0" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (15 samples, 0.09%)</title><rect x="1126.0" y="403.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1129.0" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (4 samples, 0.02%)</title><rect x="1126.0" y="387.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1129.0" y="398.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (9 samples, 0.05%)</title><rect x="1126.3" y="387.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1129.3" y="398.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (6 samples, 0.04%)</title><rect x="1126.3" y="371.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1129.3" y="382.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (7 samples, 0.04%)</title><rect x="1127.1" y="451.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1130.1" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.04%)</title><rect x="1127.1" y="435.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1130.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.04%)</title><rect x="1127.1" y="419.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1130.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (7 samples, 0.04%)</title><rect x="1127.1" y="403.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1130.1" y="414.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (7 samples, 0.04%)</title><rect x="1127.1" y="387.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1130.1" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (7 samples, 0.04%)</title><rect x="1127.1" y="371.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1130.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (7 samples, 0.04%)</title><rect x="1127.1" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1130.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (7 samples, 0.04%)</title><rect x="1127.1" y="339.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1130.1" y="350.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (7 samples, 0.04%)</title><rect x="1127.1" y="323.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1130.1" y="334.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (7 samples, 0.04%)</title><rect x="1127.1" y="307.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1130.1" y="318.0"></text>
</g>
<g>
<title>jmm_GetThreadInfo (4 samples, 0.02%)</title><rect x="1127.3" y="291.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1130.3" y="302.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (17 samples, 0.10%)</title><rect x="1127.8" y="723.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1130.8" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (17 samples, 0.10%)</title><rect x="1127.8" y="707.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1130.8" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (17 samples, 0.10%)</title><rect x="1127.8" y="691.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1130.8" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (16 samples, 0.10%)</title><rect x="1127.8" y="675.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1130.8" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (16 samples, 0.10%)</title><rect x="1127.8" y="659.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1130.8" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (16 samples, 0.10%)</title><rect x="1127.8" y="643.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1130.8" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (16 samples, 0.10%)</title><rect x="1127.8" y="627.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1130.8" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (16 samples, 0.10%)</title><rect x="1127.8" y="611.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1130.8" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (16 samples, 0.10%)</title><rect x="1127.8" y="595.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1130.8" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (16 samples, 0.10%)</title><rect x="1127.8" y="579.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1130.8" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (16 samples, 0.10%)</title><rect x="1127.8" y="563.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1130.8" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (14 samples, 0.08%)</title><rect x="1127.9" y="547.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1130.9" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (14 samples, 0.08%)</title><rect x="1127.9" y="531.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1130.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (13 samples, 0.08%)</title><rect x="1127.9" y="515.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1130.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (13 samples, 0.08%)</title><rect x="1127.9" y="499.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1130.9" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (13 samples, 0.08%)</title><rect x="1127.9" y="483.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1130.9" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (12 samples, 0.07%)</title><rect x="1128.0" y="467.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1131.0" y="478.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (12 samples, 0.07%)</title><rect x="1128.0" y="451.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1131.0" y="462.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (5 samples, 0.03%)</title><rect x="1129.0" y="723.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1132.0" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (5 samples, 0.03%)</title><rect x="1129.0" y="707.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1132.0" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (5 samples, 0.03%)</title><rect x="1129.0" y="691.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1132.0" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (5 samples, 0.03%)</title><rect x="1129.0" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1132.0" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (4 samples, 0.02%)</title><rect x="1129.0" y="659.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1132.0" y="670.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.releaseOutputStream (6 samples, 0.04%)</title><rect x="1129.4" y="723.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1132.4" y="734.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.flush (6 samples, 0.04%)</title><rect x="1129.4" y="707.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1132.4" y="718.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$BlockDataOutputStream.flush (6 samples, 0.04%)</title><rect x="1129.4" y="691.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1132.4" y="702.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (6 samples, 0.04%)</title><rect x="1129.4" y="675.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1132.4" y="686.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (6 samples, 0.04%)</title><rect x="1129.4" y="659.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1132.4" y="670.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.write (6 samples, 0.04%)</title><rect x="1129.4" y="643.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1132.4" y="654.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite (6 samples, 0.04%)</title><rect x="1129.4" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1132.4" y="638.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite0 (6 samples, 0.04%)</title><rect x="1129.4" y="611.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1132.4" y="622.0"></text>
</g>
<g>
<title>__send (4 samples, 0.02%)</title><rect x="1129.5" y="595.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1132.5" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="1129.5" y="579.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1132.5" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="1129.5" y="563.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1132.5" y="574.0"></text>
</g>
<g>
<title>__x64_sys_sendto (4 samples, 0.02%)</title><rect x="1129.5" y="547.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1132.5" y="558.0"></text>
</g>
<g>
<title>__sys_sendto (4 samples, 0.02%)</title><rect x="1129.5" y="531.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1132.5" y="542.0"></text>
</g>
<g>
<title>sock_sendmsg (4 samples, 0.02%)</title><rect x="1129.5" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1132.5" y="526.0"></text>
</g>
<g>
<title>inet6_sendmsg (4 samples, 0.02%)</title><rect x="1129.5" y="499.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1132.5" y="510.0"></text>
</g>
<g>
<title>tcp_sendmsg (4 samples, 0.02%)</title><rect x="1129.5" y="483.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1132.5" y="494.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (4 samples, 0.02%)</title><rect x="1129.5" y="467.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1132.5" y="478.0"></text>
</g>
<g>
<title>tcp_push (4 samples, 0.02%)</title><rect x="1129.5" y="451.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1132.5" y="462.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (4 samples, 0.02%)</title><rect x="1129.5" y="435.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1132.5" y="446.0"></text>
</g>
<g>
<title>tcp_write_xmit (4 samples, 0.02%)</title><rect x="1129.5" y="419.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1132.5" y="430.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (4 samples, 0.02%)</title><rect x="1129.5" y="403.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1132.5" y="414.0"></text>
</g>
<g>
<title>ip_queue_xmit (4 samples, 0.02%)</title><rect x="1129.5" y="387.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1132.5" y="398.0"></text>
</g>
<g>
<title>__ip_queue_xmit (4 samples, 0.02%)</title><rect x="1129.5" y="371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1132.5" y="382.0"></text>
</g>
<g>
<title>ip_local_out (4 samples, 0.02%)</title><rect x="1129.5" y="355.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1132.5" y="366.0"></text>
</g>
<g>
<title>ip_output (4 samples, 0.02%)</title><rect x="1129.5" y="339.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1132.5" y="350.0"></text>
</g>
<g>
<title>ip_finish_output (4 samples, 0.02%)</title><rect x="1129.5" y="323.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1132.5" y="334.0"></text>
</g>
<g>
<title>__ip_finish_output (4 samples, 0.02%)</title><rect x="1129.5" y="307.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1132.5" y="318.0"></text>
</g>
<g>
<title>ip_finish_output2 (4 samples, 0.02%)</title><rect x="1129.5" y="291.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1132.5" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.02%)</title><rect x="1129.5" y="275.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1132.5" y="286.0"></text>
</g>
<g>
<title>do_softirq.part.0 (4 samples, 0.02%)</title><rect x="1129.5" y="259.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1132.5" y="270.0"></text>
</g>
<g>
<title>do_softirq_own_stack (4 samples, 0.02%)</title><rect x="1129.5" y="243.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1132.5" y="254.0"></text>
</g>
<g>
<title>__softirqentry_text_start (4 samples, 0.02%)</title><rect x="1129.5" y="227.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1132.5" y="238.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.02%)</title><rect x="1129.5" y="211.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1132.5" y="222.0"></text>
</g>
<g>
<title>process_backlog (4 samples, 0.02%)</title><rect x="1129.5" y="195.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1132.5" y="206.0"></text>
</g>
<g>
<title>__netif_receive_skb (4 samples, 0.02%)</title><rect x="1129.5" y="179.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1132.5" y="190.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (4 samples, 0.02%)</title><rect x="1129.5" y="163.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1132.5" y="174.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 0.02%)</title><rect x="1129.5" y="147.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1132.5" y="158.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.02%)</title><rect x="1129.5" y="131.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1132.5" y="142.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.02%)</title><rect x="1129.5" y="115.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1132.5" y="126.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 0.02%)</title><rect x="1129.5" y="99.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1132.5" y="110.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (4 samples, 0.02%)</title><rect x="1129.5" y="83.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1132.5" y="94.0"></text>
</g>
<g>
<title>tcp_v4_rcv (4 samples, 0.02%)</title><rect x="1129.5" y="67.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1132.5" y="78.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 0.02%)</title><rect x="1129.5" y="51.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1132.5" y="62.0"></text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 0.02%)</title><rect x="1129.5" y="35.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1132.5" y="46.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPConnection.releaseOutputStream (4 samples, 0.02%)</title><rect x="1130.2" y="803.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1133.2" y="814.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (4 samples, 0.02%)</title><rect x="1130.2" y="787.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1133.2" y="798.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (4 samples, 0.02%)</title><rect x="1130.2" y="771.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1133.2" y="782.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.write (4 samples, 0.02%)</title><rect x="1130.2" y="755.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1133.2" y="766.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite (4 samples, 0.02%)</title><rect x="1130.2" y="739.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1133.2" y="750.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite0 (4 samples, 0.02%)</title><rect x="1130.2" y="723.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1133.2" y="734.0"></text>
</g>
<g>
<title>__send (4 samples, 0.02%)</title><rect x="1130.2" y="707.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1133.2" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="1130.2" y="691.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1133.2" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="1130.2" y="675.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1133.2" y="686.0"></text>
</g>
<g>
<title>__x64_sys_sendto (4 samples, 0.02%)</title><rect x="1130.2" y="659.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1133.2" y="670.0"></text>
</g>
<g>
<title>__sys_sendto (4 samples, 0.02%)</title><rect x="1130.2" y="643.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1133.2" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (4 samples, 0.02%)</title><rect x="1130.2" y="627.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1133.2" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (4 samples, 0.02%)</title><rect x="1130.2" y="611.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1133.2" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg (4 samples, 0.02%)</title><rect x="1130.2" y="595.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1133.2" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (4 samples, 0.02%)</title><rect x="1130.2" y="579.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1133.2" y="590.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (722 samples, 4.31%)</title><rect x="1130.4" y="947.0" width="50.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1133.4" y="958.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (150 samples, 0.89%)</title><rect x="1130.7" y="931.0" width="10.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1133.7" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (8 samples, 0.05%)</title><rect x="1130.9" y="915.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1133.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (4 samples, 0.02%)</title><rect x="1131.1" y="899.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1134.1" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (139 samples, 0.83%)</title><rect x="1131.5" y="915.0" width="9.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1134.5" y="926.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.03%)</title><rect x="1132.2" y="899.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1135.2" y="910.0"></text>
</g>
<g>
<title>clock_gettime (11 samples, 0.07%)</title><rect x="1132.8" y="899.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1135.8" y="910.0"></text>
</g>
<g>
<title>epoll_wait (109 samples, 0.65%)</title><rect x="1133.6" y="899.0" width="7.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1136.6" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (86 samples, 0.51%)</title><rect x="1135.2" y="883.0" width="6.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1138.2" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (86 samples, 0.51%)</title><rect x="1135.2" y="867.0" width="6.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1138.2" y="878.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (77 samples, 0.46%)</title><rect x="1135.9" y="851.0" width="5.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1138.9" y="862.0"></text>
</g>
<g>
<title>do_epoll_wait (77 samples, 0.46%)</title><rect x="1135.9" y="835.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1138.9" y="846.0"></text>
</g>
<g>
<title>ep_poll (70 samples, 0.42%)</title><rect x="1136.1" y="819.0" width="4.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1139.1" y="830.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (64 samples, 0.38%)</title><rect x="1136.2" y="803.0" width="4.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1139.2" y="814.0"></text>
</g>
<g>
<title>ep_send_events_proc (44 samples, 0.26%)</title><rect x="1137.2" y="787.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1140.2" y="798.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (30 samples, 0.18%)</title><rect x="1137.8" y="771.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1140.8" y="782.0"></text>
</g>
<g>
<title>sock_poll (18 samples, 0.11%)</title><rect x="1138.5" y="755.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1141.5" y="766.0"></text>
</g>
<g>
<title>tcp_poll (6 samples, 0.04%)</title><rect x="1139.2" y="739.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1142.2" y="750.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.04%)</title><rect x="1139.9" y="771.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1142.9" y="782.0"></text>
</g>
<g>
<title>mutex_lock (6 samples, 0.04%)</title><rect x="1140.3" y="787.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1143.3" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (568 samples, 3.39%)</title><rect x="1141.3" y="931.0" width="40.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1144.3" y="942.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (559 samples, 3.34%)</title><rect x="1141.7" y="915.0" width="39.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1144.7" y="926.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (441 samples, 2.63%)</title><rect x="1141.8" y="899.0" width="31.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1144.8" y="910.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (337 samples, 2.01%)</title><rect x="1142.3" y="883.0" width="23.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1145.3" y="894.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (333 samples, 1.99%)</title><rect x="1142.5" y="867.0" width="23.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1145.5" y="878.0">o..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (323 samples, 1.93%)</title><rect x="1142.5" y="851.0" width="22.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1145.5" y="862.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (34 samples, 0.20%)</title><rect x="1142.5" y="835.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1145.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (30 samples, 0.18%)</title><rect x="1142.5" y="819.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1145.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.05%)</title><rect x="1142.7" y="803.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1145.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.05%)</title><rect x="1142.7" y="787.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1145.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (8 samples, 0.05%)</title><rect x="1143.3" y="803.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1146.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (6 samples, 0.04%)</title><rect x="1143.4" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1146.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.coder (4 samples, 0.02%)</title><rect x="1143.5" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1146.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.03%)</title><rect x="1143.8" y="803.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1146.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.03%)</title><rect x="1143.8" y="787.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1146.8" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.03%)</title><rect x="1143.8" y="771.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1146.8" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.02%)</title><rect x="1143.9" y="755.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1146.9" y="766.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.02%)</title><rect x="1143.9" y="739.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1146.9" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.02%)</title><rect x="1143.9" y="723.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1146.9" y="734.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (7 samples, 0.04%)</title><rect x="1144.2" y="803.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1147.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.04%)</title><rect x="1144.2" y="787.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1147.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.04%)</title><rect x="1144.2" y="771.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1147.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.04%)</title><rect x="1144.2" y="755.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1147.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.02%)</title><rect x="1144.7" y="819.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1147.7" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.get (289 samples, 1.72%)</title><rect x="1144.9" y="835.0" width="20.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1147.9" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.06%)</title><rect x="1145.1" y="819.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1148.1" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.06%)</title><rect x="1145.1" y="803.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1148.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$124/1082880506.get$Lambda (10 samples, 0.06%)</title><rect x="1145.1" y="787.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1148.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$124/1082880506.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1145.5" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1148.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (272 samples, 1.62%)</title><rect x="1145.8" y="819.0" width="19.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1148.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (270 samples, 1.61%)</title><rect x="1145.9" y="803.0" width="19.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1148.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (8 samples, 0.05%)</title><rect x="1146.1" y="787.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1149.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.02%)</title><rect x="1146.7" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1149.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.02%)</title><rect x="1146.7" y="771.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1149.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.02%)</title><rect x="1146.7" y="755.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1149.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (4 samples, 0.02%)</title><rect x="1146.7" y="739.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1149.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (254 samples, 1.52%)</title><rect x="1147.0" y="787.0" width="17.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1150.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (5 samples, 0.03%)</title><rect x="1147.0" y="771.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1150.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (249 samples, 1.49%)</title><rect x="1147.3" y="771.0" width="17.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1150.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (247 samples, 1.47%)</title><rect x="1147.5" y="755.0" width="17.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1150.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (247 samples, 1.47%)</title><rect x="1147.5" y="739.0" width="17.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1150.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (247 samples, 1.47%)</title><rect x="1147.5" y="723.0" width="17.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1150.5" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (42 samples, 0.25%)</title><rect x="1148.4" y="707.0" width="2.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1151.4" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (8 samples, 0.05%)</title><rect x="1149.5" y="691.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1152.5" y="702.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (4 samples, 0.02%)</title><rect x="1150.4" y="691.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1153.4" y="702.0"></text>
</g>
<g>
<title>pthread_mutex_lock (10 samples, 0.06%)</title><rect x="1150.6" y="691.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1153.6" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (185 samples, 1.10%)</title><rect x="1151.4" y="707.0" width="13.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1154.4" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (165 samples, 0.98%)</title><rect x="1152.8" y="691.0" width="11.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1155.8" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (164 samples, 0.98%)</title><rect x="1152.9" y="675.0" width="11.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1155.9" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (159 samples, 0.95%)</title><rect x="1153.3" y="659.0" width="11.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1156.3" y="670.0"></text>
</g>
<g>
<title>do_futex (157 samples, 0.94%)</title><rect x="1153.4" y="643.0" width="11.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1156.4" y="654.0"></text>
</g>
<g>
<title>futex_wake (149 samples, 0.89%)</title><rect x="1153.7" y="627.0" width="10.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1156.7" y="638.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.02%)</title><rect x="1154.2" y="611.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1157.2" y="622.0"></text>
</g>
<g>
<title>wake_up_q (136 samples, 0.81%)</title><rect x="1154.6" y="611.0" width="9.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1157.6" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (136 samples, 0.81%)</title><rect x="1154.6" y="595.0" width="9.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1157.6" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (136 samples, 0.81%)</title><rect x="1154.6" y="579.0" width="9.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1157.6" y="590.0"></text>
</g>
<g>
<title>hash_futex (4 samples, 0.02%)</title><rect x="1164.2" y="627.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1167.2" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.03%)</title><rect x="1164.4" y="707.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1167.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (7 samples, 0.04%)</title><rect x="1165.4" y="851.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1168.4" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.04%)</title><rect x="1165.4" y="835.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1168.4" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (7 samples, 0.04%)</title><rect x="1165.4" y="819.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1168.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (6 samples, 0.04%)</title><rect x="1165.4" y="803.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1168.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.02%)</title><rect x="1165.6" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1168.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (38 samples, 0.23%)</title><rect x="1166.0" y="883.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1169.0" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (13 samples, 0.08%)</title><rect x="1166.3" y="867.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1169.3" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.02%)</title><rect x="1166.8" y="851.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1169.8" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 0.12%)</title><rect x="1167.3" y="867.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1170.3" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 0.11%)</title><rect x="1167.3" y="851.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1170.3" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.02%)</title><rect x="1167.8" y="835.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1170.8" y="846.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.02%)</title><rect x="1167.8" y="819.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1170.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1168.2" y="835.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1171.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1168.2" y="819.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1171.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.03%)</title><rect x="1168.2" y="803.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1171.2" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.03%)</title><rect x="1168.2" y="787.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1171.2" y="798.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.02%)</title><rect x="1168.3" y="771.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1171.3" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.02%)</title><rect x="1168.3" y="755.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1171.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (4 samples, 0.02%)</title><rect x="1168.8" y="883.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1171.8" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (28 samples, 0.17%)</title><rect x="1169.1" y="883.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1172.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (19 samples, 0.11%)</title><rect x="1169.2" y="867.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1172.2" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (18 samples, 0.11%)</title><rect x="1169.3" y="851.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1172.3" y="862.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (4 samples, 0.02%)</title><rect x="1169.7" y="835.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1172.7" y="846.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="1170.0" y="835.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1173.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.04%)</title><rect x="1170.6" y="867.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1173.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 0.16%)</title><rect x="1171.1" y="883.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1174.1" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 0.16%)</title><rect x="1171.1" y="867.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1174.1" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (7 samples, 0.04%)</title><rect x="1171.6" y="851.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1174.6" y="862.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.04%)</title><rect x="1171.6" y="835.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1174.6" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.04%)</title><rect x="1171.6" y="819.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1174.6" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.04%)</title><rect x="1171.6" y="803.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1174.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.06%)</title><rect x="1172.2" y="851.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1175.2" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.06%)</title><rect x="1172.2" y="835.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1175.2" y="846.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (10 samples, 0.06%)</title><rect x="1172.2" y="819.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1175.2" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (8 samples, 0.05%)</title><rect x="1172.3" y="803.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1175.3" y="814.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.05%)</title><rect x="1172.3" y="787.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.3" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (8 samples, 0.05%)</title><rect x="1172.3" y="771.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1175.3" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.04%)</title><rect x="1172.3" y="755.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1175.3" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.02%)</title><rect x="1172.5" y="739.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1175.5" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (116 samples, 0.69%)</title><rect x="1172.9" y="899.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1175.9" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (116 samples, 0.69%)</title><rect x="1172.9" y="883.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1175.9" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (20 samples, 0.12%)</title><rect x="1173.4" y="867.0" width="1.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1176.4" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (15 samples, 0.09%)</title><rect x="1173.7" y="851.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1176.7" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (5 samples, 0.03%)</title><rect x="1174.0" y="835.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1177.0" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.03%)</title><rect x="1174.4" y="835.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1177.4" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.02%)</title><rect x="1174.9" y="867.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1177.9" y="878.0"></text>
</g>
<g>
<title>recv (84 samples, 0.50%)</title><rect x="1175.1" y="867.0" width="6.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1178.1" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (67 samples, 0.40%)</title><rect x="1176.3" y="851.0" width="4.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1179.3" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (63 samples, 0.38%)</title><rect x="1176.6" y="835.0" width="4.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1179.6" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (58 samples, 0.35%)</title><rect x="1177.0" y="819.0" width="4.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1180.0" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (56 samples, 0.33%)</title><rect x="1177.0" y="803.0" width="3.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1180.0" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (48 samples, 0.29%)</title><rect x="1177.2" y="787.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1180.2" y="798.0"></text>
</g>
<g>
<title>inet6_recvmsg (41 samples, 0.24%)</title><rect x="1177.3" y="771.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1180.3" y="782.0"></text>
</g>
<g>
<title>tcp_recvmsg (39 samples, 0.23%)</title><rect x="1177.4" y="755.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1180.4" y="766.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (13 samples, 0.08%)</title><rect x="1178.6" y="739.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1181.6" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (13 samples, 0.08%)</title><rect x="1178.6" y="723.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1181.6" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (8 samples, 0.05%)</title><rect x="1178.9" y="707.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1181.9" y="718.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.02%)</title><rect x="1178.9" y="691.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1181.9" y="702.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (6 samples, 0.04%)</title><rect x="1179.5" y="739.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1182.5" y="750.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.04%)</title><rect x="1180.1" y="771.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1183.1" y="782.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.03%)</title><rect x="1180.6" y="787.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1183.6" y="798.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.02%)</title><rect x="1180.6" y="771.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1183.6" y="782.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.02%)</title><rect x="1180.6" y="755.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1183.6" y="766.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.02%)</title><rect x="1180.6" y="739.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1183.6" y="750.0"></text>
</g>
<g>
<title>start_thread (122 samples, 0.73%)</title><rect x="1181.4" y="947.0" width="8.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1184.4" y="958.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (122 samples, 0.73%)</title><rect x="1181.4" y="931.0" width="8.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1184.4" y="942.0"></text>
</g>
<g>
<title>Thread::call_run() (122 samples, 0.73%)</title><rect x="1181.4" y="915.0" width="8.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.4" y="926.0"></text>
</g>
<g>
<title>GangWorker::loop() (84 samples, 0.50%)</title><rect x="1181.4" y="899.0" width="5.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.4" y="910.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (73 samples, 0.44%)</title><rect x="1181.5" y="883.0" width="5.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.5" y="894.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (29 samples, 0.17%)</title><rect x="1181.6" y="867.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.6" y="878.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (4 samples, 0.02%)</title><rect x="1181.6" y="851.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.6" y="862.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (10 samples, 0.06%)</title><rect x="1181.8" y="851.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.8" y="862.0"></text>
</g>
<g>
<title>SpinPause (15 samples, 0.09%)</title><rect x="1182.5" y="851.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1185.5" y="862.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (7 samples, 0.04%)</title><rect x="1183.6" y="867.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.6" y="878.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (7 samples, 0.04%)</title><rect x="1183.6" y="851.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.6" y="862.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (5 samples, 0.03%)</title><rect x="1183.6" y="835.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.6" y="846.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (5 samples, 0.03%)</title><rect x="1183.6" y="819.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.6" y="830.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (5 samples, 0.03%)</title><rect x="1183.6" y="803.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.6" y="814.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (5 samples, 0.03%)</title><rect x="1183.6" y="787.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.6" y="798.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (4 samples, 0.02%)</title><rect x="1183.6" y="771.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.6" y="782.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (33 samples, 0.20%)</title><rect x="1184.3" y="867.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.3" y="878.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (8 samples, 0.05%)</title><rect x="1184.4" y="851.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.4" y="862.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (20 samples, 0.12%)</title><rect x="1185.0" y="851.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.0" y="862.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (18 samples, 0.11%)</title><rect x="1185.1" y="835.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.1" y="846.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (17 samples, 0.10%)</title><rect x="1185.1" y="819.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.1" y="830.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (4 samples, 0.02%)</title><rect x="1185.2" y="803.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.2" y="814.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (4 samples, 0.02%)</title><rect x="1185.2" y="787.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.2" y="798.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (8 samples, 0.05%)</title><rect x="1186.7" y="883.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.7" y="894.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (8 samples, 0.05%)</title><rect x="1186.7" y="867.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.7" y="878.0"></text>
</g>
<g>
<title>JavaThread::run() (5 samples, 0.03%)</title><rect x="1187.3" y="899.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.3" y="910.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (4 samples, 0.02%)</title><rect x="1187.3" y="883.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.3" y="894.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (4 samples, 0.02%)</title><rect x="1187.3" y="867.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.3" y="878.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (4 samples, 0.02%)</title><rect x="1187.3" y="851.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.3" y="862.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (4 samples, 0.02%)</title><rect x="1187.3" y="835.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.3" y="846.0"></text>
</g>
<g>
<title>VMThread::run() (30 samples, 0.18%)</title><rect x="1187.7" y="899.0" width="2.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.7" y="910.0"></text>
</g>
<g>
<title>VMThread::loop() (30 samples, 0.18%)</title><rect x="1187.7" y="883.0" width="2.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.7" y="894.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (5 samples, 0.03%)</title><rect x="1187.7" y="867.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.7" y="878.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (4 samples, 0.02%)</title><rect x="1187.7" y="851.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.7" y="862.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*) (4 samples, 0.02%)</title><rect x="1187.7" y="835.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.7" y="846.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (4 samples, 0.02%)</title><rect x="1187.7" y="819.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.7" y="830.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (4 samples, 0.02%)</title><rect x="1187.7" y="803.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1190.7" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="1187.7" y="787.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1190.7" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="1187.7" y="771.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1190.7" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="1187.7" y="755.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1190.7" y="766.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="1187.7" y="739.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1190.7" y="750.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="1187.7" y="723.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1190.7" y="734.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.02%)</title><rect x="1187.7" y="707.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1190.7" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.02%)</title><rect x="1187.7" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1190.7" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="1187.7" y="675.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1190.7" y="686.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (24 samples, 0.14%)</title><rect x="1188.1" y="867.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.1" y="878.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (24 samples, 0.14%)</title><rect x="1188.1" y="851.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.1" y="862.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (19 samples, 0.11%)</title><rect x="1188.2" y="835.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.2" y="846.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (17 samples, 0.10%)</title><rect x="1188.2" y="819.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.2" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (5 samples, 0.03%)</title><rect x="1188.7" y="803.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.7" y="814.0"></text>
</g>
</g>
</svg>
