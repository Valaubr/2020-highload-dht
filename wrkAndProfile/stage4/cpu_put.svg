<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (16,498 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.04%)</title><rect x="10.1" y="915.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.1" y="926.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.04%)</title><rect x="10.1" y="899.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.1" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (7 samples, 0.04%)</title><rect x="10.1" y="883.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.1" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (7 samples, 0.04%)</title><rect x="10.1" y="867.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.1" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (4 samples, 0.02%)</title><rect x="10.3" y="851.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.3" y="862.0"></text>
</g>
<g>
<title>[not_walkable_Java] (18 samples, 0.11%)</title><rect x="10.7" y="915.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.7" y="926.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (4 samples, 0.02%)</title><rect x="10.7" y="899.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.7" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (11 samples, 0.07%)</title><rect x="11.1" y="899.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="14.1" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (11 samples, 0.07%)</title><rect x="11.1" y="883.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="14.1" y="894.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (8 samples, 0.05%)</title><rect x="11.3" y="867.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="14.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.08%)</title><rect x="12.0" y="915.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="15.0" y="926.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.03%)</title><rect x="12.6" y="899.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="15.6" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="12.6" y="883.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="15.6" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="12.6" y="867.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="15.6" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="12.6" y="851.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="15.6" y="862.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="12.6" y="835.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="15.6" y="846.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.02%)</title><rect x="12.6" y="819.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="15.6" y="830.0"></text>
</g>
<g>
<title>[unknown_Java] (13 samples, 0.08%)</title><rect x="12.9" y="915.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="15.9" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.04%)</title><rect x="13.3" y="899.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="16.3" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="13.3" y="883.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="16.3" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="13.3" y="867.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="16.3" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.04%)</title><rect x="13.3" y="851.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="16.3" y="862.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.04%)</title><rect x="13.3" y="835.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="16.3" y="846.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.04%)</title><rect x="13.3" y="819.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="16.3" y="830.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.03%)</title><rect x="13.4" y="803.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="16.4" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.03%)</title><rect x="13.4" y="787.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="16.4" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.03%)</title><rect x="13.4" y="771.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="16.4" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.run (11,208 samples, 67.94%)</title><rect x="14.4" y="915.0" width="801.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.4" y="926.0">java/lang/Thread.run</text>
</g>
<g>
<title>com/sun/jmx/remote/internal/ServerCommunicatorAdmin$Timeout.run (5 samples, 0.03%)</title><rect x="14.4" y="899.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (11,202 samples, 67.90%)</title><rect x="14.7" y="899.0" width="801.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.7" y="910.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (11,202 samples, 67.90%)</title><rect x="14.7" y="883.0" width="801.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="17.7" y="894.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/lang/Thread.interrupted (13 samples, 0.08%)</title><rect x="16.9" y="867.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="19.9" y="878.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (12 samples, 0.07%)</title><rect x="16.9" y="851.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.9" y="862.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (7 samples, 0.04%)</title><rect x="17.0" y="835.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="20.0" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.02%)</title><rect x="17.1" y="819.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="20.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (11 samples, 0.07%)</title><rect x="17.9" y="867.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (11 samples, 0.07%)</title><rect x="17.9" y="851.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (9 samples, 0.05%)</title><rect x="18.0" y="835.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="21.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (7 samples, 0.04%)</title><rect x="18.2" y="819.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="21.2" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (7 samples, 0.04%)</title><rect x="18.2" y="803.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.2" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (7 samples, 0.04%)</title><rect x="18.2" y="787.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (12 samples, 0.07%)</title><rect x="18.7" y="867.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="21.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.07%)</title><rect x="18.7" y="851.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (7 samples, 0.04%)</title><rect x="19.0" y="835.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (7 samples, 0.04%)</title><rect x="19.0" y="819.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="22.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,143 samples, 12.99%)</title><rect x="19.5" y="867.0" width="153.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="22.5" y="878.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2,069 samples, 12.54%)</title><rect x="24.3" y="851.0" width="148.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="27.3" y="862.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (12 samples, 0.07%)</title><rect x="25.2" y="835.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="28.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (12 samples, 0.07%)</title><rect x="25.2" y="819.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="28.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (12 samples, 0.07%)</title><rect x="25.2" y="803.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="28.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,743 samples, 10.56%)</title><rect x="26.1" y="835.0" width="124.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.1" y="846.0">java/util/concu..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (46 samples, 0.28%)</title><rect x="28.4" y="819.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="31.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (24 samples, 0.15%)</title><rect x="31.7" y="819.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (82 samples, 0.50%)</title><rect x="33.4" y="819.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="36.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (4 samples, 0.02%)</title><rect x="35.8" y="803.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="38.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (14 samples, 0.08%)</title><rect x="36.1" y="803.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="39.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (30 samples, 0.18%)</title><rect x="37.1" y="803.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (30 samples, 0.18%)</title><rect x="37.1" y="787.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="40.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (9 samples, 0.05%)</title><rect x="38.5" y="771.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="41.5" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (9 samples, 0.05%)</title><rect x="38.5" y="755.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.5" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (9 samples, 0.05%)</title><rect x="38.5" y="739.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="41.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (29 samples, 0.18%)</title><rect x="39.3" y="819.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="42.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (29 samples, 0.18%)</title><rect x="39.3" y="803.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="42.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.06%)</title><rect x="39.6" y="787.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="42.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.06%)</title><rect x="39.6" y="771.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="42.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.06%)</title><rect x="39.6" y="755.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.6" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.05%)</title><rect x="39.8" y="739.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="42.8" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="39.8" y="723.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="42.8" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="39.8" y="707.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="42.8" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="40.0" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="43.0" y="702.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="40.0" y="675.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="43.0" y="686.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.03%)</title><rect x="40.0" y="659.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="43.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (14 samples, 0.08%)</title><rect x="40.3" y="787.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="43.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (13 samples, 0.08%)</title><rect x="41.3" y="819.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="44.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,515 samples, 9.18%)</title><rect x="42.3" y="819.0" width="108.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="45.3" y="830.0">java/util/con..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,510 samples, 9.15%)</title><rect x="42.6" y="803.0" width="108.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="45.6" y="814.0">jdk/internal/..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (5 samples, 0.03%)</title><rect x="46.3" y="787.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="49.3" y="798.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (15 samples, 0.09%)</title><rect x="46.7" y="787.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="49.7" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (8 samples, 0.05%)</title><rect x="47.8" y="787.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="50.8" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (14 samples, 0.08%)</title><rect x="48.3" y="787.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="51.3" y="798.0"></text>
</g>
<g>
<title>Unsafe_Park (572 samples, 3.47%)</title><rect x="49.3" y="787.0" width="40.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="52.3" y="798.0">Uns..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (5 samples, 0.03%)</title><rect x="53.3" y="771.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="56.3" y="782.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (13 samples, 0.08%)</title><rect x="53.6" y="771.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="56.6" y="782.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 0.03%)</title><rect x="54.6" y="771.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="57.6" y="782.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (153 samples, 0.93%)</title><rect x="55.1" y="771.0" width="10.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="58.1" y="782.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (23 samples, 0.14%)</title><rect x="61.2" y="755.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="64.2" y="766.0"></text>
</g>
<g>
<title>Monitor::unlock() (10 samples, 0.06%)</title><rect x="62.9" y="755.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="65.9" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (32 samples, 0.19%)</title><rect x="63.6" y="755.0" width="2.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="66.6" y="766.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (4 samples, 0.02%)</title><rect x="66.0" y="771.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="69.0" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.03%)</title><rect x="66.3" y="771.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="69.3" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (12 samples, 0.07%)</title><rect x="66.6" y="771.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="69.6" y="782.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (13 samples, 0.08%)</title><rect x="67.5" y="771.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="70.5" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_wait (9 samples, 0.05%)</title><rect x="68.4" y="771.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="71.4" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (229 samples, 1.39%)</title><rect x="69.1" y="771.0" width="16.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="72.1" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (131 samples, 0.79%)</title><rect x="75.9" y="755.0" width="9.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="78.9" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.05%)</title><rect x="75.9" y="739.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="78.9" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (123 samples, 0.75%)</title><rect x="76.5" y="739.0" width="8.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="79.5" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (59 samples, 0.36%)</title><rect x="80.8" y="723.0" width="4.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="83.8" y="734.0"></text>
</g>
<g>
<title>do_futex (52 samples, 0.32%)</title><rect x="81.2" y="707.0" width="3.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="84.2" y="718.0"></text>
</g>
<g>
<title>futex_wake (28 samples, 0.17%)</title><rect x="81.8" y="691.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="84.8" y="702.0"></text>
</g>
<g>
<title>get_futex_key (16 samples, 0.10%)</title><rect x="82.7" y="675.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="85.7" y="686.0"></text>
</g>
<g>
<title>get_futex_key (5 samples, 0.03%)</title><rect x="83.8" y="691.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="86.8" y="702.0"></text>
</g>
<g>
<title>hash_futex (11 samples, 0.07%)</title><rect x="84.2" y="691.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="87.2" y="702.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="85.0" y="723.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="88.0" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (26 samples, 0.16%)</title><rect x="85.5" y="771.0" width="1.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="88.5" y="782.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (11 samples, 0.07%)</title><rect x="87.3" y="771.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="90.3" y="782.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (22 samples, 0.13%)</title><rect x="88.1" y="771.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="91.1" y="782.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (5 samples, 0.03%)</title><rect x="89.7" y="771.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="92.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (831 samples, 5.04%)</title><rect x="90.2" y="787.0" width="59.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="93.2" y="798.0">[unkno..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (18 samples, 0.11%)</title><rect x="90.2" y="771.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="93.2" y="782.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (6 samples, 0.04%)</title><rect x="91.5" y="771.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="94.5" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_wait (730 samples, 4.42%)</title><rect x="92.0" y="771.0" width="52.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="95.0" y="782.0">__pth..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (508 samples, 3.08%)</title><rect x="107.8" y="755.0" width="36.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="110.8" y="766.0">ent..</text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.05%)</title><rect x="107.8" y="739.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="110.8" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (500 samples, 3.03%)</title><rect x="108.4" y="739.0" width="35.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="111.4" y="750.0">do_..</text>
</g>
<g>
<title>__x64_sys_futex (435 samples, 2.64%)</title><rect x="112.7" y="723.0" width="31.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="115.7" y="734.0">__..</text>
</g>
<g>
<title>do_futex (417 samples, 2.53%)</title><rect x="113.6" y="707.0" width="29.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="116.6" y="718.0">do..</text>
</g>
<g>
<title>futex_wait (398 samples, 2.41%)</title><rect x="114.7" y="691.0" width="28.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="117.7" y="702.0">fu..</text>
</g>
<g>
<title>_cond_resched (4 samples, 0.02%)</title><rect x="118.6" y="675.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="121.6" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock (5 samples, 0.03%)</title><rect x="118.9" y="675.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="121.9" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (259 samples, 1.57%)</title><rect x="119.2" y="675.0" width="18.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="122.2" y="686.0"></text>
</g>
<g>
<title>rcu_all_qs (9 samples, 0.05%)</title><rect x="122.4" y="659.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="125.4" y="670.0"></text>
</g>
<g>
<title>schedule (205 samples, 1.24%)</title><rect x="123.1" y="659.0" width="14.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="126.1" y="670.0"></text>
</g>
<g>
<title>__schedule (193 samples, 1.17%)</title><rect x="123.9" y="643.0" width="13.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="126.9" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (166 samples, 1.01%)</title><rect x="125.9" y="627.0" width="11.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="128.9" y="638.0"></text>
</g>
<g>
<title>futex_wait_setup (50 samples, 0.30%)</title><rect x="137.7" y="675.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="140.7" y="686.0"></text>
</g>
<g>
<title>get_futex_key (19 samples, 0.12%)</title><rect x="139.3" y="659.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="142.3" y="670.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (5 samples, 0.03%)</title><rect x="140.3" y="643.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="143.3" y="654.0"></text>
</g>
<g>
<title>get_futex_value_locked (8 samples, 0.05%)</title><rect x="140.7" y="659.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="143.7" y="670.0"></text>
</g>
<g>
<title>hash_futex (7 samples, 0.04%)</title><rect x="141.6" y="675.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="144.6" y="686.0"></text>
</g>
<g>
<title>plist_add (9 samples, 0.05%)</title><rect x="142.1" y="675.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="145.1" y="686.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.04%)</title><rect x="142.7" y="675.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="145.7" y="686.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.03%)</title><rect x="143.5" y="707.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="146.5" y="718.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="143.8" y="723.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="146.8" y="734.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (37 samples, 0.22%)</title><rect x="144.2" y="771.0" width="2.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="147.2" y="782.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (5 samples, 0.03%)</title><rect x="146.8" y="771.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="149.8" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (16 samples, 0.10%)</title><rect x="147.2" y="771.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="150.2" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (11 samples, 0.07%)</title><rect x="148.3" y="771.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="151.3" y="782.0"></text>
</g>
<g>
<title>_pthread_cleanup_pop (8 samples, 0.05%)</title><rect x="149.1" y="771.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="152.1" y="782.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (12 samples, 0.07%)</title><rect x="149.7" y="787.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="152.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (72 samples, 0.44%)</title><rect x="150.8" y="835.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (72 samples, 0.44%)</title><rect x="150.8" y="819.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="153.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (60 samples, 0.36%)</title><rect x="151.3" y="803.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="154.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.02%)</title><rect x="152.0" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.02%)</title><rect x="152.0" y="771.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="155.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (44 samples, 0.27%)</title><rect x="152.4" y="787.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (44 samples, 0.27%)</title><rect x="152.4" y="771.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (10 samples, 0.06%)</title><rect x="152.5" y="755.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="155.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (33 samples, 0.20%)</title><rect x="153.2" y="755.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="156.2" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (31 samples, 0.19%)</title><rect x="153.3" y="739.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="156.3" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (31 samples, 0.19%)</title><rect x="153.3" y="723.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (9 samples, 0.05%)</title><rect x="154.9" y="707.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (5 samples, 0.03%)</title><rect x="155.6" y="803.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="158.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (5 samples, 0.03%)</title><rect x="155.6" y="787.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="158.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (225 samples, 1.36%)</title><rect x="155.9" y="835.0" width="16.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="158.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (225 samples, 1.36%)</title><rect x="155.9" y="819.0" width="16.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="158.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (225 samples, 1.36%)</title><rect x="155.9" y="803.0" width="16.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (225 samples, 1.36%)</title><rect x="155.9" y="787.0" width="16.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="158.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (225 samples, 1.36%)</title><rect x="155.9" y="771.0" width="16.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.9" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (41 samples, 0.25%)</title><rect x="156.5" y="755.0" width="2.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="159.5" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.02%)</title><rect x="157.0" y="739.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="160.0" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (7 samples, 0.04%)</title><rect x="157.8" y="739.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="160.8" y="750.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (5 samples, 0.03%)</title><rect x="158.3" y="739.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="161.3" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_lock (9 samples, 0.05%)</title><rect x="158.7" y="739.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="161.7" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (170 samples, 1.03%)</title><rect x="159.4" y="755.0" width="12.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="162.4" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (149 samples, 0.90%)</title><rect x="160.9" y="739.0" width="10.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="163.9" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (147 samples, 0.89%)</title><rect x="161.1" y="723.0" width="10.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="164.1" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (132 samples, 0.80%)</title><rect x="162.1" y="707.0" width="9.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="165.1" y="718.0"></text>
</g>
<g>
<title>do_futex (130 samples, 0.79%)</title><rect x="162.1" y="691.0" width="9.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="165.1" y="702.0"></text>
</g>
<g>
<title>futex_wake (129 samples, 0.78%)</title><rect x="162.1" y="675.0" width="9.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="165.1" y="686.0"></text>
</g>
<g>
<title>mark_wake_futex (7 samples, 0.04%)</title><rect x="162.6" y="659.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="165.6" y="670.0"></text>
</g>
<g>
<title>__unqueue_futex (4 samples, 0.02%)</title><rect x="162.8" y="643.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="165.8" y="654.0"></text>
</g>
<g>
<title>wake_up_q (114 samples, 0.69%)</title><rect x="163.2" y="659.0" width="8.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="166.2" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (111 samples, 0.67%)</title><rect x="163.4" y="643.0" width="8.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="166.4" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (110 samples, 0.67%)</title><rect x="163.5" y="627.0" width="7.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="166.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$112/1784845300.run (5 samples, 0.03%)</title><rect x="172.4" y="851.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="175.4" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$13/1053631449.run (162 samples, 0.98%)</title><rect x="172.9" y="867.0" width="11.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="175.9" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.flushingHelper (162 samples, 0.98%)</title><rect x="172.9" y="851.0" width="11.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="175.9" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.flush (162 samples, 0.98%)</title><rect x="172.9" y="835.0" width="11.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="175.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.serialize (162 samples, 0.98%)</title><rect x="172.9" y="819.0" width="11.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="175.9" y="830.0"></text>
</g>
<g>
<title>java/util/Spliterators$1Adapter.hasNext (10 samples, 0.06%)</title><rect x="174.1" y="803.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="177.1" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.tryAdvance (9 samples, 0.05%)</title><rect x="174.2" y="787.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="177.2" y="798.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.doAdvance (6 samples, 0.04%)</title><rect x="174.4" y="771.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="177.4" y="782.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.fillBuffer (5 samples, 0.03%)</title><rect x="174.5" y="755.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="177.5" y="766.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator$$Lambda$119/1873832746.getAsBoolean (5 samples, 0.03%)</title><rect x="174.5" y="739.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="177.5" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0 (4 samples, 0.02%)</title><rect x="174.6" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="177.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.tryAdvance (4 samples, 0.02%)</title><rect x="174.6" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="177.6" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (129 samples, 0.78%)</title><rect x="175.2" y="803.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="178.2" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (6 samples, 0.04%)</title><rect x="175.6" y="787.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="178.6" y="798.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (6 samples, 0.04%)</title><rect x="175.6" y="771.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="178.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (115 samples, 0.70%)</title><rect x="176.1" y="787.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="179.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (96 samples, 0.58%)</title><rect x="176.6" y="771.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="179.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (95 samples, 0.58%)</title><rect x="176.7" y="755.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="179.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (95 samples, 0.58%)</title><rect x="176.7" y="739.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="179.7" y="750.0"></text>
</g>
<g>
<title>__libc_write (89 samples, 0.54%)</title><rect x="176.9" y="723.0" width="6.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="179.9" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (65 samples, 0.39%)</title><rect x="178.7" y="707.0" width="4.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="181.7" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (63 samples, 0.38%)</title><rect x="178.8" y="691.0" width="4.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="181.8" y="702.0"></text>
</g>
<g>
<title>__x64_sys_write (53 samples, 0.32%)</title><rect x="179.5" y="675.0" width="3.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="182.5" y="686.0"></text>
</g>
<g>
<title>ksys_write (53 samples, 0.32%)</title><rect x="179.5" y="659.0" width="3.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="182.5" y="670.0"></text>
</g>
<g>
<title>vfs_write (40 samples, 0.24%)</title><rect x="180.4" y="643.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="183.4" y="654.0"></text>
</g>
<g>
<title>__vfs_write (35 samples, 0.21%)</title><rect x="180.5" y="627.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="183.5" y="638.0"></text>
</g>
<g>
<title>new_sync_write (32 samples, 0.19%)</title><rect x="180.7" y="611.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="183.7" y="622.0"></text>
</g>
<g>
<title>generic_file_write_iter (31 samples, 0.19%)</title><rect x="180.8" y="595.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="183.8" y="606.0"></text>
</g>
<g>
<title>__generic_file_write_iter (25 samples, 0.15%)</title><rect x="180.9" y="579.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="183.9" y="590.0"></text>
</g>
<g>
<title>generic_perform_write (17 samples, 0.10%)</title><rect x="181.2" y="563.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="184.2" y="574.0"></text>
</g>
<g>
<title>shmem_write_begin (10 samples, 0.06%)</title><rect x="181.4" y="547.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="184.4" y="558.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (10 samples, 0.06%)</title><rect x="181.4" y="531.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="184.4" y="542.0"></text>
</g>
<g>
<title>find_lock_entry (8 samples, 0.05%)</title><rect x="181.5" y="515.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="184.5" y="526.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.03%)</title><rect x="181.7" y="499.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="184.7" y="510.0"></text>
</g>
<g>
<title>shmem_write_end (5 samples, 0.03%)</title><rect x="182.1" y="547.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="185.1" y="558.0"></text>
</g>
<g>
<title>set_page_dirty (4 samples, 0.02%)</title><rect x="182.2" y="531.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="185.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (11 samples, 0.07%)</title><rect x="183.4" y="771.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="186.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (9 samples, 0.05%)</title><rect x="183.6" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="186.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$112/1784845300.run (8,718 samples, 52.84%)</title><rect x="184.4" y="867.0" width="623.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="187.4" y="878.0">ru/mail/polis/service/valaubr/HttpService$$Lambda$112/1784845300.run</text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.lambda$put$2 (8,704 samples, 52.76%)</title><rect x="185.4" y="851.0" width="622.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="188.4" y="862.0">ru/mail/polis/service/valaubr/HttpService.lambda$put$2</text>
</g>
<g>
<title>java/lang/String.getBytes (12 samples, 0.07%)</title><rect x="187.9" y="835.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="190.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.proxy (6 samples, 0.04%)</title><rect x="188.3" y="819.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="191.3" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (63 samples, 0.38%)</title><rect x="188.7" y="835.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="191.7" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (61 samples, 0.37%)</title><rect x="188.9" y="819.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.9" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (60 samples, 0.36%)</title><rect x="189.0" y="803.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (57 samples, 0.35%)</title><rect x="189.2" y="787.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="192.2" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (50 samples, 0.30%)</title><rect x="189.7" y="771.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.7" y="782.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (11 samples, 0.07%)</title><rect x="191.0" y="755.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="194.0" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (20 samples, 0.12%)</title><rect x="191.8" y="755.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.8" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (9 samples, 0.05%)</title><rect x="192.6" y="739.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="195.6" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.05%)</title><rect x="192.7" y="723.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="195.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,622 samples, 15.89%)</title><rect x="193.2" y="835.0" width="187.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="196.2" y="846.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.07%)</title><rect x="194.2" y="819.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="197.2" y="830.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (11 samples, 0.07%)</title><rect x="194.2" y="803.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="197.2" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (10 samples, 0.06%)</title><rect x="194.2" y="787.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="197.2" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (10 samples, 0.06%)</title><rect x="194.2" y="771.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="197.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (13 samples, 0.08%)</title><rect x="195.0" y="819.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.06%)</title><rect x="195.2" y="803.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="198.2" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.04%)</title><rect x="195.5" y="787.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="198.5" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (6 samples, 0.04%)</title><rect x="195.5" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="198.5" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (6 samples, 0.04%)</title><rect x="195.5" y="755.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.5" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (5 samples, 0.03%)</title><rect x="195.5" y="739.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="198.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,491 samples, 15.10%)</title><rect x="195.9" y="819.0" width="178.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="198.9" y="830.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (99 samples, 0.60%)</title><rect x="196.2" y="803.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="199.2" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.03%)</title><rect x="198.2" y="787.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="201.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (5 samples, 0.03%)</title><rect x="198.5" y="787.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="201.5" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (61 samples, 0.37%)</title><rect x="198.9" y="787.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="201.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (19 samples, 0.12%)</title><rect x="199.3" y="771.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="202.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.03%)</title><rect x="200.3" y="755.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="203.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (37 samples, 0.22%)</title><rect x="200.6" y="771.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="203.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (36 samples, 0.22%)</title><rect x="200.7" y="755.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="203.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (36 samples, 0.22%)</title><rect x="200.7" y="739.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="203.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.03%)</title><rect x="202.5" y="723.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="205.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (4 samples, 0.02%)</title><rect x="202.5" y="707.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="205.5" y="718.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (5 samples, 0.03%)</title><rect x="202.9" y="723.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="205.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2,388 samples, 14.47%)</title><rect x="203.3" y="803.0" width="170.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.3" y="814.0">one/nio/net/Session.wr..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.&lt;init&gt; (8 samples, 0.05%)</title><rect x="203.3" y="787.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="206.3" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2,379 samples, 14.42%)</title><rect x="203.9" y="787.0" width="170.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.9" y="798.0">one/nio/net/Session.wr..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2,366 samples, 14.34%)</title><rect x="204.8" y="771.0" width="169.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="207.8" y="782.0">one/nio/net/Session$Ar..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2,365 samples, 14.34%)</title><rect x="204.9" y="755.0" width="169.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="207.9" y="766.0">one/nio/net/NativeSock..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (88 samples, 0.53%)</title><rect x="206.8" y="739.0" width="6.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="209.8" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (8 samples, 0.05%)</title><rect x="208.5" y="723.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="211.5" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.02%)</title><rect x="209.1" y="723.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="212.1" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (37 samples, 0.22%)</title><rect x="209.7" y="723.0" width="2.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="212.7" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (5 samples, 0.03%)</title><rect x="210.3" y="707.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="213.3" y="718.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.02%)</title><rect x="210.6" y="707.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="213.6" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (16 samples, 0.10%)</title><rect x="211.2" y="707.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="214.2" y="718.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (8 samples, 0.05%)</title><rect x="211.8" y="691.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="214.8" y="702.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (10 samples, 0.06%)</title><rect x="212.3" y="723.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="215.3" y="734.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (7 samples, 0.04%)</title><rect x="213.1" y="739.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="216.1" y="750.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (5 samples, 0.03%)</title><rect x="213.6" y="739.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="216.6" y="750.0"></text>
</g>
<g>
<title>__send (2,233 samples, 13.53%)</title><rect x="213.9" y="739.0" width="159.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="216.9" y="750.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2,159 samples, 13.09%)</title><rect x="219.2" y="723.0" width="154.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="222.2" y="734.0">entry_SYSCALL_64_aft..</text>
</g>
<g>
<title>__x64_sys_sendto (6 samples, 0.04%)</title><rect x="219.2" y="707.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="222.2" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (2,150 samples, 13.03%)</title><rect x="219.9" y="707.0" width="153.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="222.9" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (2,098 samples, 12.72%)</title><rect x="223.2" y="691.0" width="150.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="226.2" y="702.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (2,091 samples, 12.67%)</title><rect x="223.4" y="675.0" width="149.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="226.4" y="686.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (5 samples, 0.03%)</title><rect x="224.1" y="659.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="227.1" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (2,042 samples, 12.38%)</title><rect x="224.8" y="659.0" width="146.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="227.8" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (13 samples, 0.08%)</title><rect x="225.1" y="643.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="228.1" y="654.0"></text>
</g>
<g>
<title>inet6_sendmsg (1,999 samples, 12.12%)</title><rect x="226.0" y="643.0" width="143.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="229.0" y="654.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (1,985 samples, 12.03%)</title><rect x="227.0" y="627.0" width="142.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="230.0" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (8 samples, 0.05%)</title><rect x="227.6" y="611.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="230.6" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (5 samples, 0.03%)</title><rect x="228.2" y="611.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="231.2" y="622.0"></text>
</g>
<g>
<title>release_sock (8 samples, 0.05%)</title><rect x="228.7" y="611.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="231.7" y="622.0"></text>
</g>
<g>
<title>tcp_push (7 samples, 0.04%)</title><rect x="229.8" y="611.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="232.8" y="622.0"></text>
</g>
<g>
<title>tcp_release_cb (5 samples, 0.03%)</title><rect x="230.4" y="611.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="233.4" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,929 samples, 11.69%)</title><rect x="230.7" y="611.0" width="138.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="233.7" y="622.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (13 samples, 0.08%)</title><rect x="233.4" y="595.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="236.4" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (11 samples, 0.07%)</title><rect x="233.5" y="579.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="236.5" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.03%)</title><rect x="234.4" y="595.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="237.4" y="606.0"></text>
</g>
<g>
<title>_copy_from_iter_full (20 samples, 0.12%)</title><rect x="234.7" y="595.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="237.7" y="606.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (17 samples, 0.10%)</title><rect x="234.8" y="579.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="237.8" y="590.0"></text>
</g>
<g>
<title>check_stack_object (5 samples, 0.03%)</title><rect x="236.2" y="595.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="239.2" y="606.0"></text>
</g>
<g>
<title>sk_page_frag_refill (16 samples, 0.10%)</title><rect x="236.9" y="595.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="239.9" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (16 samples, 0.10%)</title><rect x="236.9" y="579.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="239.9" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (136 samples, 0.82%)</title><rect x="238.1" y="595.0" width="9.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="241.1" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (122 samples, 0.74%)</title><rect x="238.9" y="579.0" width="8.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="241.9" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (51 samples, 0.31%)</title><rect x="239.7" y="563.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="242.7" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (36 samples, 0.22%)</title><rect x="239.9" y="547.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="242.9" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.03%)</title><rect x="241.6" y="531.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="244.6" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (5 samples, 0.03%)</title><rect x="242.0" y="531.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="245.0" y="542.0"></text>
</g>
<g>
<title>memset_erms (8 samples, 0.05%)</title><rect x="242.7" y="547.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="245.7" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (24 samples, 0.15%)</title><rect x="243.7" y="563.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="246.7" y="574.0"></text>
</g>
<g>
<title>__slab_alloc (4 samples, 0.02%)</title><rect x="245.1" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="248.1" y="558.0"></text>
</g>
<g>
<title>ksize (16 samples, 0.10%)</title><rect x="245.5" y="563.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="248.5" y="574.0"></text>
</g>
<g>
<title>__ksize (16 samples, 0.10%)</title><rect x="245.5" y="547.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="248.5" y="558.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (6 samples, 0.04%)</title><rect x="246.6" y="563.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="249.6" y="574.0"></text>
</g>
<g>
<title>memset_erms (5 samples, 0.03%)</title><rect x="247.0" y="563.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="250.0" y="574.0"></text>
</g>
<g>
<title>skb_entail (13 samples, 0.08%)</title><rect x="247.8" y="595.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="250.8" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (5 samples, 0.03%)</title><rect x="248.7" y="595.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="251.7" y="606.0"></text>
</g>
<g>
<title>tcp_push (1,638 samples, 9.93%)</title><rect x="249.4" y="595.0" width="117.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="252.4" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (1,636 samples, 9.92%)</title><rect x="249.4" y="579.0" width="117.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="252.4" y="590.0">__tcp_push_pen..</text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.02%)</title><rect x="250.0" y="563.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="253.0" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (1,617 samples, 9.80%)</title><rect x="250.7" y="563.0" width="115.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="253.7" y="574.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (8 samples, 0.05%)</title><rect x="253.0" y="547.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="256.0" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1,487 samples, 9.01%)</title><rect x="253.5" y="547.0" width="106.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="256.5" y="558.0">__tcp_transmi..</text>
</g>
<g>
<title>__ip_queue_xmit (6 samples, 0.04%)</title><rect x="256.4" y="531.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="259.4" y="542.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (4 samples, 0.02%)</title><rect x="257.0" y="531.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="260.0" y="542.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (7 samples, 0.04%)</title><rect x="257.3" y="531.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="260.3" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (1,398 samples, 8.47%)</title><rect x="257.8" y="531.0" width="100.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="260.8" y="542.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (1,388 samples, 8.41%)</title><rect x="258.0" y="515.0" width="99.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="261.0" y="526.0">__ip_queue_x..</text>
</g>
<g>
<title>__sk_dst_check (7 samples, 0.04%)</title><rect x="259.2" y="499.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="262.2" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (6 samples, 0.04%)</title><rect x="259.3" y="483.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="262.3" y="494.0"></text>
</g>
<g>
<title>ip_local_out (1,357 samples, 8.23%)</title><rect x="259.8" y="499.0" width="97.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="262.8" y="510.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (6 samples, 0.04%)</title><rect x="260.1" y="483.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="263.1" y="494.0"></text>
</g>
<g>
<title>ip_send_check (4 samples, 0.02%)</title><rect x="260.3" y="467.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="263.3" y="478.0"></text>
</g>
<g>
<title>ip_output (1,342 samples, 8.13%)</title><rect x="260.5" y="483.0" width="96.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="263.5" y="494.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (1,332 samples, 8.07%)</title><rect x="261.3" y="467.0" width="95.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="264.3" y="478.0">ip_finish_o..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (10 samples, 0.06%)</title><rect x="261.5" y="451.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="264.5" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (1,315 samples, 7.97%)</title><rect x="262.3" y="451.0" width="94.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="265.3" y="462.0">__ip_finish..</text>
</g>
<g>
<title>ip_finish_output2 (1,305 samples, 7.91%)</title><rect x="262.8" y="435.0" width="93.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="265.8" y="446.0">ip_finish_o..</text>
</g>
<g>
<title>__local_bh_enable_ip (1,104 samples, 6.69%)</title><rect x="265.0" y="419.0" width="78.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="268.0" y="430.0">__local_b..</text>
</g>
<g>
<title>do_softirq.part.0 (1,102 samples, 6.68%)</title><rect x="265.1" y="403.0" width="78.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="268.1" y="414.0">do_softir..</text>
</g>
<g>
<title>do_softirq_own_stack (1,094 samples, 6.63%)</title><rect x="265.7" y="387.0" width="78.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="268.7" y="398.0">do_softir..</text>
</g>
<g>
<title>__softirqentry_text_start (1,090 samples, 6.61%)</title><rect x="265.7" y="371.0" width="78.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="268.7" y="382.0">__softirq..</text>
</g>
<g>
<title>net_rx_action (1,059 samples, 6.42%)</title><rect x="267.4" y="355.0" width="75.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="270.4" y="366.0">net_rx_a..</text>
</g>
<g>
<title>process_backlog (1,042 samples, 6.32%)</title><rect x="268.6" y="339.0" width="74.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="271.6" y="350.0">process_..</text>
</g>
<g>
<title>__netif_receive_skb (1,022 samples, 6.19%)</title><rect x="269.8" y="323.0" width="73.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="272.8" y="334.0">__netif_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (1,018 samples, 6.17%)</title><rect x="269.9" y="307.0" width="72.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="272.9" y="318.0">__netif_..</text>
</g>
<g>
<title>__netif_receive_skb_core (35 samples, 0.21%)</title><rect x="270.3" y="291.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="273.3" y="302.0"></text>
</g>
<g>
<title>ip_rcv (976 samples, 5.92%)</title><rect x="272.8" y="291.0" width="69.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="275.8" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (6 samples, 0.04%)</title><rect x="273.1" y="275.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="276.1" y="286.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (10 samples, 0.06%)</title><rect x="273.5" y="275.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="276.5" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (955 samples, 5.79%)</title><rect x="274.2" y="275.0" width="68.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="277.2" y="286.0">ip_rcv_..</text>
</g>
<g>
<title>ip_local_deliver (943 samples, 5.72%)</title><rect x="274.4" y="259.0" width="67.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="277.4" y="270.0">ip_loca..</text>
</g>
<g>
<title>ip_local_deliver_finish (938 samples, 5.69%)</title><rect x="274.7" y="243.0" width="67.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="277.7" y="254.0">ip_loca..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (934 samples, 5.66%)</title><rect x="274.9" y="227.0" width="66.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="277.9" y="238.0">ip_prot..</text>
</g>
<g>
<title>raw_local_deliver (6 samples, 0.04%)</title><rect x="276.1" y="211.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="279.1" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (904 samples, 5.48%)</title><rect x="277.0" y="211.0" width="64.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="280.0" y="222.0">tcp_v4_..</text>
</g>
<g>
<title>__inet_lookup_established (20 samples, 0.12%)</title><rect x="279.6" y="195.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="282.6" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (5 samples, 0.03%)</title><rect x="280.7" y="179.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="283.7" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (5 samples, 0.03%)</title><rect x="281.5" y="195.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="284.5" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (20 samples, 0.12%)</title><rect x="281.9" y="195.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="284.9" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (7 samples, 0.04%)</title><rect x="282.4" y="179.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="285.4" y="190.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (4 samples, 0.02%)</title><rect x="282.9" y="179.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="285.9" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (804 samples, 4.87%)</title><rect x="283.7" y="195.0" width="57.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="286.7" y="206.0">tcp_v4..</text>
</g>
<g>
<title>ktime_get_seconds (5 samples, 0.03%)</title><rect x="284.0" y="179.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="287.0" y="190.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.02%)</title><rect x="284.4" y="179.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="287.4" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (14 samples, 0.08%)</title><rect x="284.7" y="179.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="287.7" y="190.0"></text>
</g>
<g>
<title>tcp_data_ready (7 samples, 0.04%)</title><rect x="285.7" y="179.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="288.7" y="190.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.02%)</title><rect x="286.2" y="179.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="289.2" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (762 samples, 4.62%)</title><rect x="286.7" y="179.0" width="54.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="289.7" y="190.0">tcp_r..</text>
</g>
<g>
<title>__tcp_ack_snd_check (42 samples, 0.25%)</title><rect x="287.7" y="163.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="290.7" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (33 samples, 0.20%)</title><rect x="288.4" y="147.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="291.4" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (30 samples, 0.18%)</title><rect x="288.6" y="131.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="291.6" y="142.0"></text>
</g>
<g>
<title>mod_timer (27 samples, 0.16%)</title><rect x="288.8" y="115.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="291.8" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (22 samples, 0.13%)</title><rect x="289.1" y="99.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="292.1" y="110.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (4 samples, 0.02%)</title><rect x="290.7" y="163.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="293.7" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (8 samples, 0.05%)</title><rect x="291.2" y="163.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="294.2" y="174.0"></text>
</g>
<g>
<title>tcp_ack (200 samples, 1.21%)</title><rect x="291.7" y="163.0" width="14.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="294.7" y="174.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (5 samples, 0.03%)</title><rect x="295.2" y="147.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="298.2" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (117 samples, 0.71%)</title><rect x="296.3" y="147.0" width="8.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="299.3" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (55 samples, 0.33%)</title><rect x="299.2" y="131.0" width="4.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="302.2" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (15 samples, 0.09%)</title><rect x="299.2" y="115.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="302.2" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (14 samples, 0.08%)</title><rect x="299.3" y="99.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="302.3" y="110.0"></text>
</g>
<g>
<title>skb_release_all (37 samples, 0.22%)</title><rect x="300.4" y="115.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="303.4" y="126.0"></text>
</g>
<g>
<title>skb_release_data (36 samples, 0.22%)</title><rect x="300.5" y="99.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="303.5" y="110.0"></text>
</g>
<g>
<title>skb_free_head (12 samples, 0.07%)</title><rect x="302.2" y="83.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="305.2" y="94.0"></text>
</g>
<g>
<title>kfree (11 samples, 0.07%)</title><rect x="302.2" y="67.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="305.2" y="78.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.02%)</title><rect x="302.7" y="51.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="305.7" y="62.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (12 samples, 0.07%)</title><rect x="303.5" y="131.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="306.5" y="142.0"></text>
</g>
<g>
<title>tcp_rack_advance (5 samples, 0.03%)</title><rect x="304.8" y="147.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="307.8" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.04%)</title><rect x="306.0" y="163.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="309.0" y="174.0"></text>
</g>
<g>
<title>tcp_data_ready (450 samples, 2.73%)</title><rect x="306.5" y="163.0" width="32.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="309.5" y="174.0">tc..</text>
</g>
<g>
<title>sock_def_readable (449 samples, 2.72%)</title><rect x="306.5" y="147.0" width="32.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="309.5" y="158.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (441 samples, 2.67%)</title><rect x="307.1" y="131.0" width="31.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="310.1" y="142.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (441 samples, 2.67%)</title><rect x="307.1" y="115.0" width="31.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="310.1" y="126.0">__..</text>
</g>
<g>
<title>__lock_text_start (440 samples, 2.67%)</title><rect x="307.2" y="99.0" width="31.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="310.2" y="110.0">__..</text>
</g>
<g>
<title>tcp_event_data_recv (8 samples, 0.05%)</title><rect x="338.7" y="163.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="341.7" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (11 samples, 0.07%)</title><rect x="339.2" y="163.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="342.2" y="174.0"></text>
</g>
<g>
<title>read_tsc (11 samples, 0.07%)</title><rect x="339.2" y="147.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="342.2" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (6 samples, 0.04%)</title><rect x="340.2" y="163.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="343.2" y="174.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (4 samples, 0.02%)</title><rect x="341.4" y="195.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="344.4" y="206.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (6 samples, 0.04%)</title><rect x="342.1" y="259.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="345.1" y="270.0"></text>
</g>
<g>
<title>process_backlog (6 samples, 0.04%)</title><rect x="343.2" y="355.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="346.2" y="366.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.02%)</title><rect x="343.7" y="371.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="346.7" y="382.0"></text>
</g>
<g>
<title>dev_queue_xmit (168 samples, 1.02%)</title><rect x="343.9" y="419.0" width="12.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="346.9" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (158 samples, 0.96%)</title><rect x="343.9" y="403.0" width="11.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="346.9" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (70 samples, 0.42%)</title><rect x="346.4" y="387.0" width="5.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="349.4" y="398.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.02%)</title><rect x="346.9" y="371.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="349.9" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (52 samples, 0.32%)</title><rect x="347.2" y="371.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="350.2" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (6 samples, 0.04%)</title><rect x="347.7" y="355.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="350.7" y="366.0"></text>
</g>
<g>
<title>netif_rx (28 samples, 0.17%)</title><rect x="348.2" y="355.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="351.2" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (27 samples, 0.16%)</title><rect x="348.2" y="339.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="351.2" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (23 samples, 0.14%)</title><rect x="348.5" y="323.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="351.5" y="334.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (5 samples, 0.03%)</title><rect x="351.0" y="371.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="354.0" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (12 samples, 0.07%)</title><rect x="351.5" y="387.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="354.5" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb (30 samples, 0.18%)</title><rect x="352.7" y="387.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="355.7" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (8 samples, 0.05%)</title><rect x="353.9" y="371.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="356.9" y="382.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (6 samples, 0.04%)</title><rect x="354.8" y="387.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="357.8" y="398.0"></text>
</g>
<g>
<title>ip_send_check (4 samples, 0.02%)</title><rect x="356.5" y="483.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="359.5" y="494.0"></text>
</g>
<g>
<title>ip_copy_addrs (4 samples, 0.02%)</title><rect x="357.4" y="515.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="360.4" y="526.0"></text>
</g>
<g>
<title>skb_clone (17 samples, 0.10%)</title><rect x="357.8" y="531.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="360.8" y="542.0"></text>
</g>
<g>
<title>__skb_clone (11 samples, 0.07%)</title><rect x="358.2" y="515.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="361.2" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (4 samples, 0.02%)</title><rect x="358.8" y="499.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="361.8" y="510.0"></text>
</g>
<g>
<title>read_tsc (9 samples, 0.05%)</title><rect x="360.4" y="547.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="363.4" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (38 samples, 0.23%)</title><rect x="361.6" y="547.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="364.6" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (18 samples, 0.11%)</title><rect x="363.0" y="531.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="366.0" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (15 samples, 0.09%)</title><rect x="363.3" y="515.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="366.3" y="526.0"></text>
</g>
<g>
<title>mod_timer (14 samples, 0.08%)</title><rect x="363.3" y="499.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="366.3" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.07%)</title><rect x="363.4" y="483.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="366.4" y="494.0"></text>
</g>
<g>
<title>tcp_mtu_probe (4 samples, 0.02%)</title><rect x="364.3" y="547.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="367.3" y="558.0"></text>
</g>
<g>
<title>tcp_options_write (4 samples, 0.02%)</title><rect x="364.6" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="367.6" y="558.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (5 samples, 0.03%)</title><rect x="364.9" y="547.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="367.9" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (7 samples, 0.04%)</title><rect x="365.4" y="547.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="368.4" y="558.0"></text>
</g>
<g>
<title>tcp_v4_send_check (5 samples, 0.03%)</title><rect x="366.0" y="547.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="369.0" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (28 samples, 0.17%)</title><rect x="366.6" y="595.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="369.6" y="606.0"></text>
</g>
<g>
<title>tcp_current_mss (23 samples, 0.14%)</title><rect x="367.0" y="579.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="370.0" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (6 samples, 0.04%)</title><rect x="368.1" y="563.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="371.1" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (23 samples, 0.14%)</title><rect x="369.1" y="643.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="372.1" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (14 samples, 0.08%)</title><rect x="369.8" y="627.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="372.8" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (10 samples, 0.06%)</title><rect x="370.1" y="611.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="373.1" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (29 samples, 0.18%)</title><rect x="370.8" y="659.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="373.8" y="670.0"></text>
</g>
<g>
<title>__fdget (23 samples, 0.14%)</title><rect x="370.8" y="643.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="373.8" y="654.0"></text>
</g>
<g>
<title>__fget_light (23 samples, 0.14%)</title><rect x="370.8" y="627.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="373.8" y="638.0"></text>
</g>
<g>
<title>__fget (23 samples, 0.14%)</title><rect x="370.8" y="611.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="373.8" y="622.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.04%)</title><rect x="372.5" y="643.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="375.5" y="654.0"></text>
</g>
<g>
<title>import_single_range (4 samples, 0.02%)</title><rect x="373.0" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="376.0" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.03%)</title><rect x="373.3" y="691.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="376.3" y="702.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.03%)</title><rect x="373.3" y="675.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="376.3" y="686.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.03%)</title><rect x="373.3" y="659.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="376.3" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.04%)</title><rect x="373.6" y="739.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="376.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (94 samples, 0.57%)</title><rect x="374.1" y="819.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="377.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (35 samples, 0.21%)</title><rect x="375.6" y="803.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="378.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (28 samples, 0.17%)</title><rect x="376.1" y="787.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="379.1" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (7 samples, 0.04%)</title><rect x="377.1" y="771.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="380.1" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (7 samples, 0.04%)</title><rect x="377.6" y="771.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="380.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (37 samples, 0.22%)</title><rect x="378.1" y="803.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="381.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (31 samples, 0.19%)</title><rect x="378.3" y="787.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="381.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.07%)</title><rect x="378.3" y="771.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="381.3" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.12%)</title><rect x="379.1" y="771.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="382.1" y="782.0"></text>
</g>
<g>
<title>gettimeofday (8 samples, 0.05%)</title><rect x="379.3" y="755.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="382.3" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.04%)</title><rect x="380.1" y="755.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="383.1" y="766.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.04%)</title><rect x="380.1" y="739.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="383.1" y="750.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.03%)</title><rect x="380.1" y="723.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="383.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.02%)</title><rect x="380.5" y="787.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.upsert (631 samples, 3.82%)</title><rect x="381.0" y="835.0" width="45.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="384.0" y="846.0">ru/m..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.05%)</title><rect x="381.1" y="819.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="384.1" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (8 samples, 0.05%)</title><rect x="381.1" y="803.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="384.1" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="381.1" y="787.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.1" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="381.1" y="771.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="384.1" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="381.1" y="755.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="384.1" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.04%)</title><rect x="381.1" y="739.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="384.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.04%)</title><rect x="381.1" y="723.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="384.1" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.04%)</title><rect x="381.1" y="707.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="384.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (12 samples, 0.07%)</title><rect x="381.6" y="819.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.6" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.upsert (610 samples, 3.70%)</title><rect x="382.5" y="819.0" width="43.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="385.5" y="830.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (6 samples, 0.04%)</title><rect x="382.9" y="803.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="385.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (5 samples, 0.03%)</title><rect x="382.9" y="787.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="385.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.02%)</title><rect x="383.0" y="771.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (117 samples, 0.71%)</title><rect x="383.3" y="803.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="386.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (117 samples, 0.71%)</title><rect x="383.3" y="787.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="386.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (28 samples, 0.17%)</title><rect x="383.4" y="771.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="386.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (4 samples, 0.02%)</title><rect x="385.0" y="755.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="388.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.02%)</title><rect x="385.0" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="388.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (87 samples, 0.53%)</title><rect x="385.4" y="771.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="388.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (7 samples, 0.04%)</title><rect x="387.2" y="755.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="390.2" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (6 samples, 0.04%)</title><rect x="387.3" y="739.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="390.3" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (6 samples, 0.04%)</title><rect x="387.3" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="390.3" y="734.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (6 samples, 0.04%)</title><rect x="387.3" y="707.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="390.3" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (12 samples, 0.07%)</title><rect x="387.7" y="755.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="390.7" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (40 samples, 0.24%)</title><rect x="388.6" y="755.0" width="2.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="391.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/MemTable.upsert (455 samples, 2.76%)</title><rect x="391.7" y="803.0" width="32.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="394.7" y="814.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (440 samples, 2.67%)</title><rect x="392.7" y="787.0" width="31.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="395.7" y="798.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (440 samples, 2.67%)</title><rect x="392.7" y="771.0" width="31.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="395.7" y="782.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (21 samples, 0.13%)</title><rect x="401.5" y="755.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="404.5" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (20 samples, 0.12%)</title><rect x="401.6" y="739.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="404.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (57 samples, 0.35%)</title><rect x="403.0" y="755.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="406.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (18 samples, 0.11%)</title><rect x="407.1" y="755.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="410.1" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.06%)</title><rect x="407.7" y="739.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="410.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (8 samples, 0.05%)</title><rect x="408.4" y="755.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="411.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (210 samples, 1.27%)</title><rect x="409.0" y="755.0" width="15.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="412.0" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (194 samples, 1.18%)</title><rect x="410.1" y="739.0" width="13.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="413.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (167 samples, 1.01%)</title><rect x="412.0" y="723.0" width="12.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="415.0" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.04%)</title><rect x="412.5" y="707.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="415.5" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (11 samples, 0.07%)</title><rect x="413.0" y="707.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="416.0" y="718.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (89 samples, 0.54%)</title><rect x="413.8" y="707.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="416.8" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (44 samples, 0.27%)</title><rect x="417.0" y="691.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.0" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (7 samples, 0.04%)</title><rect x="419.1" y="675.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="422.1" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (8 samples, 0.05%)</title><rect x="419.6" y="675.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.6" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (53 samples, 0.32%)</title><rect x="420.2" y="707.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="423.2" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (49 samples, 0.30%)</title><rect x="420.3" y="691.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="423.3" y="702.0"></text>
</g>
<g>
<title>vectorizedMismatch (39 samples, 0.24%)</title><rect x="421.0" y="675.0" width="2.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="424.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/TablesPool.putIntoFlushQueue (27 samples, 0.16%)</title><rect x="424.2" y="803.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="427.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (16 samples, 0.10%)</title><rect x="424.6" y="787.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="427.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (16 samples, 0.10%)</title><rect x="424.6" y="771.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="427.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (5 samples, 0.03%)</title><rect x="424.8" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="427.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.02%)</title><rect x="424.8" y="739.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="427.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.02%)</title><rect x="424.8" y="723.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="427.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.02%)</title><rect x="424.8" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="427.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (4 samples, 0.02%)</title><rect x="425.1" y="755.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="428.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquire (5 samples, 0.03%)</title><rect x="425.4" y="755.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="428.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock (5 samples, 0.03%)</title><rect x="425.8" y="787.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="428.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.02%)</title><rect x="425.8" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="428.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.proxy (5,223 samples, 31.66%)</title><rect x="426.1" y="835.0" width="373.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="429.1" y="846.0">ru/mail/polis/service/valaubr/HttpService.proxy</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (55 samples, 0.33%)</title><rect x="426.1" y="819.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="429.1" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/416153648.invoke (55 samples, 0.33%)</title><rect x="426.1" y="803.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="429.1" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (39 samples, 0.24%)</title><rect x="426.3" y="787.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="429.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (11 samples, 0.07%)</title><rect x="426.6" y="771.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="429.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.04%)</title><rect x="426.9" y="755.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="429.9" y="766.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (7 samples, 0.04%)</title><rect x="426.9" y="739.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="429.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (12 samples, 0.07%)</title><rect x="427.4" y="771.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="430.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (10 samples, 0.06%)</title><rect x="427.4" y="755.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="430.4" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.05%)</title><rect x="427.6" y="739.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="430.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (8 samples, 0.05%)</title><rect x="428.3" y="771.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="431.3" y="782.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (4 samples, 0.02%)</title><rect x="428.8" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="431.8" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/476800120.invoke (13 samples, 0.08%)</title><rect x="429.1" y="787.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="432.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.07%)</title><rect x="429.2" y="771.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (9 samples, 0.05%)</title><rect x="429.3" y="755.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="432.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (9 samples, 0.05%)</title><rect x="429.3" y="739.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="432.3" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.get (56 samples, 0.34%)</title><rect x="430.1" y="819.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="433.1" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (28 samples, 0.17%)</title><rect x="430.1" y="803.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="433.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.equals (18 samples, 0.11%)</title><rect x="430.8" y="787.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="433.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (17 samples, 0.10%)</title><rect x="430.8" y="771.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="433.8" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (28 samples, 0.17%)</title><rect x="432.1" y="803.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="435.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (28 samples, 0.17%)</title><rect x="432.1" y="787.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="435.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (28 samples, 0.17%)</title><rect x="432.1" y="771.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="435.1" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (15 samples, 0.09%)</title><rect x="432.9" y="755.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="435.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,475 samples, 21.06%)</title><rect x="434.1" y="819.0" width="248.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="437.1" y="830.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,473 samples, 21.05%)</title><rect x="434.2" y="803.0" width="248.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="437.2" y="814.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (31 samples, 0.19%)</title><rect x="435.1" y="787.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="438.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (16 samples, 0.10%)</title><rect x="436.2" y="771.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="439.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.coder (10 samples, 0.06%)</title><rect x="436.4" y="755.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="439.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (1,181 samples, 7.16%)</title><rect x="437.4" y="787.0" width="84.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="440.4" y="798.0">one/nio/ht..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (62 samples, 0.38%)</title><rect x="438.3" y="771.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="441.3" y="782.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (59 samples, 0.36%)</title><rect x="438.5" y="755.0" width="4.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="441.5" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (58 samples, 0.35%)</title><rect x="438.5" y="739.0" width="4.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="441.5" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (50 samples, 0.30%)</title><rect x="438.7" y="723.0" width="3.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="441.7" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (12 samples, 0.07%)</title><rect x="439.1" y="707.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="442.1" y="718.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_outside_tlab(Klass*, HeapWord*, unsigned long, Thread*) (5 samples, 0.03%)</title><rect x="439.9" y="707.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="442.9" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (10 samples, 0.06%)</title><rect x="440.4" y="707.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="443.4" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (5 samples, 0.03%)</title><rect x="440.7" y="691.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="443.7" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.03%)</title><rect x="441.4" y="707.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="444.4" y="718.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (4 samples, 0.02%)</title><rect x="441.4" y="691.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="444.4" y="702.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (4 samples, 0.02%)</title><rect x="441.7" y="707.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="444.7" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.02%)</title><rect x="442.4" y="723.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="445.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1,101 samples, 6.67%)</title><rect x="442.9" y="771.0" width="78.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="445.9" y="782.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (85 samples, 0.52%)</title><rect x="444.3" y="755.0" width="6.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="447.3" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (20 samples, 0.12%)</title><rect x="444.7" y="739.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="447.7" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (7 samples, 0.04%)</title><rect x="446.1" y="739.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="449.1" y="750.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.02%)</title><rect x="446.6" y="739.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="449.6" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.02%)</title><rect x="446.9" y="739.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="449.9" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (38 samples, 0.23%)</title><rect x="447.2" y="739.0" width="2.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="450.2" y="750.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (6 samples, 0.04%)</title><rect x="447.9" y="723.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="450.9" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.02%)</title><rect x="448.5" y="723.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="451.5" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (7 samples, 0.04%)</title><rect x="448.8" y="723.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="451.8" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (9 samples, 0.05%)</title><rect x="449.3" y="723.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="452.3" y="734.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (4 samples, 0.02%)</title><rect x="449.7" y="707.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="452.7" y="718.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (6 samples, 0.04%)</title><rect x="449.9" y="739.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="452.9" y="750.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.03%)</title><rect x="450.4" y="755.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="453.4" y="766.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (5 samples, 0.03%)</title><rect x="450.7" y="755.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="453.7" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (10 samples, 0.06%)</title><rect x="451.1" y="755.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="454.1" y="766.0"></text>
</g>
<g>
<title>recv (976 samples, 5.92%)</title><rect x="451.8" y="755.0" width="69.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="454.8" y="766.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (899 samples, 5.45%)</title><rect x="457.2" y="739.0" width="64.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="460.2" y="750.0">entry_S..</text>
</g>
<g>
<title>__x64_sys_recvfrom (8 samples, 0.05%)</title><rect x="457.2" y="723.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="460.2" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (891 samples, 5.40%)</title><rect x="457.8" y="723.0" width="63.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="460.8" y="734.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_recvfrom (862 samples, 5.22%)</title><rect x="459.9" y="707.0" width="61.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="462.9" y="718.0">__x64_..</text>
</g>
<g>
<title>__sys_recvfrom (857 samples, 5.19%)</title><rect x="460.0" y="691.0" width="61.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="463.0" y="702.0">__sys_..</text>
</g>
<g>
<title>fput_many (7 samples, 0.04%)</title><rect x="461.0" y="675.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="464.0" y="686.0"></text>
</g>
<g>
<title>sock_recvmsg (827 samples, 5.01%)</title><rect x="461.5" y="675.0" width="59.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="464.5" y="686.0">sock_r..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (6 samples, 0.04%)</title><rect x="462.0" y="659.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="465.0" y="670.0"></text>
</g>
<g>
<title>inet6_recvmsg (802 samples, 4.86%)</title><rect x="462.5" y="659.0" width="57.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="465.5" y="670.0">inet6_..</text>
</g>
<g>
<title>release_sock (4 samples, 0.02%)</title><rect x="462.8" y="643.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="465.8" y="654.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.02%)</title><rect x="463.4" y="643.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="466.4" y="654.0"></text>
</g>
<g>
<title>tcp_recvmsg (785 samples, 4.76%)</title><rect x="463.7" y="643.0" width="56.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="466.7" y="654.0">tcp_re..</text>
</g>
<g>
<title>__kfree_skb (26 samples, 0.16%)</title><rect x="466.4" y="627.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="469.4" y="638.0"></text>
</g>
<g>
<title>skb_release_all (22 samples, 0.13%)</title><rect x="466.6" y="611.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="469.6" y="622.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.04%)</title><rect x="466.6" y="595.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="469.6" y="606.0"></text>
</g>
<g>
<title>skb_release_head_state (10 samples, 0.06%)</title><rect x="467.0" y="595.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="470.0" y="606.0"></text>
</g>
<g>
<title>dst_release (10 samples, 0.06%)</title><rect x="467.0" y="579.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="470.0" y="590.0"></text>
</g>
<g>
<title>sock_rfree (6 samples, 0.04%)</title><rect x="467.8" y="595.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="470.8" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.02%)</title><rect x="468.3" y="627.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="471.3" y="638.0"></text>
</g>
<g>
<title>sk_wait_data (190 samples, 1.15%)</title><rect x="469.0" y="627.0" width="13.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="472.0" y="638.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.04%)</title><rect x="469.7" y="611.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="472.7" y="622.0"></text>
</g>
<g>
<title>add_wait_queue (4 samples, 0.02%)</title><rect x="470.3" y="611.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="473.3" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.02%)</title><rect x="470.3" y="595.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="473.3" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.04%)</title><rect x="470.6" y="611.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="473.6" y="622.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.02%)</title><rect x="471.0" y="611.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="474.0" y="622.0"></text>
</g>
<g>
<title>remove_wait_queue (7 samples, 0.04%)</title><rect x="471.3" y="611.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="474.3" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.04%)</title><rect x="471.3" y="595.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="474.3" y="606.0"></text>
</g>
<g>
<title>wait_woken (146 samples, 0.88%)</title><rect x="472.2" y="611.0" width="10.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="475.2" y="622.0"></text>
</g>
<g>
<title>schedule_timeout (130 samples, 0.79%)</title><rect x="473.3" y="595.0" width="9.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="476.3" y="606.0"></text>
</g>
<g>
<title>__mod_timer (28 samples, 0.17%)</title><rect x="474.3" y="579.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="477.3" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (25 samples, 0.15%)</title><rect x="474.4" y="563.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="477.4" y="574.0"></text>
</g>
<g>
<title>del_timer_sync (18 samples, 0.11%)</title><rect x="476.3" y="579.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="479.3" y="590.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (15 samples, 0.09%)</title><rect x="476.5" y="563.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="479.5" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.08%)</title><rect x="476.5" y="547.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="479.5" y="558.0"></text>
</g>
<g>
<title>lock_timer_base (4 samples, 0.02%)</title><rect x="477.6" y="579.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="480.6" y="590.0"></text>
</g>
<g>
<title>schedule (65 samples, 0.39%)</title><rect x="477.8" y="579.0" width="4.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="480.8" y="590.0"></text>
</g>
<g>
<title>__schedule (60 samples, 0.36%)</title><rect x="478.2" y="563.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="481.2" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (47 samples, 0.28%)</title><rect x="479.1" y="547.0" width="3.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="482.1" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (48 samples, 0.29%)</title><rect x="482.6" y="627.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="485.6" y="638.0"></text>
</g>
<g>
<title>__skb_datagram_iter (44 samples, 0.27%)</title><rect x="482.6" y="611.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="485.6" y="622.0"></text>
</g>
<g>
<title>_copy_to_iter (8 samples, 0.05%)</title><rect x="483.3" y="595.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="486.3" y="606.0"></text>
</g>
<g>
<title>simple_copy_to_iter (26 samples, 0.16%)</title><rect x="483.9" y="595.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="486.9" y="606.0"></text>
</g>
<g>
<title>__check_object_size (9 samples, 0.05%)</title><rect x="483.9" y="579.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="486.9" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.02%)</title><rect x="484.3" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="487.3" y="574.0"></text>
</g>
<g>
<title>_copy_to_iter (15 samples, 0.09%)</title><rect x="484.6" y="579.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="487.6" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (14 samples, 0.08%)</title><rect x="484.7" y="563.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="487.7" y="574.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (460 samples, 2.79%)</title><rect x="486.1" y="627.0" width="32.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="489.1" y="638.0">tc..</text>
</g>
<g>
<title>tcp_send_ack (453 samples, 2.75%)</title><rect x="486.6" y="611.0" width="32.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="489.6" y="622.0">tc..</text>
</g>
<g>
<title>__tcp_send_ack.part.0 (453 samples, 2.75%)</title><rect x="486.6" y="595.0" width="32.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="489.6" y="606.0">__..</text>
</g>
<g>
<title>__alloc_skb (37 samples, 0.22%)</title><rect x="487.0" y="579.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="490.0" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (16 samples, 0.10%)</title><rect x="487.9" y="563.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="490.9" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (10 samples, 0.06%)</title><rect x="487.9" y="547.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="490.9" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (4 samples, 0.02%)</title><rect x="488.3" y="531.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="491.3" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (8 samples, 0.05%)</title><rect x="489.1" y="563.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="492.1" y="574.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (397 samples, 2.41%)</title><rect x="489.6" y="579.0" width="28.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="492.6" y="590.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (384 samples, 2.33%)</title><rect x="490.4" y="563.0" width="27.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="493.4" y="574.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (381 samples, 2.31%)</title><rect x="490.4" y="547.0" width="27.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="493.4" y="558.0">_..</text>
</g>
<g>
<title>__sk_dst_check (5 samples, 0.03%)</title><rect x="490.7" y="531.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="493.7" y="542.0"></text>
</g>
<g>
<title>ip_local_out (371 samples, 2.25%)</title><rect x="491.1" y="531.0" width="26.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="494.1" y="542.0">i..</text>
</g>
<g>
<title>ip_output (369 samples, 2.24%)</title><rect x="491.1" y="515.0" width="26.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="494.1" y="526.0">i..</text>
</g>
<g>
<title>ip_finish_output (362 samples, 2.19%)</title><rect x="491.6" y="499.0" width="25.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="494.6" y="510.0">i..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.02%)</title><rect x="491.8" y="483.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="494.8" y="494.0"></text>
</g>
<g>
<title>__ip_finish_output (353 samples, 2.14%)</title><rect x="492.1" y="483.0" width="25.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="495.1" y="494.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (346 samples, 2.10%)</title><rect x="492.6" y="467.0" width="24.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="495.6" y="478.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (234 samples, 1.42%)</title><rect x="493.6" y="451.0" width="16.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="496.6" y="462.0"></text>
</g>
<g>
<title>do_softirq.part.0 (231 samples, 1.40%)</title><rect x="493.9" y="435.0" width="16.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="496.9" y="446.0"></text>
</g>
<g>
<title>do_softirq_own_stack (229 samples, 1.39%)</title><rect x="494.0" y="419.0" width="16.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="497.0" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (227 samples, 1.38%)</title><rect x="494.0" y="403.0" width="16.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="497.0" y="414.0"></text>
</g>
<g>
<title>net_rx_action (212 samples, 1.29%)</title><rect x="494.9" y="387.0" width="15.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="497.9" y="398.0"></text>
</g>
<g>
<title>__netif_receive_skb (4 samples, 0.02%)</title><rect x="495.4" y="371.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="498.4" y="382.0"></text>
</g>
<g>
<title>process_backlog (202 samples, 1.22%)</title><rect x="495.6" y="371.0" width="14.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="498.6" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb (195 samples, 1.18%)</title><rect x="496.0" y="355.0" width="14.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="499.0" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (191 samples, 1.16%)</title><rect x="496.2" y="339.0" width="13.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="499.2" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (22 samples, 0.13%)</title><rect x="496.4" y="323.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="499.4" y="334.0"></text>
</g>
<g>
<title>ip_rcv (162 samples, 0.98%)</title><rect x="497.9" y="323.0" width="11.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="500.9" y="334.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (4 samples, 0.02%)</title><rect x="498.2" y="307.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="501.2" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish (151 samples, 0.92%)</title><rect x="498.5" y="307.0" width="10.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="501.5" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver (147 samples, 0.89%)</title><rect x="498.6" y="291.0" width="10.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="501.6" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (140 samples, 0.85%)</title><rect x="498.9" y="275.0" width="10.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="501.9" y="286.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (139 samples, 0.84%)</title><rect x="498.9" y="259.0" width="10.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="501.9" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (133 samples, 0.81%)</title><rect x="499.4" y="243.0" width="9.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="502.4" y="254.0"></text>
</g>
<g>
<title>__inet_lookup_established (13 samples, 0.08%)</title><rect x="500.2" y="227.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="503.2" y="238.0"></text>
</g>
<g>
<title>inet_ehashfn (5 samples, 0.03%)</title><rect x="500.8" y="211.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="503.8" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (10 samples, 0.06%)</title><rect x="501.5" y="227.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="504.5" y="238.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (5 samples, 0.03%)</title><rect x="501.9" y="211.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="504.9" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (91 samples, 0.55%)</title><rect x="502.3" y="227.0" width="6.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="505.3" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (84 samples, 0.51%)</title><rect x="502.8" y="211.0" width="6.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="505.8" y="222.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.02%)</title><rect x="503.2" y="195.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="506.2" y="206.0"></text>
</g>
<g>
<title>tcp_ack (68 samples, 0.41%)</title><rect x="503.6" y="195.0" width="4.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="506.6" y="206.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (42 samples, 0.25%)</title><rect x="504.9" y="179.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="507.9" y="190.0"></text>
</g>
<g>
<title>__kfree_skb (28 samples, 0.17%)</title><rect x="505.6" y="163.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="508.6" y="174.0"></text>
</g>
<g>
<title>kfree_skbmem (11 samples, 0.07%)</title><rect x="505.6" y="147.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="508.6" y="158.0"></text>
</g>
<g>
<title>kmem_cache_free (11 samples, 0.07%)</title><rect x="505.6" y="131.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="508.6" y="142.0"></text>
</g>
<g>
<title>skb_release_all (15 samples, 0.09%)</title><rect x="506.4" y="147.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="509.4" y="158.0"></text>
</g>
<g>
<title>skb_release_data (13 samples, 0.08%)</title><rect x="506.4" y="131.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="509.4" y="142.0"></text>
</g>
<g>
<title>skb_free_head (6 samples, 0.04%)</title><rect x="506.9" y="115.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="509.9" y="126.0"></text>
</g>
<g>
<title>kfree (6 samples, 0.04%)</title><rect x="506.9" y="99.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="509.9" y="110.0"></text>
</g>
<g>
<title>dev_queue_xmit (96 samples, 0.58%)</title><rect x="510.4" y="451.0" width="6.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="513.4" y="462.0"></text>
</g>
<g>
<title>__dev_queue_xmit (95 samples, 0.58%)</title><rect x="510.4" y="435.0" width="6.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="513.4" y="446.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (35 samples, 0.21%)</title><rect x="512.2" y="419.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="515.2" y="430.0"></text>
</g>
<g>
<title>__sock_wfree (4 samples, 0.02%)</title><rect x="512.6" y="403.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="515.6" y="414.0"></text>
</g>
<g>
<title>loopback_xmit (20 samples, 0.12%)</title><rect x="513.0" y="403.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="516.0" y="414.0"></text>
</g>
<g>
<title>netif_rx (11 samples, 0.07%)</title><rect x="513.5" y="387.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="516.5" y="398.0"></text>
</g>
<g>
<title>netif_rx_internal (10 samples, 0.06%)</title><rect x="513.6" y="371.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="516.6" y="382.0"></text>
</g>
<g>
<title>enqueue_to_backlog (10 samples, 0.06%)</title><rect x="513.6" y="355.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="516.6" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.04%)</title><rect x="514.7" y="419.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="517.7" y="430.0"></text>
</g>
<g>
<title>validate_xmit_skb (25 samples, 0.15%)</title><rect x="515.3" y="419.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="518.3" y="430.0"></text>
</g>
<g>
<title>netif_skb_features (10 samples, 0.06%)</title><rect x="516.1" y="403.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="519.1" y="414.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (8 samples, 0.05%)</title><rect x="519.0" y="627.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="522.0" y="638.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.04%)</title><rect x="519.1" y="611.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="522.1" y="622.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.02%)</title><rect x="519.2" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="522.2" y="606.0"></text>
</g>
<g>
<title>security_socket_recvmsg (11 samples, 0.07%)</title><rect x="519.8" y="659.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="522.8" y="670.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (7 samples, 0.04%)</title><rect x="520.1" y="643.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="523.1" y="654.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.04%)</title><rect x="520.1" y="627.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="523.1" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.05%)</title><rect x="520.7" y="675.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="523.7" y="686.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.04%)</title><rect x="520.8" y="659.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="523.8" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (230 samples, 1.39%)</title><rect x="521.8" y="787.0" width="16.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="524.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (14 samples, 0.08%)</title><rect x="522.2" y="771.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="525.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (14 samples, 0.08%)</title><rect x="522.2" y="755.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="525.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.05%)</title><rect x="522.6" y="739.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="525.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (36 samples, 0.22%)</title><rect x="523.2" y="771.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="526.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (24 samples, 0.15%)</title><rect x="524.0" y="755.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="527.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (21 samples, 0.13%)</title><rect x="524.0" y="739.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="527.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.05%)</title><rect x="524.9" y="723.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="527.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (90 samples, 0.55%)</title><rect x="525.8" y="771.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="528.8" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (13 samples, 0.08%)</title><rect x="527.0" y="755.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="530.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (59 samples, 0.36%)</title><rect x="528.0" y="755.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="531.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (58 samples, 0.35%)</title><rect x="528.0" y="739.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="531.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.05%)</title><rect x="531.3" y="723.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="534.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.04%)</title><rect x="531.3" y="707.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="534.3" y="718.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7 samples, 0.04%)</title><rect x="531.3" y="691.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="534.3" y="702.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (5 samples, 0.03%)</title><rect x="531.8" y="723.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="534.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (17 samples, 0.10%)</title><rect x="532.2" y="771.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="535.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (10 samples, 0.06%)</title><rect x="533.4" y="771.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="536.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (58 samples, 0.35%)</title><rect x="534.1" y="771.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="537.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (36 samples, 0.22%)</title><rect x="535.3" y="755.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="538.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (36 samples, 0.22%)</title><rect x="535.3" y="739.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="538.3" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (5 samples, 0.03%)</title><rect x="536.6" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="539.6" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (6 samples, 0.04%)</title><rect x="537.0" y="723.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="540.0" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (6 samples, 0.04%)</title><rect x="537.0" y="707.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="540.0" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (6 samples, 0.04%)</title><rect x="537.0" y="691.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="540.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.04%)</title><rect x="537.8" y="755.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="540.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (189 samples, 1.15%)</title><rect x="538.3" y="787.0" width="13.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="541.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.02%)</title><rect x="539.9" y="771.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="542.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (17 samples, 0.10%)</title><rect x="540.2" y="771.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="543.2" y="782.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (8 samples, 0.05%)</title><rect x="540.8" y="755.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="543.8" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.05%)</title><rect x="540.8" y="739.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="543.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (133 samples, 0.81%)</title><rect x="541.4" y="771.0" width="9.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="544.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (22 samples, 0.13%)</title><rect x="542.4" y="755.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="545.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (8 samples, 0.05%)</title><rect x="543.4" y="739.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="546.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (34 samples, 0.21%)</title><rect x="543.9" y="755.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="546.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.02%)</title><rect x="545.6" y="739.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="548.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (7 samples, 0.04%)</title><rect x="545.9" y="739.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="548.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.coder (5 samples, 0.03%)</title><rect x="546.0" y="723.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="549.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (64 samples, 0.39%)</title><rect x="546.4" y="755.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="549.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (61 samples, 0.37%)</title><rect x="546.6" y="739.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="549.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.03%)</title><rect x="547.2" y="723.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="550.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (47 samples, 0.28%)</title><rect x="547.6" y="723.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="550.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.length (14 samples, 0.08%)</title><rect x="549.6" y="707.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="552.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.coder (5 samples, 0.03%)</title><rect x="550.3" y="691.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="553.3" y="702.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (4 samples, 0.02%)</title><rect x="550.6" y="707.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.6" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (12 samples, 0.07%)</title><rect x="550.9" y="771.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="553.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.length (7 samples, 0.04%)</title><rect x="551.3" y="755.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="554.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.coder (7 samples, 0.04%)</title><rect x="551.3" y="739.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="554.3" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.03%)</title><rect x="551.4" y="723.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="554.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (21 samples, 0.13%)</title><rect x="551.8" y="787.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="554.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (14 samples, 0.08%)</title><rect x="552.2" y="771.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="555.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (13 samples, 0.08%)</title><rect x="552.3" y="755.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="555.3" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (287 samples, 1.74%)</title><rect x="553.4" y="787.0" width="20.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="556.4" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (12 samples, 0.07%)</title><rect x="554.2" y="771.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="557.2" y="782.0"></text>
</g>
<g>
<title>setsockopt (264 samples, 1.60%)</title><rect x="555.0" y="771.0" width="18.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="558.0" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (188 samples, 1.14%)</title><rect x="560.4" y="755.0" width="13.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="563.4" y="766.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (5 samples, 0.03%)</title><rect x="560.4" y="739.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="563.4" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (181 samples, 1.10%)</title><rect x="560.9" y="739.0" width="12.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="563.9" y="750.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (144 samples, 0.87%)</title><rect x="563.5" y="723.0" width="10.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="566.5" y="734.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (5 samples, 0.03%)</title><rect x="563.6" y="707.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="566.6" y="718.0"></text>
</g>
<g>
<title>__sys_setsockopt (129 samples, 0.78%)</title><rect x="564.0" y="707.0" width="9.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="567.0" y="718.0"></text>
</g>
<g>
<title>__get_user_4 (8 samples, 0.05%)</title><rect x="565.0" y="691.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="568.0" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (19 samples, 0.12%)</title><rect x="565.5" y="691.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="568.5" y="702.0"></text>
</g>
<g>
<title>security_socket_setsockopt (10 samples, 0.06%)</title><rect x="567.3" y="691.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="570.3" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (6 samples, 0.04%)</title><rect x="567.6" y="675.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="570.6" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.02%)</title><rect x="567.7" y="659.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="570.7" y="670.0"></text>
</g>
<g>
<title>sock_setsockopt (48 samples, 0.29%)</title><rect x="568.1" y="691.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="571.1" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.04%)</title><rect x="568.9" y="675.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="571.9" y="686.0"></text>
</g>
<g>
<title>release_sock (7 samples, 0.04%)</title><rect x="569.6" y="675.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="572.6" y="686.0"></text>
</g>
<g>
<title>sock_set_timeout (15 samples, 0.09%)</title><rect x="570.1" y="675.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="573.1" y="686.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (5 samples, 0.03%)</title><rect x="570.8" y="659.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="573.8" y="670.0"></text>
</g>
<g>
<title>tcp_release_cb (5 samples, 0.03%)</title><rect x="571.2" y="675.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="574.2" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (23 samples, 0.14%)</title><rect x="571.5" y="691.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="574.5" y="702.0"></text>
</g>
<g>
<title>__fdget (16 samples, 0.10%)</title><rect x="571.6" y="675.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="574.6" y="686.0"></text>
</g>
<g>
<title>__fget_light (16 samples, 0.10%)</title><rect x="571.6" y="659.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="574.6" y="670.0"></text>
</g>
<g>
<title>__fget (16 samples, 0.10%)</title><rect x="571.6" y="643.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="574.6" y="654.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.04%)</title><rect x="572.7" y="675.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="575.7" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (1,497 samples, 9.07%)</title><rect x="573.9" y="787.0" width="107.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="576.9" y="798.0">one/nio/net/N..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (78 samples, 0.47%)</title><rect x="574.6" y="771.0" width="5.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="577.6" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (8 samples, 0.05%)</title><rect x="575.7" y="755.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="578.7" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (8 samples, 0.05%)</title><rect x="576.3" y="755.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="579.3" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (9 samples, 0.05%)</title><rect x="577.0" y="755.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="580.0" y="766.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (29 samples, 0.18%)</title><rect x="577.8" y="755.0" width="2.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="580.8" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (11 samples, 0.07%)</title><rect x="578.8" y="739.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="581.8" y="750.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.02%)</title><rect x="579.5" y="739.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="582.5" y="750.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (5 samples, 0.03%)</title><rect x="579.8" y="755.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="582.8" y="766.0"></text>
</g>
<g>
<title>__send (1,398 samples, 8.47%)</title><rect x="580.5" y="771.0" width="100.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="583.5" y="782.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,347 samples, 8.16%)</title><rect x="584.2" y="755.0" width="96.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="587.2" y="766.0">entry_SYSCA..</text>
</g>
<g>
<title>do_syscall_64 (1,345 samples, 8.15%)</title><rect x="584.3" y="739.0" width="96.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="587.3" y="750.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,311 samples, 7.95%)</title><rect x="585.8" y="723.0" width="93.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="588.8" y="734.0">__x64_sys_s..</text>
</g>
<g>
<title>__sys_sendto (1,307 samples, 7.92%)</title><rect x="585.9" y="707.0" width="93.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="588.9" y="718.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (1,292 samples, 7.83%)</title><rect x="586.5" y="691.0" width="92.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="589.5" y="702.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (1,277 samples, 7.74%)</title><rect x="586.9" y="675.0" width="91.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="589.9" y="686.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (1,266 samples, 7.67%)</title><rect x="587.6" y="659.0" width="90.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="590.6" y="670.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (6 samples, 0.04%)</title><rect x="588.3" y="643.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="591.3" y="654.0"></text>
</g>
<g>
<title>sock_zerocopy_put (4 samples, 0.02%)</title><rect x="589.1" y="643.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="592.1" y="654.0"></text>
</g>
<g>
<title>tcp_push (7 samples, 0.04%)</title><rect x="589.3" y="643.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="592.3" y="654.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,225 samples, 7.43%)</title><rect x="590.0" y="643.0" width="87.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="593.0" y="654.0">tcp_sendms..</text>
</g>
<g>
<title>__check_object_size (12 samples, 0.07%)</title><rect x="591.6" y="627.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="594.6" y="638.0"></text>
</g>
<g>
<title>__virt_addr_valid (11 samples, 0.07%)</title><rect x="591.7" y="611.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="594.7" y="622.0"></text>
</g>
<g>
<title>_copy_from_iter_full (14 samples, 0.08%)</title><rect x="592.6" y="627.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="595.6" y="638.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (9 samples, 0.05%)</title><rect x="592.7" y="611.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="595.7" y="622.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (6 samples, 0.04%)</title><rect x="593.8" y="627.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="596.8" y="638.0"></text>
</g>
<g>
<title>sk_page_frag_refill (11 samples, 0.07%)</title><rect x="594.2" y="627.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="597.2" y="638.0"></text>
</g>
<g>
<title>skb_page_frag_refill (11 samples, 0.07%)</title><rect x="594.2" y="611.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="597.2" y="622.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (81 samples, 0.49%)</title><rect x="595.0" y="627.0" width="5.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="598.0" y="638.0"></text>
</g>
<g>
<title>__alloc_skb (70 samples, 0.42%)</title><rect x="595.6" y="611.0" width="5.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="598.6" y="622.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (26 samples, 0.16%)</title><rect x="596.1" y="595.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="599.1" y="606.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (15 samples, 0.09%)</title><rect x="596.2" y="579.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="599.2" y="590.0"></text>
</g>
<g>
<title>kmalloc_slab (4 samples, 0.02%)</title><rect x="597.3" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="600.3" y="590.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (22 samples, 0.13%)</title><rect x="598.1" y="595.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="601.1" y="606.0"></text>
</g>
<g>
<title>__slab_alloc (7 samples, 0.04%)</title><rect x="599.1" y="579.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="602.1" y="590.0"></text>
</g>
<g>
<title>memset_erms (5 samples, 0.03%)</title><rect x="600.1" y="595.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="603.1" y="606.0"></text>
</g>
<g>
<title>skb_entail (9 samples, 0.05%)</title><rect x="600.8" y="627.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="603.8" y="638.0"></text>
</g>
<g>
<title>tcp_push (1,042 samples, 6.32%)</title><rect x="601.6" y="627.0" width="74.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="604.6" y="638.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (1,039 samples, 6.30%)</title><rect x="601.7" y="611.0" width="74.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="604.7" y="622.0">__tcp_pu..</text>
</g>
<g>
<title>ktime_get (4 samples, 0.02%)</title><rect x="602.0" y="595.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="605.0" y="606.0"></text>
</g>
<g>
<title>tcp_write_xmit (1,025 samples, 6.21%)</title><rect x="602.7" y="595.0" width="73.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="605.7" y="606.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_transmit_skb (952 samples, 5.77%)</title><rect x="603.8" y="579.0" width="68.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="606.8" y="590.0">__tcp_t..</text>
</g>
<g>
<title>__tcp_v4_send_check (4 samples, 0.02%)</title><rect x="605.9" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="608.9" y="574.0"></text>
</g>
<g>
<title>ip_queue_xmit (901 samples, 5.46%)</title><rect x="606.3" y="563.0" width="64.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="609.3" y="574.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (895 samples, 5.42%)</title><rect x="606.4" y="547.0" width="64.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="609.4" y="558.0">__ip_qu..</text>
</g>
<g>
<title>__sk_dst_check (5 samples, 0.03%)</title><rect x="607.4" y="531.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="610.4" y="542.0"></text>
</g>
<g>
<title>ip_local_out (870 samples, 5.27%)</title><rect x="607.8" y="531.0" width="62.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="610.8" y="542.0">ip_loc..</text>
</g>
<g>
<title>__ip_local_out (5 samples, 0.03%)</title><rect x="607.9" y="515.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="610.9" y="526.0"></text>
</g>
<g>
<title>ip_output (860 samples, 5.21%)</title><rect x="608.4" y="515.0" width="61.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="611.4" y="526.0">ip_out..</text>
</g>
<g>
<title>__ip_finish_output (4 samples, 0.02%)</title><rect x="608.6" y="499.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="611.6" y="510.0"></text>
</g>
<g>
<title>ip_finish_output (853 samples, 5.17%)</title><rect x="608.9" y="499.0" width="61.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="611.9" y="510.0">ip_fin..</text>
</g>
<g>
<title>__ip_finish_output (841 samples, 5.10%)</title><rect x="609.4" y="483.0" width="60.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="612.4" y="494.0">__ip_f..</text>
</g>
<g>
<title>ip_finish_output2 (832 samples, 5.04%)</title><rect x="610.0" y="467.0" width="59.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="613.0" y="478.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (741 samples, 4.49%)</title><rect x="611.4" y="451.0" width="53.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="614.4" y="462.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.0 (740 samples, 4.49%)</title><rect x="611.5" y="435.0" width="52.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="614.5" y="446.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (726 samples, 4.40%)</title><rect x="612.5" y="419.0" width="51.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="615.5" y="430.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (722 samples, 4.38%)</title><rect x="612.5" y="403.0" width="51.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="615.5" y="414.0">__sof..</text>
</g>
<g>
<title>net_rx_action (705 samples, 4.27%)</title><rect x="613.5" y="387.0" width="50.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="616.5" y="398.0">net_r..</text>
</g>
<g>
<title>process_backlog (694 samples, 4.21%)</title><rect x="614.3" y="371.0" width="49.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="617.3" y="382.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (681 samples, 4.13%)</title><rect x="615.2" y="355.0" width="48.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="618.2" y="366.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (678 samples, 4.11%)</title><rect x="615.4" y="339.0" width="48.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="618.4" y="350.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (19 samples, 0.12%)</title><rect x="615.7" y="323.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="618.7" y="334.0"></text>
</g>
<g>
<title>ip_rcv (656 samples, 3.98%)</title><rect x="617.0" y="323.0" width="46.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="620.0" y="334.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (9 samples, 0.05%)</title><rect x="617.7" y="307.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="620.7" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish (637 samples, 3.86%)</title><rect x="618.4" y="307.0" width="45.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="621.4" y="318.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (629 samples, 3.81%)</title><rect x="618.7" y="291.0" width="45.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="621.7" y="302.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (623 samples, 3.78%)</title><rect x="619.0" y="275.0" width="44.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="622.0" y="286.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (621 samples, 3.76%)</title><rect x="619.1" y="259.0" width="44.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="622.1" y="270.0">ip_p..</text>
</g>
<g>
<title>tcp_v4_rcv (605 samples, 3.67%)</title><rect x="620.2" y="243.0" width="43.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="623.2" y="254.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (12 samples, 0.07%)</title><rect x="621.7" y="227.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="624.7" y="238.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (11 samples, 0.07%)</title><rect x="622.9" y="227.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="625.9" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (551 samples, 3.34%)</title><rect x="623.7" y="227.0" width="39.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="626.7" y="238.0">tcp..</text>
</g>
<g>
<title>tcp_rcv_established (539 samples, 3.27%)</title><rect x="624.6" y="211.0" width="38.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="627.6" y="222.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (30 samples, 0.18%)</title><rect x="625.4" y="195.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="628.4" y="206.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (22 samples, 0.13%)</title><rect x="626.0" y="179.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="629.0" y="190.0"></text>
</g>
<g>
<title>sk_reset_timer (19 samples, 0.12%)</title><rect x="626.2" y="163.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="629.2" y="174.0"></text>
</g>
<g>
<title>mod_timer (19 samples, 0.12%)</title><rect x="626.2" y="147.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="629.2" y="158.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.07%)</title><rect x="626.6" y="131.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="629.6" y="142.0"></text>
</g>
<g>
<title>tcp_ack (63 samples, 0.38%)</title><rect x="628.1" y="195.0" width="4.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="631.1" y="206.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (40 samples, 0.24%)</title><rect x="629.4" y="179.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="632.4" y="190.0"></text>
</g>
<g>
<title>__kfree_skb (20 samples, 0.12%)</title><rect x="630.2" y="163.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="633.2" y="174.0"></text>
</g>
<g>
<title>kfree_skbmem (6 samples, 0.04%)</title><rect x="630.2" y="147.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="633.2" y="158.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.02%)</title><rect x="630.3" y="131.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="633.3" y="142.0"></text>
</g>
<g>
<title>skb_release_all (13 samples, 0.08%)</title><rect x="630.6" y="147.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="633.6" y="158.0"></text>
</g>
<g>
<title>skb_release_data (11 samples, 0.07%)</title><rect x="630.6" y="131.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="633.6" y="142.0"></text>
</g>
<g>
<title>skb_free_head (5 samples, 0.03%)</title><rect x="631.0" y="115.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="634.0" y="126.0"></text>
</g>
<g>
<title>kfree (5 samples, 0.03%)</title><rect x="631.0" y="99.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="634.0" y="110.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (6 samples, 0.04%)</title><rect x="631.8" y="163.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="634.8" y="174.0"></text>
</g>
<g>
<title>tcp_data_ready (394 samples, 2.39%)</title><rect x="632.7" y="195.0" width="28.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="635.7" y="206.0">tc..</text>
</g>
<g>
<title>sock_def_readable (393 samples, 2.38%)</title><rect x="632.8" y="179.0" width="28.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="635.8" y="190.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (386 samples, 2.34%)</title><rect x="633.3" y="163.0" width="27.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="636.3" y="174.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (385 samples, 2.33%)</title><rect x="633.3" y="147.0" width="27.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="636.3" y="158.0">_..</text>
</g>
<g>
<title>__lock_text_start (382 samples, 2.32%)</title><rect x="633.5" y="131.0" width="27.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="636.5" y="142.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (8 samples, 0.05%)</title><rect x="660.9" y="195.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="663.9" y="206.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (12 samples, 0.07%)</title><rect x="661.4" y="195.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="664.4" y="206.0"></text>
</g>
<g>
<title>read_tsc (5 samples, 0.03%)</title><rect x="661.9" y="179.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="664.9" y="190.0"></text>
</g>
<g>
<title>tcp_queue_rcv (5 samples, 0.03%)</title><rect x="662.3" y="195.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="665.3" y="206.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (4 samples, 0.02%)</title><rect x="663.2" y="227.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="666.2" y="238.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.02%)</title><rect x="664.2" y="403.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="667.2" y="414.0"></text>
</g>
<g>
<title>dev_queue_xmit (69 samples, 0.42%)</title><rect x="664.4" y="451.0" width="5.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="667.4" y="462.0"></text>
</g>
<g>
<title>__dev_queue_xmit (68 samples, 0.41%)</title><rect x="664.4" y="435.0" width="4.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="667.4" y="446.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (34 samples, 0.21%)</title><rect x="665.7" y="419.0" width="2.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="668.7" y="430.0"></text>
</g>
<g>
<title>loopback_xmit (28 samples, 0.17%)</title><rect x="665.9" y="403.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="668.9" y="414.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.02%)</title><rect x="666.1" y="387.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="669.1" y="398.0"></text>
</g>
<g>
<title>netif_rx (14 samples, 0.08%)</title><rect x="666.4" y="387.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="669.4" y="398.0"></text>
</g>
<g>
<title>netif_rx_internal (12 samples, 0.07%)</title><rect x="666.5" y="371.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="669.5" y="382.0"></text>
</g>
<g>
<title>enqueue_to_backlog (11 samples, 0.07%)</title><rect x="666.6" y="355.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="669.6" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (13 samples, 0.08%)</title><rect x="668.3" y="419.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="671.3" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (4 samples, 0.02%)</title><rect x="669.5" y="483.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="672.5" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (5 samples, 0.03%)</title><rect x="670.0" y="531.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="673.0" y="542.0"></text>
</g>
<g>
<title>skb_clone (10 samples, 0.06%)</title><rect x="670.7" y="563.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="673.7" y="574.0"></text>
</g>
<g>
<title>__skb_clone (5 samples, 0.03%)</title><rect x="671.1" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="674.1" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (20 samples, 0.12%)</title><rect x="672.9" y="579.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="675.9" y="590.0"></text>
</g>
<g>
<title>tcp_rearm_rto (13 samples, 0.08%)</title><rect x="673.4" y="563.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="676.4" y="574.0"></text>
</g>
<g>
<title>sk_reset_timer (11 samples, 0.07%)</title><rect x="673.5" y="547.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="676.5" y="558.0"></text>
</g>
<g>
<title>mod_timer (11 samples, 0.07%)</title><rect x="673.5" y="531.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="676.5" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.04%)</title><rect x="673.8" y="515.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="676.8" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.02%)</title><rect x="674.5" y="579.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="677.5" y="590.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (8 samples, 0.05%)</title><rect x="674.8" y="579.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="677.8" y="590.0"></text>
</g>
<g>
<title>tcp_v4_send_check (6 samples, 0.04%)</title><rect x="675.6" y="579.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="678.6" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (17 samples, 0.10%)</title><rect x="676.3" y="627.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="679.3" y="638.0"></text>
</g>
<g>
<title>tcp_current_mss (11 samples, 0.07%)</title><rect x="676.7" y="611.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="679.7" y="622.0"></text>
</g>
<g>
<title>ipv4_mtu (7 samples, 0.04%)</title><rect x="677.0" y="595.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="680.0" y="606.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (4 samples, 0.02%)</title><rect x="677.8" y="643.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="680.8" y="654.0"></text>
</g>
<g>
<title>inet_send_prepare (4 samples, 0.02%)</title><rect x="678.2" y="675.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="681.2" y="686.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.03%)</title><rect x="678.5" y="675.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="681.5" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.04%)</title><rect x="678.9" y="691.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="681.9" y="702.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.04%)</title><rect x="678.9" y="675.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="681.9" y="686.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.04%)</title><rect x="678.9" y="659.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="681.9" y="670.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.04%)</title><rect x="678.9" y="643.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="681.9" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (13 samples, 0.08%)</title><rect x="679.6" y="723.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="682.6" y="734.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.06%)</title><rect x="679.8" y="707.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="682.8" y="718.0"></text>
</g>
<g>
<title>__schedule (9 samples, 0.05%)</title><rect x="679.9" y="691.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="682.9" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.03%)</title><rect x="680.2" y="675.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="683.2" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.03%)</title><rect x="680.5" y="771.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="683.5" y="782.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (20 samples, 0.12%)</title><rect x="681.0" y="787.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="684.0" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (10 samples, 0.06%)</title><rect x="681.7" y="771.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="684.7" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (9 samples, 0.05%)</title><rect x="681.8" y="755.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="684.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,629 samples, 9.87%)</title><rect x="682.6" y="819.0" width="116.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="685.6" y="830.0">one/nio/http/H..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.04%)</title><rect x="682.7" y="803.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="685.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.02%)</title><rect x="682.8" y="787.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,550 samples, 9.40%)</title><rect x="683.1" y="803.0" width="110.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="686.1" y="814.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (72 samples, 0.44%)</title><rect x="683.7" y="787.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="686.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (56 samples, 0.34%)</title><rect x="684.8" y="771.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="687.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (21 samples, 0.13%)</title><rect x="685.3" y="755.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="688.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.04%)</title><rect x="686.2" y="739.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="689.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (29 samples, 0.18%)</title><rect x="686.8" y="755.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="689.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (29 samples, 0.18%)</title><rect x="686.8" y="739.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="689.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (28 samples, 0.17%)</title><rect x="686.8" y="723.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="689.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.03%)</title><rect x="688.2" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (4 samples, 0.02%)</title><rect x="688.2" y="691.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.2" y="702.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (4 samples, 0.02%)</title><rect x="688.5" y="707.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="691.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,470 samples, 8.91%)</title><rect x="688.8" y="787.0" width="105.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.8" y="798.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/Session.write (1,467 samples, 8.89%)</title><rect x="689.0" y="771.0" width="105.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="692.0" y="782.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,461 samples, 8.86%)</title><rect x="689.5" y="755.0" width="104.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="692.5" y="766.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,461 samples, 8.86%)</title><rect x="689.5" y="739.0" width="104.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="692.5" y="750.0">one/nio/net/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (17 samples, 0.10%)</title><rect x="690.7" y="723.0" width="1.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="693.7" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.02%)</title><rect x="691.0" y="707.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="694.0" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.02%)</title><rect x="691.5" y="707.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="694.5" y="718.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (11 samples, 0.07%)</title><rect x="692.1" y="723.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="695.1" y="734.0"></text>
</g>
<g>
<title>__send (1,413 samples, 8.56%)</title><rect x="692.8" y="723.0" width="101.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="695.8" y="734.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,358 samples, 8.23%)</title><rect x="696.8" y="707.0" width="97.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="699.8" y="718.0">entry_SYSCA..</text>
</g>
<g>
<title>do_syscall_64 (1,353 samples, 8.20%)</title><rect x="697.1" y="691.0" width="96.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="700.1" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,309 samples, 7.93%)</title><rect x="699.8" y="675.0" width="93.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="702.8" y="686.0">__x64_sys_s..</text>
</g>
<g>
<title>__sys_sendto (1,301 samples, 7.89%)</title><rect x="699.8" y="659.0" width="93.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="702.8" y="670.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (1,275 samples, 7.73%)</title><rect x="700.6" y="643.0" width="91.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="703.6" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (8 samples, 0.05%)</title><rect x="700.8" y="627.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="703.8" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (1,257 samples, 7.62%)</title><rect x="701.3" y="627.0" width="90.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="704.3" y="638.0">inet6_send..</text>
</g>
<g>
<title>release_sock (5 samples, 0.03%)</title><rect x="701.7" y="611.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="704.7" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,246 samples, 7.55%)</title><rect x="702.1" y="611.0" width="89.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="705.1" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.03%)</title><rect x="702.4" y="595.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="705.4" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (4 samples, 0.02%)</title><rect x="702.7" y="595.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="705.7" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (5 samples, 0.03%)</title><rect x="703.0" y="595.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="706.0" y="606.0"></text>
</g>
<g>
<title>release_sock (7 samples, 0.04%)</title><rect x="703.4" y="595.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="706.4" y="606.0"></text>
</g>
<g>
<title>sock_zerocopy_put (4 samples, 0.02%)</title><rect x="704.2" y="595.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="707.2" y="606.0"></text>
</g>
<g>
<title>tcp_push (8 samples, 0.05%)</title><rect x="704.5" y="595.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="707.5" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,196 samples, 7.25%)</title><rect x="705.3" y="595.0" width="85.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="708.3" y="606.0">tcp_sendms..</text>
</g>
<g>
<title>__check_object_size (6 samples, 0.04%)</title><rect x="706.9" y="579.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="709.9" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.04%)</title><rect x="706.9" y="563.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="709.9" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (8 samples, 0.05%)</title><rect x="707.5" y="579.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="710.5" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (7 samples, 0.04%)</title><rect x="708.3" y="579.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="711.3" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (6 samples, 0.04%)</title><rect x="708.4" y="563.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="711.4" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (65 samples, 0.39%)</title><rect x="708.8" y="579.0" width="4.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="711.8" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (54 samples, 0.33%)</title><rect x="709.4" y="563.0" width="3.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="712.4" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (16 samples, 0.10%)</title><rect x="709.8" y="547.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="712.8" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (12 samples, 0.07%)</title><rect x="709.8" y="531.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="712.8" y="542.0"></text>
</g>
<g>
<title>memset_erms (4 samples, 0.02%)</title><rect x="710.6" y="531.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="713.6" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (18 samples, 0.11%)</title><rect x="711.1" y="547.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="714.1" y="558.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.02%)</title><rect x="712.4" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="715.4" y="558.0"></text>
</g>
<g>
<title>__ksize (4 samples, 0.02%)</title><rect x="712.4" y="531.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="715.4" y="542.0"></text>
</g>
<g>
<title>memset_erms (4 samples, 0.02%)</title><rect x="712.8" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="715.8" y="558.0"></text>
</g>
<g>
<title>skb_entail (8 samples, 0.05%)</title><rect x="713.4" y="579.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="716.4" y="590.0"></text>
</g>
<g>
<title>tcp_push (1,058 samples, 6.41%)</title><rect x="714.2" y="579.0" width="75.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="717.2" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (1,055 samples, 6.39%)</title><rect x="714.4" y="563.0" width="75.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="717.4" y="574.0">__tcp_pu..</text>
</g>
<g>
<title>tcp_write_xmit (1,049 samples, 6.36%)</title><rect x="714.8" y="547.0" width="75.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="717.8" y="558.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_transmit_skb (967 samples, 5.86%)</title><rect x="715.9" y="531.0" width="69.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="718.9" y="542.0">__tcp_t..</text>
</g>
<g>
<title>ip_queue_xmit (923 samples, 5.59%)</title><rect x="718.0" y="515.0" width="66.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="721.0" y="526.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (916 samples, 5.55%)</title><rect x="718.1" y="499.0" width="65.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="721.1" y="510.0">__ip_qu..</text>
</g>
<g>
<title>ip_local_out (903 samples, 5.47%)</title><rect x="718.9" y="483.0" width="64.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="721.9" y="494.0">ip_loca..</text>
</g>
<g>
<title>__ip_local_out (7 samples, 0.04%)</title><rect x="719.0" y="467.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="722.0" y="478.0"></text>
</g>
<g>
<title>ip_send_check (4 samples, 0.02%)</title><rect x="719.2" y="451.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="722.2" y="462.0"></text>
</g>
<g>
<title>ip_output (893 samples, 5.41%)</title><rect x="719.5" y="467.0" width="63.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="722.5" y="478.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (889 samples, 5.39%)</title><rect x="719.8" y="451.0" width="63.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="722.8" y="462.0">ip_fini..</text>
</g>
<g>
<title>__ip_finish_output (880 samples, 5.33%)</title><rect x="720.4" y="435.0" width="62.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="723.4" y="446.0">__ip_f..</text>
</g>
<g>
<title>ip_finish_output2 (869 samples, 5.27%)</title><rect x="721.2" y="419.0" width="62.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="724.2" y="430.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (779 samples, 4.72%)</title><rect x="722.1" y="403.0" width="55.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="725.1" y="414.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.0 (777 samples, 4.71%)</title><rect x="722.2" y="387.0" width="55.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="725.2" y="398.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (769 samples, 4.66%)</title><rect x="722.8" y="371.0" width="55.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="725.8" y="382.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (767 samples, 4.65%)</title><rect x="722.8" y="355.0" width="54.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="725.8" y="366.0">__sof..</text>
</g>
<g>
<title>net_rx_action (751 samples, 4.55%)</title><rect x="723.9" y="339.0" width="53.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="726.9" y="350.0">net_r..</text>
</g>
<g>
<title>process_backlog (738 samples, 4.47%)</title><rect x="724.8" y="323.0" width="52.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="727.8" y="334.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (732 samples, 4.44%)</title><rect x="725.2" y="307.0" width="52.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="728.2" y="318.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (728 samples, 4.41%)</title><rect x="725.4" y="291.0" width="52.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="728.4" y="302.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (13 samples, 0.08%)</title><rect x="725.8" y="275.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="728.8" y="286.0"></text>
</g>
<g>
<title>ip_rcv (705 samples, 4.27%)</title><rect x="726.7" y="275.0" width="50.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="729.7" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.02%)</title><rect x="727.2" y="259.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="730.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (7 samples, 0.04%)</title><rect x="727.5" y="259.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="730.5" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (687 samples, 4.16%)</title><rect x="728.0" y="259.0" width="49.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="731.0" y="270.0">ip_rc..</text>
</g>
<g>
<title>ip_local_deliver (681 samples, 4.13%)</title><rect x="728.2" y="243.0" width="48.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="731.2" y="254.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (678 samples, 4.11%)</title><rect x="728.4" y="227.0" width="48.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="731.4" y="238.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (677 samples, 4.10%)</title><rect x="728.4" y="211.0" width="48.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="731.4" y="222.0">ip_p..</text>
</g>
<g>
<title>tcp_v4_rcv (669 samples, 4.06%)</title><rect x="729.0" y="195.0" width="47.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="732.0" y="206.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (16 samples, 0.10%)</title><rect x="730.0" y="179.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="733.0" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (8 samples, 0.05%)</title><rect x="731.5" y="179.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="734.5" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (622 samples, 3.77%)</title><rect x="732.2" y="179.0" width="44.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="735.2" y="190.0">tcp_..</text>
</g>
<g>
<title>tcp_check_space (9 samples, 0.05%)</title><rect x="732.7" y="163.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="735.7" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (601 samples, 3.64%)</title><rect x="733.7" y="163.0" width="43.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="736.7" y="174.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (57 samples, 0.35%)</title><rect x="734.8" y="147.0" width="4.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="737.8" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (52 samples, 0.32%)</title><rect x="735.1" y="131.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="738.1" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (46 samples, 0.28%)</title><rect x="735.5" y="115.0" width="3.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="738.5" y="126.0"></text>
</g>
<g>
<title>mod_timer (43 samples, 0.26%)</title><rect x="735.8" y="99.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="738.8" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (41 samples, 0.25%)</title><rect x="735.8" y="83.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="738.8" y="94.0"></text>
</g>
<g>
<title>tcp_ack (142 samples, 0.86%)</title><rect x="739.2" y="147.0" width="10.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="742.2" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (93 samples, 0.56%)</title><rect x="741.8" y="131.0" width="6.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="744.8" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (53 samples, 0.32%)</title><rect x="743.5" y="115.0" width="3.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="746.5" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (14 samples, 0.08%)</title><rect x="743.6" y="99.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="746.6" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (9 samples, 0.05%)</title><rect x="744.0" y="83.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="747.0" y="94.0"></text>
</g>
<g>
<title>skb_release_all (30 samples, 0.18%)</title><rect x="744.8" y="99.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="747.8" y="110.0"></text>
</g>
<g>
<title>skb_release_data (28 samples, 0.17%)</title><rect x="744.8" y="83.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="747.8" y="94.0"></text>
</g>
<g>
<title>skb_free_head (18 samples, 0.11%)</title><rect x="745.6" y="67.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="748.6" y="78.0"></text>
</g>
<g>
<title>kfree (18 samples, 0.11%)</title><rect x="745.6" y="51.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="748.6" y="62.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.02%)</title><rect x="746.6" y="35.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="749.6" y="46.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.02%)</title><rect x="747.1" y="99.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="750.1" y="110.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (8 samples, 0.05%)</title><rect x="747.7" y="115.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="750.7" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (352 samples, 2.13%)</title><rect x="749.3" y="147.0" width="25.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="752.3" y="158.0">t..</text>
</g>
<g>
<title>sock_def_readable (349 samples, 2.12%)</title><rect x="749.6" y="131.0" width="24.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="752.6" y="142.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (343 samples, 2.08%)</title><rect x="750.0" y="115.0" width="24.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="753.0" y="126.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (342 samples, 2.07%)</title><rect x="750.1" y="99.0" width="24.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="753.1" y="110.0">_..</text>
</g>
<g>
<title>__lock_text_start (341 samples, 2.07%)</title><rect x="750.1" y="83.0" width="24.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="753.1" y="94.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (12 samples, 0.07%)</title><rect x="774.5" y="147.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="777.5" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.02%)</title><rect x="775.4" y="147.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="778.4" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (6 samples, 0.04%)</title><rect x="775.9" y="147.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="778.9" y="158.0"></text>
</g>
<g>
<title>dev_queue_xmit (75 samples, 0.45%)</title><rect x="777.8" y="403.0" width="5.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="780.8" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (72 samples, 0.44%)</title><rect x="777.8" y="387.0" width="5.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="780.8" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (35 samples, 0.21%)</title><rect x="778.5" y="371.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="781.5" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.02%)</title><rect x="778.7" y="355.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="781.7" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (22 samples, 0.13%)</title><rect x="779.0" y="355.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="782.0" y="366.0"></text>
</g>
<g>
<title>netif_rx (18 samples, 0.11%)</title><rect x="779.2" y="339.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="782.2" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.02%)</title><rect x="779.2" y="323.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="782.2" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (13 samples, 0.08%)</title><rect x="779.5" y="323.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="782.5" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (13 samples, 0.08%)</title><rect x="779.5" y="307.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="782.5" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (4 samples, 0.02%)</title><rect x="780.7" y="355.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="783.7" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.02%)</title><rect x="781.0" y="371.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="784.0" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (19 samples, 0.12%)</title><rect x="781.6" y="371.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="784.6" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (9 samples, 0.05%)</title><rect x="782.1" y="355.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="785.1" y="366.0"></text>
</g>
<g>
<title>ip_copy_addrs (5 samples, 0.03%)</title><rect x="783.7" y="499.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="786.7" y="510.0"></text>
</g>
<g>
<title>skb_clone (11 samples, 0.07%)</title><rect x="784.0" y="515.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="787.0" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (4 samples, 0.02%)</title><rect x="784.3" y="499.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="787.3" y="510.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.04%)</title><rect x="785.5" y="531.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="788.5" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (31 samples, 0.19%)</title><rect x="786.2" y="531.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="789.2" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (24 samples, 0.15%)</title><rect x="786.7" y="515.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="789.7" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (22 samples, 0.13%)</title><rect x="786.8" y="499.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="789.8" y="510.0"></text>
</g>
<g>
<title>mod_timer (21 samples, 0.13%)</title><rect x="786.9" y="483.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="789.9" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (15 samples, 0.09%)</title><rect x="787.2" y="467.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="790.2" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (5 samples, 0.03%)</title><rect x="789.0" y="531.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="792.0" y="542.0"></text>
</g>
<g>
<title>tcp_v4_send_check (4 samples, 0.02%)</title><rect x="789.5" y="531.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="792.5" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (12 samples, 0.07%)</title><rect x="789.8" y="579.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="792.8" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.02%)</title><rect x="789.9" y="563.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="792.9" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (7 samples, 0.04%)</title><rect x="790.2" y="563.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="793.2" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (6 samples, 0.04%)</title><rect x="791.3" y="627.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="794.3" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (5 samples, 0.03%)</title><rect x="791.3" y="611.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="794.3" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.03%)</title><rect x="791.3" y="595.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="794.3" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (16 samples, 0.10%)</title><rect x="791.8" y="643.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="794.8" y="654.0"></text>
</g>
<g>
<title>__fdget (9 samples, 0.05%)</title><rect x="791.8" y="627.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="794.8" y="638.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.05%)</title><rect x="791.8" y="611.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="794.8" y="622.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.05%)</title><rect x="791.8" y="595.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="794.8" y="606.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.04%)</title><rect x="792.4" y="627.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="795.4" y="638.0"></text>
</g>
<g>
<title>import_single_range (4 samples, 0.02%)</title><rect x="793.0" y="659.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="796.0" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.03%)</title><rect x="793.5" y="675.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="796.5" y="686.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.03%)</title><rect x="793.5" y="659.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="796.5" y="670.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.03%)</title><rect x="793.5" y="643.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="796.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (72 samples, 0.44%)</title><rect x="794.0" y="803.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="797.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (24 samples, 0.15%)</title><rect x="794.5" y="787.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="797.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (19 samples, 0.12%)</title><rect x="794.9" y="771.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="797.9" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (5 samples, 0.03%)</title><rect x="795.8" y="755.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="798.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (40 samples, 0.24%)</title><rect x="796.3" y="787.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (31 samples, 0.19%)</title><rect x="796.3" y="771.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="799.3" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.17%)</title><rect x="796.5" y="755.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="799.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="796.5" y="739.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="799.5" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.02%)</title><rect x="796.5" y="723.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="799.5" y="734.0"></text>
</g>
<g>
<title>gettimeofday (10 samples, 0.06%)</title><rect x="796.8" y="739.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="799.8" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (13 samples, 0.08%)</title><rect x="797.5" y="739.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="800.5" y="750.0"></text>
</g>
<g>
<title>gettimeofday (10 samples, 0.06%)</title><rect x="797.8" y="723.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="800.8" y="734.0"></text>
</g>
<g>
<title>[vdso] (8 samples, 0.05%)</title><rect x="797.9" y="707.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="800.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.05%)</title><rect x="798.5" y="771.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="801.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (7 samples, 0.04%)</title><rect x="799.1" y="819.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="802.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/topology/ModularTopology.isMe (86 samples, 0.52%)</title><rect x="799.7" y="835.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="802.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.equals (84 samples, 0.51%)</title><rect x="799.8" y="819.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="802.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.08%)</title><rect x="801.6" y="803.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="804.6" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (14 samples, 0.08%)</title><rect x="801.6" y="787.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="804.6" y="798.0"></text>
</g>
<g>
<title>gettimeofday (22 samples, 0.13%)</title><rect x="802.6" y="803.0" width="1.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="805.6" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (23 samples, 0.14%)</title><rect x="804.2" y="803.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="807.2" y="814.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.04%)</title><rect x="804.3" y="787.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="807.3" y="798.0"></text>
</g>
<g>
<title>gettimeofday (16 samples, 0.10%)</title><rect x="804.7" y="787.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="807.7" y="798.0"></text>
</g>
<g>
<title>[vdso] (14 samples, 0.08%)</title><rect x="804.8" y="771.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="807.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/topology/ModularTopology.primaryFor (30 samples, 0.18%)</title><rect x="805.8" y="835.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="808.8" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/topology/ModularTopology.primaryFor (30 samples, 0.18%)</title><rect x="805.8" y="819.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="808.8" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (14 samples, 0.08%)</title><rect x="807.0" y="803.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="810.0" y="814.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (111 samples, 0.67%)</title><rect x="808.0" y="867.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="811.0" y="878.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (111 samples, 0.67%)</title><rect x="808.0" y="851.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="811.0" y="862.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$98/1319750932.run (111 samples, 0.67%)</title><rect x="808.0" y="835.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="811.0" y="846.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (111 samples, 0.67%)</title><rect x="808.0" y="819.0" width="7.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="811.0" y="830.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (111 samples, 0.67%)</title><rect x="808.0" y="803.0" width="7.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="811.0" y="814.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (111 samples, 0.67%)</title><rect x="808.0" y="787.0" width="7.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="811.0" y="798.0"></text>
</g>
<g>
<title>java/io/FilterInputStream.read (6 samples, 0.04%)</title><rect x="808.1" y="771.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="811.1" y="782.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.read (6 samples, 0.04%)</title><rect x="808.1" y="755.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="811.1" y="766.0"></text>
</g>
<g>
<title>java/io/BufferedInputStream.fill (6 samples, 0.04%)</title><rect x="808.1" y="739.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="811.1" y="750.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.read (6 samples, 0.04%)</title><rect x="808.1" y="723.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="811.1" y="734.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.read (6 samples, 0.04%)</title><rect x="808.1" y="707.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="811.1" y="718.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.socketRead (6 samples, 0.04%)</title><rect x="808.1" y="691.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="811.1" y="702.0"></text>
</g>
<g>
<title>java/net/SocketInputStream.socketRead0 (6 samples, 0.04%)</title><rect x="808.1" y="675.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="811.1" y="686.0"></text>
</g>
<g>
<title>Java_java_net_SocketInputStream_socketRead0 (5 samples, 0.03%)</title><rect x="808.1" y="659.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="811.1" y="670.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (96 samples, 0.58%)</title><rect x="808.6" y="771.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="811.6" y="782.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (95 samples, 0.58%)</title><rect x="808.6" y="755.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="811.6" y="766.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (93 samples, 0.56%)</title><rect x="808.7" y="739.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="811.7" y="750.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (93 samples, 0.56%)</title><rect x="808.7" y="723.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="811.7" y="734.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (93 samples, 0.56%)</title><rect x="808.7" y="707.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="811.7" y="718.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (53 samples, 0.32%)</title><rect x="808.8" y="691.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="811.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (53 samples, 0.32%)</title><rect x="808.8" y="675.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="811.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor40.invoke (50 samples, 0.30%)</title><rect x="809.0" y="659.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="812.0" y="670.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (50 samples, 0.30%)</title><rect x="809.0" y="643.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="812.0" y="654.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (44 samples, 0.27%)</title><rect x="809.0" y="627.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="812.0" y="638.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (44 samples, 0.27%)</title><rect x="809.0" y="611.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="812.0" y="622.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (44 samples, 0.27%)</title><rect x="809.0" y="595.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="812.0" y="606.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (44 samples, 0.27%)</title><rect x="809.0" y="579.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="812.0" y="590.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (44 samples, 0.27%)</title><rect x="809.0" y="563.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="812.0" y="574.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (43 samples, 0.26%)</title><rect x="809.1" y="547.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="812.1" y="558.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (43 samples, 0.26%)</title><rect x="809.1" y="531.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="812.1" y="542.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (43 samples, 0.26%)</title><rect x="809.1" y="515.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="812.1" y="526.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (43 samples, 0.26%)</title><rect x="809.1" y="499.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="812.1" y="510.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (43 samples, 0.26%)</title><rect x="809.1" y="483.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="812.1" y="494.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (43 samples, 0.26%)</title><rect x="809.1" y="467.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="812.1" y="478.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (43 samples, 0.26%)</title><rect x="809.1" y="451.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="812.1" y="462.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (43 samples, 0.26%)</title><rect x="809.1" y="435.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="812.1" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (27 samples, 0.16%)</title><rect x="809.1" y="419.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="812.1" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (27 samples, 0.16%)</title><rect x="809.1" y="403.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="812.1" y="414.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (27 samples, 0.16%)</title><rect x="809.1" y="387.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="812.1" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (27 samples, 0.16%)</title><rect x="809.1" y="371.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="812.1" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (7 samples, 0.04%)</title><rect x="809.1" y="355.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="812.1" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (5 samples, 0.03%)</title><rect x="809.2" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="812.2" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (5 samples, 0.03%)</title><rect x="809.2" y="323.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="812.2" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (5 samples, 0.03%)</title><rect x="809.2" y="307.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="812.2" y="318.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (16 samples, 0.10%)</title><rect x="809.6" y="355.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="812.6" y="366.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.&lt;init&gt; (11 samples, 0.07%)</title><rect x="809.6" y="339.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="812.6" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (5 samples, 0.03%)</title><rect x="809.9" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="812.9" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.03%)</title><rect x="809.9" y="307.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="812.9" y="318.0"></text>
</g>
<g>
<title>javax/management/openmbean/CompositeDataSupport.makeMap (5 samples, 0.03%)</title><rect x="810.4" y="339.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="813.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.03%)</title><rect x="810.4" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="813.4" y="334.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (16 samples, 0.10%)</title><rect x="811.0" y="419.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="814.0" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (16 samples, 0.10%)</title><rect x="811.0" y="403.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="814.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (16 samples, 0.10%)</title><rect x="811.0" y="387.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="814.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor3.invoke (16 samples, 0.10%)</title><rect x="811.0" y="371.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="814.0" y="382.0"></text>
</g>
<g>
<title>sun/reflect/misc/Trampoline.invoke (16 samples, 0.10%)</title><rect x="811.0" y="355.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="814.0" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (16 samples, 0.10%)</title><rect x="811.0" y="339.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="814.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (16 samples, 0.10%)</title><rect x="811.0" y="323.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="814.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor45.invoke (16 samples, 0.10%)</title><rect x="811.0" y="307.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="814.0" y="318.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (16 samples, 0.10%)</title><rect x="811.0" y="291.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="814.0" y="302.0"></text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (16 samples, 0.10%)</title><rect x="811.0" y="275.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="814.0" y="286.0"></text>
</g>
<g>
<title>jmm_GetThreadInfo (12 samples, 0.07%)</title><rect x="811.3" y="259.0" width="0.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="814.3" y="270.0"></text>
</g>
<g>
<title>Management::create_thread_info_instance(ThreadSnapshot*, Thread*) (12 samples, 0.07%)</title><rect x="811.3" y="243.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="814.3" y="254.0"></text>
</g>
<g>
<title>initialize_ThreadInfo_constructor_arguments(JavaCallArguments*, ThreadSnapshot*, Thread*) (9 samples, 0.05%)</title><rect x="811.5" y="227.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="814.5" y="238.0"></text>
</g>
<g>
<title>ThreadStackTrace::allocate_fill_stack_trace_element_array(Thread*) (8 samples, 0.05%)</title><rect x="811.6" y="211.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="814.6" y="222.0"></text>
</g>
<g>
<title>java_lang_StackTraceElement::create(methodHandle const&amp;, int, Thread*) (6 samples, 0.04%)</title><rect x="811.7" y="195.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="814.7" y="206.0"></text>
</g>
<g>
<title>java_lang_StackTraceElement::fill_in(Handle, InstanceKlass*, methodHandle const&amp;, int, int, Symbol*, Thread*) (5 samples, 0.03%)</title><rect x="811.8" y="179.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="814.8" y="190.0"></text>
</g>
<g>
<title>StringTable::intern(Symbol*, Thread*) (5 samples, 0.03%)</title><rect x="811.8" y="163.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="814.8" y="174.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (6 samples, 0.04%)</title><rect x="812.1" y="627.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="815.1" y="638.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.unwrap (4 samples, 0.02%)</title><rect x="812.3" y="611.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="815.3" y="622.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.marshalValue (24 samples, 0.15%)</title><rect x="812.6" y="691.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="815.6" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (24 samples, 0.15%)</title><rect x="812.6" y="675.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="815.6" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (24 samples, 0.15%)</title><rect x="812.6" y="659.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="815.6" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeArray (22 samples, 0.13%)</title><rect x="812.6" y="643.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="815.6" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (22 samples, 0.13%)</title><rect x="812.6" y="627.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="815.6" y="638.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (22 samples, 0.13%)</title><rect x="812.6" y="611.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="815.6" y="622.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (22 samples, 0.13%)</title><rect x="812.6" y="595.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="815.6" y="606.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.defaultWriteFields (22 samples, 0.13%)</title><rect x="812.6" y="579.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="815.6" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (22 samples, 0.13%)</title><rect x="812.6" y="563.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="815.6" y="574.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeOrdinaryObject (21 samples, 0.13%)</title><rect x="812.6" y="547.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="815.6" y="558.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeSerialData (20 samples, 0.12%)</title><rect x="812.7" y="531.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="815.7" y="542.0"></text>
</g>
<g>
<title>java/io/ObjectStreamClass.invokeWriteObject (18 samples, 0.11%)</title><rect x="812.9" y="515.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="815.9" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (18 samples, 0.11%)</title><rect x="812.9" y="499.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="815.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (18 samples, 0.11%)</title><rect x="812.9" y="483.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="815.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor30.invoke (18 samples, 0.11%)</title><rect x="812.9" y="467.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="815.9" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.writeObject (18 samples, 0.11%)</title><rect x="812.9" y="451.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="815.9" y="462.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject (18 samples, 0.11%)</title><rect x="812.9" y="435.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="815.9" y="446.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.writeObject0 (14 samples, 0.08%)</title><rect x="813.1" y="419.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="816.1" y="430.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.lookup (8 samples, 0.05%)</title><rect x="813.2" y="403.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.2" y="414.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream$HandleTable.hash (5 samples, 0.03%)</title><rect x="813.4" y="387.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.4" y="398.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (5 samples, 0.03%)</title><rect x="813.4" y="371.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="816.4" y="382.0"></text>
</g>
<g>
<title>JVM_IHashCode (4 samples, 0.02%)</title><rect x="813.4" y="355.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="816.4" y="366.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastRef.unmarshalValue (9 samples, 0.05%)</title><rect x="814.3" y="691.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="817.3" y="702.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (9 samples, 0.05%)</title><rect x="814.3" y="675.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="817.3" y="686.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject (9 samples, 0.05%)</title><rect x="814.3" y="659.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="817.3" y="670.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readObject0 (9 samples, 0.05%)</title><rect x="814.3" y="643.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="817.3" y="654.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.readOrdinaryObject (6 samples, 0.04%)</title><rect x="814.5" y="627.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="817.5" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPConnection.releaseOutputStream (7 samples, 0.04%)</title><rect x="815.4" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="818.4" y="782.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (7 samples, 0.04%)</title><rect x="815.4" y="755.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="818.4" y="766.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (7 samples, 0.04%)</title><rect x="815.4" y="739.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="818.4" y="750.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.write (7 samples, 0.04%)</title><rect x="815.4" y="723.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="818.4" y="734.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite (7 samples, 0.04%)</title><rect x="815.4" y="707.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="818.4" y="718.0"></text>
</g>
<g>
<title>java/net/SocketOutputStream.socketWrite0 (7 samples, 0.04%)</title><rect x="815.4" y="691.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="818.4" y="702.0"></text>
</g>
<g>
<title>__send (6 samples, 0.04%)</title><rect x="815.5" y="675.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="818.5" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.04%)</title><rect x="815.5" y="659.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="818.5" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.04%)</title><rect x="815.5" y="643.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="818.5" y="654.0"></text>
</g>
<g>
<title>__x64_sys_sendto (6 samples, 0.04%)</title><rect x="815.5" y="627.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="818.5" y="638.0"></text>
</g>
<g>
<title>__sys_sendto (6 samples, 0.04%)</title><rect x="815.5" y="611.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="818.5" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (6 samples, 0.04%)</title><rect x="815.5" y="595.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="818.5" y="606.0"></text>
</g>
<g>
<title>inet6_sendmsg (6 samples, 0.04%)</title><rect x="815.5" y="579.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="818.5" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (6 samples, 0.04%)</title><rect x="815.5" y="563.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="818.5" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (6 samples, 0.04%)</title><rect x="815.5" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="818.5" y="558.0"></text>
</g>
<g>
<title>tcp_push (6 samples, 0.04%)</title><rect x="815.5" y="531.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="818.5" y="542.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (6 samples, 0.04%)</title><rect x="815.5" y="515.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="818.5" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (6 samples, 0.04%)</title><rect x="815.5" y="499.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="818.5" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (5 samples, 0.03%)</title><rect x="815.5" y="483.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="818.5" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (5 samples, 0.03%)</title><rect x="815.5" y="467.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="818.5" y="478.0"></text>
</g>
<g>
<title>__ip_queue_xmit (5 samples, 0.03%)</title><rect x="815.5" y="451.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="818.5" y="462.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 0.03%)</title><rect x="815.5" y="435.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="818.5" y="446.0"></text>
</g>
<g>
<title>ip_output (5 samples, 0.03%)</title><rect x="815.5" y="419.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="818.5" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (5 samples, 0.03%)</title><rect x="815.5" y="403.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="818.5" y="414.0"></text>
</g>
<g>
<title>__ip_finish_output (4 samples, 0.02%)</title><rect x="815.6" y="387.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="818.6" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (4 samples, 0.02%)</title><rect x="815.6" y="371.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="818.6" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.02%)</title><rect x="815.6" y="355.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="818.6" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.0 (4 samples, 0.02%)</title><rect x="815.6" y="339.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="818.6" y="350.0"></text>
</g>
<g>
<title>do_softirq_own_stack (4 samples, 0.02%)</title><rect x="815.6" y="323.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="818.6" y="334.0"></text>
</g>
<g>
<title>__softirqentry_text_start (4 samples, 0.02%)</title><rect x="815.6" y="307.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="818.6" y="318.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.02%)</title><rect x="815.6" y="291.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="818.6" y="302.0"></text>
</g>
<g>
<title>process_backlog (4 samples, 0.02%)</title><rect x="815.6" y="275.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="818.6" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb (4 samples, 0.02%)</title><rect x="815.6" y="259.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="818.6" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (4 samples, 0.02%)</title><rect x="815.6" y="243.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="818.6" y="254.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 0.02%)</title><rect x="815.6" y="227.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="818.6" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.02%)</title><rect x="815.6" y="211.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="818.6" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.02%)</title><rect x="815.6" y="195.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="818.6" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 0.02%)</title><rect x="815.6" y="179.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="818.6" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (4 samples, 0.02%)</title><rect x="815.6" y="163.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="818.6" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (4 samples, 0.02%)</title><rect x="815.6" y="147.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="818.6" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 0.02%)</title><rect x="815.6" y="131.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="818.6" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 0.02%)</title><rect x="815.6" y="115.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="818.6" y="126.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (4,798 samples, 29.08%)</title><rect x="816.0" y="915.0" width="343.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="819.0" y="926.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (14 samples, 0.08%)</title><rect x="817.4" y="899.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="820.4" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (14 samples, 0.08%)</title><rect x="817.4" y="883.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="820.4" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,216 samples, 7.37%)</title><rect x="818.4" y="899.0" width="87.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="821.4" y="910.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (62 samples, 0.38%)</title><rect x="819.5" y="883.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="822.5" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (26 samples, 0.16%)</title><rect x="820.7" y="867.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="823.7" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.access$100 (19 samples, 0.12%)</title><rect x="822.6" y="867.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="825.6" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1,139 samples, 6.90%)</title><rect x="823.9" y="883.0" width="81.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="826.9" y="894.0">one/nio/n..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (36 samples, 0.22%)</title><rect x="826.7" y="867.0" width="2.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="829.7" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (22 samples, 0.13%)</title><rect x="829.4" y="867.0" width="1.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="832.4" y="878.0"></text>
</g>
<g>
<title>clock_gettime (76 samples, 0.46%)</title><rect x="831.0" y="867.0" width="5.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="834.0" y="878.0"></text>
</g>
<g>
<title>clock_gettime (12 samples, 0.07%)</title><rect x="835.6" y="851.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="838.6" y="862.0"></text>
</g>
<g>
<title>[vdso] (10 samples, 0.06%)</title><rect x="835.7" y="835.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="838.7" y="846.0"></text>
</g>
<g>
<title>epoll_wait (959 samples, 5.81%)</title><rect x="836.7" y="867.0" width="68.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="839.7" y="878.0">epoll_w..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (744 samples, 4.51%)</title><rect x="852.0" y="851.0" width="53.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="855.0" y="862.0">entry..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (9 samples, 0.05%)</title><rect x="852.0" y="835.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="855.0" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (734 samples, 4.45%)</title><rect x="852.8" y="835.0" width="52.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="855.8" y="846.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (683 samples, 4.14%)</title><rect x="855.9" y="819.0" width="48.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="858.9" y="830.0">__x6..</text>
</g>
<g>
<title>do_epoll_wait (676 samples, 4.10%)</title><rect x="856.1" y="803.0" width="48.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="859.1" y="814.0">do_e..</text>
</g>
<g>
<title>__fdget (19 samples, 0.12%)</title><rect x="857.0" y="787.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="860.0" y="798.0"></text>
</g>
<g>
<title>__fget_light (18 samples, 0.11%)</title><rect x="857.1" y="771.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="860.1" y="782.0"></text>
</g>
<g>
<title>__fget (18 samples, 0.11%)</title><rect x="857.1" y="755.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="860.1" y="766.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.05%)</title><rect x="858.3" y="787.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="861.3" y="798.0"></text>
</g>
<g>
<title>ep_poll (606 samples, 3.67%)</title><rect x="858.9" y="787.0" width="43.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="861.9" y="798.0">ep_p..</text>
</g>
<g>
<title>_raw_write_lock_irq (4 samples, 0.02%)</title><rect x="862.9" y="771.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="865.9" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (264 samples, 1.60%)</title><rect x="863.2" y="771.0" width="18.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="866.2" y="782.0"></text>
</g>
<g>
<title>_cond_resched (10 samples, 0.06%)</title><rect x="867.1" y="755.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="870.1" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (172 samples, 1.04%)</title><rect x="867.9" y="755.0" width="12.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="870.9" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (121 samples, 0.73%)</title><rect x="869.8" y="739.0" width="8.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="872.8" y="750.0"></text>
</g>
<g>
<title>sock_poll (84 samples, 0.51%)</title><rect x="872.1" y="723.0" width="6.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="875.1" y="734.0"></text>
</g>
<g>
<title>tcp_poll (34 samples, 0.21%)</title><rect x="874.6" y="707.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="877.6" y="718.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (15 samples, 0.09%)</title><rect x="877.0" y="707.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="880.0" y="718.0"></text>
</g>
<g>
<title>tcp_poll (5 samples, 0.03%)</title><rect x="878.1" y="723.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="881.1" y="734.0"></text>
</g>
<g>
<title>sock_poll (24 samples, 0.15%)</title><rect x="878.4" y="739.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="881.4" y="750.0"></text>
</g>
<g>
<title>mutex_lock (27 samples, 0.16%)</title><rect x="880.2" y="755.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="883.2" y="766.0"></text>
</g>
<g>
<title>rcu_all_qs (5 samples, 0.03%)</title><rect x="881.7" y="739.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="884.7" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (6 samples, 0.04%)</title><rect x="882.1" y="771.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="885.1" y="782.0"></text>
</g>
<g>
<title>mutex_lock (9 samples, 0.05%)</title><rect x="882.5" y="771.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="885.5" y="782.0"></text>
</g>
<g>
<title>mutex_unlock (15 samples, 0.09%)</title><rect x="883.2" y="771.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="886.2" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (248 samples, 1.50%)</title><rect x="884.2" y="771.0" width="17.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="887.2" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (243 samples, 1.47%)</title><rect x="884.6" y="755.0" width="17.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="887.6" y="766.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.04%)</title><rect x="886.2" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="889.2" y="750.0"></text>
</g>
<g>
<title>schedule (213 samples, 1.29%)</title><rect x="886.7" y="739.0" width="15.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="889.7" y="750.0"></text>
</g>
<g>
<title>__schedule (196 samples, 1.19%)</title><rect x="888.0" y="723.0" width="14.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="891.0" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (169 samples, 1.02%)</title><rect x="889.9" y="707.0" width="12.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="892.9" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.02%)</title><rect x="902.0" y="771.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="905.0" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (4 samples, 0.02%)</title><rect x="902.3" y="787.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="905.3" y="798.0"></text>
</g>
<g>
<title>fput_many (22 samples, 0.13%)</title><rect x="902.6" y="787.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="905.6" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 0.02%)</title><rect x="904.2" y="787.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="907.2" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (7 samples, 0.04%)</title><rect x="904.8" y="819.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="907.8" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,548 samples, 21.51%)</title><rect x="905.4" y="899.0" width="253.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="908.4" y="910.0">one/nio/net/Session.process</text>
</g>
<g>
<title>gettimeofday (12 samples, 0.07%)</title><rect x="907.1" y="883.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="910.1" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,495 samples, 21.18%)</title><rect x="907.9" y="883.0" width="250.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="910.9" y="894.0">one/nio/http/HttpSession.processR..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,094 samples, 12.69%)</title><rect x="908.7" y="867.0" width="149.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="911.7" y="878.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,544 samples, 9.36%)</title><rect x="912.7" y="851.0" width="110.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="915.7" y="862.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,538 samples, 9.32%)</title><rect x="913.1" y="835.0" width="110.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="916.1" y="846.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (1,470 samples, 8.91%)</title><rect x="913.7" y="819.0" width="105.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="916.7" y="830.0">RequestHandle..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (91 samples, 0.55%)</title><rect x="913.8" y="803.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="916.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (78 samples, 0.47%)</title><rect x="913.8" y="787.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="916.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (20 samples, 0.12%)</title><rect x="914.2" y="771.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="917.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (19 samples, 0.12%)</title><rect x="914.3" y="755.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="917.3" y="766.0"></text>
</g>
<g>
<title>jbyte_arraycopy (5 samples, 0.03%)</title><rect x="915.1" y="739.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="918.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (19 samples, 0.12%)</title><rect x="915.6" y="771.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="918.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.length (11 samples, 0.07%)</title><rect x="916.2" y="755.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="919.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.coder (6 samples, 0.04%)</title><rect x="916.6" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="919.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.04%)</title><rect x="917.0" y="771.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="920.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.04%)</title><rect x="917.0" y="755.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="920.0" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.03%)</title><rect x="917.1" y="739.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="920.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (27 samples, 0.16%)</title><rect x="917.5" y="771.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="920.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (25 samples, 0.15%)</title><rect x="917.6" y="755.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="920.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (25 samples, 0.15%)</title><rect x="917.6" y="739.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="920.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (25 samples, 0.15%)</title><rect x="917.6" y="723.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="920.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (13 samples, 0.08%)</title><rect x="919.4" y="787.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="922.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.put (1,377 samples, 8.35%)</title><rect x="920.4" y="803.0" width="98.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="923.4" y="814.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.11%)</title><rect x="920.9" y="787.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="923.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.11%)</title><rect x="920.9" y="771.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="923.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$112/1784845300.get$Lambda (18 samples, 0.11%)</title><rect x="920.9" y="755.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="923.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$112/1784845300.&lt;init&gt; (12 samples, 0.07%)</title><rect x="921.3" y="739.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="924.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,333 samples, 8.08%)</title><rect x="922.1" y="787.0" width="95.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="925.1" y="798.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,310 samples, 7.94%)</title><rect x="922.9" y="771.0" width="93.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="925.9" y="782.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (59 samples, 0.36%)</title><rect x="924.1" y="755.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="927.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (19 samples, 0.12%)</title><rect x="926.9" y="739.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="929.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (19 samples, 0.12%)</title><rect x="926.9" y="723.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="929.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (18 samples, 0.11%)</title><rect x="927.0" y="707.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="930.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (11 samples, 0.07%)</title><rect x="927.2" y="691.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="930.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (11 samples, 0.07%)</title><rect x="927.2" y="675.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="930.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (11 samples, 0.07%)</title><rect x="927.2" y="659.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="930.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (4 samples, 0.02%)</title><rect x="928.0" y="691.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="931.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (17 samples, 0.10%)</title><rect x="928.3" y="755.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="931.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (17 samples, 0.10%)</title><rect x="928.3" y="739.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="931.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (14 samples, 0.08%)</title><rect x="928.5" y="723.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="931.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (14 samples, 0.08%)</title><rect x="928.5" y="707.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="931.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (5 samples, 0.03%)</title><rect x="929.2" y="691.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="932.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (5 samples, 0.03%)</title><rect x="929.2" y="675.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="932.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (5 samples, 0.03%)</title><rect x="929.2" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="932.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1,213 samples, 7.35%)</title><rect x="929.5" y="755.0" width="86.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="932.5" y="766.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (10 samples, 0.06%)</title><rect x="929.5" y="739.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="932.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1,203 samples, 7.29%)</title><rect x="930.2" y="739.0" width="86.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="933.2" y="750.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1,200 samples, 7.27%)</title><rect x="930.3" y="723.0" width="85.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="933.3" y="734.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1,198 samples, 7.26%)</title><rect x="930.4" y="707.0" width="85.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="933.4" y="718.0">java/util/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1,197 samples, 7.26%)</title><rect x="930.5" y="691.0" width="85.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="933.5" y="702.0">jdk/intern..</text>
</g>
<g>
<title>Parker::unpark() (12 samples, 0.07%)</title><rect x="931.2" y="675.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="934.2" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.02%)</title><rect x="932.3" y="675.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="935.3" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.03%)</title><rect x="932.6" y="675.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="935.6" y="686.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (10 samples, 0.06%)</title><rect x="932.9" y="675.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="935.9" y="686.0"></text>
</g>
<g>
<title>Unsafe_Unpark (162 samples, 0.98%)</title><rect x="933.7" y="675.0" width="11.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="936.7" y="686.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (9 samples, 0.05%)</title><rect x="935.7" y="659.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="938.7" y="670.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (8 samples, 0.05%)</title><rect x="936.3" y="659.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="939.3" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.235] (9 samples, 0.05%)</title><rect x="937.2" y="659.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="940.2" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (14 samples, 0.08%)</title><rect x="937.9" y="659.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="940.9" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (21 samples, 0.13%)</title><rect x="938.9" y="659.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="941.9" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (4 samples, 0.02%)</title><rect x="940.4" y="659.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="943.4" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (14 samples, 0.08%)</title><rect x="940.7" y="659.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="943.7" y="670.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (8 samples, 0.05%)</title><rect x="941.7" y="659.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="944.7" y="670.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (9 samples, 0.05%)</title><rect x="942.2" y="659.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="945.2" y="670.0"></text>
</g>
<g>
<title>pthread_mutex_lock (31 samples, 0.19%)</title><rect x="942.9" y="659.0" width="2.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="945.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.15%)</title><rect x="945.2" y="675.0" width="1.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="948.2" y="686.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (24 samples, 0.15%)</title><rect x="945.2" y="659.0" width="1.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="948.2" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (945 samples, 5.73%)</title><rect x="947.0" y="675.0" width="67.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="950.0" y="686.0">__pthre..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (803 samples, 4.87%)</title><rect x="957.1" y="659.0" width="57.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="960.1" y="670.0">entry_..</text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.04%)</title><rect x="957.1" y="643.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="960.1" y="654.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.02%)</title><rect x="957.6" y="643.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="960.6" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (792 samples, 4.80%)</title><rect x="957.9" y="643.0" width="56.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="960.9" y="654.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_futex (736 samples, 4.46%)</title><rect x="961.6" y="627.0" width="52.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="964.6" y="638.0">__x64..</text>
</g>
<g>
<title>do_futex (720 samples, 4.36%)</title><rect x="962.4" y="611.0" width="51.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="965.4" y="622.0">do_fu..</text>
</g>
<g>
<title>futex_wake (697 samples, 4.22%)</title><rect x="963.1" y="595.0" width="49.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="966.1" y="606.0">futex..</text>
</g>
<g>
<title>get_futex_key (13 samples, 0.08%)</title><rect x="965.6" y="579.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="968.6" y="590.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (4 samples, 0.02%)</title><rect x="966.6" y="579.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="969.6" y="590.0"></text>
</g>
<g>
<title>mark_wake_futex (13 samples, 0.08%)</title><rect x="966.8" y="579.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="969.8" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.02%)</title><rect x="967.8" y="579.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="970.8" y="590.0"></text>
</g>
<g>
<title>wake_up_q (625 samples, 3.79%)</title><rect x="968.3" y="579.0" width="44.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="971.3" y="590.0">wake..</text>
</g>
<g>
<title>try_to_wake_up (618 samples, 3.75%)</title><rect x="968.8" y="563.0" width="44.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="971.8" y="574.0">try_..</text>
</g>
<g>
<title>__lock_text_start (615 samples, 3.73%)</title><rect x="969.0" y="547.0" width="44.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="972.0" y="558.0">__lo..</text>
</g>
<g>
<title>apic_timer_interrupt (4 samples, 0.02%)</title><rect x="1012.6" y="531.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1015.6" y="542.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="1012.6" y="515.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1015.6" y="526.0"></text>
</g>
<g>
<title>irq_exit (4 samples, 0.02%)</title><rect x="1012.6" y="499.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1015.6" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (4 samples, 0.02%)</title><rect x="1012.6" y="483.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1015.6" y="494.0"></text>
</g>
<g>
<title>get_futex_key (5 samples, 0.03%)</title><rect x="1013.0" y="595.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1016.0" y="606.0"></text>
</g>
<g>
<title>hash_futex (7 samples, 0.04%)</title><rect x="1013.3" y="595.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1016.3" y="606.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="1013.9" y="611.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1016.9" y="622.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="1014.2" y="627.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1017.2" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (18 samples, 0.11%)</title><rect x="1014.6" y="675.0" width="1.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1017.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.02%)</title><rect x="1016.3" y="755.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1019.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (11 samples, 0.07%)</title><rect x="1016.6" y="771.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1019.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.&lt;init&gt; (8 samples, 0.05%)</title><rect x="1016.8" y="755.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1019.8" y="766.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/ThreadFactoryBuilder$1.newThread (8 samples, 0.05%)</title><rect x="1016.8" y="739.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1019.8" y="750.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/ThreadFactoryBuilder.access$000 (6 samples, 0.04%)</title><rect x="1016.8" y="723.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1019.8" y="734.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/ThreadFactoryBuilder.format (6 samples, 0.04%)</title><rect x="1016.8" y="707.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1019.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.format (6 samples, 0.04%)</title><rect x="1016.8" y="691.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1019.8" y="702.0"></text>
</g>
<g>
<title>java/util/Formatter.format (5 samples, 0.03%)</title><rect x="1016.9" y="675.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1019.9" y="686.0"></text>
</g>
<g>
<title>java/util/Formatter.format (5 samples, 0.03%)</title><rect x="1016.9" y="659.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1019.9" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (10 samples, 0.06%)</title><rect x="1017.5" y="787.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1020.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.checkId (9 samples, 0.05%)</title><rect x="1018.2" y="787.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1021.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.strip (9 samples, 0.05%)</title><rect x="1018.2" y="771.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1021.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.strip (8 samples, 0.05%)</title><rect x="1018.3" y="755.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1021.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOfNonWhitespace (4 samples, 0.02%)</title><rect x="1018.3" y="739.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1021.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.lastIndexOfNonWhitespace (4 samples, 0.02%)</title><rect x="1018.6" y="739.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1021.6" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.isWhitespace (4 samples, 0.02%)</title><rect x="1018.6" y="723.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1021.6" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.isWhitespace (4 samples, 0.02%)</title><rect x="1018.6" y="707.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1021.6" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.isWhitespace (4 samples, 0.02%)</title><rect x="1018.6" y="691.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1021.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (39 samples, 0.24%)</title><rect x="1019.0" y="819.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1022.0" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (39 samples, 0.24%)</title><rect x="1019.0" y="803.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1022.0" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (38 samples, 0.23%)</title><rect x="1019.1" y="787.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1022.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (34 samples, 0.21%)</title><rect x="1019.3" y="771.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1022.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (31 samples, 0.19%)</title><rect x="1019.6" y="755.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1022.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (18 samples, 0.11%)</title><rect x="1021.8" y="819.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1024.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (17 samples, 0.10%)</title><rect x="1021.8" y="803.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1024.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (17 samples, 0.10%)</title><rect x="1021.8" y="787.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1024.8" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.07%)</title><rect x="1022.3" y="771.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1025.3" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.02%)</title><rect x="1022.3" y="755.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1025.3" y="766.0"></text>
</g>
<g>
<title>jbyte_arraycopy (5 samples, 0.03%)</title><rect x="1022.6" y="755.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1025.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (204 samples, 1.24%)</title><rect x="1023.1" y="851.0" width="14.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1026.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (95 samples, 0.58%)</title><rect x="1025.4" y="835.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1028.4" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (10 samples, 0.06%)</title><rect x="1028.6" y="819.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1031.6" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (9 samples, 0.05%)</title><rect x="1028.6" y="803.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1031.6" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (8 samples, 0.05%)</title><rect x="1028.7" y="787.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1031.7" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (8 samples, 0.05%)</title><rect x="1028.7" y="771.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1031.7" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.03%)</title><rect x="1028.9" y="755.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1031.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (38 samples, 0.23%)</title><rect x="1029.5" y="819.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1032.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (38 samples, 0.23%)</title><rect x="1029.5" y="803.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1032.5" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (34 samples, 0.21%)</title><rect x="1029.8" y="787.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1032.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (77 samples, 0.47%)</title><rect x="1032.2" y="835.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1035.2" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (75 samples, 0.45%)</title><rect x="1032.4" y="819.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1035.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.05%)</title><rect x="1036.8" y="803.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1039.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.05%)</title><rect x="1036.8" y="787.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1039.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.05%)</title><rect x="1036.8" y="771.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1039.8" y="782.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (5 samples, 0.03%)</title><rect x="1037.4" y="803.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1040.4" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (37 samples, 0.22%)</title><rect x="1037.7" y="851.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1040.7" y="862.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (24 samples, 0.15%)</title><rect x="1037.9" y="835.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1040.9" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (24 samples, 0.15%)</title><rect x="1037.9" y="819.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1040.9" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.digit (23 samples, 0.14%)</title><rect x="1038.0" y="803.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1041.0" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.digit (23 samples, 0.14%)</title><rect x="1038.0" y="787.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1041.0" y="798.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (9 samples, 0.05%)</title><rect x="1038.7" y="771.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1041.7" y="782.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (5 samples, 0.03%)</title><rect x="1039.3" y="771.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1042.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (10 samples, 0.06%)</title><rect x="1039.7" y="835.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1042.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (34 samples, 0.21%)</title><rect x="1040.4" y="851.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1043.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (154 samples, 0.93%)</title><rect x="1042.8" y="851.0" width="11.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1045.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (104 samples, 0.63%)</title><rect x="1043.7" y="835.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1046.7" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (98 samples, 0.59%)</title><rect x="1044.2" y="819.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1047.2" y="830.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (20 samples, 0.12%)</title><rect x="1046.5" y="803.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1049.5" y="814.0"></text>
</g>
<g>
<title>itable stub (20 samples, 0.12%)</title><rect x="1047.9" y="803.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1050.9" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (14 samples, 0.08%)</title><rect x="1049.3" y="803.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1052.3" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (13 samples, 0.08%)</title><rect x="1049.4" y="787.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1052.4" y="798.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (4 samples, 0.02%)</title><rect x="1050.0" y="771.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1053.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.07%)</title><rect x="1050.3" y="803.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1053.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (37 samples, 0.22%)</title><rect x="1051.2" y="835.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1054.2" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (25 samples, 0.15%)</title><rect x="1051.8" y="819.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1054.8" y="830.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.10%)</title><rect x="1052.5" y="803.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1055.5" y="814.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (13 samples, 0.08%)</title><rect x="1052.7" y="787.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1055.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (65 samples, 0.39%)</title><rect x="1053.8" y="851.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1056.8" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (63 samples, 0.38%)</title><rect x="1054.0" y="835.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1057.0" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.03%)</title><rect x="1056.9" y="819.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1059.9" y="830.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.03%)</title><rect x="1056.9" y="803.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1059.9" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.03%)</title><rect x="1056.9" y="787.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1059.9" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="1056.9" y="771.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1059.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.05%)</title><rect x="1057.5" y="819.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1060.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.05%)</title><rect x="1057.5" y="803.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1060.5" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (9 samples, 0.05%)</title><rect x="1057.5" y="787.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1060.5" y="798.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (5 samples, 0.03%)</title><rect x="1058.1" y="819.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1061.1" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1,388 samples, 8.41%)</title><rect x="1058.6" y="867.0" width="99.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1061.6" y="878.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1,380 samples, 8.36%)</title><rect x="1058.9" y="851.0" width="98.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1061.9" y="862.0">one/nio/net/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (226 samples, 1.37%)</title><rect x="1062.1" y="835.0" width="16.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1065.1" y="846.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (30 samples, 0.18%)</title><rect x="1063.4" y="819.0" width="2.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1066.4" y="830.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (22 samples, 0.13%)</title><rect x="1065.5" y="819.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1068.5" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (11 samples, 0.07%)</title><rect x="1067.1" y="819.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1070.1" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (16 samples, 0.10%)</title><rect x="1067.9" y="819.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1070.9" y="830.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (9 samples, 0.05%)</title><rect x="1069.1" y="819.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1072.1" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (114 samples, 0.69%)</title><rect x="1069.7" y="819.0" width="8.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1072.7" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (17 samples, 0.10%)</title><rect x="1070.8" y="803.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1073.8" y="814.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (17 samples, 0.10%)</title><rect x="1072.1" y="803.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1075.1" y="814.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (12 samples, 0.07%)</title><rect x="1073.3" y="803.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1076.3" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (14 samples, 0.08%)</title><rect x="1074.1" y="803.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1077.1" y="814.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (38 samples, 0.23%)</title><rect x="1075.1" y="803.0" width="2.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1078.1" y="814.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (15 samples, 0.09%)</title><rect x="1076.8" y="787.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1079.8" y="798.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (5 samples, 0.03%)</title><rect x="1077.9" y="819.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1080.9" y="830.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (10 samples, 0.06%)</title><rect x="1078.5" y="835.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1081.5" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (23 samples, 0.14%)</title><rect x="1079.2" y="835.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1082.2" y="846.0"></text>
</g>
<g>
<title>recv (1,073 samples, 6.50%)</title><rect x="1080.9" y="835.0" width="76.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1083.9" y="846.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (893 samples, 5.41%)</title><rect x="1093.7" y="819.0" width="63.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1096.7" y="830.0">entry_S..</text>
</g>
<g>
<title>__x64_sys_recvfrom (7 samples, 0.04%)</title><rect x="1093.7" y="803.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1096.7" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (886 samples, 5.37%)</title><rect x="1094.2" y="803.0" width="63.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1097.2" y="814.0">do_sysc..</text>
</g>
<g>
<title>__sys_recvfrom (6 samples, 0.04%)</title><rect x="1100.8" y="787.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1103.8" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (788 samples, 4.78%)</title><rect x="1101.2" y="787.0" width="56.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1104.2" y="798.0">__x64_..</text>
</g>
<g>
<title>__sys_recvfrom (763 samples, 4.62%)</title><rect x="1101.2" y="771.0" width="54.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1104.2" y="782.0">__sys..</text>
</g>
<g>
<title>__fdget (12 samples, 0.07%)</title><rect x="1102.3" y="755.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1105.3" y="766.0"></text>
</g>
<g>
<title>fput_many (5 samples, 0.03%)</title><rect x="1103.2" y="755.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1106.2" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (659 samples, 3.99%)</title><rect x="1103.7" y="755.0" width="47.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1106.7" y="766.0">sock..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (14 samples, 0.08%)</title><rect x="1103.7" y="739.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1106.7" y="750.0"></text>
</g>
<g>
<title>inet6_recvmsg (569 samples, 3.45%)</title><rect x="1104.7" y="739.0" width="40.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1107.7" y="750.0">ine..</text>
</g>
<g>
<title>lock_sock_nested (10 samples, 0.06%)</title><rect x="1105.7" y="723.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1108.7" y="734.0"></text>
</g>
<g>
<title>release_sock (6 samples, 0.04%)</title><rect x="1106.4" y="723.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1109.4" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.04%)</title><rect x="1106.8" y="723.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1109.8" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.02%)</title><rect x="1107.5" y="723.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1110.5" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (527 samples, 3.19%)</title><rect x="1107.7" y="723.0" width="37.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1110.7" y="734.0">tcp..</text>
</g>
<g>
<title>__kfree_skb (83 samples, 0.50%)</title><rect x="1115.5" y="707.0" width="5.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1118.5" y="718.0"></text>
</g>
<g>
<title>kfree_skbmem (7 samples, 0.04%)</title><rect x="1115.5" y="691.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1118.5" y="702.0"></text>
</g>
<g>
<title>skb_release_all (71 samples, 0.43%)</title><rect x="1116.0" y="691.0" width="5.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1119.0" y="702.0"></text>
</g>
<g>
<title>dst_release (5 samples, 0.03%)</title><rect x="1116.0" y="675.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1119.0" y="686.0"></text>
</g>
<g>
<title>skb_release_data (25 samples, 0.15%)</title><rect x="1116.4" y="675.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1119.4" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (30 samples, 0.18%)</title><rect x="1118.2" y="675.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1121.2" y="686.0"></text>
</g>
<g>
<title>dst_release (25 samples, 0.15%)</title><rect x="1118.5" y="659.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1121.5" y="670.0"></text>
</g>
<g>
<title>sock_rfree (10 samples, 0.06%)</title><rect x="1120.3" y="675.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1123.3" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.02%)</title><rect x="1121.1" y="691.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1124.1" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (16 samples, 0.10%)</title><rect x="1122.1" y="707.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1125.1" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (5 samples, 0.03%)</title><rect x="1123.2" y="707.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1126.2" y="718.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.02%)</title><rect x="1123.6" y="707.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1126.6" y="718.0"></text>
</g>
<g>
<title>lock_sock_nested (10 samples, 0.06%)</title><rect x="1123.8" y="707.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1126.8" y="718.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.02%)</title><rect x="1124.0" y="691.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1127.0" y="702.0"></text>
</g>
<g>
<title>release_sock (14 samples, 0.08%)</title><rect x="1124.6" y="707.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1127.6" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (6 samples, 0.04%)</title><rect x="1125.0" y="691.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1128.0" y="702.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (6 samples, 0.04%)</title><rect x="1125.0" y="675.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1128.0" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (197 samples, 1.19%)</title><rect x="1125.6" y="707.0" width="14.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1128.6" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (190 samples, 1.15%)</title><rect x="1125.9" y="691.0" width="13.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1128.9" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (131 samples, 0.79%)</title><rect x="1130.1" y="675.0" width="9.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1133.1" y="686.0"></text>
</g>
<g>
<title>__check_object_size (59 samples, 0.36%)</title><rect x="1130.3" y="659.0" width="4.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1133.3" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (47 samples, 0.28%)</title><rect x="1131.2" y="643.0" width="3.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1134.2" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.04%)</title><rect x="1134.6" y="659.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1137.6" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (51 samples, 0.31%)</title><rect x="1135.0" y="659.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1138.0" y="670.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (40 samples, 0.24%)</title><rect x="1135.8" y="643.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1138.8" y="654.0"></text>
</g>
<g>
<title>check_stack_object (6 samples, 0.04%)</title><rect x="1138.6" y="659.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1141.6" y="670.0"></text>
</g>
<g>
<title>copyout (6 samples, 0.04%)</title><rect x="1139.1" y="659.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1142.1" y="670.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (26 samples, 0.16%)</title><rect x="1139.8" y="707.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1142.8" y="718.0"></text>
</g>
<g>
<title>__tcp_select_window (5 samples, 0.03%)</title><rect x="1141.3" y="691.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1144.3" y="702.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.04%)</title><rect x="1141.6" y="707.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1144.6" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (38 samples, 0.23%)</title><rect x="1142.1" y="707.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1145.1" y="718.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.02%)</title><rect x="1142.8" y="691.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1145.8" y="702.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (24 samples, 0.15%)</title><rect x="1143.1" y="691.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1146.1" y="702.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.03%)</title><rect x="1143.2" y="675.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1146.2" y="686.0"></text>
</g>
<g>
<title>read_tsc (17 samples, 0.10%)</title><rect x="1143.6" y="675.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1146.6" y="686.0"></text>
</g>
<g>
<title>tcp_release_cb (9 samples, 0.05%)</title><rect x="1144.8" y="707.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1147.8" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (74 samples, 0.45%)</title><rect x="1145.4" y="739.0" width="5.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1148.4" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.03%)</title><rect x="1146.6" y="723.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1149.6" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (53 samples, 0.32%)</title><rect x="1146.9" y="723.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1149.9" y="734.0"></text>
</g>
<g>
<title>_cond_resched (7 samples, 0.04%)</title><rect x="1147.1" y="707.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1150.1" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (44 samples, 0.27%)</title><rect x="1147.6" y="707.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1150.6" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (70 samples, 0.42%)</title><rect x="1150.8" y="755.0" width="5.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1153.8" y="766.0"></text>
</g>
<g>
<title>__fdget (43 samples, 0.26%)</title><rect x="1150.9" y="739.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1153.9" y="750.0"></text>
</g>
<g>
<title>__fget_light (43 samples, 0.26%)</title><rect x="1150.9" y="723.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1153.9" y="734.0"></text>
</g>
<g>
<title>__fget (43 samples, 0.26%)</title><rect x="1150.9" y="707.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1153.9" y="718.0"></text>
</g>
<g>
<title>__fget_light (26 samples, 0.16%)</title><rect x="1154.0" y="739.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1157.0" y="750.0"></text>
</g>
<g>
<title>import_single_range (17 samples, 0.10%)</title><rect x="1156.0" y="771.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1159.0" y="782.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.03%)</title><rect x="1157.2" y="771.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1160.2" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (4 samples, 0.02%)</title><rect x="1157.6" y="851.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1160.6" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (17 samples, 0.10%)</title><rect x="1157.9" y="883.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1160.9" y="894.0"></text>
</g>
<g>
<title>gettimeofday (15 samples, 0.09%)</title><rect x="1158.0" y="867.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1161.0" y="878.0"></text>
</g>
<g>
<title>[vdso] (11 samples, 0.07%)</title><rect x="1158.3" y="851.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1161.3" y="862.0"></text>
</g>
<g>
<title>start_thread (431 samples, 2.61%)</title><rect x="1159.2" y="915.0" width="30.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1162.2" y="926.0">st..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (431 samples, 2.61%)</title><rect x="1159.2" y="899.0" width="30.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1162.2" y="910.0">th..</text>
</g>
<g>
<title>Thread::call_run() (431 samples, 2.61%)</title><rect x="1159.2" y="883.0" width="30.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1162.2" y="894.0">Th..</text>
</g>
<g>
<title>GangWorker::loop() (252 samples, 1.53%)</title><rect x="1159.4" y="867.0" width="18.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.4" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (238 samples, 1.44%)</title><rect x="1159.4" y="851.0" width="17.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1162.4" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (97 samples, 0.59%)</title><rect x="1159.4" y="835.0" width="6.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1162.4" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (81 samples, 0.49%)</title><rect x="1159.6" y="819.0" width="5.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1162.6" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (66 samples, 0.40%)</title><rect x="1160.5" y="803.0" width="4.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1163.5" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (15 samples, 0.09%)</title><rect x="1164.2" y="787.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1167.2" y="798.0"></text>
</g>
<g>
<title>SpinPause (11 samples, 0.07%)</title><rect x="1165.5" y="819.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1168.5" y="830.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (126 samples, 0.76%)</title><rect x="1166.3" y="835.0" width="9.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1169.3" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (126 samples, 0.76%)</title><rect x="1166.3" y="819.0" width="9.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1169.3" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (126 samples, 0.76%)</title><rect x="1166.3" y="803.0" width="9.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1169.3" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (126 samples, 0.76%)</title><rect x="1166.3" y="787.0" width="9.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1169.3" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (126 samples, 0.76%)</title><rect x="1166.3" y="771.0" width="9.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1169.3" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (116 samples, 0.70%)</title><rect x="1166.5" y="755.0" width="8.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1169.5" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (87 samples, 0.53%)</title><rect x="1168.3" y="739.0" width="6.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1171.3" y="750.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (24 samples, 0.15%)</title><rect x="1172.8" y="723.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.8" y="734.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (8 samples, 0.05%)</title><rect x="1174.8" y="755.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1177.8" y="766.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (7 samples, 0.04%)</title><rect x="1174.8" y="739.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1177.8" y="750.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (14 samples, 0.08%)</title><rect x="1175.4" y="835.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1178.4" y="846.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (6 samples, 0.04%)</title><rect x="1175.5" y="819.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1178.5" y="830.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (6 samples, 0.04%)</title><rect x="1176.0" y="819.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1179.0" y="830.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (9 samples, 0.05%)</title><rect x="1176.6" y="851.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.6" y="862.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (8 samples, 0.05%)</title><rect x="1176.7" y="835.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.7" y="846.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.66] (6 samples, 0.04%)</title><rect x="1176.8" y="819.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.8" y="830.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.03%)</title><rect x="1176.8" y="803.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.8" y="814.0"></text>
</g>
<g>
<title>JavaThread::run() (154 samples, 0.93%)</title><rect x="1177.4" y="867.0" width="11.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.4" y="878.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (150 samples, 0.91%)</title><rect x="1177.4" y="851.0" width="10.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.4" y="862.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (148 samples, 0.90%)</title><rect x="1177.4" y="835.0" width="10.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1180.4" y="846.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (131 samples, 0.79%)</title><rect x="1177.4" y="819.0" width="9.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.4" y="830.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (131 samples, 0.79%)</title><rect x="1177.4" y="803.0" width="9.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.4" y="814.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (75 samples, 0.45%)</title><rect x="1177.4" y="787.0" width="5.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1180.4" y="798.0"></text>
</g>
<g>
<title>Matcher::match() (6 samples, 0.04%)</title><rect x="1177.7" y="771.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1180.7" y="782.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (4 samples, 0.02%)</title><rect x="1177.8" y="755.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1180.8" y="766.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (10 samples, 0.06%)</title><rect x="1178.1" y="771.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1181.1" y="782.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (10 samples, 0.06%)</title><rect x="1178.1" y="755.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.1" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (54 samples, 0.33%)</title><rect x="1178.8" y="771.0" width="3.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.8" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (7 samples, 0.04%)</title><rect x="1179.2" y="755.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.2" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (5 samples, 0.03%)</title><rect x="1179.8" y="755.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.8" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (11 samples, 0.07%)</title><rect x="1180.1" y="755.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.1" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (4 samples, 0.02%)</title><rect x="1180.6" y="739.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1183.6" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (6 samples, 0.04%)</title><rect x="1181.6" y="755.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.6" y="766.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (4 samples, 0.02%)</title><rect x="1182.3" y="755.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.3" y="766.0"></text>
</g>
<g>
<title>Compile::Optimize() (36 samples, 0.22%)</title><rect x="1182.8" y="787.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.8" y="798.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (9 samples, 0.05%)</title><rect x="1182.8" y="771.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.8" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (9 samples, 0.05%)</title><rect x="1182.8" y="755.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.8" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (15 samples, 0.09%)</title><rect x="1183.7" y="771.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.7" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (6 samples, 0.04%)</title><rect x="1183.8" y="755.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.8" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (4 samples, 0.02%)</title><rect x="1183.9" y="739.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.9" y="750.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.02%)</title><rect x="1184.5" y="755.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.5" y="766.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (4 samples, 0.02%)</title><rect x="1184.5" y="739.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.5" y="750.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (7 samples, 0.04%)</title><rect x="1184.9" y="771.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.9" y="782.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (7 samples, 0.04%)</title><rect x="1184.9" y="755.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.9" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (20 samples, 0.12%)</title><rect x="1185.4" y="787.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.4" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (20 samples, 0.12%)</title><rect x="1185.4" y="771.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.4" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (20 samples, 0.12%)</title><rect x="1185.4" y="755.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.4" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (20 samples, 0.12%)</title><rect x="1185.4" y="739.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.4" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (20 samples, 0.12%)</title><rect x="1185.4" y="723.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.4" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (20 samples, 0.12%)</title><rect x="1185.4" y="707.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.4" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (13 samples, 0.08%)</title><rect x="1185.6" y="691.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.6" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (13 samples, 0.08%)</title><rect x="1185.6" y="675.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.6" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (13 samples, 0.08%)</title><rect x="1185.6" y="659.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.6" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (12 samples, 0.07%)</title><rect x="1185.6" y="643.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.6" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (12 samples, 0.07%)</title><rect x="1185.6" y="627.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.6" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (11 samples, 0.07%)</title><rect x="1185.6" y="611.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.6" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.06%)</title><rect x="1185.6" y="595.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.6" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.06%)</title><rect x="1185.6" y="579.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.6" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.05%)</title><rect x="1185.7" y="563.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.7" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.05%)</title><rect x="1185.7" y="547.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.7" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.05%)</title><rect x="1185.7" y="531.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.7" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.05%)</title><rect x="1185.7" y="515.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.7" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.05%)</title><rect x="1185.7" y="499.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.7" y="510.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.05%)</title><rect x="1185.7" y="483.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.7" y="494.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.04%)</title><rect x="1185.8" y="467.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.8" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.04%)</title><rect x="1185.8" y="451.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.8" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.04%)</title><rect x="1185.8" y="435.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.8" y="446.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.02%)</title><rect x="1185.8" y="419.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.8" y="430.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1185.8" y="403.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.8" y="414.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.02%)</title><rect x="1185.8" y="387.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.8" y="398.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.02%)</title><rect x="1185.8" y="371.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.8" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.02%)</title><rect x="1185.8" y="355.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.8" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.02%)</title><rect x="1185.8" y="339.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.8" y="350.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1186.5" y="691.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.5" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1186.5" y="675.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.5" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.02%)</title><rect x="1186.5" y="659.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.5" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.02%)</title><rect x="1186.5" y="643.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.5" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.02%)</title><rect x="1186.5" y="627.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.5" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.02%)</title><rect x="1186.5" y="611.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.5" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.02%)</title><rect x="1186.5" y="595.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.5" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1186.5" y="579.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.5" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.02%)</title><rect x="1186.5" y="563.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.5" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.02%)</title><rect x="1186.5" y="547.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.5" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.02%)</title><rect x="1186.5" y="531.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.5" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.02%)</title><rect x="1186.5" y="515.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.5" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.02%)</title><rect x="1186.5" y="499.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.5" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1186.5" y="483.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.5" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.02%)</title><rect x="1186.5" y="467.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.5" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.02%)</title><rect x="1186.5" y="451.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.5" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.02%)</title><rect x="1186.5" y="435.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.5" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.02%)</title><rect x="1186.5" y="419.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.5" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.02%)</title><rect x="1186.5" y="403.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.5" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.02%)</title><rect x="1186.5" y="387.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.5" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.02%)</title><rect x="1186.5" y="371.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.5" y="382.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (17 samples, 0.10%)</title><rect x="1186.8" y="819.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.8" y="830.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (17 samples, 0.10%)</title><rect x="1186.8" y="803.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.8" y="814.0"></text>
</g>
<g>
<title>Compilation::compile_method() (17 samples, 0.10%)</title><rect x="1186.8" y="787.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.8" y="798.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (15 samples, 0.09%)</title><rect x="1186.8" y="771.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.8" y="782.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (7 samples, 0.04%)</title><rect x="1186.8" y="755.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.8" y="766.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (4 samples, 0.02%)</title><rect x="1186.9" y="739.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.9" y="750.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (4 samples, 0.02%)</title><rect x="1186.9" y="723.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.9" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (4 samples, 0.02%)</title><rect x="1186.9" y="707.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.9" y="718.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (6 samples, 0.04%)</title><rect x="1187.4" y="755.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.4" y="766.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (6 samples, 0.04%)</title><rect x="1187.4" y="739.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.4" y="750.0"></text>
</g>
<g>
<title>VMThread::run() (14 samples, 0.08%)</title><rect x="1188.4" y="867.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.4" y="878.0"></text>
</g>
<g>
<title>VMThread::loop() (14 samples, 0.08%)</title><rect x="1188.4" y="851.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.4" y="862.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (4 samples, 0.02%)</title><rect x="1188.4" y="835.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.4" y="846.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (10 samples, 0.06%)</title><rect x="1188.7" y="835.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.7" y="846.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (10 samples, 0.06%)</title><rect x="1188.7" y="819.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.7" y="830.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (4 samples, 0.02%)</title><rect x="1188.7" y="803.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.7" y="814.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (4 samples, 0.02%)</title><rect x="1188.7" y="787.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.7" y="798.0"></text>
</g>
<g>
<title>VM_ThreadDump::doit() (6 samples, 0.04%)</title><rect x="1189.0" y="803.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.0" y="814.0"></text>
</g>
<g>
<title>ThreadStackTrace::dump_stack_at_safepoint(int) (6 samples, 0.04%)</title><rect x="1189.0" y="787.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.0" y="798.0"></text>
</g>
<g>
<title>WatcherThread::run() (8 samples, 0.05%)</title><rect x="1189.4" y="867.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.4" y="878.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (4 samples, 0.02%)</title><rect x="1189.7" y="851.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.7" y="862.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (4 samples, 0.02%)</title><rect x="1189.7" y="835.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.7" y="846.0"></text>
</g>
</g>
</svg>
