<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="517"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="517"> </text>
<g id="frames">
<g>
<title>all (11,702 samples, 100.00%)</title><rect x="10.0" y="483.0" width="1180.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="13.0" y="494.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (10,782 samples, 92.14%)</title><rect x="10.0" y="467.0" width="1087.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="478.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (10,782 samples, 92.14%)</title><rect x="10.0" y="451.0" width="1087.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="462.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (10,782 samples, 92.14%)</title><rect x="10.0" y="435.0" width="1087.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="446.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (443 samples, 3.79%)</title><rect x="10.0" y="419.0" width="44.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="430.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (443 samples, 3.79%)</title><rect x="10.0" y="403.0" width="44.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="414.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (163 samples, 1.39%)</title><rect x="10.0" y="387.0" width="16.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (163 samples, 1.39%)</title><rect x="10.0" y="371.0" width="16.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (163 samples, 1.39%)</title><rect x="10.0" y="355.0" width="16.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (163 samples, 1.39%)</title><rect x="10.0" y="339.0" width="16.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (163 samples, 1.39%)</title><rect x="10.0" y="323.0" width="16.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (163 samples, 1.39%)</title><rect x="10.0" y="307.0" width="16.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (280 samples, 2.39%)</title><rect x="26.4" y="387.0" width="28.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="29.4" y="398.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (280 samples, 2.39%)</title><rect x="26.4" y="371.0" width="28.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="29.4" y="382.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (280 samples, 2.39%)</title><rect x="26.4" y="355.0" width="28.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="29.4" y="366.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (280 samples, 2.39%)</title><rect x="26.4" y="339.0" width="28.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="29.4" y="350.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (280 samples, 2.39%)</title><rect x="26.4" y="323.0" width="28.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="29.4" y="334.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (280 samples, 2.39%)</title><rect x="26.4" y="307.0" width="28.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="29.4" y="318.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (280 samples, 2.39%)</title><rect x="26.4" y="291.0" width="28.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="29.4" y="302.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService$$Lambda$124/1082880506.run (10,339 samples, 88.35%)</title><rect x="54.7" y="419.0" width="1042.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="57.7" y="430.0">ru/mail/polis/service/valaubr/HttpService$$Lambda$124/1082880506.run</text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.lambda$get$1 (10,339 samples, 88.35%)</title><rect x="54.7" y="403.0" width="1042.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.7" y="414.0">ru/mail/polis/service/valaubr/HttpService.lambda$get$1</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.03%)</title><rect x="54.7" y="387.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="57.7" y="398.0"></text>
</g>
<g>
<title>one.nio.http.HttpSession (4 samples, 0.03%)</title><rect x="54.7" y="371.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="57.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (10,325 samples, 88.23%)</title><rect x="55.1" y="387.0" width="1041.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="58.1" y="398.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (125 samples, 1.07%)</title><rect x="55.1" y="371.0" width="12.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (125 samples, 1.07%)</title><rect x="55.1" y="355.0" width="12.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="58.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (125 samples, 1.07%)</title><rect x="55.1" y="339.0" width="12.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="58.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (125 samples, 1.07%)</title><rect x="55.1" y="323.0" width="12.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="58.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (125 samples, 1.07%)</title><rect x="55.1" y="307.0" width="12.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="58.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (125 samples, 1.07%)</title><rect x="55.1" y="291.0" width="12.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="58.1" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (123 samples, 1.05%)</title><rect x="55.3" y="275.0" width="12.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="58.3" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (123 samples, 1.05%)</title><rect x="55.3" y="259.0" width="12.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.3" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (123 samples, 1.05%)</title><rect x="55.3" y="243.0" width="12.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.3" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (123 samples, 1.05%)</title><rect x="55.3" y="227.0" width="12.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="58.3" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (123 samples, 1.05%)</title><rect x="55.3" y="211.0" width="12.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="58.3" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (123 samples, 1.05%)</title><rect x="55.3" y="195.0" width="12.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="58.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (123 samples, 1.05%)</title><rect x="55.3" y="179.0" width="12.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="58.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (123 samples, 1.05%)</title><rect x="55.3" y="163.0" width="12.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (123 samples, 1.05%)</title><rect x="55.3" y="147.0" width="12.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="58.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getCell (123 samples, 1.05%)</title><rect x="55.3" y="131.0" width="12.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="58.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (50 samples, 0.43%)</title><rect x="55.3" y="115.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (18 samples, 0.15%)</title><rect x="55.3" y="99.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="58.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (18 samples, 0.15%)</title><rect x="55.3" y="83.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="58.3" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (18 samples, 0.15%)</title><rect x="55.3" y="67.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="58.3" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.03%)</title><rect x="55.3" y="51.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="58.3" y="62.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (4 samples, 0.03%)</title><rect x="55.3" y="35.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="58.3" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (14 samples, 0.12%)</title><rect x="55.7" y="51.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="58.7" y="62.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (14 samples, 0.12%)</title><rect x="55.7" y="35.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="58.7" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (32 samples, 0.27%)</title><rect x="57.1" y="99.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.1" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (32 samples, 0.27%)</title><rect x="57.1" y="83.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="60.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (32 samples, 0.27%)</title><rect x="57.1" y="67.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="60.1" y="78.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (32 samples, 0.27%)</title><rect x="57.1" y="51.0" width="3.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="60.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (23 samples, 0.20%)</title><rect x="60.3" y="115.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (23 samples, 0.20%)</title><rect x="60.3" y="99.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="63.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (23 samples, 0.20%)</title><rect x="60.3" y="83.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="63.3" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (19 samples, 0.16%)</title><rect x="60.3" y="67.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.3" y="78.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (19 samples, 0.16%)</title><rect x="60.3" y="51.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="63.3" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (4 samples, 0.03%)</title><rect x="62.2" y="67.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.2" y="78.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (4 samples, 0.03%)</title><rect x="62.2" y="51.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="65.2" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (50 samples, 0.43%)</title><rect x="62.6" y="115.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="65.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (50 samples, 0.43%)</title><rect x="62.6" y="99.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.6" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (48 samples, 0.41%)</title><rect x="62.8" y="83.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="65.8" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (48 samples, 0.41%)</title><rect x="62.8" y="67.0" width="4.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="65.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.iterator (10,200 samples, 87.16%)</title><rect x="67.7" y="371.0" width="1028.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.7" y="382.0">ru/mail/polis/dao/valaubr/LsmDAO.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.cellIterator (10,200 samples, 87.16%)</title><rect x="67.7" y="355.0" width="1028.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="70.7" y="366.0">ru/mail/polis/dao/valaubr/LsmDAO.cellIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (687 samples, 5.87%)</title><rect x="67.7" y="339.0" width="69.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.7" y="350.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (687 samples, 5.87%)</title><rect x="67.7" y="323.0" width="69.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="70.7" y="334.0">com/goo..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (687 samples, 5.87%)</title><rect x="67.7" y="307.0" width="69.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.7" y="318.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (687 samples, 5.87%)</title><rect x="67.7" y="291.0" width="69.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.7" y="302.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (687 samples, 5.87%)</title><rect x="67.7" y="275.0" width="69.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="70.7" y="286.0">java/ut..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (687 samples, 5.87%)</title><rect x="67.7" y="259.0" width="69.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="70.7" y="270.0">java/ut..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (687 samples, 5.87%)</title><rect x="67.7" y="243.0" width="69.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="70.7" y="254.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (687 samples, 5.87%)</title><rect x="67.7" y="227.0" width="69.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="70.7" y="238.0">com/goo..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (687 samples, 5.87%)</title><rect x="67.7" y="211.0" width="69.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.7" y="222.0">com/goo..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (687 samples, 5.87%)</title><rect x="67.7" y="195.0" width="69.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="70.7" y="206.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (687 samples, 5.87%)</title><rect x="67.7" y="179.0" width="69.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="70.7" y="190.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getCell (687 samples, 5.87%)</title><rect x="67.7" y="163.0" width="69.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.7" y="174.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (282 samples, 2.41%)</title><rect x="67.7" y="147.0" width="28.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="70.7" y="158.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (92 samples, 0.79%)</title><rect x="67.7" y="131.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="70.7" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (92 samples, 0.79%)</title><rect x="67.7" y="115.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="70.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (92 samples, 0.79%)</title><rect x="67.7" y="99.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.7" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (34 samples, 0.29%)</title><rect x="67.7" y="83.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="70.7" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (34 samples, 0.29%)</title><rect x="67.7" y="67.0" width="3.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="70.7" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (58 samples, 0.50%)</title><rect x="71.1" y="83.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.1" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (58 samples, 0.50%)</title><rect x="71.1" y="67.0" width="5.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="74.1" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (190 samples, 1.62%)</title><rect x="77.0" y="131.0" width="19.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (190 samples, 1.62%)</title><rect x="77.0" y="115.0" width="19.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (26 samples, 0.22%)</title><rect x="77.0" y="99.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="80.0" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (26 samples, 0.22%)</title><rect x="77.0" y="83.0" width="2.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="80.0" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (164 samples, 1.40%)</title><rect x="79.6" y="99.0" width="16.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.6" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (164 samples, 1.40%)</title><rect x="79.6" y="83.0" width="16.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="82.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (132 samples, 1.13%)</title><rect x="96.1" y="147.0" width="13.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="99.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (132 samples, 1.13%)</title><rect x="96.1" y="131.0" width="13.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.1" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (132 samples, 1.13%)</title><rect x="96.1" y="115.0" width="13.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="99.1" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (107 samples, 0.91%)</title><rect x="96.1" y="99.0" width="10.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="99.1" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (107 samples, 0.91%)</title><rect x="96.1" y="83.0" width="10.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="99.1" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (25 samples, 0.21%)</title><rect x="106.9" y="99.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="109.9" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (25 samples, 0.21%)</title><rect x="106.9" y="83.0" width="2.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="109.9" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (273 samples, 2.33%)</title><rect x="109.4" y="147.0" width="27.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="112.4" y="158.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (273 samples, 2.33%)</title><rect x="109.4" y="131.0" width="27.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="112.4" y="142.0">s..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (30 samples, 0.26%)</title><rect x="109.4" y="115.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="112.4" y="126.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (30 samples, 0.26%)</title><rect x="109.4" y="99.0" width="3.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="112.4" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (243 samples, 2.08%)</title><rect x="112.5" y="115.0" width="24.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="115.5" y="126.0">s..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (243 samples, 2.08%)</title><rect x="112.5" y="99.0" width="24.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="115.5" y="110.0">s..</text>
</g>
<g>
<title>java/lang/Iterable.forEach (9,362 samples, 80.00%)</title><rect x="137.0" y="339.0" width="944.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="140.0" y="350.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$134/108010129.accept (9,362 samples, 80.00%)</title><rect x="137.0" y="323.0" width="944.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="140.0" y="334.0">ru/mail/polis/dao/valaubr/LsmDAO$$Lambda$134/108010129.accept</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/LsmDAO.lambda$cellIterator$4 (9,362 samples, 80.00%)</title><rect x="137.0" y="307.0" width="944.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.0" y="318.0">ru/mail/polis/dao/valaubr/LsmDAO.lambda$cellIterator$4</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.iterator (9,362 samples, 80.00%)</title><rect x="137.0" y="291.0" width="944.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="140.0" y="302.0">ru/mail/polis/dao/valaubr/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.&lt;init&gt; (9,362 samples, 80.00%)</title><rect x="137.0" y="275.0" width="944.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="140.0" y="286.0">ru/mail/polis/dao/valaubr/SSTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getPosition (9,362 samples, 80.00%)</title><rect x="137.0" y="259.0" width="944.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="140.0" y="270.0">ru/mail/polis/dao/valaubr/SSTable.getPosition</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (9,362 samples, 80.00%)</title><rect x="137.0" y="243.0" width="944.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="140.0" y="254.0">ru/mail/polis/dao/valaubr/SSTable.getKey</text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (3,193 samples, 27.29%)</title><rect x="137.0" y="227.0" width="321.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="140.0" y="238.0">ru/mail/polis/dao/valaubr/SSTable.getOffset</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3,193 samples, 27.29%)</title><rect x="137.0" y="211.0" width="321.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="140.0" y="222.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3,193 samples, 27.29%)</title><rect x="137.0" y="195.0" width="321.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.0" y="206.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (744 samples, 6.36%)</title><rect x="137.0" y="179.0" width="75.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.0" y="190.0">sun/nio/..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (744 samples, 6.36%)</title><rect x="137.0" y="163.0" width="75.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="140.0" y="174.0">sun.nio...</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2,449 samples, 20.93%)</title><rect x="212.0" y="179.0" width="246.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="215.0" y="190.0">sun/nio/ch/NativeThreadSet.remove</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (2,449 samples, 20.93%)</title><rect x="212.0" y="163.0" width="246.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="215.0" y="174.0">sun.nio.ch.NativeThreadSet</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6,169 samples, 52.72%)</title><rect x="458.9" y="227.0" width="622.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="461.9" y="238.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6,169 samples, 52.72%)</title><rect x="458.9" y="211.0" width="622.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="461.9" y="222.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (672 samples, 5.74%)</title><rect x="458.9" y="195.0" width="67.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.9" y="206.0">sun/nio..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (672 samples, 5.74%)</title><rect x="458.9" y="179.0" width="67.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="461.9" y="190.0">sun.nio..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (5,497 samples, 46.97%)</title><rect x="526.7" y="195.0" width="554.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="529.7" y="206.0">sun/nio/ch/NativeThreadSet.remove</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (5,497 samples, 46.97%)</title><rect x="526.7" y="179.0" width="554.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="529.7" y="190.0">sun.nio.ch.NativeThreadSet</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (151 samples, 1.29%)</title><rect x="1081.0" y="339.0" width="15.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1084.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (151 samples, 1.29%)</title><rect x="1081.0" y="323.0" width="15.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1084.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (151 samples, 1.29%)</title><rect x="1081.0" y="307.0" width="15.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1084.0" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (149 samples, 1.27%)</title><rect x="1081.2" y="291.0" width="15.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1084.2" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (149 samples, 1.27%)</title><rect x="1081.2" y="275.0" width="15.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1084.2" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (149 samples, 1.27%)</title><rect x="1081.2" y="259.0" width="15.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1084.2" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (149 samples, 1.27%)</title><rect x="1081.2" y="243.0" width="15.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1084.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (149 samples, 1.27%)</title><rect x="1081.2" y="227.0" width="15.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1084.2" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (149 samples, 1.27%)</title><rect x="1081.2" y="211.0" width="15.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1084.2" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (149 samples, 1.27%)</title><rect x="1081.2" y="195.0" width="15.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1084.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (149 samples, 1.27%)</title><rect x="1081.2" y="179.0" width="15.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1084.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable$1.next (149 samples, 1.27%)</title><rect x="1081.2" y="163.0" width="15.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1084.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getCell (149 samples, 1.27%)</title><rect x="1081.2" y="147.0" width="15.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1084.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getKey (63 samples, 0.54%)</title><rect x="1081.2" y="131.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1084.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (22 samples, 0.19%)</title><rect x="1081.2" y="115.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1084.2" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (22 samples, 0.19%)</title><rect x="1081.2" y="99.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1084.2" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (22 samples, 0.19%)</title><rect x="1081.2" y="83.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1084.2" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (20 samples, 0.17%)</title><rect x="1081.4" y="67.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1084.4" y="78.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (20 samples, 0.17%)</title><rect x="1081.4" y="51.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1084.4" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (41 samples, 0.35%)</title><rect x="1083.4" y="115.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1086.4" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (41 samples, 0.35%)</title><rect x="1083.4" y="99.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1086.4" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.03%)</title><rect x="1083.4" y="83.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1086.4" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (3 samples, 0.03%)</title><rect x="1083.4" y="67.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1086.4" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (38 samples, 0.32%)</title><rect x="1083.7" y="83.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1086.7" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (38 samples, 0.32%)</title><rect x="1083.7" y="67.0" width="3.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1086.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/valaubr/SSTable.getOffset (30 samples, 0.26%)</title><rect x="1087.5" y="131.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1090.5" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (30 samples, 0.26%)</title><rect x="1087.5" y="115.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1090.5" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (30 samples, 0.26%)</title><rect x="1087.5" y="99.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1090.5" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (14 samples, 0.12%)</title><rect x="1087.5" y="83.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1090.5" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (14 samples, 0.12%)</title><rect x="1087.5" y="67.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1090.5" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (16 samples, 0.14%)</title><rect x="1089.0" y="83.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1092.0" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (16 samples, 0.14%)</title><rect x="1089.0" y="67.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1092.0" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (56 samples, 0.48%)</title><rect x="1090.6" y="131.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1093.6" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (56 samples, 0.48%)</title><rect x="1090.6" y="115.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1093.6" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (8 samples, 0.07%)</title><rect x="1090.6" y="99.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1093.6" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (8 samples, 0.07%)</title><rect x="1090.6" y="83.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1093.6" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (48 samples, 0.41%)</title><rect x="1091.4" y="99.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1094.4" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (48 samples, 0.41%)</title><rect x="1091.4" y="83.0" width="4.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1094.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.proxy (10 samples, 0.09%)</title><rect x="1096.2" y="387.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1099.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (10 samples, 0.09%)</title><rect x="1096.2" y="371.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1099.2" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (10 samples, 0.09%)</title><rect x="1096.2" y="355.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1099.2" y="366.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (9 samples, 0.08%)</title><rect x="1096.3" y="339.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1099.3" y="350.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (9 samples, 0.08%)</title><rect x="1096.3" y="323.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1099.3" y="334.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (920 samples, 7.86%)</title><rect x="1097.2" y="467.0" width="92.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1100.2" y="478.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/Session.process (920 samples, 7.86%)</title><rect x="1097.2" y="451.0" width="92.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1100.2" y="462.0">one/nio/net..</text>
</g>
<g>
<title>one.nio.http.HttpSession (222 samples, 1.90%)</title><rect x="1097.2" y="435.0" width="22.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1100.2" y="446.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (698 samples, 5.96%)</title><rect x="1119.6" y="435.0" width="70.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1122.6" y="446.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (698 samples, 5.96%)</title><rect x="1119.6" y="419.0" width="70.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1122.6" y="430.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (698 samples, 5.96%)</title><rect x="1119.6" y="403.0" width="70.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1122.6" y="414.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (698 samples, 5.96%)</title><rect x="1119.6" y="387.0" width="70.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1122.6" y="398.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (698 samples, 5.96%)</title><rect x="1119.6" y="371.0" width="70.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1122.6" y="382.0">RequestH..</text>
</g>
<g>
<title>ru/mail/polis/service/valaubr/HttpService.get (698 samples, 5.96%)</title><rect x="1119.6" y="355.0" width="70.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1122.6" y="366.0">ru/mail/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (698 samples, 5.96%)</title><rect x="1119.6" y="339.0" width="70.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1122.6" y="350.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (692 samples, 5.91%)</title><rect x="1119.6" y="323.0" width="69.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1122.6" y="334.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (692 samples, 5.91%)</title><rect x="1119.6" y="307.0" width="69.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1122.6" y="318.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (692 samples, 5.91%)</title><rect x="1119.6" y="291.0" width="69.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.6" y="302.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (692 samples, 5.91%)</title><rect x="1119.6" y="275.0" width="69.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1122.6" y="286.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (692 samples, 5.91%)</title><rect x="1119.6" y="259.0" width="69.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1122.6" y="270.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (692 samples, 5.91%)</title><rect x="1119.6" y="243.0" width="69.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1122.6" y="254.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (692 samples, 5.91%)</title><rect x="1119.6" y="227.0" width="69.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1122.6" y="238.0">jdk/int..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (692 samples, 5.91%)</title><rect x="1119.6" y="211.0" width="69.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1122.6" y="222.0">java.ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (6 samples, 0.05%)</title><rect x="1189.4" y="323.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1192.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.05%)</title><rect x="1189.4" y="307.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.05%)</title><rect x="1189.4" y="291.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1192.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6 samples, 0.05%)</title><rect x="1189.4" y="275.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1192.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (6 samples, 0.05%)</title><rect x="1189.4" y="259.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1192.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.05%)</title><rect x="1189.4" y="243.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1192.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.05%)</title><rect x="1189.4" y="227.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.4" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (6 samples, 0.05%)</title><rect x="1189.4" y="211.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1192.4" y="222.0"></text>
</g>
</g>
</svg>
